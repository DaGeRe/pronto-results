{
  "url" : "https://github.com/apache/commons-compress.git",
  "versions" : {
    "c0d44c590b9cc5737edbb63581e82904e2afce92" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarTestCase" : [ "testWriteGnuTar" ]
      },
      "predecessor" : "fb1b71f839a016b8e298b9ea131cd1c820b1e505"
    },
    "2fdb96371d4619deb291979b45c9403d5e09f151" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarTestCase" : [ "testWriteGnuTar", "testWritePosixTar" ]
      },
      "predecessor" : "2fdb96371d4619deb291979b45c9403d5e09f151~1"
    },
    "67e6fe04bfc185620f499ed21d95b54d99ffab75" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarTestCase" : [ "testWriteGnuTar", "testWritePosixTar" ]
      },
      "predecessor" : "2fdb96371d4619deb291979b45c9403d5e09f151"
    },
    "6a703234ab45b01ab1652e5e4b1607d8d586db98" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ]
      },
      "predecessor" : "d1789e669d7abff2e9a8cf57110283d344d496cb"
    },
    "46ad24db76c6f65480736006c2da8b8e5bf8ee25" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ]
      },
      "predecessor" : "46ad24db76c6f65480736006c2da8b8e5bf8ee25~1"
    },
    "01d395157e5ffbc15b6f7e265885d4b7635791d5" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip" ]
      },
      "predecessor" : "01d395157e5ffbc15b6f7e265885d4b7635791d5~1"
    },
    "70c8320f7f592d325e8c89a294a1b2db70595f65" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ]
      },
      "predecessor" : "70c8320f7f592d325e8c89a294a1b2db70595f65~1"
    },
    "e190c403ff10f20fecc187e70cbf6b1390da27e9" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip" ]
      },
      "predecessor" : "70c8320f7f592d325e8c89a294a1b2db70595f65"
    },
    "7b879e5f32093cef227f00ed9f0f6db21a0f9948" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ]
      },
      "predecessor" : "7b879e5f32093cef227f00ed9f0f6db21a0f9948~1"
    },
    "838dcc19ddfca57ae76eaec723832cf65f7ac2e6" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip" ]
      },
      "predecessor" : "7b879e5f32093cef227f00ed9f0f6db21a0f9948"
    },
    "2ae5e286d486c7b0bed2902d3025a6f12f8a7298" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip" ]
      },
      "predecessor" : "2ae5e286d486c7b0bed2902d3025a6f12f8a7298~1"
    },
    "5e5804c848a660825e853f1aa9da672f9318edfd" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromTar", "testDeleteFromZip" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ]
      },
      "predecessor" : "2ae5e286d486c7b0bed2902d3025a6f12f8a7298"
    },
    "5d9f7b42a7f03e7b4028cc9ed3946690ab92fc89" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ]
      },
      "predecessor" : "5d9f7b42a7f03e7b4028cc9ed3946690ab92fc89~1"
    },
    "dff9001560b49c623a47386b0e706397b9038841" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ]
      },
      "predecessor" : "5d9f7b42a7f03e7b4028cc9ed3946690ab92fc89"
    },
    "af2b66dbbc67ddf2b7a49835511a7a258463a4b5" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip" ]
      },
      "predecessor" : "af2b66dbbc67ddf2b7a49835511a7a258463a4b5~1"
    },
    "463d6ebdebb2ea194254f1c3fab0a0f63ee212ce" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip" ]
      },
      "predecessor" : "463d6ebdebb2ea194254f1c3fab0a0f63ee212ce~1"
    },
    "f77e1f16b1286e4c2602fa19636a713a72c27a96" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip" ]
      },
      "predecessor" : "f77e1f16b1286e4c2602fa19636a713a72c27a96~1"
    },
    "6284d8ddb7aa59c75483f22eae1ca442f8537a84" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip" ]
      },
      "predecessor" : "6284d8ddb7aa59c75483f22eae1ca442f8537a84~1"
    },
    "ca805935eb4e125c5a4a1ae5dcfa4bf72ec25cd9" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromJar" ]
      },
      "predecessor" : "ca805935eb4e125c5a4a1ae5dcfa4bf72ec25cd9~1"
    },
    "c828c1dec5de089b43c6c9d2824814baafc3146a" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAr" ]
      },
      "predecessor" : "ca805935eb4e125c5a4a1ae5dcfa4bf72ec25cd9"
    },
    "60d3d770d8da704348603e7e261c136b726a4965" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testGzipCreation" ]
      },
      "predecessor" : "60d3d770d8da704348603e7e261c136b726a4965~1"
    },
    "0f9b440fe18509bfe74b4e681386364404eb86f8" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testGzipUnarchive" ]
      },
      "predecessor" : "0f9b440fe18509bfe74b4e681386364404eb86f8~1"
    },
    "90a05f7e6428d3cdf1a3c159bd166372b7a2a787" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAr" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testGzipCreation", "testGzipUnarchive" ]
      },
      "predecessor" : "90a05f7e6428d3cdf1a3c159bd166372b7a2a787~1"
    },
    "c30b588493d4fae79e020522ecb784d9210fa9d6" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip" ]
      },
      "predecessor" : "c30b588493d4fae79e020522ecb784d9210fa9d6~1"
    },
    "0ba4e2ace0ad1645223827335dd541f48c3213a6" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip" ]
      },
      "predecessor" : "0ba4e2ace0ad1645223827335dd541f48c3213a6~1"
    },
    "55c78f6bbcdd256b586c16dec732cab87c934cea" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip" ]
      },
      "predecessor" : "55c78f6bbcdd256b586c16dec732cab87c934cea~1"
    },
    "a7049abc85c6f318de9e466457d97e52418b6ea0" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArUnarchive" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip" ]
      },
      "predecessor" : "a7049abc85c6f318de9e466457d97e52418b6ea0~1"
    },
    "7a5d18e7ea8c8d381ba773276ea1c4930decc6c6" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ]
      },
      "predecessor" : "a7049abc85c6f318de9e466457d97e52418b6ea0"
    },
    "1bb5321d3bcbe544c8f49fb1d0893d377010d08e" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testGzipCreation", "testGzipUnarchive" ]
      },
      "predecessor" : "7a5d18e7ea8c8d381ba773276ea1c4930decc6c6"
    },
    "0448caf45f46f8561c2cb05f524ffc437a7341df" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromJar" ]
      },
      "predecessor" : "0448caf45f46f8561c2cb05f524ffc437a7341df~1"
    },
    "1903db40e53210537fd022ac5cd922323959ff0e" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromJar" ]
      },
      "predecessor" : "1903db40e53210537fd022ac5cd922323959ff0e~1"
    },
    "4ba374a86f76f4be48acb2491abc55952b0c1285" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtrip", "testCP437FileRoundtrip", "testUtf8FileRoundtrip" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromJar", "testDeleteFromZip" ]
      },
      "predecessor" : "4ba374a86f76f4be48acb2491abc55952b0c1285~1"
    },
    "ca01ec476d1b2bd659ec7400fd55635d62b64b52" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtrip", "testCP437FileRoundtrip", "testUtf8FileRoundtrip" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromJar", "testDeleteFromZip" ]
      },
      "predecessor" : "ca01ec476d1b2bd659ec7400fd55635d62b64b52~1"
    },
    "5c4bbc571c2e85fd8e766cbdae624bbf588e4888" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtrip", "testCP437FileRoundtrip", "testUtf8FileRoundtrip" ]
      },
      "predecessor" : "5c4bbc571c2e85fd8e766cbdae624bbf588e4888~1"
    },
    "a96f1f2e5d305e64fb23f18269194f37f87ff04e" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testReadEFS" ]
      },
      "predecessor" : "a96f1f2e5d305e64fb23f18269194f37f87ff04e~1"
    },
    "e3347fdcd269c382cd0bae3d249143b9f0c8e2bd" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtrip", "testCP437FileRoundtrip", "testUtf8FileRoundtripNoEFS" ]
      },
      "predecessor" : "e3347fdcd269c382cd0bae3d249143b9f0c8e2bd~1"
    },
    "b8753c0627b5d8e73ddd04b400c7501c15f18e2a" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtrip", "testCP437FileRoundtrip", "testUtf8FileRoundtripNoEFS" ]
      },
      "predecessor" : "e3347fdcd269c382cd0bae3d249143b9f0c8e2bd"
    },
    "2d44864a5f7d30eaee42cf30b4808566febebf6e" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromJar", "testDeleteFromZip" ]
      },
      "predecessor" : "2d44864a5f7d30eaee42cf30b4808566febebf6e~1"
    },
    "ccc77aa055e4e7362da064d9e478e58f2158b181" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromJar", "testDeleteFromZip" ]
      },
      "predecessor" : "ccc77aa055e4e7362da064d9e478e58f2158b181~1"
    },
    "eadbe116f9d59b38acf2aec9c4de43e5c5f68d49" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ]
      },
      "predecessor" : "eadbe116f9d59b38acf2aec9c4de43e5c5f68d49~1"
    },
    "1cef96536a04d2ea96aa251f9a7330bc64ce1a58" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra" ]
      },
      "predecessor" : "1cef96536a04d2ea96aa251f9a7330bc64ce1a58~1"
    },
    "6640ef914f139755fe11d14bca023c4bb5eece25" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveLongNameCreation" ]
      },
      "predecessor" : "6640ef914f139755fe11d14bca023c4bb5eece25~1"
    },
    "e09c9e5a395bc68c40d512c96ca6ce8e726958ec" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ]
      },
      "predecessor" : "e09c9e5a395bc68c40d512c96ca6ce8e726958ec~1"
    },
    "fc92ca2f5bdf0cb56555cf7935344a0cfe6a9a35" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra" ]
      },
      "predecessor" : "fc92ca2f5bdf0cb56555cf7935344a0cfe6a9a35~1"
    },
    "c3097e6019ef2b1b61b4a8f2d0fca6970f16a29a" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip" ]
      },
      "predecessor" : "c3097e6019ef2b1b61b4a8f2d0fca6970f16a29a~1"
    },
    "853176f58997feb2fa6af5bd4ff442ab08d17ef8" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromJar", "testDeleteFromZip" ]
      },
      "predecessor" : "853176f58997feb2fa6af5bd4ff442ab08d17ef8~1"
    },
    "2ab601b11621be514db8abc49f4345f6574b06d6" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.TestZipEncodings" : [ "testSimpleCp437Encoding", "testSimpleCp850Encoding" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testUtf8Interoperability" ]
      },
      "predecessor" : "2ab601b11621be514db8abc49f4345f6574b06d6~1"
    },
    "633ab9ad39edb1c18d12e73e0a2886ea0106561b" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testParse" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testExtraFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromZip" ]
      },
      "predecessor" : "2ab601b11621be514db8abc49f4345f6574b06d6"
    },
    "dfbdfee5deba0c2ad7af93018abda50d13721fe8" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testParse" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromJar", "testDeleteFromZip" ]
      },
      "predecessor" : "dfbdfee5deba0c2ad7af93018abda50d13721fe8~1"
    },
    "69170eacc569473d465b39705235470e5860e53e" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.TestZipEncodings" : [ "testSimpleCp437Encoding", "testSimpleCp850Encoding" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testUtf8Interoperability" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveOutputStreamTest" : [ "testAdjustToLong" ]
      },
      "predecessor" : "dfbdfee5deba0c2ad7af93018abda50d13721fe8"
    },
    "5ccdd3f8ee58734b0e1f2d0b5799ad40b04d58e6" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipLongTest" : [ "testClone" ],
        "org.apache.commons.compress.archivers.zip.ZipShortTest" : [ "testClone" ]
      },
      "predecessor" : "5ccdd3f8ee58734b0e1f2d0b5799ad40b04d58e6~1"
    },
    "d9bd84f4fcda64628ffd908647cf09a986995163" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromJar", "testDeleteFromZip" ]
      },
      "predecessor" : "d9bd84f4fcda64628ffd908647cf09a986995163~1"
    },
    "5239909e088fe258cb4c665e4c1a3839189ed016" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromJar", "testDeleteFromZip" ]
      },
      "predecessor" : "5239909e088fe258cb4c665e4c1a3839189ed016~1"
    },
    "a942bdf9758065901690e9d87eab92a6dcd1470e" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromJar", "testDeleteFromZip" ]
      },
      "predecessor" : "5239909e088fe258cb4c665e4c1a3839189ed016"
    },
    "9dd697a513733b522791f0fc7443fcbf553b0ec4" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddMoveDelete", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testRenameAndDelete" ]
      },
      "predecessor" : "a436cfabfa24fa9c81d6ccab499f81c0607c57ea"
    },
    "c4a65f010e67c65f38d1f87f4d9a205c2d97e3c1" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "9dd697a513733b522791f0fc7443fcbf553b0ec4"
    },
    "cec62cebf6ac663a53cab818d85ebee7328f6c2f" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "cec62cebf6ac663a53cab818d85ebee7328f6c2f~1"
    },
    "8fa12b85e9dea6039d93d8082276ba79e29ceb91" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "8fa12b85e9dea6039d93d8082276ba79e29ceb91~1"
    },
    "33176d7fda52bab41ddd558175c8c8d08367247d" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "33176d7fda52bab41ddd558175c8c8d08367247d~1"
    },
    "ad3908ee8ec691b619b84a4abaf9bb2c7c2e8233" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "ad3908ee8ec691b619b84a4abaf9bb2c7c2e8233~1"
    },
    "eeef24203a7fa3d9f20c209f01cd1a3aaa7c48d9" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "eeef24203a7fa3d9f20c209f01cd1a3aaa7c48d9~1"
    },
    "32eea1e611d66a3c1a6b1dc0b373a943614e5680" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar" ]
      },
      "predecessor" : "c24d59c34591cafaade7140c9d39a4389f080ca7"
    },
    "c013e283bb2824d38d286a273187c660d6f7b15b" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testFileSystemRoot", "testTarFileWithFSRoot" ]
      },
      "predecessor" : "c013e283bb2824d38d286a273187c660d6f7b15b~1"
    },
    "41f4a20506449b0a9a5a7ac71d28f53f701b484b" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "c013e283bb2824d38d286a273187c660d6f7b15b"
    },
    "004124ac5dbf5edbf925078652526267468821e7" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ]
      },
      "predecessor" : "41f4a20506449b0a9a5a7ac71d28f53f701b484b"
    },
    "8c36ce3f21b85423284940f2c589239098d747c6" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ]
      },
      "predecessor" : "004124ac5dbf5edbf925078652526267468821e7"
    },
    "34aa15562a5853e333b7228f4c4625f7c3286159" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddMoveDelete", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testRenameAndDelete" ]
      },
      "predecessor" : "34aa15562a5853e333b7228f4c4625f7c3286159~1"
    },
    "cf373458eb7696c657a19757da932686a26b41c8" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ]
      },
      "predecessor" : "34aa15562a5853e333b7228f4c4625f7c3286159"
    },
    "b265682a2b779df2bd81464544f6ff9f7ee0add9" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ]
      },
      "predecessor" : "cf373458eb7696c657a19757da932686a26b41c8"
    },
    "b35d1e7194b727c034ce56817059b3c3c6a0fca7" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddMoveDelete", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testRenameAndDelete" ]
      },
      "predecessor" : "b35d1e7194b727c034ce56817059b3c3c6a0fca7~1"
    },
    "e787a37bdb2e390a488da88b072d4a10ab776f8c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArUnarchive" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveLongNameCreation", "testTarUnarchive" ]
      },
      "predecessor" : "e787a37bdb2e390a488da88b072d4a10ab776f8c~1"
    },
    "ad9256190228b8b02b4e653a2f3f4bd6abe9fe33" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testGzipUnarchive" ]
      },
      "predecessor" : "ad9256190228b8b02b4e653a2f3f4bd6abe9fe33~1"
    },
    "4f1272bc923656bab917d82284bc05027ae1e8ba" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "4f1272bc923656bab917d82284bc05027ae1e8ba~1"
    },
    "d30ff4d5df2559dd1c6162ccaa0c22c75558b35f" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddMoveDelete", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testRenameAndDelete" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testGzipCreation", "testGzipUnarchive" ]
      },
      "predecessor" : "d30ff4d5df2559dd1c6162ccaa0c22c75558b35f~1"
    },
    "952d0fc8a2021c9ef4d931354f0451c1e7b3693b" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ]
      },
      "predecessor" : "952d0fc8a2021c9ef4d931354f0451c1e7b3693b~1"
    },
    "31d002ba96322e570f345fd813a727183e0cbd17" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioUnarchive" ]
      },
      "predecessor" : "31d002ba96322e570f345fd813a727183e0cbd17~1"
    },
    "db7f5772a0ec79a99a09871a84667145a2865c83" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ]
      },
      "predecessor" : "31d002ba96322e570f345fd813a727183e0cbd17"
    },
    "9a871026a65bfe0a51f94b05e51f2edc75315680" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ]
      },
      "predecessor" : "9a871026a65bfe0a51f94b05e51f2edc75315680~1"
    },
    "9fbe205eff8aa6f9a7a6e302094b3715e61da777" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ]
      },
      "predecessor" : "9fbe205eff8aa6f9a7a6e302094b3715e61da777~1"
    },
    "84f836ebd1cf6cde9d42ba33397298f14693462c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ]
      },
      "predecessor" : "84f836ebd1cf6cde9d42ba33397298f14693462c~1"
    },
    "fc425ae267e72bc741c5ccfd9816b9f5ed69cd30" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ]
      },
      "predecessor" : "fc425ae267e72bc741c5ccfd9816b9f5ed69cd30~1"
    },
    "008ca948dadacea8d1a2662c577fdcb25f32d5e2" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.AsiExtraFieldTest" : [ "testContent", "testReparse" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testParse" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testExtraFieldMerging", "testExtraFields" ],
        "org.apache.commons.compress.archivers.zip.ZipLongTest" : [ "testClone", "testEquals", "testFromBytes", "testSign", "testToBytes" ],
        "org.apache.commons.compress.archivers.zip.ZipUtilTest" : [ "testAdjustToLong", "testZipLong" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "008ca948dadacea8d1a2662c577fdcb25f32d5e2~1"
    },
    "c78e72b8acf1fbc48c2761f8544788cccfef4206" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ]
      },
      "predecessor" : "c78e72b8acf1fbc48c2761f8544788cccfef4206~1"
    },
    "b1bfbcb3397390ec51f0bf2472ac17c02534ee8a" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ]
      },
      "predecessor" : "b1bfbcb3397390ec51f0bf2472ac17c02534ee8a~1"
    },
    "1b2e300d4a8f7858c1637ce45a419f57c72c7f8a" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ]
      },
      "predecessor" : "b1bfbcb3397390ec51f0bf2472ac17c02534ee8a"
    },
    "f235f6b0c4c29492406d57ff9a6c630d9414ce68" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ]
      },
      "predecessor" : "f235f6b0c4c29492406d57ff9a6c630d9414ce68~1"
    },
    "958e1bcfc14cec7f47013e3db386622c31d4909c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "958e1bcfc14cec7f47013e3db386622c31d4909c~1"
    },
    "04fa434aed4fa3bf973715f57785cd4ff76ca7f2" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ]
      },
      "predecessor" : "04fa434aed4fa3bf973715f57785cd4ff76ca7f2~1"
    },
    "99696beab393fbaf96cf040c64b798c76e921cd9" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArUnarchive" ]
      },
      "predecessor" : "99696beab393fbaf96cf040c64b798c76e921cd9~1"
    },
    "1429060da149ad1380f2ed1109d7121cb361dbf6" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation" ]
      },
      "predecessor" : "1429060da149ad1380f2ed1109d7121cb361dbf6~1"
    },
    "e574f33302b4a7d30cd4fb12aadc0d1701a5bb13" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddMoveDelete", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testRenameAndDelete" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testGzipCreation", "testGzipUnarchive" ]
      },
      "predecessor" : "e574f33302b4a7d30cd4fb12aadc0d1701a5bb13~1"
    },
    "09fbdbd68fbee513fbc1c0d32087d2a4915b6515" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ]
      },
      "predecessor" : "09fbdbd68fbee513fbc1c0d32087d2a4915b6515~1"
    },
    "f17ce4b5f31c548aea0ed92fe8d44721d68acc01" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ]
      },
      "predecessor" : "f17ce4b5f31c548aea0ed92fe8d44721d68acc01~1"
    },
    "b421b96088a3a8c4d98244f02e80ec590bda9ded" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.TestZipEncodings" : [ "testSimpleCp437Encoding", "testSimpleCp850Encoding" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testUtf8Interoperability" ]
      },
      "predecessor" : "c3a8a1c58e4e249aa39dc1ccd0b9b7b49efe5e97"
    },
    "3adb02af2549f19faa999fe2c6eea3f70448d7d0" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipUtilTest" : [ "testZipLong" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "3adb02af2549f19faa999fe2c6eea3f70448d7d0~1"
    },
    "398f3eb248aa81e494db4027c781d762489412e2" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "d39cf81f492481977285c1b91cb520a370fd7438"
    },
    "f1d63a6313f73268876bc3069a33cec15954398e" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ]
      },
      "predecessor" : "f1d63a6313f73268876bc3069a33cec15954398e~1"
    },
    "fd648e2fd39f6f7d607b974fa73c405c9357d537" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArUnarchive" ]
      },
      "predecessor" : "f1d63a6313f73268876bc3069a33cec15954398e"
    },
    "3503121a0a9fd31efce4803cb2bcbb47310f6f77" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testGzipCreation", "testGzipUnarchive" ]
      },
      "predecessor" : "3503121a0a9fd31efce4803cb2bcbb47310f6f77~1"
    },
    "50710f484fa84dd7ca56250fcff9f4dd2d27428b" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "50710f484fa84dd7ca56250fcff9f4dd2d27428b~1"
    },
    "6140bf0a6d1cde677fadb3314ba718610911e386" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArUnarchive" ]
      },
      "predecessor" : "6140bf0a6d1cde677fadb3314ba718610911e386~1"
    },
    "470e63ac6fada00553f29b0d344375c4f472a0dc" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ]
      },
      "predecessor" : "470e63ac6fada00553f29b0d344375c4f472a0dc~1"
    },
    "56b47fc117ee7153f68b9524a862c12d5e178aa3" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ]
      },
      "predecessor" : "56b47fc117ee7153f68b9524a862c12d5e178aa3~1"
    },
    "27f87f0736bb9bae4bb9feb3b3909d7a436c4485" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ]
      },
      "predecessor" : "27f87f0736bb9bae4bb9feb3b3909d7a436c4485~1"
    },
    "b7a9d162d24a9c049f47d9bafe394d5b63ffafb5" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromJar", "testDeleteFromZip" ]
      },
      "predecessor" : "173671957fc11b5a2c6e517c4e40729149ed20d2"
    },
    "15ce51c9d9ffdce25da56527c02db96eb3a96835" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ]
      },
      "predecessor" : "15ce51c9d9ffdce25da56527c02db96eb3a96835~1"
    },
    "159637d49714b4920769753f7fe06fffa52c9848" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArUnarchive" ]
      },
      "predecessor" : "159637d49714b4920769753f7fe06fffa52c9848~1"
    },
    "4f827afc8286faad69719dfbd2e5d67d2fcdc245" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromJar", "testDeleteFromZip" ]
      },
      "predecessor" : "4f827afc8286faad69719dfbd2e5d67d2fcdc245~1"
    },
    "41afc6c89725c5ed3a1a69153e6161375c8113a5" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ]
      },
      "predecessor" : "41afc6c89725c5ed3a1a69153e6161375c8113a5~1"
    },
    "fc31e9d6bd94d7c74eb05ab168ec071f6c24503b" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "fc31e9d6bd94d7c74eb05ab168ec071f6c24503b~1"
    },
    "dc14c46467f1988468191cd91dddeb448809c56b" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "dc14c46467f1988468191cd91dddeb448809c56b~1"
    },
    "5f4af5262b9d8b08e8123065b01af69e207d32a9" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "5f4af5262b9d8b08e8123065b01af69e207d32a9~1"
    },
    "fa526cb413683d47f8a54cb905dc8ff911e41e57" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "fa526cb413683d47f8a54cb905dc8ff911e41e57~1"
    },
    "8e636e5976d5f8d7a855ac899492f1e4b5e52182" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddMoveDelete", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testRenameAndDelete" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testGzipCreation", "testGzipUnarchive" ]
      },
      "predecessor" : "8e636e5976d5f8d7a855ac899492f1e4b5e52182~1"
    },
    "eaa3fc029910f1051f1dcad40229ce83eaf9dc3c" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ]
      },
      "predecessor" : "eaa3fc029910f1051f1dcad40229ce83eaf9dc3c~1"
    },
    "88a29e1f84821471932d1db34978722859afe1ee" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ]
      },
      "predecessor" : "88a29e1f84821471932d1db34978722859afe1ee~1"
    },
    "29f1d08cebf3e13af884b6155988c0bf90dc51bf" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArUnarchive" ]
      },
      "predecessor" : "57a63ea539595c468b4cef77bb03637d3387191f"
    },
    "d9aacbf2e559d33de87abbbd6726183ff5fb3036" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArUnarchive" ]
      },
      "predecessor" : "d9aacbf2e559d33de87abbbd6726183ff5fb3036~1"
    },
    "1cde8827c953a56b2fcabad676f8cf2ddd6ec182" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ]
      },
      "predecessor" : "1cde8827c953a56b2fcabad676f8cf2ddd6ec182~1"
    },
    "d09177b98f4e956c1d366110f73c3341ea110bee" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ]
      },
      "predecessor" : "d09177b98f4e956c1d366110f73c3341ea110bee~1"
    },
    "6ac0dc2c9da4926614c0c2fd0e9dce76898efb5a" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete" ]
      },
      "predecessor" : "6ac0dc2c9da4926614c0c2fd0e9dce76898efb5a~1"
    },
    "421e37941d5be662d2a3e672e2b84c929331a8c2" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ]
      },
      "predecessor" : "421e37941d5be662d2a3e672e2b84c929331a8c2~1"
    },
    "b0922dc1847379331fb1352997bb475c15cc9644" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive" ]
      },
      "predecessor" : "b0922dc1847379331fb1352997bb475c15cc9644~1"
    },
    "0860a7c84864406ac7c2f3d617b8a4caacb7614f" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ]
      },
      "predecessor" : "0860a7c84864406ac7c2f3d617b8a4caacb7614f~1"
    },
    "d92df029458e1edcdb93aee4b002622e75f0c35f" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "d92df029458e1edcdb93aee4b002622e75f0c35f~1"
    },
    "6117cc1f45661fb42037b95d4c04b541db85dbc9" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "6117cc1f45661fb42037b95d4c04b541db85dbc9~1"
    },
    "91488bbb706442ef38e5ac57b789540377d5a608" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ]
      },
      "predecessor" : "91488bbb706442ef38e5ac57b789540377d5a608~1"
    },
    "81eb0beb2be12c1debbe99e7dae121c63b35deaa" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ]
      },
      "predecessor" : "91488bbb706442ef38e5ac57b789540377d5a608"
    },
    "fec51a1551f6657e29aaa0438abc1e68285577a4" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testFileSystemRoot", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAr" ]
      },
      "predecessor" : "fec51a1551f6657e29aaa0438abc1e68285577a4~1"
    },
    "e124cb4ae76a634b66a5df0afc03ede5a63ec17c" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeletePlusAdd" ]
      },
      "predecessor" : "e124cb4ae76a634b66a5df0afc03ede5a63ec17c~1"
    },
    "abeaf6f7ff5e9132db267fe6d2efb1df52f29f16" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadTar" ]
      },
      "predecessor" : "abeaf6f7ff5e9132db267fe6d2efb1df52f29f16~1"
    },
    "0869c9166c76832f87979925d769ced006ac35e5" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "e46c02b4d59a2a9cc053f2693444f6cbd92a1b12"
    },
    "7df097f4103f8a7ed91ffc7ab84b30bc2968cc08" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadTar" ]
      },
      "predecessor" : "7df097f4103f8a7ed91ffc7ab84b30bc2968cc08~1"
    },
    "2de1b50cf85e39683ce39133075ba35a70e0505a" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "2de1b50cf85e39683ce39133075ba35a70e0505a~1"
    },
    "ae3c158e05af20843fb5ea72deb5b7fb1fefbd54" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "ae3c158e05af20843fb5ea72deb5b7fb1fefbd54~1"
    },
    "b4e2915b1a395e4b9d142e460b3482d9a5c319c4" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "b4e2915b1a395e4b9d142e460b3482d9a5c319c4~1"
    },
    "26d12c5255694810aa8a21381ffc5381229f5df3" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testWriteTar" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar" ]
      },
      "predecessor" : "26d12c5255694810aa8a21381ffc5381229f5df3~1"
    },
    "11349c5f52e0355a11ced6234ae424da73c9503b" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "11349c5f52e0355a11ced6234ae424da73c9503b~1"
    },
    "26387a16979727363b3eb61c6161be73c95ecfaa" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "26387a16979727363b3eb61c6161be73c95ecfaa~1"
    },
    "7ef9107ef88b44d725b156bf7296d982c0faa742" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAr" ]
      },
      "predecessor" : "7ef9107ef88b44d725b156bf7296d982c0faa742~1"
    },
    "7a011db73e88b1692c89bcd50fbb523090343d60" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "7ef9107ef88b44d725b156bf7296d982c0faa742"
    },
    "048db3b1921a7bb58bbaf513bd4b6694b7b7e1c3" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testFileSystemRoot", "testMaxFileSize", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "7a011db73e88b1692c89bcd50fbb523090343d60"
    },
    "1d5567004306b3c6019b4e828f811220fc3fe990" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testFileSystemRoot", "testMaxFileSize", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testName", "testNegative", "testParseOctal", "testRoundTripOctal", "testTrailers" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "1d5567004306b3c6019b4e828f811220fc3fe990~1"
    },
    "3a75bfdb3b4997f8498320f93a34a8732bda99cc" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "3a75bfdb3b4997f8498320f93a34a8732bda99cc~1"
    },
    "8118f824462edcbea3524a200c85ac365329ef4d" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testFileSystemRoot", "testMaxFileSize", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "8118f824462edcbea3524a200c85ac365329ef4d~1"
    },
    "16b557d1ac9d592e73dfd73c92169fa7084ed6e8" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "16b557d1ac9d592e73dfd73c92169fa7084ed6e8~1"
    },
    "9e98de92ce690adc07cc514bd214a3fc3575c730" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "9e98de92ce690adc07cc514bd214a3fc3575c730~1"
    },
    "669c7a591099a77ef75a8e50f435c6ae6cada266" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "69509ee8081881e3acdc8bbf17fbce0a27ef1f18"
    },
    "795dfc39160e4b6b3a5799fef98262a2e5e50e3c" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipUtilTest" : [ "testMinTime", "testZipLong" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip" ]
      },
      "predecessor" : "795dfc39160e4b6b3a5799fef98262a2e5e50e3c~1"
    },
    "04c4921e077293ebecb50c6ef87d9bffbce72a72" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "04c4921e077293ebecb50c6ef87d9bffbce72a72~1"
    },
    "63aa078caa660f235efb28e17b618411057ad8e1" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "63aa078caa660f235efb28e17b618411057ad8e1~1"
    },
    "40e010931f91f4f2989fc5f892f990a8890808e1" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "40e010931f91f4f2989fc5f892f990a8890808e1~1"
    },
    "4bce1fb1a4774dca5b05d6c1c783603c910e38ed" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "40e010931f91f4f2989fc5f892f990a8890808e1"
    },
    "b69329d8c5b677021278fcb5ce4c3db77e84fc48" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "9b0e917a56dec78dd31200c3dac50bcc2ff5e0f6"
    },
    "603116e6fff5d8a3e625e0bc48cac64a9a795c11" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "603116e6fff5d8a3e625e0bc48cac64a9a795c11~1"
    },
    "c75d2d325a0137707166f94a831ff73413ed7ba7" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testGzipCreation", "testGzipUnarchive" ]
      },
      "predecessor" : "f2674c4ce113c632f7477dfd3deb814ec7ccc256"
    },
    "4638b0c2c78f7dd5875c8eb999c8dee9720dec13" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "c75d2d325a0137707166f94a831ff73413ed7ba7"
    },
    "8b2cfc2d49ce8e8ca07c991befbcd466c251cec8" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveUtilsTest" : [ "testCompareAscii" ]
      },
      "predecessor" : "4638b0c2c78f7dd5875c8eb999c8dee9720dec13"
    },
    "865686ae662ea480b62cf42ddee81feaab741423" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testWriteAr", "testWriteCpio" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testDeleteAddDelete", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToAr", "testDeleteFromAr", "testDeletePlusAdd" ]
      },
      "predecessor" : "8b2cfc2d49ce8e8ca07c991befbcd466c251cec8"
    },
    "df7f45f247aedacfd1e826fe7ba12a3665d10be5" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ]
      },
      "predecessor" : "df7f45f247aedacfd1e826fe7ba12a3665d10be5~1"
    },
    "479a349ce8cb36e505074cce78f51b239e2227ad" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAr" ]
      },
      "predecessor" : "df7f45f247aedacfd1e826fe7ba12a3665d10be5"
    },
    "325f0029719a82b57395e352aad91613dea05054" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.AsiExtraFieldTest" : [ "testContent", "testReparse" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testParse" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testExtraFieldMerging", "testExtraFields" ]
      },
      "predecessor" : "325f0029719a82b57395e352aad91613dea05054~1"
    },
    "c387c4451ae8a7c6fb8529ceb7ff5b8d27934096" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteFile", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "4d75bd5c10c2ef19d848c4415276ace9387c5094"
    },
    "4e9b50467adf3ecb0390d20a5747ca60fe5da5e5" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeletePlusAdd" ]
      },
      "predecessor" : "4e9b50467adf3ecb0390d20a5747ca60fe5da5e5~1"
    },
    "631c1dd6ca8e4859bef1b7e41e54b198429f4662" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "631c1dd6ca8e4859bef1b7e41e54b198429f4662~1"
    },
    "39fff7643ccbc3b8d4441ad6afa0ea7240ad7575" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd" ]
      },
      "predecessor" : "39fff7643ccbc3b8d4441ad6afa0ea7240ad7575~1"
    },
    "28c23fb69e745c7c63f694b2a8732bf3499c850f" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testWriteJar" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromJar" ]
      },
      "predecessor" : "28c23fb69e745c7c63f694b2a8732bf3499c850f~1"
    },
    "013990217ca6a3c4f911370606353f819ad99eb3" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "013990217ca6a3c4f911370606353f819ad99eb3~1"
    },
    "a438bdb9c13f421b9cf730389971fe38563b881b" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "a438bdb9c13f421b9cf730389971fe38563b881b~1"
    },
    "19360c35440e4ae579c75b2680bb6a8ee364e641" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "19360c35440e4ae579c75b2680bb6a8ee364e641~1"
    },
    "e80b954d60c8121c6242e79aafad088989be440d" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddChangeTwice", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "08c05022df949a1ae0ced740d6305d9374f5cd13"
    },
    "3608991616066c9c6dab1d19ca5591dc41a1360a" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testGzipUnarchive" ]
      },
      "predecessor" : "3608991616066c9c6dab1d19ca5591dc41a1360a~1"
    },
    "ddbd61f0e75b7d98873b9a9bf6398218edcfd17b" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive" ]
      },
      "predecessor" : "6dfdfb5ddb465252644c6f80e6b13abfd211ef29"
    },
    "d170f34fa65e19b604f5a9e04e6ed5f81d35658c" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "d170f34fa65e19b604f5a9e04e6ed5f81d35658c~1"
    },
    "6273f3a6b804aa845747c8859d659373b14199e1" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "6273f3a6b804aa845747c8859d659373b14199e1~1"
    },
    "1c3003b74e86d716d9be3cb7363d9ba25889f10d" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAr" ]
      },
      "predecessor" : "6273f3a6b804aa845747c8859d659373b14199e1"
    },
    "c69371b0d871acc69dba91e557ebccdfd6a28e29" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testWriteCpio" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeletePlusAdd" ]
      },
      "predecessor" : "c69371b0d871acc69dba91e557ebccdfd6a28e29~1"
    },
    "4c9360efa899ec94c7df4bb622e5a99b68f18967" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "4c9360efa899ec94c7df4bb622e5a99b68f18967~1"
    },
    "ab26943fe8e29f8e5603d5e788dc75abeba898bf" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "4c9360efa899ec94c7df4bb622e5a99b68f18967"
    },
    "5ed6fa433492c0ca701593efa7860b65587778ab" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeletePlusAddSame" ]
      },
      "predecessor" : "5ed6fa433492c0ca701593efa7860b65587778ab~1"
    },
    "7ae0eec9b2f17265be850ce49f987f68abfcbb45" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "7ae0eec9b2f17265be850ce49f987f68abfcbb45~1"
    },
    "d6efcee5576d7788907e70a6d27a1c65fba76767" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeletePlusAddSame" ]
      },
      "predecessor" : "d6efcee5576d7788907e70a6d27a1c65fba76767~1"
    },
    "bcebf92d9221df6c3f2e0f4c1421cee21a3b3ad5" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testExtraFieldMerging" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "bcebf92d9221df6c3f2e0f4c1421cee21a3b3ad5~1"
    },
    "7fce030afc06b59a952aef8745eb92f875db1bb3" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ]
      },
      "predecessor" : "7fce030afc06b59a952aef8745eb92f875db1bb3~1"
    },
    "545bfa8fe466c13428a84afe8c3024b18318949b" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "545bfa8fe466c13428a84afe8c3024b18318949b~1"
    },
    "a45e9cb35e8b68c83debcaec956475ce8461743f" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "545bfa8fe466c13428a84afe8c3024b18318949b"
    },
    "eebf2db09649b960ae10236ab1733619c0ccc877" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testWriteCpio" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeletePlusAdd" ]
      },
      "predecessor" : "eebf2db09649b960ae10236ab1733619c0ccc877~1"
    },
    "d17c68da28348187afe2b52d560218917107401f" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testOptionalFinish" ]
      },
      "predecessor" : "d17c68da28348187afe2b52d560218917107401f~1"
    },
    "38118ec54482b76c0e1eac150597d13b5c8c8413" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testWriteCpio" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeletePlusAdd" ]
      },
      "predecessor" : "38118ec54482b76c0e1eac150597d13b5c8c8413~1"
    },
    "c304a63cc601678f788e7aa15e20d184ebb523a4" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveLongNameCreation" ]
      },
      "predecessor" : "c304a63cc601678f788e7aa15e20d184ebb523a4~1"
    },
    "6a6d62d5901acb5cd5f74ee0003ecc3aba9b1cb3" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadTar", "testReadZip", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "6a6d62d5901acb5cd5f74ee0003ecc3aba9b1cb3~1"
    },
    "13b90aef6c0264b451333198911c69ae8c7f37e1" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testWriteAr" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testFinish" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAr" ]
      },
      "predecessor" : "13b90aef6c0264b451333198911c69ae8c7f37e1~1"
    },
    "f84dd362bbf15c19cb5f3a3b4563951ba529f585" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "f84dd362bbf15c19cb5f3a3b4563951ba529f585~1"
    },
    "3bb9282d8876aff48148c25ec63536d352f775bf" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testFileSystemRoot", "testTarFileWithFSRoot" ]
      },
      "predecessor" : "3bb9282d8876aff48148c25ec63536d352f775bf~1"
    },
    "307bf54277772f95aab1d9e6d32c0e404882c39f" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioUnarchive" ]
      },
      "predecessor" : "3bb9282d8876aff48148c25ec63536d352f775bf"
    },
    "2318ba308b4d36c493330c9286a86878bc24af55" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "307bf54277772f95aab1d9e6d32c0e404882c39f"
    },
    "cc3d4186a7488af04ac096d9047d7694e9f18892" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testWriteAr", "testWriteCpio" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAr", "testDeletePlusAdd" ]
      },
      "predecessor" : "17ffd7f15c677bd595c759e0dec2238ba6e9df72"
    },
    "a180778776229d5c6a39543dc768b76ffe8413ae" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "a180778776229d5c6a39543dc768b76ffe8413ae~1"
    },
    "cf76a5360b48a6a47fe5797450cf9df1a2de1820" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testWriteAr" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testFinish" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAr" ]
      },
      "predecessor" : "cf76a5360b48a6a47fe5797450cf9df1a2de1820~1"
    },
    "e1640e5694cde325d288fdf0ced722482889be3e" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeletePlusAdd" ]
      },
      "predecessor" : "e1640e5694cde325d288fdf0ced722482889be3e~1"
    },
    "381d4a64c1c19827528fe81c1afe1ce30da97788" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testGzipCreation", "testGzipUnarchive" ]
      },
      "predecessor" : "381d4a64c1c19827528fe81c1afe1ce30da97788~1"
    },
    "4efda70f4aa8e263aaa402c202da55e435775ad2" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAr" ]
      },
      "predecessor" : "381d4a64c1c19827528fe81c1afe1ce30da97788"
    },
    "3e2ddad124ea6ab1bc690487793bf88560ca3732" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testExplicitDirectoryEntry", "testExplicitFileEntry", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testFileSystemRoot", "testMaxFileSize", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar" ]
      },
      "predecessor" : "3e2ddad124ea6ab1bc690487793bf88560ca3732~1"
    },
    "dc3fc4703211876fb38cccf55adc92ee5cbc28d0" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "7bb5d8862665e0cc60cee52d2b48ebbd7fca61fd"
    },
    "7b125a334e513349a4445e38b9d5a109f5e26f99" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "7b125a334e513349a4445e38b9d5a109f5e26f99~1"
    },
    "b6886eb41d060b9569bf101a017abdf89acb29f2" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "7b125a334e513349a4445e38b9d5a109f5e26f99"
    },
    "41aa509d836dcdd316a40e68680cc54e0f6c1e04" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "41aa509d836dcdd316a40e68680cc54e0f6c1e04~1"
    },
    "5066e9aeb98f386b29a31cd4acb97aa43844cd30" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testCompressionMethod", "testExtraFieldMerging", "testExtraFields", "testUnixMode" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "5066e9aeb98f386b29a31cd4acb97aa43844cd30~1"
    },
    "7be979633a4ab427d820c591a1cb940c2721ba1a" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testNotEquals" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddChangeTwice", "testAddChangeTwiceWithoutReplace" ]
      },
      "predecessor" : "7be979633a4ab427d820c591a1cb940c2721ba1a~1"
    },
    "e7517b8d5d43910f4317a64f549d58b2db21a64c" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "e7517b8d5d43910f4317a64f549d58b2db21a64c~1"
    },
    "25b5956702a2d63da57ab2be32c47fff22391ddd" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testExtraFieldMerging" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "e7517b8d5d43910f4317a64f549d58b2db21a64c"
    },
    "124f97c18eb3fc29fd4e03c982905cadac1feb0b" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testParse" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testExtraFieldMerging" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "124f97c18eb3fc29fd4e03c982905cadac1feb0b~1"
    },
    "2e3acfa74073a601e3f6ed7bf5ff201a9d843346" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.ExceptionMessageTest" : [ "testMessageWhenArchiverNameIsNull_1", "testMessageWhenInputStreamIsNull" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testGzipCreation", "testGzipUnarchive" ]
      },
      "predecessor" : "2e3acfa74073a601e3f6ed7bf5ff201a9d843346~1"
    },
    "ae0f984b0d20a9e1d9baff43e2cbeb73d1a767d4" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.ExceptionMessageTest" : [ "testMessageWhenArchiverNameIsNull_1", "testMessageWhenArchiverNameIsNull_2", "testMessageWhenInputStreamIsNull", "testMessageWhenOutputStreamIsNull" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.TestZipEncodings" : [ "testNioCp1252Encoding", "testSimpleCp437Encoding", "testSimpleCp850Encoding" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ],
        "org.apache.commons.compress.compressors.BZip2UtilsTestCase" : [ "testGetUncompressedFilename", "testIsCompressedFilename" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testGzipCreation", "testGzipUnarchive" ],
        "org.apache.commons.compress.compressors.GzipUtilsTestCase" : [ "testGetCompressedFilename", "testGetUncompressedFilename", "testIsCompressedFilename" ]
      },
      "predecessor" : "2e3acfa74073a601e3f6ed7bf5ff201a9d843346"
    },
    "bebc6eddeddb8bd40c1299fa6e468b56edd997fc" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testParse" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testExtraFieldMerging", "testExtraFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "bebc6eddeddb8bd40c1299fa6e468b56edd997fc~1"
    },
    "91695e47a11e0ca7eb09555ea5c06f711d117036" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testExtraFieldMerging", "testExtraFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "91695e47a11e0ca7eb09555ea5c06f711d117036~1"
    },
    "14684241489dbe1b607aafd3423ebaf34be377b1" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testWriteCpio" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeletePlusAdd" ]
      },
      "predecessor" : "91695e47a11e0ca7eb09555ea5c06f711d117036"
    },
    "b11dca2f006da939879c9729a8af09f8519df007" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testWriteCpio" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeletePlusAdd" ]
      },
      "predecessor" : "b11dca2f006da939879c9729a8af09f8519df007~1"
    },
    "bed564b55d405bea0be8379576676e5a9be83493" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.ExceptionMessageTest" : [ "testMessageWhenArchiverNameIsNull_1", "testMessageWhenArchiverNameIsNull_2", "testMessageWhenInputStreamIsNull", "testMessageWhenOutputStreamIsNull" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testExplicitDirectoryEntry", "testExplicitFileEntry", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testFileSystemRoot", "testMaxFileSize", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.TestZipEncodings" : [ "testNioCp1252Encoding", "testSimpleCp437Encoding", "testSimpleCp850Encoding" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testGzipCreation", "testGzipUnarchive" ]
      },
      "predecessor" : "bed564b55d405bea0be8379576676e5a9be83493~1"
    },
    "57cb8c89cf8a8ae285cd03ad2397bbb137006c86" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testWriteCpio" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeletePlusAdd" ]
      },
      "predecessor" : "57cb8c89cf8a8ae285cd03ad2397bbb137006c86~1"
    },
    "6179d0e9ed81b74fd721d3d98d211f2d6ae2c5bf" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipUtilTest" : [ "testMinTime", "testZipLong" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "57cb8c89cf8a8ae285cd03ad2397bbb137006c86"
    },
    "2dca66105a3ec80f99a48ed8c43e3988cc86e84e" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testGzipUnarchive" ]
      },
      "predecessor" : "2dca66105a3ec80f99a48ed8c43e3988cc86e84e~1"
    },
    "a1015f312480c697c8dbc2772e4076eb15e41406" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "a1015f312480c697c8dbc2772e4076eb15e41406~1"
    },
    "58568f4443cb48576dda48b25bd77bdbc7a812d7" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "58568f4443cb48576dda48b25bd77bdbc7a812d7~1"
    },
    "231f1dfbff121018a6dafdaa033b5c7bf4b4cbb5" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testWriteCpio" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeletePlusAdd" ]
      },
      "predecessor" : "58568f4443cb48576dda48b25bd77bdbc7a812d7"
    },
    "2b2099395b165cc549232570213ef63cfcf8c10c" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "2b2099395b165cc549232570213ef63cfcf8c10c~1"
    },
    "4d68ddaedca7219f4b12b3c239f9238d5e1c185b" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "4d68ddaedca7219f4b12b3c239f9238d5e1c185b~1"
    },
    "b7bd6e448925795f0bbb84eaea37e64f806240a3" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.GeneralPurposeBitTest" : [ "testDataDescriptor", "testDefaults", "testLanguageEncodingFlag", "testParseEdgeCases" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "b7bd6e448925795f0bbb84eaea37e64f806240a3~1"
    },
    "c7e51ede7a9894e57bb72877ab6b77a0c3ef0705" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "c7e51ede7a9894e57bb72877ab6b77a0c3ef0705~1"
    },
    "a33505b5c6bf810025567b1c6ce244cd1c85f078" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ]
      },
      "predecessor" : "c7e51ede7a9894e57bb72877ab6b77a0c3ef0705"
    },
    "734e6f780498f63263090fb88d19421300ff40d0" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testSkipEntryWithUnsupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ]
      },
      "predecessor" : "a33505b5c6bf810025567b1c6ce244cd1c85f078"
    },
    "e0692eca48f9b86131d41ec6697c7f2d14715b0b" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ]
      },
      "predecessor" : "e0692eca48f9b86131d41ec6697c7f2d14715b0b~1"
    },
    "23e7ed842d1182d1424fc75335bd57115a084f6e" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testGzipCreation", "testGzipUnarchive" ]
      },
      "predecessor" : "e0692eca48f9b86131d41ec6697c7f2d14715b0b"
    },
    "8b3e64b10cdd8af048de59c835aa614067a15c42" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testCorruptedInput" ]
      },
      "predecessor" : "8b3e64b10cdd8af048de59c835aa614067a15c42~1"
    },
    "c37c629de73830587270c57ecc70c1dd83aa68b2" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ]
      },
      "predecessor" : "c37c629de73830587270c57ecc70c1dd83aa68b2~1"
    },
    "fd2c260897829aa7a9c8bc0f6dc555ff58e319f6" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testExplicitFileEntry", "testFileEntryFromFile" ]
      },
      "predecessor" : "c37c629de73830587270c57ecc70c1dd83aa68b2"
    },
    "d67b1c3573e38035935d43f9f60c46847e79d488" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testParseWithRead" ]
      },
      "predecessor" : "a740ea60b32933bd71401b512cd57bb462fb67f0"
    },
    "292e185188ed2d8a1c2d1a13ef0c5f4f28a7aedf" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testCorruptedInput", "testGzipCreation", "testGzipUnarchive" ]
      },
      "predecessor" : "d67b1c3573e38035935d43f9f60c46847e79d488"
    },
    "ade937933227766ae2c5fdc41fb842a33f7a36c5" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ]
      },
      "predecessor" : "292e185188ed2d8a1c2d1a13ef0c5f4f28a7aedf"
    },
    "b6814d4f07ba2b98b4bae4dd1f2f83cbecbe6f56" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "b6814d4f07ba2b98b4bae4dd1f2f83cbecbe6f56~1"
    },
    "30e1cc85c49860d3f5f26d35c7a90e840f3efe95" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "30e1cc85c49860d3f5f26d35c7a90e840f3efe95~1"
    },
    "d7ea9ff05a28a73508b57f369a0b06b3fab46479" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.AsiExtraFieldTest" : [ "testContent", "testReparse" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testMergeWithUnparseableData", "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testCompressionMethod", "testExtraFieldMerging", "testExtraFields" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testPhysicalOrder" ],
        "org.apache.commons.compress.archivers.zip.ZipLongTest" : [ "testClone", "testEquals", "testFromBytes", "testSign", "testToBytes" ],
        "org.apache.commons.compress.archivers.zip.ZipUtilTest" : [ "testAdjustToLong", "testMinTime", "testZipLong" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "d7ea9ff05a28a73508b57f369a0b06b3fab46479~1"
    },
    "62cb9c480ecd71491e6b2452ff8add4d35706290" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testCompressionMethod", "testExtraFieldMerging", "testExtraFields", "testNotEquals", "testUnixMode" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testPhysicalOrder" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "d7ea9ff05a28a73508b57f369a0b06b3fab46479"
    },
    "fc62b2a02f1626d29cf9c481783404e76f255e97" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testExplicitFileEntry", "testFileEntryFromFile" ]
      },
      "predecessor" : "53c08f4580b75c6ce48196f76b0e40e23dccf113"
    },
    "1154e7bbd4be91f3383a93b0a1b5605efc640eec" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "fc62b2a02f1626d29cf9c481783404e76f255e97"
    },
    "02e2be6c590a474f0db5065c375c5e27d1c8c763" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "02e2be6c590a474f0db5065c375c5e27d1c8c763~1"
    },
    "03e94a450fcd6e8b4d185caee3cb6b693c34d8ae" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "03e94a450fcd6e8b4d185caee3cb6b693c34d8ae~1"
    },
    "0fd9354ffea563807e7e548b9168abff1ad3483c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testParseOctal" ]
      },
      "predecessor" : "03e94a450fcd6e8b4d185caee3cb6b693c34d8ae"
    },
    "1bf8e32680d0f81a016d4c6d7181ad23d5a9bf04" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "6732f905bc43d0021a8c83816bc8b030df1ecaf4"
    },
    "33cd35e5d60f03e191ce74f85523b099a3c1944c" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "33cd35e5d60f03e191ce74f85523b099a3c1944c~1"
    },
    "5b25f6c3a0bf1a05376392bdb076acdfb35258bf" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "5b25f6c3a0bf1a05376392bdb076acdfb35258bf~1"
    },
    "1e4034bf41b21852d674e1cc0b845df1feda793f" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromTar" ]
      },
      "predecessor" : "1e4034bf41b21852d674e1cc0b845df1feda793f~1"
    },
    "45fa6e0ea7fd8618a71e6ef981cdf9d9ac637143" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "45fa6e0ea7fd8618a71e6ef981cdf9d9ac637143~1"
    },
    "29b210f053246190fd503bc2938a7a260f69052a" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ]
      },
      "predecessor" : "29b210f053246190fd503bc2938a7a260f69052a~1"
    },
    "c83d9f7180cc9c9dcacc3326068d5a323ea9876d" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAr" ]
      },
      "predecessor" : "c83d9f7180cc9c9dcacc3326068d5a323ea9876d~1"
    },
    "2d858d5c7cc30313c9c3c8ef4a5e8d34d67a395e" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testName" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "c83d9f7180cc9c9dcacc3326068d5a323ea9876d"
    },
    "4ca99827695a09065b8b73397d3abde7f7008f47" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testParseOctal" ]
      },
      "predecessor" : "948e342ade89fa9efb2cfddd9aea40a82e9b34f9"
    },
    "35e4e4fb6848ddfa3878270523f3f9336ae7f9b8" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testParseOctal", "testRoundTripOctal" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "35e4e4fb6848ddfa3878270523f3f9336ae7f9b8~1"
    },
    "1eb9dbb7fd336b1e8a160977722b570354040798" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "35e4e4fb6848ddfa3878270523f3f9336ae7f9b8"
    },
    "8376ecf5e6ff140f3836c51a910b89504e1c3300" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testCorruptedInput", "testGzipUnarchive" ]
      },
      "predecessor" : "86aaf84a2ba3f4687aee130d0bb1834e465662bc"
    },
    "9f68b5d384e2de0fea87a9d613e950e32a24dd78" : {
      "testcases" : {
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ]
      },
      "predecessor" : "9f68b5d384e2de0fea87a9d613e950e32a24dd78~1"
    },
    "60d6b6ac126ce3b4b1c83e537f26f564900e2eda" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "60d6b6ac126ce3b4b1c83e537f26f564900e2eda~1"
    },
    "c795098bfb82306607300de821cab501e546d19c" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.ArchiveUtilsTest" : [ "testAsciiConversions", "testCompareAscii", "testCompareBA" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddMoveDelete", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame", "testRenameAndDelete" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testCorruptedInput", "testGzipCreation", "testGzipUnarchive" ]
      },
      "predecessor" : "c795098bfb82306607300de821cab501e546d19c~1"
    },
    "8c2e5e6914255b0b8703b350033f7f609bca63ff" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testPhysicalOrder" ]
      },
      "predecessor" : "8c2e5e6914255b0b8703b350033f7f609bca63ff~1"
    },
    "dba2c5cbdf4a0fa0030129cf65e82c36b54c3fa5" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testPhysicalOrder" ]
      },
      "predecessor" : "dba2c5cbdf4a0fa0030129cf65e82c36b54c3fa5~1"
    },
    "6eb198253c230677daf0775da098be73bd6113c4" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder" ]
      },
      "predecessor" : "6eb198253c230677daf0775da098be73bd6113c4~1"
    },
    "8c250748c618ccee837d1cd341b3f578c67e5541" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder" ]
      },
      "predecessor" : "8c250748c618ccee837d1cd341b3f578c67e5541~1"
    },
    "b4d7505f8eb531a70d0a56e2b76b36bc302b212b" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ]
      },
      "predecessor" : "b4d7505f8eb531a70d0a56e2b76b36bc302b212b~1"
    },
    "541898ffdc2205bb9dabb807b2dc498547a21a0d" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAr" ]
      },
      "predecessor" : "541898ffdc2205bb9dabb807b2dc498547a21a0d~1"
    },
    "7a76c479371ef20f604eb1f1f2fca9f1b2b8f74a" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testZipArchiveCreation" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "7a76c479371ef20f604eb1f1f2fca9f1b2b8f74a~1"
    },
    "797d74fd75ef76e37698dcb3ef93423d1e4cccbd" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "7a76c479371ef20f604eb1f1f2fca9f1b2b8f74a"
    },
    "2cd145a826a919327ed808fe1ca2da9a659a5567" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testMergeWithUnparseableData", "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testExtraFieldMerging", "testExtraFields" ]
      },
      "predecessor" : "7531f001f66dfcd6582d9f9ac835c69db95c775f"
    },
    "60e2dec0b64a2d1d14f3724e91511817ba1d3508" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testMergeWithUnparseableData", "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testExtraFieldMerging", "testExtraFields" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "60e2dec0b64a2d1d14f3724e91511817ba1d3508~1"
    },
    "d7d90daf1a0482294e42430387f35cbd02f5f4a1" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "d7d90daf1a0482294e42430387f35cbd02f5f4a1~1"
    },
    "8e4b9afadd5181eb8727b39aa048fad497befcb5" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testExtraFieldMerging", "testExtraFields" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "8bdc739a8926ae328052f366910351e067d7d0ea"
    },
    "934a96e0fb2f4aceadfd0ebbd713d43e687e4a1d" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "8e4b9afadd5181eb8727b39aa048fad497befcb5"
    },
    "aa9d0bc38203cdf072f964dfdf5c72f3960d7093" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetectionNotArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "aa9d0bc38203cdf072f964dfdf5c72f3960d7093~1"
    },
    "2916d38e0135a8ddaedc2b319587078d7baa52d5" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testExtraFieldMerging", "testExtraFields" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "aa9d0bc38203cdf072f964dfdf5c72f3960d7093"
    },
    "58c56fc1f916219998787d67c3de224e2dc1f2eb" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ]
      },
      "predecessor" : "58c56fc1f916219998787d67c3de224e2dc1f2eb~1"
    },
    "3f1a7c496cb915dd2f4205fe236f5b6a633dd4b8" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "393d3ee50e82508a205b4737921819d225700040"
    },
    "e53e88aa4e35a066ab83942fd6b4cc1fc2a8ebb0" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testMergeWithUnparseableData", "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.TestZipEncodings" : [ "testNioCp1252Encoding", "testSimpleCp437Encoding", "testSimpleCp850Encoding" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest" : [ "testReadCDSizesOffsetAndDisk", "testReadCDSomethingAndDisk", "testReadLFHSizesAndDisk", "testReadLFHSizesAndOffset", "testReadLFHSizesOffsetAndDisk", "testReadLFHSizesOnly", "testWriteCDOnlySizes", "testWriteCDSizeAndDisk", "testWriteCDSizeAndOffset", "testWriteCDSizeOffsetAndDisk" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testCompressionMethod", "testExtraFieldMerging", "testExtraFields", "testNotEquals", "testUnixMode" ],
        "org.apache.commons.compress.archivers.zip.ZipEightByteIntegerTest" : [ "testEquals" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder" ],
        "org.apache.commons.compress.archivers.zip.ZipLongTest" : [ "testClone", "testEquals" ],
        "org.apache.commons.compress.archivers.zip.ZipShortTest" : [ "testClone", "testEquals" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "e53e88aa4e35a066ab83942fd6b4cc1fc2a8ebb0~1"
    },
    "cb1fdba624638695efa13c7ac8b9f75e93d4a4e0" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.AsiExtraFieldTest" : [ "testClone", "testContent", "testModes", "testReparse" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testMergeWithUnparseableData", "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.GeneralPurposeBitTest" : [ "testDataDescriptor", "testDefaults", "testEncryption", "testLanguageEncodingFlag", "testParseEdgeCases", "testStringEncryption" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest" : [ "testReadCDSizesOffsetAndDisk", "testReadCDSomethingAndDisk", "testReadLFHSizesAndDisk", "testReadLFHSizesAndOffset", "testReadLFHSizesOffsetAndDisk", "testReadLFHSizesOnly", "testWriteCDOnlySizes", "testWriteCDSizeAndDisk", "testWriteCDSizeAndOffset", "testWriteCDSizeOffsetAndDisk" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testCompressionMethod", "testExtraFieldMerging", "testExtraFields" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder" ],
        "org.apache.commons.compress.archivers.zip.ZipLongTest" : [ "testClone", "testEquals", "testFromBytes", "testSign", "testToBytes" ],
        "org.apache.commons.compress.archivers.zip.ZipShortTest" : [ "testClone", "testEquals", "testFromBytes", "testSign", "testToBytes" ],
        "org.apache.commons.compress.archivers.zip.ZipUtilTest" : [ "testAdjustToLong", "testMinTime", "testZipLong" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "cb1fdba624638695efa13c7ac8b9f75e93d4a4e0~1"
    },
    "15f04cc8863e427e4f09b211a324eae28d311041" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "15f04cc8863e427e4f09b211a324eae28d311041~1"
    },
    "45ac135ea4189b9974f0336fb26cce3a964fe54f" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testCompressionMethod", "testExtraFieldMerging", "testExtraFields", "testNotEquals", "testUnixMode" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "15f04cc8863e427e4f09b211a324eae28d311041"
    },
    "6c5f04b0f4489aab92cb3a178b59ab4392bfd9f5" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRawNameReadFromStream", "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "6c5f04b0f4489aab92cb3a178b59ab4392bfd9f5~1"
    },
    "865908836ab2a9e22a4c3f875736ee56eab5e351" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testZipArchiveCreation" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "6c5f04b0f4489aab92cb3a178b59ab4392bfd9f5"
    },
    "3879e477a60c6e2bf5e23842d2a5d9a8734a46ce" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRawNameReadFromStream", "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "3879e477a60c6e2bf5e23842d2a5d9a8734a46ce~1"
    },
    "5031a979acd4a373968f22b81e97336a10cbbbc5" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRawNameReadFromStream", "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "5031a979acd4a373968f22b81e97336a10cbbbc5~1"
    },
    "a9bd2e2984b4c6c0cbd094d11d3a9d07640d5667" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "5031a979acd4a373968f22b81e97336a10cbbbc5"
    },
    "31536360f8caff36a6f3482f56545cd3f950c7ab" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "8aeea171e660b970b5fe18a8d518b421200703b6"
    },
    "7599b70b39fbc6f4ae3689e11c872f510a14b6a3" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "7599b70b39fbc6f4ae3689e11c872f510a14b6a3~1"
    },
    "6e6454e5cc864dda2d0b4e1f74610576a14f0f1b" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "6e6454e5cc864dda2d0b4e1f74610576a14f0f1b~1"
    },
    "aad757e4e9da71c5df4abdd7dac18227dbeeb075" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "aad757e4e9da71c5df4abdd7dac18227dbeeb075~1"
    },
    "fadf636013f510fd06121dc204121d772dd472e5" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.AsiExtraFieldTest" : [ "testClone", "testContent", "testModes", "testReparse" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.GeneralPurposeBitTest" : [ "testDataDescriptor", "testDefaults", "testEncryption", "testLanguageEncodingFlag", "testParseEdgeCases", "testStringEncryption" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest" : [ "testReadCDSizesOffsetAndDisk", "testReadCDSomethingAndDisk", "testReadLFHSizesAndDisk", "testReadLFHSizesAndOffset", "testReadLFHSizesOffsetAndDisk", "testReadLFHSizesOnly", "testWriteCDOnlySizes", "testWriteCDSizeAndDisk", "testWriteCDSizeAndOffset", "testWriteCDSizeOffsetAndDisk" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testExtraFieldMerging", "testExtraFields" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder" ],
        "org.apache.commons.compress.archivers.zip.ZipShortTest" : [ "testClone", "testEquals", "testFromBytes", "testSign", "testToBytes" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "fadf636013f510fd06121dc204121d772dd472e5~1"
    },
    "d9017b220dd1fa3d9b4a6bc5f299da405bfed835" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "d9017b220dd1fa3d9b4a6bc5f299da405bfed835~1"
    },
    "43e546ee737193584bb50b1340df5a9ff02c4b16" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testMergeWithUnparseableData", "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest" : [ "testReadCDSizesOffsetAndDisk", "testReadCDSomethingAndDisk", "testReadLFHSizesAndDisk", "testReadLFHSizesAndOffset", "testReadLFHSizesOffsetAndDisk", "testReadLFHSizesOnly", "testWriteCDOnlySizes", "testWriteCDSizeAndDisk", "testWriteCDSizeAndOffset", "testWriteCDSizeOffsetAndDisk" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testCompressionMethod", "testExtraFieldMerging", "testExtraFields" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "d9017b220dd1fa3d9b4a6bc5f299da405bfed835"
    },
    "a0581332f963888d9425acd2d8934df9263cb177" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest" : [ "testReadCDSizesOffsetAndDisk", "testReadCDSomethingAndDisk" ]
      },
      "predecessor" : "a0581332f963888d9425acd2d8934df9263cb177~1"
    },
    "8ba08d8e1345b6db253ee305f9270b6fadd66779" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "8ba08d8e1345b6db253ee305f9270b6fadd66779~1"
    },
    "2f3b09fbea77594a315edafe020f2dea7ba77820" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "2f3b09fbea77594a315edafe020f2dea7ba77820~1"
    },
    "d019610dc20e2eec9a6d1f90be2d4fa2f1e15083" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "d019610dc20e2eec9a6d1f90be2d4fa2f1e15083~1"
    },
    "6d2b8b5efd1cb68986bb8965f3c4b794ae14bddf" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipEightByteIntegerTest" : [ "testBIFromBytes", "testBIToBytes", "testEquals", "testLongFromBytes", "testLongToBytes", "testSign" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "6d2b8b5efd1cb68986bb8965f3c4b794ae14bddf~1"
    },
    "0257fe02eff57d77f2a199b613d8b03b200ce532" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "0257fe02eff57d77f2a199b613d8b03b200ce532~1"
    },
    "3b3b11c839368413d8330561425e2f8f41c1a08b" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "3b3b11c839368413d8330561425e2f8f41c1a08b~1"
    },
    "704a6afe678b15bfe77dcf3d472c6dd5a2886ab1" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "704a6afe678b15bfe77dcf3d472c6dd5a2886ab1~1"
    },
    "fb05377a069c265d03d22d1b7d60cddd4f70cd33" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "704a6afe678b15bfe77dcf3d472c6dd5a2886ab1"
    },
    "69ed6e58b8e2c1a985c957b161a2688271b17c69" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "69ed6e58b8e2c1a985c957b161a2688271b17c69~1"
    },
    "d321829894b49a1f69cf396b596098f4497735b8" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportTest" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryToStream", "writeSmallStoredEntryUnnownSizeToFile" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "d321829894b49a1f69cf396b596098f4497735b8~1"
    },
    "1e708a040893a987b9d03bcfa422c5a79e09a2e6" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "1e708a040893a987b9d03bcfa422c5a79e09a2e6~1"
    },
    "12f896a8129892d1921c630bfa049b843e53d02e" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportTest" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryToStream", "writeSmallStoredEntryUnnownSizeToFile" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "12f896a8129892d1921c630bfa049b843e53d02e~1"
    },
    "04e132b74b62cac7bb2d171825d5975e4fbfc155" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRawNameReadFromStream", "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "04e132b74b62cac7bb2d171825d5975e4fbfc155~1"
    },
    "d48f106f8758056606e5d50d20f3893978d693a1" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportTest" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryToStream", "writeSmallStoredEntryUnnownSizeToFile" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "d48f106f8758056606e5d50d20f3893978d693a1~1"
    },
    "cadc527d7d2a9841131597ba3a6116ead76480c0" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "cadc527d7d2a9841131597ba3a6116ead76480c0~1"
    },
    "d3aea33fd702ecc6f37fac348dea6b1625d4210c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder" ]
      },
      "predecessor" : "d3aea33fd702ecc6f37fac348dea6b1625d4210c~1"
    },
    "d8703230cc23d7c44c8ab694922ebc453144045f" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder" ]
      },
      "predecessor" : "d8703230cc23d7c44c8ab694922ebc453144045f~1"
    },
    "ff615cb9580ce99d48ec5da88be3b37213185076" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder" ]
      },
      "predecessor" : "ff615cb9580ce99d48ec5da88be3b37213185076~1"
    },
    "45b3f7cc0dcebde4bc2e733e02fd73cb008ad5ef" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportTest" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryToStream", "writeSmallStoredEntryUnnownSizeToFile" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder" ]
      },
      "predecessor" : "45b3f7cc0dcebde4bc2e733e02fd73cb008ad5ef~1"
    },
    "80447398e04dee000215c458b88e467ac41d8c16" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest" : [ "testReadCDSizesAndOffset", "testReadCDSizesOffsetAndDisk", "testReadCDSomethingAndDisk" ]
      },
      "predecessor" : "80447398e04dee000215c458b88e467ac41d8c16~1"
    },
    "2629802a495f335bfb3407f593ba5d11087da4e5" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportTest" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryToStream", "writeSmallStoredEntryUnnownSizeToFile" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder" ]
      },
      "predecessor" : "2629802a495f335bfb3407f593ba5d11087da4e5~1"
    },
    "1aea86ebaeabc30f303e22b2621a2fbb6009974e" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportTest" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryToStream", "writeSmallStoredEntryUnnownSizeToFile" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "1aea86ebaeabc30f303e22b2621a2fbb6009974e~1"
    },
    "46701aad76232fb93c31a69b4e02ef598bfd51f1" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest" : [ "testReadCDSizesOffsetAndDisk", "testReadLFHSizesAndDisk", "testReadLFHSizesAndOffset", "testReadLFHSizesOffsetAndDisk", "testReadLFHSizesOnly" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder" ]
      },
      "predecessor" : "46701aad76232fb93c31a69b4e02ef598bfd51f1~1"
    },
    "1eaaaefb29e2dfd5f78f135a077c9e1887452e69" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportTest" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryToStream", "writeSmallStoredEntryUnnownSizeToFile" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "1eaaaefb29e2dfd5f78f135a077c9e1887452e69~1"
    },
    "afd202f8d400b373f03be9500534228c8c80a5b3" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testRoundTripNames" ]
      },
      "predecessor" : "afd202f8d400b373f03be9500534228c8c80a5b3~1"
    },
    "3553cda8108998a2340591056ad0b2474079214b" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteJar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testListAllFilesWithNestedArchive", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.TestZipEncodings" : [ "testSimpleCp437Encoding", "testSimpleCp850Encoding" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportTest" : [ "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallStoredEntryUnnownSizeToFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testPhysicalOrder" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "3553cda8108998a2340591056ad0b2474079214b~1"
    },
    "4a82530abb49b5100cb85e3b33fb5b1a79da569b" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.TestZipEncodings" : [ "testSimpleCp437Encoding", "testSimpleCp850Encoding" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testExtraFieldMerging" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "4a82530abb49b5100cb85e3b33fb5b1a79da569b~1"
    },
    "43978207f8947d1bc875d0b07088cb0691578f57" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "43978207f8947d1bc875d0b07088cb0691578f57~1"
    },
    "46628efdacc42d4b6bdc11f69405ab7bbea32c03" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetectionNotArchive", "testEmptyCpioArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadTar", "testWriteAr", "testWriteCpio", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testFileSystemRoot", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToTar", "testDeleteFromAr", "testDeleteFromTar", "testDeletePlusAdd" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testCorruptedInput", "testGzipCreation", "testGzipUnarchive" ]
      },
      "predecessor" : "46628efdacc42d4b6bdc11f69405ab7bbea32c03~1"
    },
    "e81176f64f9f3e2f9832224940a4d0aa98b84d0e" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testEmptyCpioArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadTar", "testWriteAr", "testWriteCpio", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testFileSystemRoot", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToTar", "testDeleteFromAr", "testDeleteFromTar", "testDeletePlusAdd" ]
      },
      "predecessor" : "52b9fcd801fe96efd88546f79ae6aebba92c48df"
    },
    "4aea7b2961fe4526fa49e5f0cec5d27f3e3ac968" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportTest" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryToStream", "writeSmallStoredEntryUnnownSizeToFile" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "4aea7b2961fe4526fa49e5f0cec5d27f3e3ac968~1"
    },
    "0299191ff40323d4b0c6c4e997571cd365942f96" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ]
      },
      "predecessor" : "0299191ff40323d4b0c6c4e997571cd365942f96~1"
    },
    "0456186eaa76e12cc885fa4aaef72e0c654075d0" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesGNU" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAr" ]
      },
      "predecessor" : "0299191ff40323d4b0c6c4e997571cd365942f96"
    },
    "de4c4b30baa2ce89360d675f8fa2a1b358b0e10a" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesBSD", "testReadLongNamesGNU" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAr" ]
      },
      "predecessor" : "de4c4b30baa2ce89360d675f8fa2a1b358b0e10a~1"
    },
    "1b915c70e03035b23b5f1199baf4502437686071" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testWriteAr" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testFinish" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAr" ]
      },
      "predecessor" : "1b915c70e03035b23b5f1199baf4502437686071~1"
    },
    "cb37781779d46be803d75fec52aefad5b61be8ec" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportTest" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryToStream", "writeSmallStoredEntryUnnownSizeToFile" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "6a301f888ef12c4088b774c423c8dad37badff67"
    },
    "eb016437c84bc88e634eae8bea16552702484ed4" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportTest" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeBigStoredEntryToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryToStream", "writeSmallStoredEntryUnnownSizeToFile" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "eb016437c84bc88e634eae8bea16552702484ed4~1"
    },
    "4fd5ecb597e9da41a4c3c2f5033ba16ca99c8d87" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.Zip64SupportTest" : [ "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeNever" ]
      },
      "predecessor" : "4fd5ecb597e9da41a4c3c2f5033ba16ca99c8d87~1"
    },
    "dda4aaa90138947f9d20253c1d2880ffa13d38fe" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "dda4aaa90138947f9d20253c1d2880ffa13d38fe~1"
    },
    "e1f851d42a9ec48a4d01265921c106c5abc48b8b" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "e1f851d42a9ec48a4d01265921c106c5abc48b8b~1"
    },
    "794c20fe50038a8fe88852e4ab95e6381ed8027b" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "794c20fe50038a8fe88852e4ab95e6381ed8027b~1"
    },
    "6daf585d3374daf74c8d34d99a5f81b6f8f3e66a" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.ArchiveUtilsTest" : [ "testAsciiConversions", "testCompareAscii", "testCompareBA" ],
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesBSD", "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesCauseExceptionByDefault", "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddMoveDelete", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame", "testRenameAndDelete" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testCorruptedInput", "testGzipCreation", "testGzipUnarchive" ]
      },
      "predecessor" : "9dd152d46cfd2c5153c44691f424c8660d422346"
    },
    "18e1a3a2d47d97c6fbcb61e23dab60fdc3b78a3b" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "18e1a3a2d47d97c6fbcb61e23dab60fdc3b78a3b~1"
    },
    "b64aa8a7bc99fbc4a97e09af83429d5d289fe510" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "b64aa8a7bc99fbc4a97e09af83429d5d289fe510~1"
    },
    "a93236644dbc55858c9b0aa012f5a2d7cd5bee33" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.ExceptionMessageTest" : [ "testMessageWhenArchiverNameIsNull_1", "testMessageWhenInputStreamIsNull" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "3ed497f31dc3ac2cb635466b07ca468cd617a48b"
    },
    "fb06e3ac868b995d3d387c8f160bd28cdb66b539" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.ArchiveUtilsTest" : [ "testAsciiConversions", "testCompareAscii", "testCompareBA" ],
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesBSD", "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesCauseExceptionByDefault", "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.memory.MemoryArchiveTestCase" : [ "testReading" ],
        "org.apache.commons.compress.archivers.zip.AsiExtraFieldTest" : [ "testClone" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testMergeWithUnparseableData", "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod", "testUnixMode" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder" ],
        "org.apache.commons.compress.archivers.zip.ZipUtilTest" : [ "testAdjustToLong", "testMinTime", "testZipLong" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddMoveDelete", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame", "testRenameAndDelete" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testCorruptedInput", "testGzipCreation", "testGzipUnarchive" ]
      },
      "predecessor" : "dfea8360996daab340502f3497b5050f3a11fbf1"
    },
    "207e42159360790407f575c60e3141ca49fee066" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "fb06e3ac868b995d3d387c8f160bd28cdb66b539"
    },
    "a15f6c6f93c62d5a1c28c26796add95a33c3b4e4" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testChangeSetResults" ]
      },
      "predecessor" : "a15f6c6f93c62d5a1c28c26796add95a33c3b4e4~1"
    },
    "b0e55a15f46d261eedde807b7df19959dadf57be" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ]
      },
      "predecessor" : "b0e55a15f46d261eedde807b7df19959dadf57be~1"
    },
    "281591e0e7de97667596e358d937383b01efffcd" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testCheckArchive", "testCheckCompressedArchive", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ]
      },
      "predecessor" : "281591e0e7de97667596e358d937383b01efffcd~1"
    },
    "5fffb017d8a4dc2d13d5ed8ff857beb13c9a80f3" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testCheckArchive", "testCheckCompressedArchive", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ]
      },
      "predecessor" : "5fffb017d8a4dc2d13d5ed8ff857beb13c9a80f3~1"
    },
    "6715dba23794f7b891176c7df7c3bc7605968a98" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testCheckArchive", "testCheckCompressedArchive", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ]
      },
      "predecessor" : "6715dba23794f7b891176c7df7c3bc7605968a98~1"
    },
    "4b27ac73374369eb62623d81171d9ac72fb909bc" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testCheckArchive", "testCheckCompressedArchive", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ]
      },
      "predecessor" : "4b27ac73374369eb62623d81171d9ac72fb909bc~1"
    },
    "82c16deea66a526b76f939e1d64a829681cda584" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testPhysicalOrder" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testChangeSetResults" ]
      },
      "predecessor" : "4b27ac73374369eb62623d81171d9ac72fb909bc"
    },
    "3b3f4cf68cddb96fc5b38d5b2ec45ef0476491f2" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRawNameReadFromStream", "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ]
      },
      "predecessor" : "3b3f4cf68cddb96fc5b38d5b2ec45ef0476491f2~1"
    },
    "cdb582d924ec22610b04b159d4c611250591a08d" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testPhysicalOrder" ]
      },
      "predecessor" : "cdb582d924ec22610b04b159d4c611250591a08d~1"
    },
    "b7095f3c0363312b6d92148eed51a74ec2b4d940" : {
      "testcases" : {
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testCorruptedInput", "testGzipCreation", "testGzipUnarchive" ]
      },
      "predecessor" : "54ac6da1d7fab785dbd82630e95025bb4143a780"
    },
    "65c2498b3fe2c99e71f79d09454c3091028551ce" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromTar" ]
      },
      "predecessor" : "65c2498b3fe2c99e71f79d09454c3091028551ce~1"
    },
    "8aeba821862851375f38ba563ce3629624bceab1" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ]
      },
      "predecessor" : "65c2498b3fe2c99e71f79d09454c3091028551ce"
    },
    "2a8794565231cd6e8801c28e1cc3fef2bbb17ab4" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize" ]
      },
      "predecessor" : "87436750cedf64c3bf25f948597f53af2b52221a"
    },
    "9d48613af42cb7c7aaa259afc1bac1406353de18" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize" ]
      },
      "predecessor" : "9d48613af42cb7c7aaa259afc1bac1406353de18~1"
    },
    "41fc7c55370e2525a8672d7fa88dae74b3b7717c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ]
      },
      "predecessor" : "9d48613af42cb7c7aaa259afc1bac1406353de18"
    },
    "fdac1475918e93444b08a024d096b4ec39d6733d" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "41fc7c55370e2525a8672d7fa88dae74b3b7717c"
    },
    "267a334dbf83b5e56022caeb7f6a19183aff5c96" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testCount" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "fdac1475918e93444b08a024d096b4ec39d6733d"
    },
    "9032b1229a8af56724f67ad7bafe5e18a3dfbebf" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testBadSignature", "testGoodSignature" ]
      },
      "predecessor" : "267a334dbf83b5e56022caeb7f6a19183aff5c96"
    },
    "8038cf7559c1b65ee5e88c639bb17a31e71f8dd5" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testWriteAr" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testFinish" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesCauseExceptionByDefault", "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAr" ]
      },
      "predecessor" : "cb384beaad0fbe0fe6e9d0fca3e7e7badfdd4ea4"
    },
    "f3b51a5272540f55a62012897ec50da8b5356c81" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromTar" ]
      },
      "predecessor" : "f3b51a5272540f55a62012897ec50da8b5356c81~1"
    },
    "aa73926cfb012f875bdcfe6206225fde1028d13d" : {
      "testcases" : {
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testCorruptedInput", "testGzipCreation", "testGzipUnarchive" ]
      },
      "predecessor" : "e43a80299cd0b6c6316785dd240aac8cbc451772"
    },
    "32170076e2aef1cfd3f6d25aa55be502045a5976" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2UtilsTestCase" : [ "testGetCompressedFilename", "testGetUncompressedFilename", "testIsCompressedFilename" ],
        "org.apache.commons.compress.compressors.GzipUtilsTestCase" : [ "testGetCompressedFilename", "testGetUncompressedFilename", "testIsCompressedFilename" ],
        "org.apache.commons.compress.compressors.XZUtilsTestCase" : [ "testGetCompressedFilename", "testGetUncompressedFilename", "testIsCompressedFilename" ]
      },
      "predecessor" : "1b86ffab91d88e2e98e2549756f89890b5b4feb7"
    },
    "20fd83a914183fdfa63aa21ff4a025802c0a3cc1" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ]
      },
      "predecessor" : "20fd83a914183fdfa63aa21ff4a025802c0a3cc1~1"
    },
    "fa886ac30884da4808368cf5a7fc98adce77f614" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testXZUnarchive" ]
      },
      "predecessor" : "fa886ac30884da4808368cf5a7fc98adce77f614~1"
    },
    "30c859c12eb01639d64dfc813187c81b7cba4f05" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarGzip" ],
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testCorruptedInput", "testGzipUnarchive" ]
      },
      "predecessor" : "30c859c12eb01639d64dfc813187c81b7cba4f05~1"
    },
    "6b4172e814e02bb2026e7ab901258c71973c1899" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarGzip" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testCorruptedInput", "testGzipUnarchive" ]
      },
      "predecessor" : "6b4172e814e02bb2026e7ab901258c71973c1899~1"
    },
    "23e22d2589dd4e40323bec381e064f921204255e" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testExtraFieldMerging" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder", "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "6b4172e814e02bb2026e7ab901258c71973c1899"
    },
    "c4f3433f45759dfa10bf67996982f963606ee626" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarGzip" ],
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testCorruptedInput", "testGzipUnarchive" ]
      },
      "predecessor" : "23e22d2589dd4e40323bec381e064f921204255e"
    },
    "8862a48c47c51e90407e24f3bd15dfbb71d2a896" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testXZCreation", "testXZUnarchive" ]
      },
      "predecessor" : "8862a48c47c51e90407e24f3bd15dfbb71d2a896~1"
    },
    "5a90662bde382319c79b2a33d216ae00cf2e031a" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ]
      },
      "predecessor" : "5a90662bde382319c79b2a33d216ae00cf2e031a~1"
    },
    "1ce7ae0e8c9927d1d28c1ebd82aea9a8ec034670" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ]
      },
      "predecessor" : "1ce7ae0e8c9927d1d28c1ebd82aea9a8ec034670~1"
    },
    "e244ef5e6fc7745099d13dea1a234d35c6d73268" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse" ]
      },
      "predecessor" : "e244ef5e6fc7745099d13dea1a234d35c6d73268~1"
    },
    "6846564d8345aba5d64ce943656a60ccf3635978" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetectionNotArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "6846564d8345aba5d64ce943656a60ccf3635978~1"
    },
    "347660646cfad588481c13058842d49fa3779f84" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder", "testReadingOfStoredEntry" ]
      },
      "predecessor" : "6846564d8345aba5d64ce943656a60ccf3635978"
    },
    "5dad11262d3331060cdb5fe1081079bdb5696f3f" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetectionNotArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "5dad11262d3331060cdb5fe1081079bdb5696f3f~1"
    },
    "a6fbdae7e9d765ba175374c78050dc391ddb1cb5" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testMaxFileSize", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testCount" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "5c136a3f9089fd8b787258462b40cb057195b5d6"
    },
    "0ad3bf876675ad74304b8909404e57368c361f9b" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigFileStarMode", "testCount", "testMaxFileSizeError" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "0ad3bf876675ad74304b8909404e57368c361f9b~1"
    },
    "2d52e39b34291f97983cc009d362966e87556cdd" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigFilePosixMode", "testBigFileStarMode", "testCount", "testMaxFileSizeError", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "2d52e39b34291f97983cc009d362966e87556cdd~1"
    },
    "00cc49e76b4cb5837f91bdcae2b3dff6a2809f2a" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder", "testReadingOfStoredEntry" ]
      },
      "predecessor" : "2d52e39b34291f97983cc009d362966e87556cdd"
    },
    "a933173f486614073b68b6c0a6ef09a9c72c94fc" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCompressedArchiveDetection" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "a933173f486614073b68b6c0a6ef09a9c72c94fc~1"
    },
    "b4108683e6d0c11a6cf2e8f59210906821264e03" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "shortTextFilesAreNoTARs" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCompressedArchiveDetection" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "b4108683e6d0c11a6cf2e8f59210906821264e03~1"
    },
    "68391e8113308a9d3038f88c8fcbc2c198cff89c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testNegative", "testOverflow" ]
      },
      "predecessor" : "b4108683e6d0c11a6cf2e8f59210906821264e03"
    },
    "7ee6b67c1983aa06e4585eb76fab0d7441fe0a3d" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigFilePosixMode", "testBigFileStarMode", "testWriteLongFileNamePosixMode" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "68391e8113308a9d3038f88c8fcbc2c198cff89c"
    },
    "915e8ef9a42c4fc2561917116620543402cace91" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigFilePosixMode", "testBigFileStarMode", "testCount", "testMaxFileSizeError", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testWriteLongFileNamePosixMode", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testRoundTripOctal" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "7ee6b67c1983aa06e4585eb76fab0d7441fe0a3d"
    },
    "bc84d2083e4b1da77547bb4e810a06553e8f0bed" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigFilePosixMode", "testBigFileStarMode", "testWriteLongFileNamePosixMode" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "915e8ef9a42c4fc2561917116620543402cace91"
    },
    "e99d0ada42680d992704f67c8624a10b4bea8d42" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "readPaxHeaderWithEmbeddedNewline", "readSimplePaxHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigFilePosixMode", "testBigFileStarMode", "testCount", "testMaxFileSizeError", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testWriteLongFileNamePosixMode", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "e99d0ada42680d992704f67c8624a10b4bea8d42~1"
    },
    "c75c10faae27781aeb51713f42153cad1fd242a4" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testCompressionMethod", "testExtraFieldMerging", "testExtraFields", "testNotEquals", "testUnixMode" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder", "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "e99d0ada42680d992704f67c8624a10b4bea8d42"
    },
    "40f2e6380094ebfdc73e4adaf4059b80e1327aad" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigFilePosixMode", "testBigFileStarMode", "testWriteLongFileNamePosixMode" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testParseOctal", "testParseOctalInvalid", "testRoundTripOctal", "testRoundTripOctalOrBinary" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "c75c10faae27781aeb51713f42153cad1fd242a4"
    },
    "b90b1f445d5b2317360b797afae22ecfccbdac94" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigFilePosixMode", "testBigFileStarMode", "testCount", "testMaxFileSizeError", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testWriteLongFileNamePosixMode", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "b90b1f445d5b2317360b797afae22ecfccbdac94~1"
    },
    "23aa5b4a91da0df095f411d1634272e57289a3d1" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testRoundTripOctalOrBinary12", "testRoundTripOctalOrBinary8" ]
      },
      "predecessor" : "23aa5b4a91da0df095f411d1634272e57289a3d1~1"
    },
    "6c71a2b11ab80ce9c0523023712b3aebfa6d15b3" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigFilePosixMode", "testBigFileStarMode", "testWriteLongFileNamePosixMode" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "6c71a2b11ab80ce9c0523023712b3aebfa6d15b3~1"
    },
    "1ffe1b18969edbf44b87d3b98b2592e6fe165710" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigFilePosixMode", "testWriteLongFileNamePosixMode" ]
      },
      "predecessor" : "1ffe1b18969edbf44b87d3b98b2592e6fe165710~1"
    },
    "4e7672568ef110f3b96f758fbc4af828ea2c8c8a" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testRoundTripOctalOrBinary8" ]
      },
      "predecessor" : "4e7672568ef110f3b96f758fbc4af828ea2c8c8a~1"
    },
    "be286da2b3ade34a747a7b650e7bb0d5d233f2c8" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigFilePosixMode", "testBigFileStarMode", "testCount", "testMaxFileSizeError", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testWriteLongFileNamePosixMode", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "be286da2b3ade34a747a7b650e7bb0d5d233f2c8~1"
    },
    "20e860dd69c1f14f5710fbb1ff73e4afa19f32fc" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigFilePosixMode", "testBigFileStarMode", "testCount", "testMaxFileSizeError", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testWriteLongFileNamePosixMode", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "20e860dd69c1f14f5710fbb1ff73e4afa19f32fc~1"
    },
    "9a1011d4df4476463ef449aaeb0d65ebdba461da" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testExplicitDirectoryEntry", "testExplicitFileEntry", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testMaxFileSize", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigFilePosixMode", "testBigFileStarMode", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testWriteLongFileNamePosixMode", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar" ]
      },
      "predecessor" : "9a1011d4df4476463ef449aaeb0d65ebdba461da~1"
    },
    "5b13f846800ca81758c0f0560d3c214c1ef2bbf7" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInPAXFormat" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigFilePosixMode", "testCount", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testWriteLongFileNamePosixMode", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "5b13f846800ca81758c0f0560d3c214c1ef2bbf7~1"
    },
    "8b2ec5a043d0f5c38bf8d0216b10b235999b5b44" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigFilePosixMode", "testCount", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testWriteLongFileNamePosixMode", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "8b2ec5a043d0f5c38bf8d0216b10b235999b5b44~1"
    },
    "23db0b7470e739f5cde6bc147e05cb8737a20978" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigFilePosixMode", "testOldEntryPosixMode" ]
      },
      "predecessor" : "23db0b7470e739f5cde6bc147e05cb8737a20978~1"
    },
    "42398710d172723cf1bf5872eacdd7d842f59a43" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "42398710d172723cf1bf5872eacdd7d842f59a43~1"
    },
    "69ceb4e14feb6273c06c1e35ba116b6783bb3278" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadTar", "testReadZip", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readPaxHeaderWithEmbeddedNewline", "readSimplePaxHeader", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testCount", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testWriteLongFileNamePosixMode", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testName", "testNegative", "testOverflow", "testParseOctal", "testParseOctalInvalid", "testReadNegativeBinary12Byte", "testReadNegativeBinary8Byte", "testRoundTripOctal", "testRoundTripOctalOrBinary12", "testRoundTripOctalOrBinary8", "testTrailers", "testWriteNegativeBinary8Byte" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.TestZipEncodings" : [ "testNioCp1252Encoding", "testSimpleCp437Encoding", "testSimpleCp850Encoding" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeBigStoredEntryToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder", "testReadingOfStoredEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "69ceb4e14feb6273c06c1e35ba116b6783bb3278~1"
    },
    "e4ee376ea518f46274f087337edfe284586dd917" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testOldEntryPosixMode", "testOldEntryStarMode", "testWriteLongFileNamePosixMode" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "e4ee376ea518f46274f087337edfe284586dd917~1"
    },
    "e43088b797546eee69f0b09df205138bbd7dc3e8" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testRoundTripNames" ]
      },
      "predecessor" : "e4ee376ea518f46274f087337edfe284586dd917"
    },
    "029af4dd80ee91c2554c78093910cf8cee88accd" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testMaxFileSizeError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testWriteLongFileNamePosixMode", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testName", "testRoundTripNames" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "029af4dd80ee91c2554c78093910cf8cee88accd~1"
    },
    "32619a8f4b14a633fcaed2c8a848d73cc726ad2e" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testWriteLongFileNamePosixMode", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "32619a8f4b14a633fcaed2c8a848d73cc726ad2e~1"
    },
    "c2bc7a49a03dbee6ccebc91e6c2ea9bb5048c617" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInPAXFormat", "readPaxHeaderWithEmbeddedNewline", "readSimplePaxHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testOldEntryPosixMode", "testWriteLongFileNamePosixMode" ]
      },
      "predecessor" : "c2bc7a49a03dbee6ccebc91e6c2ea9bb5048c617~1"
    },
    "96292659a4ffff2950068ad8b262efd61136c2a5" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testWriteLongFileNamePosixMode", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "c2bc7a49a03dbee6ccebc91e6c2ea9bb5048c617"
    },
    "e345f55644b2d9016e603f6f7320022102c461d8" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testWriteNonAsciiPathNamePaxHeader" ]
      },
      "predecessor" : "e345f55644b2d9016e603f6f7320022102c461d8~1"
    },
    "5c05b49cf407a34bbbaf2818e26b7bf00471d4c7" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testWriteLongFileNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "5c05b49cf407a34bbbaf2818e26b7bf00471d4c7~1"
    },
    "f206832cf44ec12b510bc61a601ac38000e86322" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder", "testReadingOfStoredEntry", "testWinzipBackSlashWorkaround" ]
      },
      "predecessor" : "5c05b49cf407a34bbbaf2818e26b7bf00471d4c7"
    },
    "ff9cca110bd518153473befc3eef87b0cb117d31" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarGzip" ],
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testCorruptedInput", "testGzipUnarchive" ]
      },
      "predecessor" : "ff9cca110bd518153473befc3eef87b0cb117d31~1"
    },
    "a0e435e4d42efd04c7b758ba3fe99cfc82bcfb6d" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testEmptyCpioArchive" ],
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testReadTar", "testWriteCpio" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testOldEntryPosixMode", "testOldEntryStarMode", "testWriteLongFileNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToTar", "testDeleteFromTar", "testDeletePlusAdd" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testXZUnarchive" ]
      },
      "predecessor" : "a0e435e4d42efd04c7b758ba3fe99cfc82bcfb6d~1"
    },
    "70d0fce30721b1ea616a7ca267e8e3be7e5a0e24" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testOldEntryPosixMode", "testOldEntryStarMode", "testWriteLongFileNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "70d0fce30721b1ea616a7ca267e8e3be7e5a0e24~1"
    },
    "d85f9dee0a0c93b2a967fcab902615d09f55d61d" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarGzip" ],
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testCorruptedInput", "testGzipUnarchive" ]
      },
      "predecessor" : "70d0fce30721b1ea616a7ca267e8e3be7e5a0e24"
    },
    "2a36651fbdd822b97efdb1a04788b8fcbfa47cf2" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesBSD", "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAr" ]
      },
      "predecessor" : "d85f9dee0a0c93b2a967fcab902615d09f55d61d"
    },
    "d7119be63642c0cc862e636071b96daaa0b99ec0" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readNonAsciiPaxHeader", "readPaxHeaderWithEmbeddedNewline", "readSimplePaxHeader", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testWriteLongFileNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testNegative", "testOverflow", "testParseOctal", "testParseOctalInvalid", "testRoundEncoding" ],
        "org.apache.commons.compress.archivers.zip.TestZipEncodings" : [ "testNioCp1252Encoding", "testSimpleCp437Encoding", "testSimpleCp850Encoding" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "2a36651fbdd822b97efdb1a04788b8fcbfa47cf2"
    },
    "cf206ca8268f0526b43445eb5baa6d298b52dd9c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberStarMode" ]
      },
      "predecessor" : "d7119be63642c0cc862e636071b96daaa0b99ec0"
    },
    "336c42d96187974858a71c58764ef0b1bbfc7536" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveUtilTest" : [ "convert64" ]
      },
      "predecessor" : "cf206ca8268f0526b43445eb5baa6d298b52dd9c"
    },
    "6b0229f14c2dfd5812e7634ec4fa5b6be3b99496" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddDeleteAdd", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "6b0229f14c2dfd5812e7634ec4fa5b6be3b99496~1"
    },
    "b2a9dd0e14adf6a80af03d8f8273141495cf90f5" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.ArchiveUtilsTest" : [ "testAsciiConversions", "testCompareAscii", "testCompareBA" ],
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesBSD", "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesCauseExceptionByDefault", "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testWriteLongFileNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testMergeWithUnparseableData" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testExtraFieldMerging", "testExtraFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder", "testReadingOfStoredEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddMoveDelete", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame", "testRenameAndDelete" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testCorruptedInput", "testGzipCreation", "testGzipUnarchive" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testBadSignature", "testGoodSignature", "testInputStreamMethods", "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile", "testOutputStreamMethods", "testShortSignature" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testXZCreation", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "b2a9dd0e14adf6a80af03d8f8273141495cf90f5~1"
    },
    "04173636b705ae43c29e22f52b8b75a1136ffddd" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeBigStoredEntryToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "04173636b705ae43c29e22f52b8b75a1136ffddd~1"
    },
    "b06f7b41c936ef1a79589d16ea5c1d8b93f71f66" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ]
      },
      "predecessor" : "04173636b705ae43c29e22f52b8b75a1136ffddd"
    },
    "6e95697e783767f3549f00d7d2e1b002eac4a3d4" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ]
      },
      "predecessor" : "6e95697e783767f3549f00d7d2e1b002eac4a3d4~1"
    },
    "1ce57d976c4f25fe99edcadf079840c278f3cb84" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ]
      },
      "predecessor" : "1ce57d976c4f25fe99edcadf079840c278f3cb84~1"
    },
    "ea31005111f0abede7e43e4ba0012e62e0808b22" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ],
        "org.apache.commons.compress.compressors.bzip2.BlockSortTest" : [ "testSortFixture" ]
      },
      "predecessor" : "ea31005111f0abede7e43e4ba0012e62e0808b22~1"
    },
    "cca0e6e5341aacddefd4c4d36cef7cbdbc2a8777" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ]
      },
      "predecessor" : "cca0e6e5341aacddefd4c4d36cef7cbdbc2a8777~1"
    },
    "0600296ab8f8a0bbdfedd483f51b38005eb8e34e" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ],
        "org.apache.commons.compress.compressors.bzip2.BlockSortTest" : [ "testFallbackSort", "testSortFixture" ]
      },
      "predecessor" : "0600296ab8f8a0bbdfedd483f51b38005eb8e34e~1"
    },
    "6ced422bf5eca3aac05396367bafb33ec21bf74e" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ],
        "org.apache.commons.compress.compressors.bzip2.BlockSortTest" : [ "testSortFixture", "testSortFixture2" ]
      },
      "predecessor" : "0600296ab8f8a0bbdfedd483f51b38005eb8e34e"
    },
    "654222e628097763ee6ca561ae77be5c06666173" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ],
        "org.apache.commons.compress.compressors.bzip2.BlockSortTest" : [ "testFallbackSort", "testSortFixture", "testSortFixture2", "testSortFixture2FallbackSort", "testSortFixtureFallbackSort" ]
      },
      "predecessor" : "654222e628097763ee6ca561ae77be5c06666173~1"
    },
    "8f702469cbf4c451b6dea349290bc4af0f6f76c7" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ],
        "org.apache.commons.compress.compressors.bzip2.BlockSortTest" : [ "testSortFixture2", "testSortFixture2FallbackSort" ]
      },
      "predecessor" : "654222e628097763ee6ca561ae77be5c06666173"
    },
    "b58c039b8ee196db867f3e72ee6b81f6d691b1ed" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ]
      },
      "predecessor" : "8f702469cbf4c451b6dea349290bc4af0f6f76c7"
    },
    "4becc32881aa983d69359b475892a4f2bc6e5b89" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testNotEquals" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddChangeTwice", "testAddChangeTwiceWithoutReplace" ]
      },
      "predecessor" : "b58c039b8ee196db867f3e72ee6b81f6d691b1ed"
    },
    "306c3c87adedb828d4fa6c2137ec99cda672e3a7" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "306c3c87adedb828d4fa6c2137ec99cda672e3a7~1"
    },
    "f36320acca053aa7d0bb82f2aab582b0c04fcab1" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testOldEntryPosixMode", "testOldEntryStarMode", "testWriteLongFileNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "f36320acca053aa7d0bb82f2aab582b0c04fcab1~1"
    },
    "7d807918b791a3a75d2ad463da1bb18d22af28ce" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ]
      },
      "predecessor" : "7d807918b791a3a75d2ad463da1bb18d22af28ce~1"
    },
    "aa8365f5b5bc871f1c8ad95412e68ee09ea44af2" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ]
      },
      "predecessor" : "7d807918b791a3a75d2ad463da1bb18d22af28ce"
    },
    "811fb4e1f7cb0b87d9af62cc892ac06a413eb560" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testOldEntryPosixMode", "testOldEntryStarMode", "testWriteLongFileNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "811fb4e1f7cb0b87d9af62cc892ac06a413eb560~1"
    },
    "9bdacbfb9631d3a3710a64f35482c643b78a2e79" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "shortTextFilesAreNoTARs" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCompressedArchiveDetection" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "9bdacbfb9631d3a3710a64f35482c643b78a2e79~1"
    },
    "2ab43b0a1d56be413754424910362811fa3d85c4" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "shortTextFilesAreNoTARs" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ExceptionMessageTest" : [ "testMessageWhenArchiverNameIsNull_1", "testMessageWhenArchiverNameIsNull_2", "testMessageWhenInputStreamIsNull", "testMessageWhenOutputStreamIsNull" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS178", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testCount" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "2ab43b0a1d56be413754424910362811fa3d85c4~1"
    },
    "c96b2e2f749d7909c1b5aaa518ff687a70e9f5ba" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "2ab43b0a1d56be413754424910362811fa3d85c4"
    },
    "9d2363748bfaeb8c06c6d3ea73e318bb343bd803" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "shortTextFilesAreNoTARs" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCompressedArchiveDetection" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "9d2363748bfaeb8c06c6d3ea73e318bb343bd803~1"
    },
    "ead7019cc23ea1ec60f0cf1777ed1f85c0925c34" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesCauseExceptionByDefault" ],
        "org.apache.commons.compress.archivers.memory.MemoryArchiveTestCase" : [ "testReading" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "readNonAsciiPaxHeader", "readPaxHeaderWithEmbeddedNewline", "readSimplePaxHeader" ]
      },
      "predecessor" : "9d2363748bfaeb8c06c6d3ea73e318bb343bd803"
    },
    "5b0d41a55655e62b599b3f132a52c2aa520847de" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ]
      },
      "predecessor" : "5b0d41a55655e62b599b3f132a52c2aa520847de~1"
    },
    "db6dda34281d95d495ff4c935b65cf84310bf6be" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testOldEntryPosixMode", "testOldEntryStarMode" ]
      },
      "predecessor" : "db6dda34281d95d495ff4c935b65cf84310bf6be~1"
    },
    "ab456436d20f386641e605c17de24cc8cd3c1770" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testOldEntryPosixMode", "testOldEntryStarMode", "testWriteLongFileNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testParseOctal", "testParseOctalInvalid", "testRoundTripOctal", "testRoundTripOctalOrBinary12", "testRoundTripOctalOrBinary8" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "ab456436d20f386641e605c17de24cc8cd3c1770~1"
    },
    "e9d7bcf5f2284f2aa326a3d2ea1807c465b0de8b" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testWriteLongFileNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "e9d7bcf5f2284f2aa326a3d2ea1807c465b0de8b~1"
    },
    "37378a764b0c5632dbba0c61a4818a24d2004bcd" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testWriteLongFileNamePosixMode", "testWriteSimplePaxHeaders" ]
      },
      "predecessor" : "37378a764b0c5632dbba0c61a4818a24d2004bcd~1"
    },
    "716666a267169689e3b4559458c1f0d53a96ae0a" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadTar", "testReadZip", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testMaxFileSizeError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongFileNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testName", "testRoundEncoding", "testRoundTripNames" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "716666a267169689e3b4559458c1f0d53a96ae0a~1"
    },
    "09b8f6d78e18b927491fc299973146fa74fd977f" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testOldEntryPosixMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testWriteLongFileNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ]
      },
      "predecessor" : "09b8f6d78e18b927491fc299973146fa74fd977f~1"
    },
    "e4f645c89fc53128f3e4b35ec208d90cb6eca015" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testOldEntryPosixMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ]
      },
      "predecessor" : "e4f645c89fc53128f3e4b35ec208d90cb6eca015~1"
    },
    "e2cf412a7856a7a9f314c3927df2f5a04f42177d" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "e2cf412a7856a7a9f314c3927df2f5a04f42177d~1"
    },
    "b4a985f516bf5a06c49321e9070b09f356a1b852" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "b4a985f516bf5a06c49321e9070b09f356a1b852~1"
    },
    "92d8c57a90b7fbdd8c3fd1304db2b513f57bbb02" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRawNameReadFromStream", "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "92d8c57a90b7fbdd8c3fd1304db2b513f57bbb02~1"
    },
    "e10ce2c37a9dd72efa8b8d706067c6960276933c" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "shortTextFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCompressedArchiveDetection" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.AsiExtraFieldTest" : [ "testContent", "testReparse" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testMergeWithUnparseableData", "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeBigStoredEntryToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testCompressionMethod", "testExtraFieldMerging", "testExtraFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipLongTest" : [ "testClone", "testEquals", "testFromBytes", "testSign", "testToBytes" ],
        "org.apache.commons.compress.archivers.zip.ZipUtilTest" : [ "testAdjustToLong", "testMinTime", "testZipLong" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "e10ce2c37a9dd72efa8b8d706067c6960276933c~1"
    },
    "0d6defe95b3fc620943343d3a56cec131950c33e" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "shortTextFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCompressedArchiveDetection" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "0d6defe95b3fc620943343d3a56cec131950c33e~1"
    },
    "c0a9923f613225b9a4bd7d4a92401ba78f536ea1" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testFileSystemRoot", "testMaxFileSize", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "0d6defe95b3fc620943343d3a56cec131950c33e"
    },
    "65837142a3cd20a9253dba4d21e547866dc1224b" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testOldEntryPosixMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ]
      },
      "predecessor" : "65837142a3cd20a9253dba4d21e547866dc1224b~1"
    },
    "ec0f5850f8342c0b1eecb20eca7286a9a4a362e1" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "ec0f5850f8342c0b1eecb20eca7286a9a4a362e1~1"
    },
    "f4044dd0d86684959764783583f24f2b8baf44b0" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testOldEntryPosixMode", "testOldEntryStarMode", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "f4044dd0d86684959764783583f24f2b8baf44b0~1"
    },
    "21148e7b5bc4cf6d0c38dc80bed5d7eb709897e1" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "shouldUseSpecifiedEncodingWhenReadingGNULongNames" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testCount", "testOldEntryError", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "21148e7b5bc4cf6d0c38dc80bed5d7eb709897e1~1"
    },
    "a2f978e97f13697e7adfddc3f96a9131803db679" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesBSD", "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testOldEntryPosixMode", "testOldEntryStarMode", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testNullCommentEqualsEmptyComment" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "a2f978e97f13697e7adfddc3f96a9131803db679~1"
    },
    "2245d7ade5283dcf8bf01c2aed1016188771779b" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testMergeWithUnparseableData", "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testExtraFieldMerging", "testExtraFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "2245d7ade5283dcf8bf01c2aed1016188771779b~1"
    },
    "ba8d7c43eb43293756e5f633a81dc73c9f85ad04" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testMisc", "testParseReparse" ]
      },
      "predecessor" : "2245d7ade5283dcf8bf01c2aed1016188771779b"
    },
    "d8836f6627467ab7d523f27b00bb8873170d5fbe" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testLinkFlagConstructor", "testLinkFlagConstructorWithFileFlag", "testLinkFlagConstructorWithPreserve" ]
      },
      "predecessor" : "0e1d5a4385ec91ddc10900f8733f086513636609"
    },
    "d4e24f2aac0d98d9460cd07c530a9e3cf0dc72c9" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testTrimLeadingZeroesForceMinLength4" ]
      },
      "predecessor" : "d4e24f2aac0d98d9460cd07c530a9e3cf0dc72c9~1"
    },
    "aeaac6431856b3b0554bc3865eb51eb40d2fa83b" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testMisc" ]
      },
      "predecessor" : "d4e24f2aac0d98d9460cd07c530a9e3cf0dc72c9"
    },
    "5e1e2987483e581db31166a82f758c69d3c559f5" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testSkipsPK00Prefix" ]
      },
      "predecessor" : "5e1e2987483e581db31166a82f758c69d3c559f5~1"
    },
    "5f8d904f2afe425d0f45054d8e19c842377c485d" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "shouldUseSpecifiedEncodingWhenReadingGNULongNames" ]
      },
      "predecessor" : "5f8d904f2afe425d0f45054d8e19c842377c485d~1"
    },
    "df4c479df0b633103e92251665f999a0b113fbb2" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testUnixSymlinkSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ]
      },
      "predecessor" : "1120914c8b6c0ba6e75328791d9fe639b946e2fa"
    },
    "79a7d826698725fb919af08aa3d99fb52c7fe816" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testOldEntryPosixMode", "testOldEntryStarMode", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "df4c479df0b633103e92251665f999a0b113fbb2"
    },
    "3161093afffc6958a0139f1861371ae201e4f3f7" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testCheckArchive", "testCheckCompressedArchive", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ]
      },
      "predecessor" : "3161093afffc6958a0139f1861371ae201e4f3f7~1"
    },
    "93e861d21f55b8e6d066416143a252ee17302865" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection", "testEmptyCpioArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeletePlusAdd" ]
      },
      "predecessor" : "93e861d21f55b8e6d066416143a252ee17302865~1"
    },
    "7181d54ff1170865f066a41f7e2568be34f3a749" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "shortTextFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCompressedArchiveDetection" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.AsiExtraFieldTest" : [ "testContent", "testReparse" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testMergeWithUnparseableData", "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testMisc", "testParseReparse", "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeBigStoredEntryToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testCompressionMethod", "testExtraFieldMerging", "testExtraFields", "testUnixSymlinkSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipLongTest" : [ "testClone", "testEquals", "testFromBytes", "testSign", "testToBytes" ],
        "org.apache.commons.compress.archivers.zip.ZipUtilTest" : [ "testAdjustToLong", "testBigToLong", "testLongToBig", "testMinTime", "testReverse", "testSignedByteToUnsignedInt", "testUnsignedIntToSignedByte", "testZipLong" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "7181d54ff1170865f066a41f7e2568be34f3a749~1"
    },
    "aa36c497400b2629945cbe5e23973407a460809b" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ]
      },
      "predecessor" : "a67d562da56609290f52587791b41aa0ea2f3a58"
    },
    "2acbbed061fa58877145d1f4694b3ca248c10fd7" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testParseReparse" ]
      },
      "predecessor" : "2acbbed061fa58877145d1f4694b3ca248c10fd7~1"
    },
    "fdcf80dfe8e5314a9220cbcd74f4e2dd03b71b81" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "shouldConsumeArchiveCompletely" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "shouldConsumeArchiveCompletely" ]
      },
      "predecessor" : "fdcf80dfe8e5314a9220cbcd74f4e2dd03b71b81~1"
    },
    "bb74f0c4cd5febd41fd6ab74f978a6219dc33f64" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive" ],
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesBSD", "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testCount" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8Interoperability" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testUnixSymlinkSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder", "testSkipsPK00Prefix", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testCorruptedInput", "testGzipCreation", "testGzipUnarchive" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testBadSignature", "testGoodSignature", "testInputStreamMethods", "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile", "testShortSignature" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testXZCreation", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "bb74f0c4cd5febd41fd6ab74f978a6219dc33f64~1"
    },
    "de0b7d762f74e45c9837dd1a0ca69822a2a00a9c" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive" ],
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesBSD", "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testCount" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8Interoperability" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testUnixSymlinkSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder", "testSkipsPK00Prefix", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testCorruptedInput", "testGzipCreation", "testGzipUnarchive" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testBadSignature", "testGoodSignature", "testInputStreamMethods", "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile", "testShortSignature" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testXZCreation", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "de0b7d762f74e45c9837dd1a0ca69822a2a00a9c~1"
    },
    "bc1766198c69e1852a8136acc088882642ef2004" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream" ]
      },
      "predecessor" : "de0b7d762f74e45c9837dd1a0ca69822a2a00a9c"
    },
    "9000c892f42452079dbdc27b43c397b03826fc57" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testUnixSymlinkSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ]
      },
      "predecessor" : "9000c892f42452079dbdc27b43c397b03826fc57~1"
    },
    "b0d2bd6e3645a73adb0eab0d97e9afac5a40da7d" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeletePlusAdd" ]
      },
      "predecessor" : "f3a5bf6884fe0658be48ea5c969a97987003210b"
    },
    "62200b4185c983df55d2d09a70223097df1db33f" : {
      "testcases" : {
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ]
      },
      "predecessor" : "60f4ac24f9d03ff26789002138bb71f227e1526b"
    },
    "01c3fe92a44d898b39c285168095d26dbe5d450b" : {
      "testcases" : {
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ]
      },
      "predecessor" : "01c3fe92a44d898b39c285168095d26dbe5d450b~1"
    },
    "d4baeb15bae488bb7cf534457a9ef65922cb3564" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "shouldConsumeArchiveCompletely", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testOldEntryPosixMode", "testOldEntryStarMode", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "01c3fe92a44d898b39c285168095d26dbe5d450b"
    },
    "5e49d8adb8b33104ad25245cbb7434400e85b539" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209" ]
      },
      "predecessor" : "5e49d8adb8b33104ad25245cbb7434400e85b539~1"
    },
    "1044ee46be92156477f92d019cdd787fa6d59158" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ]
      },
      "predecessor" : "1044ee46be92156477f92d019cdd787fa6d59158~1"
    },
    "afb5df5db3c52da18f8e8ef4d6142eb0340b5777" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testXZCreation" ]
      },
      "predecessor" : "a20cf4b83cc75f02ec6c119d256ac7daf1d4ca17"
    },
    "592b1000348d294471db9605c50a63ad292e35cb" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ]
      },
      "predecessor" : "afb5df5db3c52da18f8e8ef4d6142eb0340b5777"
    },
    "e1379e2ad42d116c6f2efdba19043d515716c0b6" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ]
      },
      "predecessor" : "592b1000348d294471db9605c50a63ad292e35cb"
    },
    "df8b3b2e51a9385e02eba25e72f3927fd1e3ea63" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRawNameReadFromStream", "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "df8b3b2e51a9385e02eba25e72f3927fd1e3ea63~1"
    },
    "109a7a8090b8254ce41fbef153e19938f36f6467" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ]
      },
      "predecessor" : "df8b3b2e51a9385e02eba25e72f3927fd1e3ea63"
    },
    "59896525b912d1bbede71aba1ae568b4305ec6ff" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "testAllEmptyFilesArchive", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ]
      },
      "predecessor" : "59896525b912d1bbede71aba1ae568b4305ec6ff~1"
    },
    "c25c8df36b2bd8a4afe2701c246ff7060de2f00e" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "testAllEmptyFilesArchive", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ]
      },
      "predecessor" : "c25c8df36b2bd8a4afe2701c246ff7060de2f00e~1"
    },
    "b7de910802687688e9d8bceab11b7a8f54db1693" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "testAllEmptyFilesArchive", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ]
      },
      "predecessor" : "b7de910802687688e9d8bceab11b7a8f54db1693~1"
    },
    "93a15dde57abc1953d889abe5aa84341c835bbb8" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "shortTextFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ExceptionMessageTest" : [ "testMessageWhenArchiverNameIsNull_1", "testMessageWhenInputStreamIsNull" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS178", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "testAllEmptyFilesArchive", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "93a15dde57abc1953d889abe5aa84341c835bbb8~1"
    },
    "1a237bddc94187290b58a74ac9f8b98bd4e5b13c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testPhysicalOrder", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ]
      },
      "predecessor" : "93a15dde57abc1953d889abe5aa84341c835bbb8"
    },
    "f62cf85eecf7ce4f3ebc595e00cef36e93f85fdf" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testPhysicalOrder", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ]
      },
      "predecessor" : "f62cf85eecf7ce4f3ebc595e00cef36e93f85fdf~1"
    },
    "ed534048b12afcffd45a53f7b0945f49d929a29a" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testDuplicateEntry" ]
      },
      "predecessor" : "ed534048b12afcffd45a53f7b0945f49d929a29a~1"
    },
    "e860d2f3eb16d84e146a8a700d9dbd3af01df4ba" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest" : [ "testReparseCDSingleEightByteData" ]
      },
      "predecessor" : "e860d2f3eb16d84e146a8a700d9dbd3af01df4ba~1"
    },
    "d31dc3696c0c7bbd9c9f7e662b30db6ed15bfe4c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ]
      },
      "predecessor" : "e860d2f3eb16d84e146a8a700d9dbd3af01df4ba"
    },
    "b607aa2f6370fc2fd7090a02f94840f0c8ce7a42" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ]
      },
      "predecessor" : "d31dc3696c0c7bbd9c9f7e662b30db6ed15bfe4c"
    },
    "7b117a459629338668b5f67cef99729606523c6f" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ]
      },
      "predecessor" : "7b117a459629338668b5f67cef99729606523c6f~1"
    },
    "601e4d7dbf966bc861f15c6dd657cb68772df08e" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "shouldConsumeArchiveCompletely", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testOldEntryPosixMode", "testOldEntryStarMode", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "601e4d7dbf966bc861f15c6dd657cb68772df08e~1"
    },
    "29d9a8b1e5266a3fc645b1cb9ea4617abbb09c82" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "shouldConsumeArchiveCompletely", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testOldEntryPosixMode", "testOldEntryStarMode", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "29d9a8b1e5266a3fc645b1cb9ea4617abbb09c82~1"
    },
    "a33995a2f3d38135cff872b9a97d9348e4e80403" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "testAllEmptyFilesArchive", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ]
      },
      "predecessor" : "a33995a2f3d38135cff872b9a97d9348e4e80403~1"
    },
    "5127ee6b5830003c90f56d60bc67068e09c40f6d" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testDuplicateEntry" ]
      },
      "predecessor" : "5127ee6b5830003c90f56d60bc67068e09c40f6d~1"
    },
    "46e75eed2cce8db02f475941c2634ec442c42081" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testConcatenatedStreamsReadFirstOnly" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testCorruptedInput", "testGzipUnarchive" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testXZUnarchive" ]
      },
      "predecessor" : "5127ee6b5830003c90f56d60bc67068e09c40f6d"
    },
    "e33d42eb606710e7cc9ba820d25f725428d4a709" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ]
      },
      "predecessor" : "46e75eed2cce8db02f475941c2634ec442c42081"
    },
    "d57a6629c728365f2813a7121363381282831d95" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "shouldConsumeArchiveCompletely", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testOldEntryPosixMode", "testOldEntryStarMode", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "67ea50114ac7a8b3ba4848edaf13d518d9098114"
    },
    "d2bcb0371967f313aa9710f12725c20a5650dc93" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readNonAsciiPaxHeader", "readPaxHeaderWithEmbeddedNewline", "readSimplePaxHeader", "shouldConsumeArchiveCompletely", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "d2bcb0371967f313aa9710f12725c20a5650dc93~1"
    },
    "6f63fab43852f92226b462e737c7d580c28461c7" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ]
      },
      "predecessor" : "6f63fab43852f92226b462e737c7d580c28461c7~1"
    },
    "26fc82f9fda2bded536ad203172506561a3bc90c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ]
      },
      "predecessor" : "26fc82f9fda2bded536ad203172506561a3bc90c~1"
    },
    "bb2200b087e604986922414878a1db36e2dcd86e" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testWriteCpio" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testOldEntryPosixMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeletePlusAdd" ]
      },
      "predecessor" : "bb2200b087e604986922414878a1db36e2dcd86e~1"
    },
    "dab23f70249430ca50a863195e6a15a1e548b009" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.bzip2.BlockSortTest" : [ "testFallbackSort", "testSortFixture", "testSortFixture2", "testSortFixture2FallbackSort", "testSortFixture2MainSort", "testSortFixtureFallbackSort", "testSortFixtureMainSort" ]
      },
      "predecessor" : "dab23f70249430ca50a863195e6a15a1e548b009~1"
    },
    "3a7e01b838763e4822038a935f5ad24efccef9f7" : {
      "testcases" : {
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ]
      },
      "predecessor" : "3a7e01b838763e4822038a935f5ad24efccef9f7~1"
    },
    "a671a703fe86b69adb8c61495a915065c186362d" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readNonAsciiPaxHeader", "readPaxHeaderWithEmbeddedNewline", "readSimplePaxHeader", "shouldConsumeArchiveCompletely", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "a671a703fe86b69adb8c61495a915065c186362d~1"
    },
    "040e42d0f0bebc15ca80cb80fb6db53804b2e082" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testWriteCpio" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeletePlusAdd" ]
      },
      "predecessor" : "040e42d0f0bebc15ca80cb80fb6db53804b2e082~1"
    },
    "2ba220330c8cc3def7b5c354b581866eec5cbe2c" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "shouldUseSpecifiedEncodingWhenReadingGNULongNames" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "2ba220330c8cc3def7b5c354b581866eec5cbe2c~1"
    },
    "8d7e1f42deab891740f644d9b699443fe4a824b4" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "shouldUseSpecifiedEncodingWhenReadingGNULongNames" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "2ba220330c8cc3def7b5c354b581866eec5cbe2c"
    },
    "16da2b95dcfc0e50a0ba059121dc40e7343ea624" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "shouldUseSpecifiedEncodingWhenReadingGNULongNames" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "16da2b95dcfc0e50a0ba059121dc40e7343ea624~1"
    },
    "5972cab660f9f3600ecff59dc94b02a08b0ef1f9" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ExceptionMessageTest" : [ "testMessageWhenArchiverNameIsNull_1", "testMessageWhenInputStreamIsNull" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreation" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS178", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely", "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "testAllEmptyFilesArchive", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testParseOctalInvalid" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "366189b470a1177a0ce58647cfeb9f96bfd556e2"
    },
    "90b73bf96a9a09ea633cc42eb17cab60c885d8c6" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.ArchiveUtilsTest" : [ "testAsciiConversions", "testCompareAscii" ],
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ExceptionMessageTest" : [ "testMessageWhenArchiverNameIsNull_1", "testMessageWhenArchiverNameIsNull_2", "testMessageWhenInputStreamIsNull", "testMessageWhenOutputStreamIsNull" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesBSD", "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesCauseExceptionByDefault", "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive", "testCpioUnarchiveCreatedByRedlineRpm" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "shouldConsumeArchiveCompletely", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testOldEntryPosixMode", "testOldEntryStarMode", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "90b73bf96a9a09ea633cc42eb17cab60c885d8c6~1"
    },
    "8c34dc5576759fb36d4ac1fa7dcfea3fb5907ca5" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testArjUnarchive" ]
      },
      "predecessor" : "8c34dc5576759fb36d4ac1fa7dcfea3fb5907ca5~1"
    },
    "99358db9c54dbb5e8530b071ecdf313add86b37f" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testArjUnarchive" ]
      },
      "predecessor" : "99358db9c54dbb5e8530b071ecdf313add86b37f~1"
    },
    "cd47ed96ae57fda2d2db142d6f2c50bfad8e5f9c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreation" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testConcatenatedStreamsReadFirstOnly" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testCorruptedInput", "testGzipUnarchive" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testXZUnarchive" ]
      },
      "predecessor" : "99358db9c54dbb5e8530b071ecdf313add86b37f"
    },
    "b451bb3b029da55674ef568181ea73e9b559d9ef" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreation" ]
      },
      "predecessor" : "cd47ed96ae57fda2d2db142d6f2c50bfad8e5f9c"
    },
    "5d6dc46127d07a6d431c867e86b2f089686f3c93" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreation" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zUnarchive", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ]
      },
      "predecessor" : "5d6dc46127d07a6d431c867e86b2f089686f3c93~1"
    },
    "3685eeae9077221b27c617f9e8eb9836cfbb39d1" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive", "testCpioUnarchiveCreatedByRedlineRpm" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely", "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRawNameReadFromStream", "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "5d6dc46127d07a6d431c867e86b2f089686f3c93"
    },
    "f3d34aa6202c75bfac354fe5befe1e5ab5c7d8d8" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "shortTextFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCompressedArchiveDetection" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "f3d34aa6202c75bfac354fe5befe1e5ab5c7d8d8~1"
    },
    "f5b32b03223c5c647cc01a7cfa33b7fd2ea679b4" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreation" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zUnarchive", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ]
      },
      "predecessor" : "f5b32b03223c5c647cc01a7cfa33b7fd2ea679b4~1"
    },
    "ae2a0ed1220822c4e7c22d694486a444e230ba7f" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDeflateUnarchive", "test7zUnarchive" ]
      },
      "predecessor" : "ae2a0ed1220822c4e7c22d694486a444e230ba7f~1"
    },
    "891ce01a5f0e4ca12be1ef9059d7541c6d1c83d8" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "891ce01a5f0e4ca12be1ef9059d7541c6d1c83d8~1"
    },
    "0317b955b296f0e0db08c1a12ac17ae1d943a502" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreation" ]
      },
      "predecessor" : "0317b955b296f0e0db08c1a12ac17ae1d943a502~1"
    },
    "d495f26d9593e490b256391255cc8ba907d87f1e" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive" ]
      },
      "predecessor" : "d495f26d9593e490b256391255cc8ba907d87f1e~1"
    },
    "86531d86061d4c4b18075108f69a2bf94ee4eae6" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreation" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDeflateUnarchive", "test7zUnarchive", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ]
      },
      "predecessor" : "d495f26d9593e490b256391255cc8ba907d87f1e"
    },
    "5ec6974223300aaca6619cb77ad4e1ca932d6c91" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreation" ]
      },
      "predecessor" : "5ec6974223300aaca6619cb77ad4e1ca932d6c91~1"
    },
    "2c9bec11701af7dc9cdd3b99aca9035cd641419e" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDeflateUnarchive", "test7zUnarchive", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ]
      },
      "predecessor" : "2c9bec11701af7dc9cdd3b99aca9035cd641419e~1"
    },
    "cc734856258ae520272b23eef2aba057ccf9cd3b" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testArjUnarchive" ]
      },
      "predecessor" : "2c9bec11701af7dc9cdd3b99aca9035cd641419e"
    },
    "38e8adde8408611976ea76a3aeed9479cf0275a8" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "shortTextFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCompressedArchiveDetection" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testArjUnarchive", "testReadingOfAttributesDosVersion", "testReadingOfAttributesUnixVersion" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ]
      },
      "predecessor" : "b314957dd7022b01363badba83304bcef218d6a2"
    },
    "d46463e4e2041a7e5f0073c929d5288532cbab47" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ]
      },
      "predecessor" : "38e8adde8408611976ea76a3aeed9479cf0275a8"
    },
    "ce82edb67041fafd854149ce25d026f3acd3192a" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ]
      },
      "predecessor" : "ce82edb67041fafd854149ce25d026f3acd3192a~1"
    },
    "6ef52480773a7b14a9c39ef9fde16e6d6d30aee5" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate" ],
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testArjUnarchive", "testReadingOfAttributesDosVersion", "testReadingOfAttributesUnixVersion" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ]
      },
      "predecessor" : "6ef52480773a7b14a9c39ef9fde16e6d6d30aee5~1"
    },
    "5106367b894952a348bcda32f14af74a821a9c83" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ]
      },
      "predecessor" : "5106367b894952a348bcda32f14af74a821a9c83~1"
    },
    "e6a6666ea0f3f19f3c3d5c10a29a05abf0e080b0" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive" ]
      },
      "predecessor" : "5106367b894952a348bcda32f14af74a821a9c83"
    },
    "8279181284bb61b81beb9719fdb1734013fb097d" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ]
      },
      "predecessor" : "8279181284bb61b81beb9719fdb1734013fb097d~1"
    },
    "06a81988d3fa7fd5828cb9f4e67432e23b1af21b" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate" ]
      },
      "predecessor" : "8279181284bb61b81beb9719fdb1734013fb097d"
    },
    "2cb7f9dfd362297f491b6557144d886d1dadf321" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testArjUnarchive", "testReadingOfAttributesDosVersion", "testReadingOfAttributesUnixVersion" ]
      },
      "predecessor" : "2cb7f9dfd362297f491b6557144d886d1dadf321~1"
    },
    "ac525fed0064649fc02796e291b58d52e7c0b15d" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive", "testCpioUnarchiveCreatedByRedlineRpm" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely", "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testLinkFlagConstructor", "testLinkFlagConstructorWithFileFlag", "testLinkFlagConstructorWithPreserve", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readNonAsciiPaxHeader", "readPaxHeaderWithEmbeddedNewline", "readSimplePaxHeader", "shouldConsumeArchiveCompletely", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testName", "testNegative", "testOverflow", "testParseOctal", "testParseOctalInvalid", "testReadNegativeBinary12Byte", "testReadNegativeBinary8Byte", "testRoundEncoding", "testRoundTripNames", "testRoundTripOctal", "testRoundTripOctalOrBinary12", "testRoundTripOctalOrBinary8", "testTrailers", "testVerifyHeaderCheckSum", "testWriteNegativeBinary8Byte" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.TestZipEncodings" : [ "testNioCp1252Encoding", "testSimpleCp437Encoding", "testSimpleCp850Encoding" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeBigStoredEntryToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "ac525fed0064649fc02796e291b58d52e7c0b15d~1"
    },
    "c5d9ec80ab29edea74b98bb8e8a667ec13313f76" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate" ]
      },
      "predecessor" : "ac525fed0064649fc02796e291b58d52e7c0b15d"
    },
    "fcec064a6c0a01eb97e2febeca4955881973bd33" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate" ]
      },
      "predecessor" : "fcec064a6c0a01eb97e2febeca4955881973bd33~1"
    },
    "eb9318d8fda86d26eb3c6cbcd691f6820abf972b" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive", "testCpioUnarchiveCreatedByRedlineRpm" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely", "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testLinkFlagConstructor", "testLinkFlagConstructorWithFileFlag", "testLinkFlagConstructorWithPreserve", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readNonAsciiPaxHeader", "readPaxHeaderWithEmbeddedNewline", "readSimplePaxHeader", "shouldConsumeArchiveCompletely", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testName", "testNegative", "testOverflow", "testParseOctal", "testParseOctalInvalid", "testReadNegativeBinary12Byte", "testReadNegativeBinary8Byte", "testRoundEncoding", "testRoundTripNames", "testRoundTripOctal", "testRoundTripOctalOrBinary12", "testRoundTripOctalOrBinary8", "testTrailers", "testVerifyHeaderCheckSum", "testWriteNegativeBinary8Byte" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.TestZipEncodings" : [ "testNioCp1252Encoding", "testSimpleCp437Encoding", "testSimpleCp850Encoding" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeBigStoredEntryToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "eb9318d8fda86d26eb3c6cbcd691f6820abf972b~1"
    },
    "f8f1a84d805955f48f7a098746f65ef6027f7cb8" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInPAXFormat", "shouldUseSpecifiedEncodingWhenReadingGNULongNames" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testOldEntryPosixMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "eb9318d8fda86d26eb3c6cbcd691f6820abf972b"
    },
    "8d86448f567e0fc7bb8ef400c8d3bc5b7370defb" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate" ]
      },
      "predecessor" : "8d86448f567e0fc7bb8ef400c8d3bc5b7370defb~1"
    },
    "e3d3cadad8b866d1d076c1a91eb88875d1de9959" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive" ]
      },
      "predecessor" : "8d86448f567e0fc7bb8ef400c8d3bc5b7370defb"
    },
    "17cc253856d4f743bbb94f4288b16c067f250195" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive" ]
      },
      "predecessor" : "17cc253856d4f743bbb94f4288b16c067f250195~1"
    },
    "0825d695cf80277e2d5a5f3af01011db51be9855" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testGetHeaderId", "testGettersSetters", "testMisc", "testParseReparse" ]
      },
      "predecessor" : "0825d695cf80277e2d5a5f3af01011db51be9855~1"
    },
    "8c6d38e8b8a165bb0385bfc7a5e6f7a450148095" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction" ]
      },
      "predecessor" : "8c6d38e8b8a165bb0385bfc7a5e6f7a450148095~1"
    },
    "161781f3b19f9596636eb25a40034d616baa5a67" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction" ]
      },
      "predecessor" : "161781f3b19f9596636eb25a40034d616baa5a67~1"
    },
    "db0ea954f28050662eee8c2b120499cc1849df5f" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testDirectoriesOnly" ]
      },
      "predecessor" : "db0ea954f28050662eee8c2b120499cc1849df5f~1"
    },
    "0a08d3781b55e12490388d7275b9cff8e9fd6280" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive" ]
      },
      "predecessor" : "0a08d3781b55e12490388d7275b9cff8e9fd6280~1"
    },
    "56b7c80e21a70fa5aabd1c905b3f7a2ce4f1503c" : {
      "testcases" : {
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testConcatenatedStreamsReadFirstOnly" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testCorruptedInput", "testGzipUnarchive" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive" ]
      },
      "predecessor" : "56b7c80e21a70fa5aabd1c905b3f7a2ce4f1503c~1"
    },
    "3e39e47be42eb24d276fce77ab353a8db5f82265" : {
      "testcases" : {
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection", "testMatches" ]
      },
      "predecessor" : "56b7c80e21a70fa5aabd1c905b3f7a2ce4f1503c"
    },
    "81a7b281ebf59f82befb0b04586e367ff4b06a1f" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaFactory" ]
      },
      "predecessor" : "81a7b281ebf59f82befb0b04586e367ff4b06a1f~1"
    },
    "74abef2129e28520c1cfffbfd90969da22e577b5" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaFactory" ]
      },
      "predecessor" : "74abef2129e28520c1cfffbfd90969da22e577b5~1"
    },
    "2221ee87b406cf1781f0a4f18914812db2256b01" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "shouldConsumeArchiveCompletely", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testOldEntryPosixMode", "testOldEntryStarMode", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "2221ee87b406cf1781f0a4f18914812db2256b01~1"
    },
    "ea3bde832b7b06e6351a07ad02b1ca8b0325d62a" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaFactory" ]
      },
      "predecessor" : "ea3bde832b7b06e6351a07ad02b1ca8b0325d62a~1"
    },
    "4e19109ad8004d94a7331c108ac555a650f85e47" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldReadNestedZip" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testDuplicateEntry", "testReadingOfStoredEntry", "testUnixSymlinkSampleFile" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "4e19109ad8004d94a7331c108ac555a650f85e47~1"
    },
    "0851aed43bcea41dc4e7d2a7cfb95eae4dc65bd4" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ]
      },
      "predecessor" : "0851aed43bcea41dc4e7d2a7cfb95eae4dc65bd4~1"
    },
    "a150df5288ee73d9bbb90f9317c5713d20f88537" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection", "testRemainingChunkTypes" ]
      },
      "predecessor" : "a150df5288ee73d9bbb90f9317c5713d20f88537~1"
    },
    "274addbc6f0ceec27b6e286064d6b79d01174567" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection", "testRemainingChunkTypes" ]
      },
      "predecessor" : "274addbc6f0ceec27b6e286064d6b79d01174567~1"
    },
    "622f3f9f429aaa7f1c393eada164ef378b19f6bc" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection", "testRemainingChunkTypes" ]
      },
      "predecessor" : "622f3f9f429aaa7f1c393eada164ef378b19f6bc~1"
    },
    "d65843930379c571a8b9c92ae1f6de65c2c0853f" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testArjUnarchive", "testReadingOfAttributesDosVersion", "testReadingOfAttributesUnixVersion" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testDirectoriesAndEmptyFiles", "testDirectoriesOnly" ]
      },
      "predecessor" : "d65843930379c571a8b9c92ae1f6de65c2c0853f~1"
    },
    "3f2f313cd15a9cfaa0c77827d1ede7d0ed2a8a59" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testArjUnarchive", "testReadingOfAttributesDosVersion", "testReadingOfAttributesUnixVersion" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testDirectoriesAndEmptyFiles", "testDirectoriesOnly" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ]
      },
      "predecessor" : "3f2f313cd15a9cfaa0c77827d1ede7d0ed2a8a59~1"
    },
    "75823ee5c1379076fc170a2b66c2039948ed8d3c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testDirectoriesAndEmptyFiles", "testDirectoriesOnly" ]
      },
      "predecessor" : "75823ee5c1379076fc170a2b66c2039948ed8d3c~1"
    },
    "4f0e81f125787c4b2d5cf4f2fcd3886e24b6e4fb" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testDirectoriesAndEmptyFiles", "testDirectoriesOnly" ]
      },
      "predecessor" : "75823ee5c1379076fc170a2b66c2039948ed8d3c"
    },
    "09a4199d52d7afbc5cd9b6f2737f15aa9496e7cb" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testGettersSetters", "testMisc", "testParseReparse", "testWriteReadRoundtrip" ]
      },
      "predecessor" : "09a4199d52d7afbc5cd9b6f2737f15aa9496e7cb~1"
    },
    "655f35b6c9837c49d1cc2423b6880877a6182479" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldReadNestedZip" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "655f35b6c9837c49d1cc2423b6880877a6182479~1"
    },
    "345b8fc41910e2c27c57925c4265d3a9f1b1b993" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testSkipEntryWithUnsupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ]
      },
      "predecessor" : "345b8fc41910e2c27c57925c4265d3a9f1b1b993~1"
    },
    "9150d65efb3306c7db20f60fd49577701fbfc477" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnshrinking" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaFactory" ]
      },
      "predecessor" : "9150d65efb3306c7db20f60fd49577701fbfc477~1"
    },
    "ec5bd473c597470a46ba91c43a3367552ec4e2b3" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnshrinking" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaFactory" ]
      },
      "predecessor" : "ec5bd473c597470a46ba91c43a3367552ec4e2b3~1"
    },
    "180c2b83e2f9b7cf82aaf49b25a69b5764f5792d" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testGzipCreation" ]
      },
      "predecessor" : "ec5bd473c597470a46ba91c43a3367552ec4e2b3"
    },
    "7e06782f1dabae328d0307c626e479989310fcab" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testExtraFlagsBestCompression", "testExtraFlagsDefaultCompression", "testExtraFlagsFastestCompression", "testGzipCreation", "testInteroperabilityWithGZIPInputStream", "testInteroperabilityWithGzipCompressorInputStream", "testOverWrite" ]
      },
      "predecessor" : "7e06782f1dabae328d0307c626e479989310fcab~1"
    },
    "8301ee7fec23ffdee9ea2c8ce5a8b80f343744e5" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "skipsPK00Prefix" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRawNameReadFromStream", "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "7e06782f1dabae328d0307c626e479989310fcab"
    },
    "29f975ea99d9b9310c6fc33ac4f844fb10f4d98a" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "skipsPK00Prefix" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRawNameReadFromStream", "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "29f975ea99d9b9310c6fc33ac4f844fb10f4d98a~1"
    },
    "c83c462de4e8f865f0a22539f2ba53ab5bb7fd3c" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testExtraFieldMerging" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "c83c462de4e8f865f0a22539f2ba53ab5bb7fd3c~1"
    },
    "c6c7ec486fbb1a9c919853e35ca1a40300733098" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldReadNestedZip" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "c6c7ec486fbb1a9c919853e35ca1a40300733098~1"
    },
    "8bfb8987a3f5c73a38880c2c10cf7eda06ac9ddd" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldReadNestedZip" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "8bfb8987a3f5c73a38880c2c10cf7eda06ac9ddd~1"
    },
    "d11e8d1cc1bc180a742df9df57cd890d4967ec41" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "d11e8d1cc1bc180a742df9df57cd890d4967ec41~1"
    },
    "bfc8e03bdcf73162cc0f52c5ccb20b24961d54a8" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldReadNestedZip" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "d11e8d1cc1bc180a742df9df57cd890d4967ec41"
    },
    "1b47ffe3bb81de2a922d72782b6b685de610f7a6" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRawNameReadFromStream", "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "bfc8e03bdcf73162cc0f52c5ccb20b24961d54a8"
    },
    "8d44f86110b0d4c0efd120c5af7a60b5db956ed9" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testSkipEntryWithUnsupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnshrinkEntry" ]
      },
      "predecessor" : "8d44f86110b0d4c0efd120c5af7a60b5db956ed9~1"
    },
    "3fd6f60ca21a18baad27d31a5d9b253de11a3944" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldReadNestedZip", "testUnshrinkEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "3fd6f60ca21a18baad27d31a5d9b253de11a3944~1"
    },
    "f9487ac192219b1c0419d80eb2b3cc6674992788" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.GeneralPurposeBitTest" : [ "testDataDescriptor", "testEncryption", "testLanguageEncodingFlag", "testParseEdgeCases", "testStringEncryption" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testUnshrinkEntry", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "f9487ac192219b1c0419d80eb2b3cc6674992788~1"
    },
    "afce414fb9351fba7e68dc5e77e2e144c3c59722" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ]
      },
      "predecessor" : "f9487ac192219b1c0419d80eb2b3cc6674992788"
    },
    "5c2d32b322fa797cf428b35c4c5998173d6403d5" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testDirectoriesAndEmptyFiles", "testDirectoriesOnly" ]
      },
      "predecessor" : "5c2d32b322fa797cf428b35c4c5998173d6403d5~1"
    },
    "3306ac9693a117af79c815caf13587ad4322d46e" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.BinaryTreeTest" : [ "testDecode" ],
        "org.apache.commons.compress.archivers.zip.BitStreamTest" : [ "testEmptyStream", "testNextByte", "testNextByteFromEmptyStream", "testReadAlignedBytes", "testStream" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ]
      },
      "predecessor" : "5c2d32b322fa797cf428b35c4c5998173d6403d5"
    },
    "c36419580b38e19d63b5faeeb542910a73d553c0" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testLinkFlagConstructor", "testLinkFlagConstructorWithFileFlag", "testLinkFlagConstructorWithPreserve", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "shouldUseSpecifiedEncodingWhenReadingGNULongNames" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testMaxFileSizeError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipEncodingTest" : [ "testSimpleCp437Encoding", "testSimpleCp850Encoding" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromTar" ]
      },
      "predecessor" : "34ad7f3ad50cef24039da59767878dc1cd2f70ce"
    },
    "8a2f04c551c6da91e95e20d6a9e95d9468755d32" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesBSD", "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesCauseExceptionByDefault", "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testReadingOfAttributesDosVersion", "testReadingOfAttributesUnixVersion" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely", "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testFileSystemRoot", "testLinkFlagConstructor", "testLinkFlagConstructorWithFileFlag", "testLinkFlagConstructorWithPreserve", "testMaxFileSize", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testReadNegativeBinary8Byte", "testRoundTripOctalOrBinary8", "testWriteNegativeBinary8Byte" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testMergeWithUnparseableData", "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.GeneralPurposeBitTest" : [ "testDataDescriptor", "testEncryption", "testLanguageEncodingFlag", "testParseEdgeCases", "testStringEncryption" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testMisc", "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testExtraFieldMerging", "testExtraFields", "testNullCommentEqualsEmptyComment" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testUnshrinkEntry", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testXZCreation" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "testRemainingChunkTypes" ]
      },
      "predecessor" : "c36419580b38e19d63b5faeeb542910a73d553c0"
    },
    "88d78092fbdeba42205acc197a14ca62b44d1fb3" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testOldEntryPosixMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "88d78092fbdeba42205acc197a14ca62b44d1fb3~1"
    },
    "492af6f2e54d31dbce623316eeb5aa574658db0f" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ]
      },
      "predecessor" : "492af6f2e54d31dbce623316eeb5aa574658db0f~1"
    },
    "83afa3d7fb82c19351000c3f123573ac43f80255" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "testAvailable", "testUnskippableChunk" ]
      },
      "predecessor" : "83afa3d7fb82c19351000c3f123573ac43f80255~1"
    },
    "80d49295b02fd16230b9088e595f49e9ec069358" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "testAvailable", "testRemainingChunkTypes" ]
      },
      "predecessor" : "80d49295b02fd16230b9088e595f49e9ec069358~1"
    },
    "e40f6e0980be00710563c035b67f617114b51353" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaFactory" ]
      },
      "predecessor" : "e40f6e0980be00710563c035b67f617114b51353~1"
    },
    "b739157d5b7d7ce8d4f6089ca45006ca92a490d5" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesBSD", "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAr" ]
      },
      "predecessor" : "b739157d5b7d7ce8d4f6089ca45006ca92a490d5~1"
    },
    "6c372ba148b31c57d532ac3366c5e7fa9a1be718" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testCantFinishTwice", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty" ]
      },
      "predecessor" : "6c372ba148b31c57d532ac3366c5e7fa9a1be718~1"
    },
    "5436797c6eb5990bc04b00fb89b3af475dc0381b" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely" ]
      },
      "predecessor" : "6c372ba148b31c57d532ac3366c5e7fa9a1be718"
    },
    "2bd0fef07fb81f1333fe0de44d2eda042b1b5e5e" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testCantFinishTwice", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty" ]
      },
      "predecessor" : "5436797c6eb5990bc04b00fb89b3af475dc0381b"
    },
    "651c295bbdc95751691f7d62330050a7fb20c0eb" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaFactory" ]
      },
      "predecessor" : "651c295bbdc95751691f7d62330050a7fb20c0eb~1"
    },
    "eee4f613427590dbe335cb0533ecdc197d0b7ea2" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty" ]
      },
      "predecessor" : "651c295bbdc95751691f7d62330050a7fb20c0eb"
    },
    "3e45dc866941eeae23d87c2635fc8fc464e8c850" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testExtraFlagsBestCompression", "testExtraFlagsDefaultCompression", "testExtraFlagsFastestCompression", "testGzipCreation", "testInteroperabilityWithGZIPInputStream", "testInteroperabilityWithGzipCompressorInputStream", "testOverWrite" ]
      },
      "predecessor" : "3e45dc866941eeae23d87c2635fc8fc464e8c850~1"
    },
    "41dc6e801ea8918735cdd90569c3142ae9ec6aba" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty" ]
      },
      "predecessor" : "41dc6e801ea8918735cdd90569c3142ae9ec6aba~1"
    },
    "2a422813965c50d1fd674ebacc5972651ccd561e" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "testEncryptedArchiveRequiresPassword" ]
      },
      "predecessor" : "2a422813965c50d1fd674ebacc5972651ccd561e~1"
    },
    "d7275a20c2784dac6ffbcabca20c6ce59954356e" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testArjUnarchive", "testReadingOfAttributesDosVersion", "testReadingOfAttributesUnixVersion" ]
      },
      "predecessor" : "d7275a20c2784dac6ffbcabca20c6ce59954356e~1"
    },
    "8caf1f7769d13b756e2c9b832e0368470c3a8260" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testWriteCpio", "testWriteJar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToJar", "testDeleteFromJar", "testDeletePlusAdd" ]
      },
      "predecessor" : "d7275a20c2784dac6ffbcabca20c6ce59954356e"
    },
    "ea30897e4b62b8f1e7a9614d40ba982b48c40210" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "054ac9e5e8fad0b8aec057e496f6ce8703f86778"
    },
    "661db5c4d23221b32c4f22f75d6bf34103025c93" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.BinaryTreeTest" : [ "testDecode" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ]
      },
      "predecessor" : "661db5c4d23221b32c4f22f75d6bf34103025c93~1"
    },
    "a54476642f03d18715150d55f518bbc424e5aa0e" : {
      "testcases" : {
        "org.apache.commons.compress2.archivers.ArchiveEntryParametersTest" : [ "copyActuallyCopies" ]
      },
      "predecessor" : "7288ebea6e387d2be4f1d8712e9bcb7756abbf7b"
    },
    "f51552902223e2b7ba2517e51e7cd0883c1ef47b" : {
      "testcases" : {
        "org.apache.commons.compress2.formats.ar.RoundTripTest" : [ "testArUnarchive" ]
      },
      "predecessor" : "3700530dd90fde8ed39299d5f715d3dcf043ff33"
    },
    "2f0a1ad1e165b3bf410538fd647dd508b1897ea0" : {
      "testcases" : {
        "org.apache.commons.compress2.formats.ar.RoundTripTest" : [ "testArUnarchive" ]
      },
      "predecessor" : "2f0a1ad1e165b3bf410538fd647dd508b1897ea0~1"
    },
    "cbb5a1ad9b0b80f717ee71dc0fc765afdc1601c0" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testEncryptedArchiveRequiresPassword" ]
      },
      "predecessor" : "cbb5a1ad9b0b80f717ee71dc0fc765afdc1601c0~1"
    },
    "07b15a15038f69612d2bba75f750814cbfbe0a08" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testConcatenatedStreamsReadFirstOnly" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactory" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testCorruptedInput", "testGzipUnarchive" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchiveViaFactory" ]
      },
      "predecessor" : "07b15a15038f69612d2bba75f750814cbfbe0a08~1"
    },
    "1336cebfd8d644cc534c525644a27f2e2cb560be" : {
      "testcases" : {
        "org.apache.commons.compress2.archivers.ArchiversTest" : [ "shouldFindArArchiveFormatAsChannelReadableFormat", "shouldFindArArchiveFormatAsChannelWritableFormat", "shouldFindArArchiveFormatAsWritableFormat", "shouldFindArArchiveFormatByName", "shouldFindArArchiveFormatWhenIterating", "shouldNotFindArArchiveFormatAsRandomAccessFormat" ]
      },
      "predecessor" : "1336cebfd8d644cc534c525644a27f2e2cb560be~1"
    },
    "c2376685ed5cb56833327cb5f54e5f803a8e8fa9" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarGzip" ],
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testCorruptedInput", "testExtraFlagsBestCompression", "testExtraFlagsDefaultCompression", "testExtraFlagsFastestCompression", "testGzipCreation", "testGzipUnarchive", "testInteroperabilityWithGZIPInputStream", "testInteroperabilityWithGzipCompressorInputStream", "testMetadataRoundTrip", "testOverWrite" ]
      },
      "predecessor" : "c2376685ed5cb56833327cb5f54e5f803a8e8fa9~1"
    },
    "8da377299d085b4ce1f15dbc0732232ea32e601d" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testOldEntryPosixMode", "testOldEntryStarMode", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testParseOctal", "testParseOctalInvalid", "testRoundTripOctal", "testRoundTripOctalOrBinary12", "testRoundTripOctalOrBinary8" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "8da377299d085b4ce1f15dbc0732232ea32e601d~1"
    },
    "aed56110ff582b96aecf7675a9cfe5247ffa3e7d" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testDetection", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "skipsPK00Prefix" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRawNameReadFromStream", "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testUnshrinkEntry", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "aed56110ff582b96aecf7675a9cfe5247ffa3e7d~1"
    },
    "26210c670ab1e432f5457a011949806eea0c9ee3" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "shouldReadNestedZip", "testReadingOfFirstStoredEntry" ]
      },
      "predecessor" : "26210c670ab1e432f5457a011949806eea0c9ee3~1"
    },
    "c608c3309b99ec69bfcdd6aaa1ad32851d09e94d" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testOldEntryPosixMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ]
      },
      "predecessor" : "26210c670ab1e432f5457a011949806eea0c9ee3"
    },
    "21fd4b682616147cdb94d50403a9871472507208" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testWriteNonAsciiNameWithUnfortunateNamePosixMode" ]
      },
      "predecessor" : "21fd4b682616147cdb94d50403a9871472507208~1"
    },
    "248fd0ca9fbef55f559d375dcf0d1b0457cbf024" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testWriteNonAsciiNameWithUnfortunateNamePosixMode" ]
      },
      "predecessor" : "248fd0ca9fbef55f559d375dcf0d1b0457cbf024~1"
    },
    "a99d1e3decf289a998effa4fb976d83555c47d94" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "shortTextFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ExceptionMessageTest" : [ "testMessageWhenArchiverNameIsNull_1", "testMessageWhenArchiverNameIsNull_2", "testMessageWhenInputStreamIsNull", "testMessageWhenOutputStreamIsNull" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS178", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testCount" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "a99d1e3decf289a998effa4fb976d83555c47d94~1"
    },
    "8167612318222224fc0bc8407dfed18ca1224c5f" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testCantFinishTwice", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "a99d1e3decf289a998effa4fb976d83555c47d94"
    },
    "00fe3063203024a1793f0f81c6627890d87fadfd" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testCantFinishTwice", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "8167612318222224fc0bc8407dfed18ca1224c5f"
    },
    "2cf0595f88bf58bfdedef0928f7ddda01f99c174" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testDirectoriesAndEmptyFiles", "testEightFilesSomeNotEmpty", "testNineFilesSomeNotEmpty", "testSevenFilesSomeNotEmpty", "testSixFilesSomeNotEmpty", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "2cf0595f88bf58bfdedef0928f7ddda01f99c174~1"
    },
    "44e2059ae063e21b1a32c5a86fd2d900faff12c9" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testCantFinishTwice", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "44e2059ae063e21b1a32c5a86fd2d900faff12c9~1"
    },
    "9c4bbcbe4a6745c69701d3b519cfa80fa09386ae" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testCantFinishTwice", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "9c4bbcbe4a6745c69701d3b519cfa80fa09386ae~1"
    },
    "eb76019f59ccce06f3acf7aeed0f61b24d0b5f9a" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZMethodConfigurationTest" : [ "shouldAllowLZMA2OptionsForLZMA2", "shouldAllowNullOptions", "shouldNotAllowStringOptionsForLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testCantFinishTwice", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "eb76019f59ccce06f3acf7aeed0f61b24d0b5f9a~1"
    },
    "fef6bcac12200b757cd5afee0ab07112fe9c30f8" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testDirectoriesAndEmptyFiles", "testEightFilesSomeNotEmpty", "testNineFilesSomeNotEmpty", "testSevenFilesSomeNotEmpty", "testSixFilesSomeNotEmpty", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "fef6bcac12200b757cd5afee0ab07112fe9c30f8~1"
    },
    "3fa07b158b9e4db44198bd6eecd3af8d850769f6" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZMethodConfigurationTest" : [ "shouldAllowLZMA2OptionsForLZMA2", "shouldNotAllowStringOptionsForLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testDirectoriesAndEmptyFiles", "testEightFilesSomeNotEmpty", "testNineFilesSomeNotEmpty", "testSevenFilesSomeNotEmpty", "testSixFilesSomeNotEmpty", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "3fa07b158b9e4db44198bd6eecd3af8d850769f6~1"
    },
    "b5baeaef2294a09c108b986cd0f2cd77c6cf7d9c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "b5baeaef2294a09c108b986cd0f2cd77c6cf7d9c~1"
    },
    "1aaf56742bb9a52c50a7eabde8bf03802b7f2ad3" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testDirectoriesAndEmptyFiles", "testEightFilesSomeNotEmpty", "testNineFilesSomeNotEmpty", "testSevenFilesSomeNotEmpty", "testSixFilesSomeNotEmpty", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "1aaf56742bb9a52c50a7eabde8bf03802b7f2ad3~1"
    },
    "77f8f6293615792043e80a1039239748824ad5de" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testCantFinishTwice", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "77f8f6293615792043e80a1039239748824ad5de~1"
    },
    "27103641df15913e1c25105fcede41afe193ddb7" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration" ]
      },
      "predecessor" : "27103641df15913e1c25105fcede41afe193ddb7~1"
    },
    "845b370716d0d0c27f2f7273dc4ab0226f485a91" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDirectoriesAndEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineFilesSomeNotEmpty", "testSevenFilesSomeNotEmpty", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "27103641df15913e1c25105fcede41afe193ddb7"
    },
    "d07d5ebdfc17b072364e6f1caac35a65537c91cb" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "d07d5ebdfc17b072364e6f1caac35a65537c91cb~1"
    },
    "b75dc0db46b40822b4e2ffed3bbb748963180131" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDirectoriesAndEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineFilesSomeNotEmpty", "testSevenFilesSomeNotEmpty", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "b75dc0db46b40822b4e2ffed3bbb748963180131~1"
    },
    "303a757173963b400179cb6656315aa3143141c9" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZMethodConfigurationTest" : [ "shouldAllowLZMA2OptionsForLZMA2", "shouldAllowNumberForBzip2", "shouldAllowNumberForDeflate", "shouldAllowNumberForLZMA2", "shouldNotAllowStringOptionsForLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDirectoriesAndEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineFilesSomeNotEmpty", "testSevenFilesSomeNotEmpty", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "303a757173963b400179cb6656315aa3143141c9~1"
    },
    "891f056511415cd83f5bdcaf3e2d1f8759483206" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDirectoriesAndEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineFilesSomeNotEmpty", "testSevenFilesSomeNotEmpty", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "891f056511415cd83f5bdcaf3e2d1f8759483206~1"
    },
    "df3b1271e879c88e1ee953dfaf7aae8c8053503d" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode" ]
      },
      "predecessor" : "df3b1271e879c88e1ee953dfaf7aae8c8053503d~1"
    },
    "689480243528f178d6a7de2c9a4843e87d0e6a87" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnshrinkEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnshrinking" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaFactory" ]
      },
      "predecessor" : "070d46478a279fb3de25b9d8645bdf04ee5a566a"
    },
    "5a8030a9a3c582c128862f298dd8bff4c2985606" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZMethodConfigurationTest" : [ "shouldAllowLZMA2OptionsForLZMA2", "shouldAllowNumberForBzip2", "shouldAllowNumberForDeflate", "shouldAllowNumberForLZMA2", "shouldNotAllowStringOptionsForLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDirectoriesAndEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineFilesSomeNotEmpty", "testSevenFilesSomeNotEmpty", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "5a8030a9a3c582c128862f298dd8bff4c2985606~1"
    },
    "13650931b296a6d0d34db1b0c4632e38a8a2593a" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZMethodConfigurationTest" : [ "shouldAllowLZMA2OptionsForLZMA2", "shouldAllowNumberForBzip2", "shouldAllowNumberForDeflate", "shouldAllowNumberForLZMA2", "shouldNotAllowStringOptionsForLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDirectoriesAndEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineFilesSomeNotEmpty", "testSevenFilesSomeNotEmpty", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "5a8030a9a3c582c128862f298dd8bff4c2985606"
    },
    "e93643699c193f9e239dc33d8f998daa86e5ef5e" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDirectoriesAndEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineFilesSomeNotEmpty", "testSevenFilesSomeNotEmpty", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "e93643699c193f9e239dc33d8f998daa86e5ef5e~1"
    },
    "392ee576c6c1ca2ac3742a930bdbd6e3aa5165c4" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData" ]
      },
      "predecessor" : "392ee576c6c1ca2ac3742a930bdbd6e3aa5165c4~1"
    },
    "f393acc73e1a99e9d957def69a25caed76230102" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaFactory" ]
      },
      "predecessor" : "392ee576c6c1ca2ac3742a930bdbd6e3aa5165c4"
    },
    "eb2daf357d468154c608a0f6d1963827b012a8cd" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineFilesSomeNotEmpty", "testSevenFilesSomeNotEmpty", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "f393acc73e1a99e9d957def69a25caed76230102"
    },
    "f7f2dab054fa4ba7676b9b87ba393385e996606d" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testDirectoryEntryFromFile", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeletePlusAdd" ]
      },
      "predecessor" : "f7f2dab054fa4ba7676b9b87ba393385e996606d~1"
    },
    "02006b5c0b0f25789adf39c0d163eb2d1a0173f1" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip" ]
      },
      "predecessor" : "02006b5c0b0f25789adf39c0d163eb2d1a0173f1~1"
    },
    "c1ae99e7dd9f1a2ad0623202ea179b1ae8f8d8da" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInPAXFormat", "readNonAsciiPaxHeader", "readPaxHeaderWithEmbeddedNewline", "readSimplePaxHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testOldEntryPosixMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ]
      },
      "predecessor" : "02006b5c0b0f25789adf39c0d163eb2d1a0173f1"
    },
    "7be83c02122feac8eb6de64c05d63342fa5eea03" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely", "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "testAvailable", "testRemainingChunkTypes" ]
      },
      "predecessor" : "7be83c02122feac8eb6de64c05d63342fa5eea03~1"
    },
    "c5f9ceb3cb7a5822012fe33ecfc2d561f63697f8" : {
      "testcases" : {
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactoryAutodetection" ]
      },
      "predecessor" : "7be83c02122feac8eb6de64c05d63342fa5eea03"
    },
    "557800a53cedad99afc951032a11931f3e39bf13" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testCheckArchive", "testCheckCompressedArchive", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesBSD", "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testArjUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testOldEntryPosixMode", "testPadsOutputToFullBlockLength", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testReadingOfFirstStoredEntry", "testUnshrinkEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testReadingOfFirstStoredEntry", "testUnixSymlinkSampleFile", "testUnshrinking" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testCorruptedInput", "testExtraFlagsBestCompression", "testExtraFlagsDefaultCompression", "testExtraFlagsFastestCompression", "testGzipCreation", "testGzipUnarchive", "testInteroperabilityWithGZIPInputStream", "testInteroperabilityWithGzipCompressorInputStream", "testMetadataRoundTrip" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "testLZMAUnarchive" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testXZCreation", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "testRemainingChunkTypes" ]
      },
      "predecessor" : "c5f9ceb3cb7a5822012fe33ecfc2d561f63697f8"
    },
    "0508270c67e412b6b5026b25254062ce3d6c2dc7" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesBSD", "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testArjUnarchive" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testOldEntryPosixMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAndAddToTar", "testDeleteFromAr", "testDeleteFromTar" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "testRemainingChunkTypes" ],
        "org.apache.commons.compress.utils.IOUtilsTest" : [ "skipUsingRead", "skipUsingSkip", "skipUsingSkipAndRead" ]
      },
      "predecessor" : "0508270c67e412b6b5026b25254062ce3d6c2dc7~1"
    },
    "aa0c705ed4680055eb1ffedaafbc6a53b8f862aa" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadTar", "testReadZip", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testCheckArchive", "testCheckCompressedArchive", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testArjUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineFilesSomeNotEmpty", "testSevenFilesSomeNotEmpty", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineFilesSomeNotEmpty" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldUseSpecifiedEncodingWhenReadingGNULongNames" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "aa0c705ed4680055eb1ffedaafbc6a53b8f862aa~1"
    },
    "8e5f665d8f3ee23a1804a90d415af530e0ba5095" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "8e5f665d8f3ee23a1804a90d415af530e0ba5095~1"
    },
    "5ab06da27113785edd51ee465f5b8015c21f2cd9" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testReadJar", "testReadZip", "testWriteCpio", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive", "testCpioUnarchiveCreatedByRedlineRpm" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testMergeWithUnparseableData", "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testExtraFieldMerging", "testExtraFields", "testNullCommentEqualsEmptyComment" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "5ab06da27113785edd51ee465f5b8015c21f2cd9~1"
    },
    "1ea7e01eb6776071eddf60f7783d650ec7d60e74" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testOldEntryPosixMode", "testOldEntryStarMode", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testParseOctal", "testParseOctalInvalid", "testRoundTripOctal", "testRoundTripOctalOrBinary12", "testRoundTripOctalOrBinary8" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "5ab06da27113785edd51ee465f5b8015c21f2cd9"
    },
    "ddb5fd6d8e4d5fa9f7fa659c93fb6eb04f238689" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldUseSpecifiedEncodingWhenReadingGNULongNames" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testOldEntryPosixMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "ddb5fd6d8e4d5fa9f7fa659c93fb6eb04f238689~1"
    },
    "38aaf2c35bb895ad4cd59e43fabc64ff1ff06c98" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "shouldThrowAnExceptionOnTruncatedEntries" ]
      },
      "predecessor" : "38aaf2c35bb895ad4cd59e43fabc64ff1ff06c98~1"
    },
    "c9c1565918f39d45e93df32e80e1185bd210d1e4" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testOldEntryPosixMode", "testOldEntryStarMode", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "38aaf2c35bb895ad4cd59e43fabc64ff1ff06c98"
    },
    "f2c2b9f1dd665c518a82baa2d611006f421dda76" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testOldEntryPosixMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "f2c2b9f1dd665c518a82baa2d611006f421dda76~1"
    },
    "5c0f2b236f11cd786c6ec71aa32a15c22b93bc8b" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testConcatenatedStreamsReadFirstOnly" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactory" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testCorruptedInput", "testGzipCreation", "testGzipUnarchive" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testXZCreation", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchiveViaFactory" ]
      },
      "predecessor" : "f2c2b9f1dd665c518a82baa2d611006f421dda76"
    },
    "564396334bba8e253c46f9c35559bc301e2d059d" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateCreation", "testDeflateUnarchive", "testRawDeflateCreation", "testRawDeflateUnarchive" ]
      },
      "predecessor" : "564396334bba8e253c46f9c35559bc301e2d059d~1"
    },
    "f525a2ab9dfa0856e0d838bf21d730f92df817f8" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInPAXFormat", "readNonAsciiPaxHeader", "readPaxHeaderWithEmbeddedNewline", "readSimplePaxHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testOldEntryPosixMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ]
      },
      "predecessor" : "f525a2ab9dfa0856e0d838bf21d730f92df817f8~1"
    },
    "532df6df6965a3a5d18747a57890673aebffbab2" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability" ]
      },
      "predecessor" : "9d548599f0c64f8aeede2742647bcc05dab43f3b"
    },
    "abaf84df6a4a2fa31a0245e0ae024c1879f5854d" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testReadingOfAttributesDosVersion", "testReadingOfAttributesUnixVersion" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "readsArchiveCompletely_COMPRESS245" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStreamTest" : [ "canReadASingleByteFlushAndFinish" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "testUnskippableChunk" ]
      },
      "predecessor" : "abaf84df6a4a2fa31a0245e0ae024c1879f5854d~1"
    },
    "4a9bba74fc29cb14313975e9adc33a020b0af4f8" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchiveCreatedByRedlineRpm" ]
      },
      "predecessor" : "4a9bba74fc29cb14313975e9adc33a020b0af4f8~1"
    },
    "ab04039408b0e602a7410f6120cf142a4f4d2d98" : {
      "testcases" : {
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchiveViaAutoDetection" ]
      },
      "predecessor" : "ab04039408b0e602a7410f6120cf142a4f4d2d98~1"
    },
    "efd7f9a0d30aa2dec4a039f548406573919e5ee8" : {
      "testcases" : {
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchiveViaAutoDetection" ]
      },
      "predecessor" : "efd7f9a0d30aa2dec4a039f548406573919e5ee8~1"
    },
    "7e6c7136cf0165f107daf8f9f1818c7d9c9fcc27" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "efd7f9a0d30aa2dec4a039f548406573919e5ee8"
    },
    "c7beb9fc51e07b1c9f495e4f9c49f1722c32f99a" : {
      "testcases" : {
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.compressors.XZUtilsTestCase" : [ "testGetCompressedFilename", "testGetUncompressedFilename", "testIsCompressedFilename", "testMatches" ]
      },
      "predecessor" : "c7beb9fc51e07b1c9f495e4f9c49f1722c32f99a~1"
    },
    "df1d2a4bb0525244cfeeefe90992f2f96f88f577" : {
      "testcases" : {
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineFilesSomeNotEmpty", "testSevenFilesSomeNotEmpty", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineFilesSomeNotEmpty" ],
        "org.apache.commons.compress.compressors.xz.XZUtilsTestCase" : [ "testCachingIsEnabledByDefaultAndXZIsPresent", "testCanTurnOffCaching", "testGetCompressedFilename", "testGetUncompressedFilename", "testIsCompressedFilename", "testMatches", "testTurningOnCachingReEvaluatesAvailability" ]
      },
      "predecessor" : "df1d2a4bb0525244cfeeefe90992f2f96f88f577~1"
    },
    "2269d065ed0ce32a376d2959cd95664688084879" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineFilesSomeNotEmpty", "testSevenFilesSomeNotEmpty", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "2269d065ed0ce32a376d2959cd95664688084879~1"
    },
    "f86a4986c5fce374da74664cd8542f7e059d119c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineFilesSomeNotEmpty", "testSevenFilesSomeNotEmpty", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "f86a4986c5fce374da74664cd8542f7e059d119c~1"
    },
    "d505f34bee03c06a25abbd7bf3b9a207d4521cb0" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarGzip" ],
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testCorruptedInput", "testGzipUnarchive", "testInteroperabilityWithGzipCompressorInputStream", "testMetadataRoundTrip" ]
      },
      "predecessor" : "d505f34bee03c06a25abbd7bf3b9a207d4521cb0~1"
    },
    "cfad3dcd01381d32e3146651ff4f533dfd8e65d9" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarGzip" ],
        "org.apache.commons.compress.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testCorruptedInput", "testGzipUnarchive", "testInteroperabilityWithGzipCompressorInputStream", "testMetadataRoundTrip" ]
      },
      "predecessor" : "cfad3dcd01381d32e3146651ff4f533dfd8e65d9~1"
    },
    "dd71368488dd8e0fb0bf8f7aabd4f702502d5615" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "shouldUseSpecifiedEncodingWhenReadingGNULongNames" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "8d547cab8ff58bd7f10d2ebdc231a08bbdeb1571"
    },
    "23d15f6cc39e71b31058272849c961fcca6adfe1" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "shouldUseSpecifiedEncodingWhenReadingGNULongNames" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "dd71368488dd8e0fb0bf8f7aabd4f702502d5615"
    },
    "4f0601837392ceb96ea99de6c372833973dbbedf" : {
      "testcases" : {
        "org.apache.commons.compress.utils.IOUtilsTest" : [ "skipUsingRead", "skipUsingSkipAndRead" ]
      },
      "predecessor" : "23d15f6cc39e71b31058272849c961fcca6adfe1"
    },
    "d241f50c47ca90b1dfa8af19e58975b67df22788" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnshrinkEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnshrinking" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ]
      },
      "predecessor" : "f6305b7c5c9a8ee8493d6a1fdeaf90e578bef50a"
    },
    "e68f44acd9982ac447c0de72409ef6a0b59ab262" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnshrinkEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnshrinking" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ]
      },
      "predecessor" : "d241f50c47ca90b1dfa8af19e58975b67df22788"
    },
    "cb4b6e016d9486ec06b6f41b44292360d6031502" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnshrinkEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnshrinking" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ]
      },
      "predecessor" : "e68f44acd9982ac447c0de72409ef6a0b59ab262"
    },
    "840a20e10b88734211f814cec99177e3bcd06a4a" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnshrinkEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnshrinking" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.utils.BitInputStreamTest" : [ "shouldNotAllowReadingOfANegativeAmountOfBits", "shouldNotAllowReadingOfMoreThan31BitsAtATime", "testClearBitCache", "testEOF", "testReading17BitsInBigEndian", "testReading17BitsInLittleEndian", "testReading24BitsInBigEndian", "testReading24BitsInLittleEndian", "testReading30BitsInBigEndian", "testReading30BitsInLittleEndian", "testReading31BitsInBigEndian", "testReading31BitsInLittleEndian" ]
      },
      "predecessor" : "840a20e10b88734211f814cec99177e3bcd06a4a~1"
    },
    "f23353746af71874ae353d4182a5efab48d0bca0" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnshrinkEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnshrinking" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.utils.BitInputStreamTest" : [ "shouldNotAllowReadingOfANegativeAmountOfBits", "shouldNotAllowReadingOfMoreThan31BitsAtATime", "testClearBitCache", "testEOF", "testReading17BitsInBigEndian", "testReading17BitsInLittleEndian", "testReading24BitsInBigEndian", "testReading24BitsInLittleEndian", "testReading30BitsInBigEndian", "testReading30BitsInLittleEndian", "testReading31BitsInBigEndian", "testReading31BitsInLittleEndian" ]
      },
      "predecessor" : "f23353746af71874ae353d4182a5efab48d0bca0~1"
    },
    "0f5e88e5124841c8d198d215daee07d06d573ea1" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.BinaryTreeTest" : [ "testDecode" ],
        "org.apache.commons.compress.archivers.zip.BitStreamTest" : [ "testEmptyStream", "testNextByte", "testNextByteFromEmptyStream", "testReadAlignedBytes", "testStream" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ]
      },
      "predecessor" : "f23353746af71874ae353d4182a5efab48d0bca0"
    },
    "b543381be02f07e47e72eaafa862aa8d5f6af186" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.BinaryTreeTest" : [ "testDecode" ],
        "org.apache.commons.compress.archivers.zip.BitStreamTest" : [ "testEmptyStream", "testNextByte", "testNextByteFromEmptyStream", "testReadAlignedBytes", "testStream" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnshrinkEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnshrinking" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.utils.BitInputStreamTest" : [ "shouldNotAllowReadingOfANegativeAmountOfBits", "shouldNotAllowReadingOfMoreThan31BitsAtATime", "testClearBitCache", "testEOF", "testReading17BitsInBigEndian", "testReading17BitsInLittleEndian", "testReading24BitsInBigEndian", "testReading24BitsInLittleEndian", "testReading30BitsInBigEndian", "testReading30BitsInLittleEndian", "testReading31BitsInBigEndian", "testReading31BitsInLittleEndian" ]
      },
      "predecessor" : "b543381be02f07e47e72eaafa862aa8d5f6af186~1"
    },
    "9067b02c65bf4316e0541579bdb883c6d3d07852" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "9067b02c65bf4316e0541579bdb883c6d3d07852~1"
    },
    "8a4ea62fe7fab06f6b3bb311b43c5fed3cfce3d8" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile" ]
      },
      "predecessor" : "8a4ea62fe7fab06f6b3bb311b43c5fed3cfce3d8~1"
    },
    "e214adb4b9164910d62614dbd7b3043cb0cc3467" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile" ]
      },
      "predecessor" : "e214adb4b9164910d62614dbd7b3043cb0cc3467~1"
    },
    "56c83a5dd4284f9150e4959a5e266215a292ba28" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ]
      },
      "predecessor" : "56c83a5dd4284f9150e4959a5e266215a292ba28~1"
    },
    "1418705648202405208e3f4d900dfcc81457cbac" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "detectsAndThrowsFor7z", "shortTextFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCompressedArchiveDetection" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testReadingOfAttributesDosVersion" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.AsiExtraFieldTest" : [ "testContent" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testMergeWithUnparseableData", "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.GeneralPurposeBitTest" : [ "testDataDescriptor", "testDefaults", "testEncryption", "testLanguageEncodingFlag", "testStringEncryption" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testMisc", "testParseReparse", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testMisc", "testParseReparse", "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest" : [ "testReadCDSizesOffsetAndDisk", "testReadCDSomethingAndDisk", "testReadLFHSizesAndDisk", "testReadLFHSizesOffsetAndDisk", "testWriteCDSizeAndDisk", "testWriteCDSizeOffsetAndDisk" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeBigStoredEntryToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testCompressionMethod", "testExtraFieldMerging", "testExtraFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipLongTest" : [ "testToBytes" ],
        "org.apache.commons.compress.archivers.zip.ZipUtilTest" : [ "testAdjustToLong", "testBigToLong", "testLongToBig", "testMinTime", "testReverse", "testSignedByteToUnsignedInt", "testUnsignedIntToSignedByte", "testZipLong" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "56c83a5dd4284f9150e4959a5e266215a292ba28"
    },
    "5f99a51d41c0e8ab7359608806ce977d9419c248" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "5f99a51d41c0e8ab7359608806ce977d9419c248~1"
    },
    "efb1ca8041fd3aca48a12ee2fe87d64cdf91410c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ]
      },
      "predecessor" : "efb1ca8041fd3aca48a12ee2fe87d64cdf91410c~1"
    },
    "2db99ab5f3db2b66eb9a589c46f61adc6701c524" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.StreamCompressorTest" : [ "deflatedEntries", "storedEntries" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeBigStoredEntryToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "2db99ab5f3db2b66eb9a589c46f61adc6701c524~1"
    },
    "98f98c49c31b0760285a9d8a39712c7932f3a650" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ]
      },
      "predecessor" : "e6be36836b60781e5fdafd91ed2c9065af206a98"
    },
    "e1914af4fe1cdfe3ea4b2e14d01056d1575482c7" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ]
      },
      "predecessor" : "e1914af4fe1cdfe3ea4b2e14d01056d1575482c7~1"
    },
    "790fd918b30bb3e5c905adc19e795006c99579d7" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ]
      },
      "predecessor" : "790fd918b30bb3e5c905adc19e795006c99579d7~1"
    },
    "9ee2bbf49b59f6e07cd3e203b4b3c749c80f64bb" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromJar" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "9ee2bbf49b59f6e07cd3e203b4b3c749c80f64bb~1"
    },
    "d5f5da94126ed329c336391e150be81984c78b3e" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testUnixModeInAddRaw" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ]
      },
      "predecessor" : "d5f5da94126ed329c336391e150be81984c78b3e~1"
    },
    "ee60c6dfa9b8756689bae301168c8a64c79fc92c" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testUnixModeInAddRaw" ],
        "org.apache.commons.compress.archivers.zip.GeneralPurposeBitTest" : [ "testClone" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCopyConstructor" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromJar" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "ee60c6dfa9b8756689bae301168c8a64c79fc92c~1"
    },
    "955b510c221420620d624c29805f1cd4076e8499" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testUnixModeInAddRaw" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCopyConstructor" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromJar" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "955b510c221420620d624c29805f1cd4076e8499~1"
    },
    "627b4fc968ab343218286584e662aecfdaeb20c3" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.StreamCompressorTest" : [ "deflatedEntries" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "955b510c221420620d624c29805f1cd4076e8499"
    },
    "67097df60b50ba705a04b9fe1f1516ed7559cb07" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ]
      },
      "predecessor" : "627b4fc968ab343218286584e662aecfdaeb20c3"
    },
    "dcd60860c586fe97572e1c6c0373074c0ec6b135" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ]
      },
      "predecessor" : "dcd60860c586fe97572e1c6c0373074c0ec6b135~1"
    },
    "af60df2bc3bd51c1a0f866b8106014be171b62e2" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ]
      },
      "predecessor" : "af60df2bc3bd51c1a0f866b8106014be171b62e2~1"
    },
    "8a942e0d97363cbe094cd4b9a083bc9815ca02db" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testUnixModeInAddRaw" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ]
      },
      "predecessor" : "8a942e0d97363cbe094cd4b9a083bc9815ca02db~1"
    },
    "6d04cbcb717845a38ee57e7ed0653fb9cc171e73" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testUnixModeInAddRaw", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "6d04cbcb717845a38ee57e7ed0653fb9cc171e73~1"
    },
    "0b33d56cf025e034927290ec9ee651ddc8acd495" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testUnixModeInAddRaw", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "0b33d56cf025e034927290ec9ee651ddc8acd495~1"
    },
    "9f41819098fee8877fa85835adbeec3acec19d07" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testUnixModeInAddRaw", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.StreamCompressorTest" : [ "deflatedEntries", "storedEntries" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "9f41819098fee8877fa85835adbeec3acec19d07~1"
    },
    "cbbeae7719943308494825574a0002ea649b3de3" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testUnixModeInAddRaw", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeBigStoredEntryToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "cbbeae7719943308494825574a0002ea649b3de3~1"
    },
    "eec10fcf0c795bdfacef4c9933585f65f953fd58" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testUnixModeInAddRaw", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "eec10fcf0c795bdfacef4c9933585f65f953fd58~1"
    },
    "ebef905b2bd446da972b9c74cf2e76b59666ec0c" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testCopyConstructor", "testExtraFieldMerging", "testExtraFields", "testNullCommentEqualsEmptyComment" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipUtilTest" : [ "testInsideCalendar", "testMinTime", "testOutsideCalendar", "testZipLong" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "eec10fcf0c795bdfacef4c9933585f65f953fd58"
    },
    "a1362359e3b4b364112e60e79f4b6ebf335ba69c" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testUnixModeInAddRaw", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "a1362359e3b4b364112e60e79f4b6ebf335ba69c~1"
    },
    "deeb355c2253b49f39f0be7bf16de1e119f69581" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeBigStoredEntryToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "deeb355c2253b49f39f0be7bf16de1e119f69581~1"
    },
    "516c38fd95fff30841f9af370f50cf1f7733c209" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeBigStoredEntryToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testCompressionMethod", "testCopyConstructor", "testExtraFieldMerging", "testExtraFields", "testNotEquals", "testNullCommentEqualsEmptyComment", "testUnixMode" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "516c38fd95fff30841f9af370f50cf1f7733c209~1"
    },
    "09aecce588d736955b803c9df908013960699836" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadTar", "testReadZip", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testUnixModeInAddRaw", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely", "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCantFinishTwice", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testFileSystemRoot", "testLinkFlagConstructor", "testLinkFlagConstructorWithFileFlag", "testLinkFlagConstructorWithPreserve", "testMaxFileSize", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "testUnskippableChunk" ]
      },
      "predecessor" : "09aecce588d736955b803c9df908013960699836~1"
    },
    "dd0109a00a076699240e81ee47db20374b65e546" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testExtraFieldMerging", "testExtraFields" ]
      },
      "predecessor" : "dd0109a00a076699240e81ee47db20374b65e546~1"
    },
    "33c95771c804abc02223f24a0234343b93ffde56" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "shouldUseSpecifiedEncodingWhenReadingGNULongNames" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "33c95771c804abc02223f24a0234343b93ffde56~1"
    },
    "3b7a059940786cad20282eb2fe303514114e1e1d" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ]
      },
      "predecessor" : "33c95771c804abc02223f24a0234343b93ffde56"
    },
    "e707c8233405d1a2eda96649f0fbcb10b623386b" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "testEncryptedArchiveRequiresPassword" ]
      },
      "predecessor" : "e707c8233405d1a2eda96649f0fbcb10b623386b~1"
    },
    "446ee1ad204e2a12744f70eb10a2453b845b9a28" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "446ee1ad204e2a12744f70eb10a2453b845b9a28~1"
    },
    "a103f8aac368abed3f3e40733886a3833bb7e1a1" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testUnixModeInAddRaw", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeBigStoredEntryToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "446ee1ad204e2a12744f70eb10a2453b845b9a28"
    },
    "4571c58dd7ff37a70765d0226a37e9a4f7b25baf" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testUnixModeInAddRaw" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testExtraFieldMerging", "testExtraFields" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testDuplicateEntry" ]
      },
      "predecessor" : "4571c58dd7ff37a70765d0226a37e9a4f7b25baf~1"
    },
    "b5fcfd52e313bc6a2b6b38eccdf9534394c62b83" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testWriteAr" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testFinish" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesCauseExceptionByDefault", "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAr" ]
      },
      "predecessor" : "4571c58dd7ff37a70765d0226a37e9a4f7b25baf"
    },
    "a53300f877f77cc0e35f1ee03f9f8ae4b72fcd12" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ]
      },
      "predecessor" : "a53300f877f77cc0e35f1ee03f9f8ae4b72fcd12~1"
    },
    "e0ca4f5e4c8e033e5d2a379db4ca2b7f6d029676" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "testEncryptedArchiveRequiresPassword" ]
      },
      "predecessor" : "e0ca4f5e4c8e033e5d2a379db4ca2b7f6d029676~1"
    },
    "1053ec1d658f6c584d6043c325da1b17ec2cba8c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.BinaryTreeTest" : [ "testDecode" ],
        "org.apache.commons.compress.archivers.zip.BitStreamTest" : [ "testEmptyStream", "testNextByte", "testNextByteFromEmptyStream", "testReadAlignedBytes", "testStream" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnshrinkEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnshrinking" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ]
      },
      "predecessor" : "e0ca4f5e4c8e033e5d2a379db4ca2b7f6d029676"
    },
    "8d7288d02d77f67662bf8feebeea5d8ec9f6e82d" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile" ]
      },
      "predecessor" : "1053ec1d658f6c584d6043c325da1b17ec2cba8c"
    },
    "2f72bf1f3355aa5986c484535d92c4fe12ead0a4" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile" ]
      },
      "predecessor" : "2f72bf1f3355aa5986c484535d92c4fe12ead0a4~1"
    },
    "b9443c28141fb17d5835e277cbc97726ff5af577" : {
      "testcases" : {
        "org.apache.commons.compress.utils.BitInputStreamTest" : [ "shouldNotAllowReadingOfANegativeAmountOfBits", "testClearBitCache", "testEOF", "testReading17BitsInBigEndian", "testReading17BitsInLittleEndian", "testReading24BitsInBigEndian", "testReading24BitsInLittleEndian", "testReading30BitsInBigEndian", "testReading30BitsInLittleEndian", "testReading31BitsInBigEndian", "testReading31BitsInLittleEndian" ]
      },
      "predecessor" : "2f72bf1f3355aa5986c484535d92c4fe12ead0a4"
    },
    "d9db37dc7a467b05b9cfef232b77dd742455eb86" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.BitStreamTest" : [ "testEmptyStream", "testNextByte", "testNextByteFromEmptyStream", "testReadAlignedBytes", "testStream" ]
      },
      "predecessor" : "d9db37dc7a467b05b9cfef232b77dd742455eb86~1"
    },
    "26705dfdfa4a8d6b6ae316ff159fb89576677e18" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ]
      },
      "predecessor" : "d9db37dc7a467b05b9cfef232b77dd742455eb86"
    },
    "63e5a8355fba6dd5ab504ac440bb81699c89f85b" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ]
      },
      "predecessor" : "63e5a8355fba6dd5ab504ac440bb81699c89f85b~1"
    },
    "915fdd3fcb55f81fbb4f63f9f9752c329488c524" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testLongNameMd5Hash", "testOldEntryPosixMode", "testOldEntryStarMode", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testParseOctal", "testParseOctalInvalid", "testRoundTripOctal", "testRoundTripOctalOrBinary12", "testRoundTripOctalOrBinary8" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "63e5a8355fba6dd5ab504ac440bb81699c89f85b"
    },
    "121cae778dcb63a4ca4f1ee2743e58bffcbfe4be" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testConcatenatedStreamsReadFirstOnly" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateCreation", "testDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testCorruptedInput", "testGzipCreation", "testGzipUnarchive" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testXZCreation", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ]
      },
      "predecessor" : "915fdd3fcb55f81fbb4f63f9f9752c329488c524"
    },
    "0b33b14271675a78b8bc2e538089af2ecde7d2a0" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "cantRead7zFromStream", "cantWrite7zToStream", "detectsAndThrowsFor7z", "shortTextFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ExceptionMessageTest" : [ "testMessageWhenArchiverNameIsNull_1", "testMessageWhenArchiverNameIsNull_2", "testMessageWhenInputStreamIsNull", "testMessageWhenOutputStreamIsNull" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS178", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testCount" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "121cae778dcb63a4ca4f1ee2743e58bffcbfe4be"
    },
    "d50feb67569fb5881b8a2ff5996f656c5f207c2e" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "cantRead7zFromStream", "cantWrite7zToStream", "detectsAndThrowsFor7z", "shortTextFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ExceptionMessageTest" : [ "testMessageWhenArchiverNameIsNull_1", "testMessageWhenArchiverNameIsNull_2", "testMessageWhenInputStreamIsNull", "testMessageWhenOutputStreamIsNull" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive", "testCpioUnarchiveCreatedByRedlineRpm" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely", "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readNonAsciiPaxHeader", "readPaxHeaderWithEmbeddedNewline", "readSimplePaxHeader", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRawNameReadFromStream", "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "d50feb67569fb5881b8a2ff5996f656c5f207c2e~1"
    },
    "58fa9a673547c884cd1f11a8927414e563480358" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ExceptionMessageTest" : [ "testMessageWhenArchiverNameIsNull_1", "testMessageWhenArchiverNameIsNull_2", "testMessageWhenInputStreamIsNull", "testMessageWhenOutputStreamIsNull" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.memory.MemoryArchiveTestCase" : [ "testReading" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testFileSystemRoot", "testLinkFlagConstructor", "testLinkFlagConstructorWithFileFlag", "testLinkFlagConstructorWithPreserve", "testMaxFileSize", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testName", "testNegative", "testOverflow", "testParseOctal", "testParseOctalInvalid", "testReadNegativeBinary12Byte", "testReadNegativeBinary8Byte", "testRoundEncoding", "testRoundTripNames", "testRoundTripOctal", "testRoundTripOctalOrBinary12", "testRoundTripOctalOrBinary8", "testTrailers", "testVerifyHeaderCheckSum", "testWriteNegativeBinary8Byte" ],
        "org.apache.commons.compress.archivers.zip.AsiExtraFieldTest" : [ "testClone", "testContent", "testModes", "testReparse" ],
        "org.apache.commons.compress.archivers.zip.BinaryTreeTest" : [ "testDecode" ],
        "org.apache.commons.compress.archivers.zip.BitStreamTest" : [ "testEmptyStream", "testNextByte", "testNextByteFromEmptyStream", "testReadAlignedBytes", "testStream" ],
        "org.apache.commons.compress.archivers.zip.CircularBufferTest" : [ "testCopy", "testPutAndGet" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testMergeWithUnparseableData", "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.GeneralPurposeBitTest" : [ "testClone", "testDataDescriptor", "testDefaults", "testEncryption", "testLanguageEncodingFlag", "testParseEdgeCases", "testStrongEncryption" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest" : [ "testReadCDSizesAndOffset", "testReadCDSizesOffsetAndDisk", "testReadCDSomethingAndDisk", "testReadLFHSizesAndDisk", "testReadLFHSizesAndOffset", "testReadLFHSizesOffsetAndDisk", "testReadLFHSizesOnly", "testReparseCDSingleEightByteData", "testWriteCDOnlySizes", "testWriteCDSizeAndDisk", "testWriteCDSizeAndOffset", "testWriteCDSizeOffsetAndDisk" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testCompressionMethod", "testCopyConstructor", "testExtraFieldMerging", "testExtraFields", "testNotEquals", "testNullCommentEqualsEmptyComment", "testUnixMode" ],
        "org.apache.commons.compress.archivers.zip.ZipEightByteIntegerTest" : [ "testBIFromBytes", "testBIToBytes", "testEquals", "testLongFromBytes", "testLongToBytes", "testSign" ],
        "org.apache.commons.compress.archivers.zip.ZipEncodingTest" : [ "testNioCp1252Encoding", "testSimpleCp437Encoding", "testSimpleCp850Encoding" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipLongTest" : [ "testClone", "testEquals", "testFromBytes", "testPut", "testSign", "testToBytes" ],
        "org.apache.commons.compress.archivers.zip.ZipShortTest" : [ "testClone", "testEquals", "testFromBytes", "testPut", "testSign", "testToBytes" ],
        "org.apache.commons.compress.archivers.zip.ZipUtilTest" : [ "testAdjustToLong", "testBigToLong", "testInsideCalendar", "testLongToBig", "testMinTime", "testOutsideCalendar", "testReverse", "testSignedByteToUnsignedInt", "testUnsignedIntToSignedByte", "testZipLong" ],
        "org.apache.commons.compress.compressors.BZip2UtilsTestCase" : [ "testGetCompressedFilename", "testGetUncompressedFilename", "testIsCompressedFilename" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples", "testOverride" ],
        "org.apache.commons.compress.compressors.GzipUtilsTestCase" : [ "testGetCompressedFilename", "testGetUncompressedFilename", "testIsCompressedFilename" ],
        "org.apache.commons.compress.compressors.xz.XZUtilsTestCase" : [ "testCachingIsEnabledByDefaultAndXZIsPresent", "testCanTurnOffCaching", "testGetCompressedFilename", "testGetUncompressedFilename", "testIsCompressedFilename", "testMatches", "testTurningOnCachingReEvaluatesAvailability" ]
      },
      "predecessor" : "d50feb67569fb5881b8a2ff5996f656c5f207c2e"
    },
    "0d53852d80cc686b47b4b0c1b2069f880a09b451" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ]
      },
      "predecessor" : "0d53852d80cc686b47b4b0c1b2069f880a09b451~1"
    },
    "2e6967a356de82a7a94ac9e0e7ed1c0e6ff142bd" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveReadTests" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testCheckArchive", "testCheckCompressedArchive" ],
        "org.apache.commons.compress.archivers.LongPathTest" : [ "testArchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testSkipsPK00Prefix" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "2e6967a356de82a7a94ac9e0e7ed1c0e6ff142bd~1"
    },
    "0bbe5b59af443da2c3101cb9259e7ad68152dd13" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveUtilsTest" : [ "testAsciiConversions", "testCompareAscii", "testCompareBA" ],
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "testEncodingInputStream", "testEncodingInputStreamAutodetect" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesBSD", "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesCauseExceptionByDefault", "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testArjUnarchive", "testReadingOfAttributesDosVersion", "testReadingOfAttributesUnixVersion" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive", "testCpioUnarchiveCreatedByRedlineRpm" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely", "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize", "testSignatureCheck" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCantFinishTwice", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddMoveDelete", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame", "testRenameAndDelete" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateCreation", "testDeflateUnarchive", "testRawDeflateCreation", "testRawDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testCorruptedInput", "testExtraFlagsBestCompression", "testExtraFlagsDefaultCompression", "testExtraFlagsFastestCompression", "testGzipCreation", "testGzipUnarchive", "testInteroperabilityWithGZIPInputStream", "testInteroperabilityWithGzipCompressorInputStream", "testInvalidCompressionLevel", "testMetadataRoundTrip", "testOverWrite" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "testLZMAUnarchive" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testBadSignature", "testGoodSignature", "testInputStreamMethods", "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile", "testOutputStreamMethods", "testShortSignature" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testXZCreation", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testMatches", "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "testAvailable", "testChecksumUnmasking", "testMatches", "testRemainingChunkTypes", "testUnskippableChunk" ]
      },
      "predecessor" : "0bbe5b59af443da2c3101cb9259e7ad68152dd13~1"
    },
    "5cf68bdc46c7bcc0fc5eb3cacd1c84514ef552cf" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testStackOfContentCompressions" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ]
      },
      "predecessor" : "5cf68bdc46c7bcc0fc5eb3cacd1c84514ef552cf~1"
    },
    "f8bf45444c49053a92f6f560c5008d5ac43aa27f" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testLongNameMd5Hash", "testOldEntryPosixMode", "testOldEntryStarMode", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testParseOctal", "testParseOctalInvalid", "testRoundTripOctal", "testRoundTripOctalOrBinary12", "testRoundTripOctalOrBinary8" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "5cf68bdc46c7bcc0fc5eb3cacd1c84514ef552cf"
    },
    "af1f8163af8b52bc28a18109858744967935d828" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209", "testEncodingInputStream", "testEncodingInputStreamAutodetect", "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive", "testCpioUnarchiveCreatedByRedlineRpm" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely", "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testLinkFlagConstructor", "testLinkFlagConstructorWithFileFlag", "testLinkFlagConstructorWithPreserve", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readNonAsciiPaxHeader", "readPaxHeaderWithEmbeddedNewline", "readSimplePaxHeader", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testName", "testNegative", "testOverflow", "testParseOctal", "testParseOctalInvalid", "testReadNegativeBinary12Byte", "testReadNegativeBinary8Byte", "testRoundEncoding", "testRoundTripNames", "testRoundTripOctal", "testRoundTripOctalOrBinary12", "testRoundTripOctalOrBinary8", "testTrailers", "testVerifyHeaderCheckSum", "testWriteNegativeBinary8Byte" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeBigStoredEntryToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipEncodingTest" : [ "testNioCp1252Encoding", "testSimpleCp437Encoding", "testSimpleCp850Encoding" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "af1f8163af8b52bc28a18109858744967935d828~1"
    },
    "31b546aecd87725c8a1274d1485cee89bdddfdce" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testFileSystemRoot", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testCount", "testPadsOutputToFullBlockLength" ]
      },
      "predecessor" : "31b546aecd87725c8a1274d1485cee89bdddfdce~1"
    },
    "6e8bb88263dd64b703679bf853c15f40ac07e347" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "testLZMAUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchiveViaAutoDetection" ]
      },
      "predecessor" : "31b546aecd87725c8a1274d1485cee89bdddfdce"
    },
    "24a3100e9897837b513a0d9f2ae26fd02ec91246" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "shouldUseSpecifiedEncodingWhenReadingGNULongNames" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "6e8bb88263dd64b703679bf853c15f40ac07e347"
    },
    "3c4a09bf28e7cd600b919b8c799fbbfd19a94c0b" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInPAXFormat" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testOldEntryPosixMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ]
      },
      "predecessor" : "3c4a09bf28e7cd600b919b8c799fbbfd19a94c0b~1"
    },
    "b72b5c716ac18150396d05988d9eab745bea02b9" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchiveViaAutoDetection" ]
      },
      "predecessor" : "3c4a09bf28e7cd600b919b8c799fbbfd19a94c0b"
    },
    "a73d5f2e9b1f415201b312af8ff4af6a0f7623e1" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testUnixModeInAddRaw", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnshrinkEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testReadingOfStoredEntry", "testUnshrinking" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ]
      },
      "predecessor" : "8682c8d4f2281f838765a213d0241366255c99a0"
    },
    "9ebe7bbd313efb49f3496b8af7d4b4b78f73a5b7" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnshrinkEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnshrinking" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ]
      },
      "predecessor" : "9ebe7bbd313efb49f3496b8af7d4b4b78f73a5b7~1"
    },
    "f25588258e520cbf1d388d3d9b48a4942d3d7c28" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnshrinkEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnshrinking" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ]
      },
      "predecessor" : "9ebe7bbd313efb49f3496b8af7d4b4b78f73a5b7"
    },
    "e6e24766377e705e89358fb9cf6253e2e9e645db" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testMergeWithUnparseableData", "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testGetHeaderId", "testMisc", "testParseReparse", "testSampleFile", "testTrimLeadingZeroesForceMinLength4" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testCopyConstructor", "testExtraFieldMerging", "testExtraFields", "testNullCommentEqualsEmptyComment" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "e6e24766377e705e89358fb9cf6253e2e9e645db~1"
    },
    "1930eed89459d1ea726762e362143a5aa2ccaeb4" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testLongNameMd5Hash", "testOldEntryPosixMode", "testOldEntryStarMode", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "e6e24766377e705e89358fb9cf6253e2e9e645db"
    },
    "ca55bc4cfaead7376599c281abfff94a936f5bf5" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldReadNestedZip", "testReadingOfFirstStoredEntry", "testUnshrinkEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testDuplicateEntry", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testUnixSymlinkSampleFile", "testUnshrinking" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "a2cda30be14b3da01cbbbedc41b70daf6d88da8b"
    },
    "6eac426de89fe077a181f39452dee6f6ca4c2f52" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRawNameReadFromStream", "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "6eac426de89fe077a181f39452dee6f6ca4c2f52~1"
    },
    "5d027c32c97eaf43c5f296afce98f1e4afc7baca" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "detectsAndThrowsFor7z", "shortTextFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209", "testEncodingInputStreamAutodetect" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCompressedArchiveDetection" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "5d027c32c97eaf43c5f296afce98f1e4afc7baca~1"
    },
    "68db5fa9ed38fb599c59be98d561daefc541d7da" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testExplicitDirectoryEntry", "testExplicitFileEntry", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testLinkFlagConstructor", "testLinkFlagConstructorWithFileFlag", "testLinkFlagConstructorWithPreserve", "testMaxFileSize", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "readsArchiveCompletely_COMPRESS245", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldUseSpecifiedEncodingWhenReadingGNULongNames" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar" ]
      },
      "predecessor" : "5d027c32c97eaf43c5f296afce98f1e4afc7baca"
    },
    "61db5ea79b6bb932c09b89812772eec67c05956a" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod", "testUnixModeInAddRaw" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ]
      },
      "predecessor" : "61db5ea79b6bb932c09b89812772eec67c05956a~1"
    },
    "30f1ac1dcf7c333bbf5f2aa77e143f001216130c" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "testAvailable", "testRemainingChunkTypes" ]
      },
      "predecessor" : "30f1ac1dcf7c333bbf5f2aa77e143f001216130c~1"
    },
    "1fb42987de0d21c9b6777272320b64230eadb277" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testLongNameMd5Hash", "testOldEntryPosixMode", "testOldEntryStarMode", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testVerifyHeaderCheckSum" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "30f1ac1dcf7c333bbf5f2aa77e143f001216130c"
    },
    "b67a14697fcf363bc2d7f18407e51b12ca05c1a9" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineFilesSomeNotEmpty", "testSevenFilesSomeNotEmpty", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "b67a14697fcf363bc2d7f18407e51b12ca05c1a9~1"
    },
    "51eb0f22b20b94fc635ecc64cdcb5f72e0ed0186" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testLongNameMd5Hash", "testOldEntryPosixMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "51eb0f22b20b94fc635ecc64cdcb5f72e0ed0186~1"
    },
    "36335e3face4b866c7bb88b39fa8a99959d0a907" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesBSD" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ]
      },
      "predecessor" : "36335e3face4b866c7bb88b39fa8a99959d0a907~1"
    },
    "b4805bb1f3ed74ff260e73f571195102f435f55d" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesBSD" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ]
      },
      "predecessor" : "b4805bb1f3ed74ff260e73f571195102f435f55d~1"
    },
    "9431b16c58a3fbb320cf13af80cb36430f2aea79" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesBSD", "testReadLongNamesGNU" ]
      },
      "predecessor" : "9431b16c58a3fbb320cf13af80cb36430f2aea79~1"
    },
    "7250daa429020181bb5a4c40d1aaa169631b8496" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testLongNameMd5Hash", "testOldEntryPosixMode", "testOldEntryStarMode", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testVerifyHeaderCheckSum" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "7250daa429020181bb5a4c40d1aaa169631b8496~1"
    },
    "32633c39ffe7aa2ba24899877c7425803b10444d" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testLongNameMd5Hash", "testOldEntryPosixMode", "testOldEntryStarMode", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "32633c39ffe7aa2ba24899877c7425803b10444d~1"
    },
    "a53ab172b2a9b7c1a57be9f8d6dc82977af02bff" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "a53ab172b2a9b7c1a57be9f8d6dc82977af02bff~1"
    },
    "b88dd3ed853738b8e7fe9652b953db569bf7f79d" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testUnixModeInAddRaw", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "a53ab172b2a9b7c1a57be9f8d6dc82977af02bff"
    },
    "a2ba6d54852aceda5e3bf9285730da743ef04e77" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingDeflate" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDeflateUnarchive" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testDeflateRoundtrip", "testDeflateWithConfiguration", "testStackOfContentCompressions" ]
      },
      "predecessor" : "b88dd3ed853738b8e7fe9652b953db569bf7f79d"
    },
    "73ec9c125fc4cafada4434b02d603d41e092b675" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingDeflate" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDeflateUnarchive" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testDeflateRoundtrip", "testDeflateWithConfiguration", "testStackOfContentCompressions" ]
      },
      "predecessor" : "73ec9c125fc4cafada4434b02d603d41e092b675~1"
    },
    "f9334473bd9993f38458ecee137ba9e7f7b79abb" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "skipsPK00Prefix", "testEncodingInputStream", "testEncodingInputStreamAutodetect" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely", "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRawNameReadFromStream", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testReadingOfFirstStoredEntry", "testUnzipBZip2CompressedEntry", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testDuplicateEntry", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateCreation", "testDeflateUnarchive", "testRawDeflateCreation", "testRawDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest" : [ "availableShouldReturnNonZero", "shouldBeAbleToSkipAByte", "singleByteReadReturnsMinusOneAtEof", "singleByteReadWorksAsExpected" ],
        "org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStreamTest" : [ "canReadASingleByteFlushAndFinish" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "73ec9c125fc4cafada4434b02d603d41e092b675"
    },
    "a5eca568368b287f875149133a7ff6029b07aad8" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesGNU" ]
      },
      "predecessor" : "a5eca568368b287f875149133a7ff6029b07aad8~1"
    },
    "29377a32c9110982217b3b1f3875bfff5b5e2639" : {
      "testcases" : {
        "org.apache.commons.compress2.archivers.ArchiveEntryParametersTest" : [ "copyActuallyCopies" ]
      },
      "predecessor" : "29377a32c9110982217b3b1f3875bfff5b5e2639~1"
    },
    "7c8c870c0d43c79174869a232b429e341a79d2ea" : {
      "testcases" : {
        "org.apache.commons.compress2.archivers.ArchiversTest" : [ "shouldFindArArchiveFormatAsChannelReadableFormat", "shouldFindArArchiveFormatAsChannelWritableFormat", "shouldFindArArchiveFormatAsWritableFormat", "shouldFindArArchiveFormatByName", "shouldFindArArchiveFormatWhenIterating", "shouldNotFindArArchiveFormatAsRandomAccessFormat" ]
      },
      "predecessor" : "29377a32c9110982217b3b1f3875bfff5b5e2639"
    },
    "96e453145171c4a2a34d749c8d0a15bde5a6f21c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInPAXFormat", "readNonAsciiPaxHeader", "readPaxHeaderWithEmbeddedNewline", "readSimplePaxHeader", "shouldReadBigGid" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testOldEntryPosixMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ]
      },
      "predecessor" : "af2da2e151a8c76e217bc239616174cafbb702ec"
    },
    "c37115b71e2a04d2266dbfa7b2962f03c49ef5da" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU", "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "paxHeaderEntryWithEmptyValueRemovesKey", "readNonAsciiPaxHeader", "readPaxHeaderWithEmbeddedNewline", "readSimplePaxHeader", "readsArchiveCompletely_COMPRESS245", "secondEntryWinsWhenPaxHeaderContainsDuplicateKey", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testLongNameMd5Hash", "testOldEntryPosixMode", "testOldEntryStarMode", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "c37115b71e2a04d2266dbfa7b2962f03c49ef5da~1"
    },
    "62f86d5c1eed6e2c294524a4bf472e5ea17eecd6" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU", "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInPAXFormat", "shouldReadBigGid" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testOldEntryPosixMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ]
      },
      "predecessor" : "62f86d5c1eed6e2c294524a4bf472e5ea17eecd6~1"
    },
    "b36f7c929886b2159a6f57df6490ca6b1669de43" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU", "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testLongNameMd5Hash", "testOldEntryPosixMode", "testOldEntryStarMode", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testVerifyHeaderCheckSum" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "142a788ad8102cd30b04746d4dc1b0bd56927059"
    },
    "bee261259c7f342b50cafcf7c6cb7da0dd02737b" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testMergeWithUnparseableData", "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testCopyConstructor", "testExtraFieldMerging", "testExtraFields", "testNullCommentEqualsEmptyComment" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "b36f7c929886b2159a6f57df6490ca6b1669de43"
    },
    "c6eed140b0b4579fd11ade0b66ada704bb116eca" : {
      "testcases" : {
        "org.apache.commons.compress2.archivers.ArchiveEntryParametersTest" : [ "copyActuallyCopies", "defaultValues", "fromExistingDirectoryHasExpectedValues", "fromExistingFileHasExpectedValues", "fromNonExistingFileHasNoSize", "shouldAddTrailingSlashForDirectories", "shouldStripTrailingSlashForNonDirectories", "sizeShouldBe0ForDirectories" ],
        "org.apache.commons.compress2.formats.ar.RoundTripTest" : [ "testRoundtripUsingConstructors", "testRoundtripUsingFormatInstanceAndChannels", "testRoundtripUsingFormatInstanceAndFiles" ]
      },
      "predecessor" : "c6eed140b0b4579fd11ade0b66ada704bb116eca~1"
    },
    "1a377507a839e627ddc2596264c486ff1ed54ba9" : {
      "testcases" : {
        "org.apache.commons.compress2.archivers.ArchiveEntryParametersTest" : [ "fromExistingDirectoryHasExpectedValues", "fromExistingFileHasExpectedValues", "fromNonExistingFileHasNoSize" ]
      },
      "predecessor" : "1a377507a839e627ddc2596264c486ff1ed54ba9~1"
    },
    "7df45e04e45fd6ade051e1b016914e7c0da06490" : {
      "testcases" : {
        "org.apache.commons.compress2.archivers.ArchiveEntryParametersTest" : [ "copyActuallyCopies", "fromExistingDirectoryHasExpectedValues", "fromExistingFileHasExpectedValues", "getModeConstructsModeFromPermissions", "getPermissionsConstructsPermissionsFromMode" ],
        "org.apache.commons.compress2.formats.ar.RoundTripTest" : [ "testRoundtripUsingConstructors", "testRoundtripUsingFormatInstanceAndChannels" ]
      },
      "predecessor" : "7df45e04e45fd6ade051e1b016914e7c0da06490~1"
    },
    "8a9bc87f8efdfcb5c622e638b9127f962bb040a0" : {
      "testcases" : {
        "org.apache.commons.compress2.formats.ar.RoundTripTest" : [ "testRoundtripUsingConstructors", "testRoundtripUsingFormatInstanceAndChannels", "testRoundtripUsingFormatInstanceAndPaths" ]
      },
      "predecessor" : "8a9bc87f8efdfcb5c622e638b9127f962bb040a0~1"
    },
    "3cddfaaff0ea4fbacc6aceef941efa7ca681c84f" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ]
      },
      "predecessor" : "3cddfaaff0ea4fbacc6aceef941efa7ca681c84f~1"
    },
    "21d1f01f681d78ab6b710f7fce84e2238a63439c" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ]
      },
      "predecessor" : "21d1f01f681d78ab6b710f7fce84e2238a63439c~1"
    },
    "8b1908cbba7012ed693636926bb1fd2057340d7b" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStreamTest" : [ "shouldThrowAnIOExceptionWhenAppliedToAZipFile" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ]
      },
      "predecessor" : "8b1908cbba7012ed693636926bb1fd2057340d7b~1"
    },
    "e1a895a0f38075dcebe143c8baf6fe701cf113a1" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStreamTest" : [ "shouldThrowAnIOExceptionWhenAppliedToAZipFile" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ]
      },
      "predecessor" : "e1a895a0f38075dcebe143c8baf6fe701cf113a1~1"
    },
    "17501ed873db3c6aaf49b7dea1a81cb4dc8e3d46" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testMutiples" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ]
      },
      "predecessor" : "17501ed873db3c6aaf49b7dea1a81cb4dc8e3d46~1"
    },
    "9045ef9367f390434eb7b4b0e16a92413ef6c304" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnzipBZip2CompressedEntry" ]
      },
      "predecessor" : "17501ed873db3c6aaf49b7dea1a81cb4dc8e3d46"
    },
    "18dcf384371013df8b79da55e258bb5ddbb4d5f0" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ]
      },
      "predecessor" : "18dcf384371013df8b79da55e258bb5ddbb4d5f0~1"
    },
    "d378ed45084b93c481d597152054800a2a829154" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testDetection", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "cantRead7zFromStream", "cantWrite7zToStream", "skipsPK00Prefix", "testEncodingInputStream", "testEncodingInputStreamAutodetect", "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ExceptionMessageTest" : [ "testMessageWhenArchiverNameIsNull_1", "testMessageWhenArchiverNameIsNull_2", "testMessageWhenInputStreamIsNull", "testMessageWhenOutputStreamIsNull" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS178", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testCount" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "d378ed45084b93c481d597152054800a2a829154~1"
    },
    "d2014e1e04dfea6c62aca314b8b15c269b675d9d" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testReadWinZipArchive" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testDuplicateEntry", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ]
      },
      "predecessor" : "d2014e1e04dfea6c62aca314b8b15c269b675d9d~1"
    },
    "e158fc108cacc0b4f73d37044e48a04137596b67" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "paxHeaderEntryWithEmptyValueRemovesKey" ]
      },
      "predecessor" : "e158fc108cacc0b4f73d37044e48a04137596b67~1"
    },
    "999821c2549e641bd9c9a223be04497982eebaca" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile" ]
      },
      "predecessor" : "999821c2549e641bd9c9a223be04497982eebaca~1"
    },
    "ab85f00b6d327907ee23291979a6998c54cf88ad" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.StreamCompressorTest" : [ "deflatedEntries", "storedEntries" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "ab85f00b6d327907ee23291979a6998c54cf88ad~1"
    },
    "24e938962728b05aa5b21654ea7146bab8302f4c" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testUnixModeInAddRaw", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.StreamCompressorTest" : [ "deflatedEntries", "storedEntries" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "24e938962728b05aa5b21654ea7146bab8302f4c~1"
    },
    "05bb97bf769913d05fc4c49b625149c8ba92bf66" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ]
      },
      "predecessor" : "05bb97bf769913d05fc4c49b625149c8ba92bf66~1"
    },
    "e21728cef4e89ff5fb173c230d56d16d424dc6c2" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "testEncodingInputStream", "testEncodingInputStreamAutodetect", "testEncodingOutputStream" ]
      },
      "predecessor" : "e21728cef4e89ff5fb173c230d56d16d424dc6c2~1"
    },
    "ac6b5f3a7e1dc36c9ec4f2d34a20f311ee760900" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "testEncodingInputStream", "testEncodingInputStreamAutodetect", "testEncodingOutputStream" ]
      },
      "predecessor" : "ac6b5f3a7e1dc36c9ec4f2d34a20f311ee760900~1"
    },
    "8954b8be675333bafc75f9c3ccbf1839bbff8c62" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testDetection", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadTar", "testReadZip", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209", "testEncodingInputStream", "testEncodingInputStreamAutodetect" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testArjUnarchive", "testReadingOfAttributesDosVersion", "testReadingOfAttributesUnixVersion" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntryTest" : [ "shouldThrowIfNoAccessDateIsSet", "shouldThrowIfNoCreationDateIsSet", "shouldThrowIfNoLastModifiedDateIsSet" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveTest", "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testCompressedHeaderWithNonDefaultDictionarySize", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU", "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testLinkFlagConstructor", "testLinkFlagConstructorWithFileFlag", "testLinkFlagConstructorWithPreserve", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testName", "testRoundTripNames" ],
        "org.apache.commons.compress.archivers.zip.CircularBufferTest" : [ "testCopy", "testPutAndGet" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testMisc", "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testParseReparse", "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipUtilTest" : [ "testAdjustToLong", "testBigToLong", "testLongToBig", "testSignedByteToUnsignedInt", "testUnsignedIntToSignedByte" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.bzip2.BlockSortTest" : [ "testSortFixture2MainSort" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "testAvailable", "testRemainingChunkTypes" ]
      },
      "predecessor" : "8954b8be675333bafc75f9c3ccbf1839bbff8c62~1"
    },
    "ab17a70527ee46e3632be8911a31931fc3e78183" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209", "testEncodingInputStream", "testEncodingInputStreamAutodetect" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesBSD", "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesCauseExceptionByDefault", "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testArjUnarchive", "testReadingOfAttributesDosVersion", "testReadingOfAttributesUnixVersion" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive", "testCpioUnarchiveCreatedByRedlineRpm" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveEntryTest" : [ "publicNameAddsTrailingSlashForDirectories", "publicNameRemovesLeadingDotSlash" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely", "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.memory.MemoryArchiveTestCase" : [ "testReading" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZArchiveEntryTest" : [ "shouldThrowIfNoLastModifiedDateIsSet" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveTest", "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testCompressedHeaderWithNonDefaultDictionarySize", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCantFinishTwice", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU", "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testFileSystemRoot", "testLinkFlagConstructor", "testLinkFlagConstructorWithFileFlag", "testLinkFlagConstructorWithPreserve", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testName", "testRoundEncoding", "testRoundTripNames" ],
        "org.apache.commons.compress.archivers.zip.AsiExtraFieldTest" : [ "testContent", "testReparse" ],
        "org.apache.commons.compress.archivers.zip.BitStreamTest" : [ "testEmptyStream", "testNextByte", "testNextByteFromEmptyStream", "testReadAlignedBytes", "testStream" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testMergeWithUnparseableData", "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X000A_NTFSTest" : [ "simpleRountrip" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testGetHeaderId", "testGettersSetters", "testParseReparse", "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testGetHeaderId", "testParseReparse", "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest" : [ "testReadCDSizesAndOffset", "testReadCDSizesOffsetAndDisk", "testReadCDSomethingAndDisk", "testReadLFHSizesAndDisk", "testReadLFHSizesAndOffset", "testReadLFHSizesOffsetAndDisk", "testReadLFHSizesOnly", "testReparseCDSingleEightByteData", "testWriteCDOnlySizes", "testWriteCDSizeAndDisk", "testWriteCDSizeAndOffset", "testWriteCDSizeOffsetAndDisk" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeBigStoredEntryToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testCompressionMethod", "testCopyConstructor", "testExtraFieldMerging", "testExtraFields", "testNullCommentEqualsEmptyComment" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipEncodingTest" : [ "testNioCp1252Encoding", "testSimpleCp437Encoding", "testSimpleCp850Encoding" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "testAvailable", "testRemainingChunkTypes", "testUnskippableChunk" ],
        "org.apache.commons.compress.utils.BitInputStreamTest" : [ "testClearBitCache", "testEOF", "testReading17BitsInBigEndian", "testReading17BitsInLittleEndian", "testReading24BitsInBigEndian", "testReading24BitsInLittleEndian", "testReading30BitsInBigEndian", "testReading30BitsInLittleEndian", "testReading31BitsInBigEndian", "testReading31BitsInLittleEndian" ],
        "org.apache.commons.compress.utils.IOUtilsTest" : [ "skipUsingRead", "skipUsingSkip", "skipUsingSkipAndRead" ]
      },
      "predecessor" : "8954b8be675333bafc75f9c3ccbf1839bbff8c62"
    },
    "6cc5a2f13e5214a766a328648afc80dfefa5f9aa" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testDetection", "testDetectionNotArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209", "testEncodingInputStream", "testEncodingInputStreamAutodetect" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesBSD", "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testArjUnarchive", "testReadingOfAttributesDosVersion", "testReadingOfAttributesUnixVersion" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive", "testCpioUnarchiveCreatedByRedlineRpm" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveTest", "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testCompressedHeaderWithNonDefaultDictionarySize", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU", "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testLongNameMd5Hash", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8Interoperability" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldReadNestedZip", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateCreation", "testDeflateUnarchive", "testRawDeflateCreation", "testRawDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testCorruptedInput", "testExtraFlagsBestCompression", "testExtraFlagsDefaultCompression", "testExtraFlagsFastestCompression", "testGzipCreation", "testGzipUnarchive", "testInteroperabilityWithGZIPInputStream", "testInteroperabilityWithGzipCompressorInputStream", "testMetadataRoundTrip" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "testLZMAUnarchive", "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testBadSignature", "testGoodSignature", "testInputStreamMethods", "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile", "testShortSignature" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testXZCreation", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStreamTest" : [ "shouldThrowAnIOExceptionWhenAppliedToAZipFile" ],
        "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest" : [ "availableShouldReturnNonZero", "shouldBeAbleToSkipAByte", "singleByteReadReturnsMinusOneAtEof", "singleByteReadWorksAsExpected" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "testAvailable", "testMatches", "testRemainingChunkTypes" ]
      },
      "predecessor" : "6cc5a2f13e5214a766a328648afc80dfefa5f9aa~1"
    },
    "478bef366f84544eb4ac89553eeb7d57680fc521" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveUtilsTest" : [ "testAsciiConversions", "testCompareAscii", "testCompareBA" ],
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "cantRead7zFromStream", "cantWrite7zToStream", "detectsAndThrowsFor7z", "shortTextFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209", "testEncodingCtor", "testEncodingDeprecated", "testEncodingInputStream", "testEncodingInputStreamAutodetect", "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ExceptionMessageTest" : [ "testMessageWhenArchiverNameIsNull_1", "testMessageWhenArchiverNameIsNull_2", "testMessageWhenInputStreamIsNull", "testMessageWhenOutputStreamIsNull" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesBSD", "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesCauseExceptionByDefault", "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testArjUnarchive", "testReadingOfAttributesDosVersion", "testReadingOfAttributesUnixVersion" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive", "testCpioUnarchiveCreatedByRedlineRpm" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveEntryTest" : [ "publicNameAddsTrailingSlashForDirectories", "publicNameRemovesLeadingDotSlash" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely", "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveUtilTest" : [ "convert16", "convert32", "convert64" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveTest", "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testCompressedHeaderWithNonDefaultDictionarySize", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize", "testSignatureCheck" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZMethodConfigurationTest" : [ "shouldAllowLZMA2OptionsForLZMA2", "shouldAllowNullOptions", "shouldAllowNumberForBzip2", "shouldAllowNumberForDeflate", "shouldAllowNumberForLZMA2", "shouldNotAllowStringOptionsForLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCantFinishTwice", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU", "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testFileSystemRoot", "testLinkFlagConstructor", "testLinkFlagConstructorWithFileFlag", "testLinkFlagConstructorWithPreserve", "testMaxFileSize", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "paxHeaderEntryWithEmptyValueRemovesKey", "readNonAsciiPaxHeader", "readPaxHeaderWithEmbeddedNewline", "readSimplePaxHeader", "readsArchiveCompletely_COMPRESS245", "secondEntryWinsWhenPaxHeaderContainsDuplicateKey", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testName", "testNegative", "testOverflow", "testParseOctal", "testParseOctalCompress330", "testParseOctalInvalid", "testReadNegativeBinary12Byte", "testReadNegativeBinary8Byte", "testRoundEncoding", "testRoundTripNames", "testRoundTripOctal", "testRoundTripOctalOrBinary12", "testRoundTripOctalOrBinary8", "testTrailers", "testVerifyHeaderCheckSum", "testWriteNegativeBinary8Byte" ],
        "org.apache.commons.compress.archivers.zip.AsiExtraFieldTest" : [ "testClone", "testContent", "testModes", "testReparse" ],
        "org.apache.commons.compress.archivers.zip.BinaryTreeTest" : [ "testDecode" ],
        "org.apache.commons.compress.archivers.zip.BitStreamTest" : [ "testEmptyStream", "testNextByte", "testNextByteFromEmptyStream", "testReadAlignedBytes", "testStream" ],
        "org.apache.commons.compress.archivers.zip.CircularBufferTest" : [ "testCopy", "testPutAndGet" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testMergeWithUnparseableData", "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.GeneralPurposeBitTest" : [ "testClone", "testDataDescriptor", "testDefaults", "testEncryption", "testLanguageEncodingFlag", "testParseEdgeCases", "testStrongEncryption" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.StreamCompressorTest" : [ "deflatedEntries", "storedEntries" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X000A_NTFSTest" : [ "simpleRountrip" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testBitsAreSetWithTime", "testGetHeaderId", "testGettersSetters", "testMisc", "testParseReparse", "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testGetHeaderId", "testMisc", "testParseReparse", "testSampleFile", "testTrimLeadingZeroesForceMinLength4" ],
        "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest" : [ "testReadCDSizesAndOffset", "testReadCDSizesOffsetAndDisk", "testReadCDSomethingAndDisk", "testReadLFHSizesAndDisk", "testReadLFHSizesAndOffset", "testReadLFHSizesOffsetAndDisk", "testReadLFHSizesOnly", "testReparseCDSingleEightByteData", "testWriteCDOnlySizes", "testWriteCDSizeAndDisk", "testWriteCDSizeAndOffset", "testWriteCDSizeOffsetAndDisk" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeBigStoredEntryToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testCompressionMethod", "testCopyConstructor", "testExtraFieldMerging", "testExtraFields", "testNotEquals", "testNullCommentEqualsEmptyComment", "testUnixMode" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipEightByteIntegerTest" : [ "testBIFromBytes", "testBIToBytes", "testEquals", "testLongFromBytes", "testLongToBytes", "testSign" ],
        "org.apache.commons.compress.archivers.zip.ZipEncodingTest" : [ "testNioCp1252Encoding", "testSimpleCp437Encoding", "testSimpleCp850Encoding" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipLongTest" : [ "testClone", "testEquals", "testFromBytes", "testPut", "testSign", "testToBytes" ],
        "org.apache.commons.compress.archivers.zip.ZipShortTest" : [ "testClone", "testEquals", "testFromBytes", "testPut", "testSign", "testToBytes" ],
        "org.apache.commons.compress.archivers.zip.ZipUtilTest" : [ "testAdjustToLong", "testBigToLong", "testInsideCalendar", "testLongToBig", "testMinTime", "testOutsideCalendar", "testReverse", "testSignedByteToUnsignedInt", "testUnsignedIntToSignedByte", "testZipLong" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddMoveDelete", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame", "testRenameAndDelete" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.BZip2UtilsTestCase" : [ "testGetCompressedFilename", "testGetUncompressedFilename", "testIsCompressedFilename" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateCreation", "testDeflateUnarchive", "testRawDeflateCreation", "testRawDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples", "testOverride" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testCorruptedInput", "testExtraFlagsBestCompression", "testExtraFlagsDefaultCompression", "testExtraFlagsFastestCompression", "testGzipCreation", "testGzipUnarchive", "testInteroperabilityWithGZIPInputStream", "testInteroperabilityWithGzipCompressorInputStream", "testInvalidCompressionLevel", "testMetadataRoundTrip", "testOverWrite" ],
        "org.apache.commons.compress.compressors.GzipUtilsTestCase" : [ "testGetCompressedFilename", "testGetUncompressedFilename", "testIsCompressedFilename" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "testLZMAUnarchive", "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testBadSignature", "testGoodSignature", "testInputStreamMethods", "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile", "testOutputStreamMethods", "testShortSignature" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testXZCreation", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testMatches", "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStreamTest" : [ "shouldThrowAnIOExceptionWhenAppliedToAZipFile" ],
        "org.apache.commons.compress.compressors.bzip2.BlockSortTest" : [ "testFallbackSort", "testSortFixture", "testSortFixture2", "testSortFixture2FallbackSort", "testSortFixture2MainSort", "testSortFixtureFallbackSort", "testSortFixtureMainSort" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ],
        "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest" : [ "availableShouldReturnNonZero", "shouldBeAbleToSkipAByte", "singleByteReadReturnsMinusOneAtEof", "singleByteReadWorksAsExpected" ],
        "org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStreamTest" : [ "canReadASingleByteFlushAndFinish" ],
        "org.apache.commons.compress.compressors.deflate.DeflateParametersTest" : [ "shouldBeAbleToSetCompressionLevel", "shouldNotBeAbleToSetCompressionLevelToADoubleDigitValue", "shouldNotBeAbleToSetCompressionLevelToANegativeValue" ],
        "org.apache.commons.compress.compressors.lzma.LZMAUtilsTestCase" : [ "testCachingIsEnabledByDefaultAndLZMAIsPresent", "testCanTurnOffCaching", "testGetCompressedFilename", "testGetUncompressedFilename", "testIsCompressedFilename", "testMatches", "testTurningOnCachingReEvaluatesAvailability" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "testAvailable", "testChecksumUnmasking", "testMatches", "testRemainingChunkTypes", "testUnskippableChunk" ],
        "org.apache.commons.compress.compressors.xz.XZCompressorInputStreamTest" : [ "redundantTestOfAlmostDeprecatedMatchesMethod" ],
        "org.apache.commons.compress.compressors.xz.XZUtilsTestCase" : [ "testCachingIsEnabledByDefaultAndXZIsPresent", "testCanTurnOffCaching", "testGetCompressedFilename", "testGetUncompressedFilename", "testIsCompressedFilename", "testMatches", "testTurningOnCachingReEvaluatesAvailability" ],
        "org.apache.commons.compress.utils.CharsetsTest" : [ "testToCharset" ],
        "org.apache.commons.compress.utils.CountingStreamTest" : [ "input", "output" ],
        "org.apache.commons.compress.utils.IOUtilsTest" : [ "skipUsingRead", "skipUsingSkip", "skipUsingSkipAndRead" ]
      },
      "predecessor" : "6cc5a2f13e5214a766a328648afc80dfefa5f9aa"
    },
    "bf85a64aaee3abee6f25f031862561162a613dd9" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testDetection", "testDetectionNotArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209", "testEncodingInputStream", "testEncodingInputStreamAutodetect" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesBSD", "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testArjUnarchive", "testReadingOfAttributesDosVersion", "testReadingOfAttributesUnixVersion" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive", "testCpioUnarchiveCreatedByRedlineRpm" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveTest", "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testCompressedHeaderWithNonDefaultDictionarySize", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU", "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testLongNameMd5Hash", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8Interoperability" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldReadNestedZip", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateCreation", "testDeflateUnarchive", "testRawDeflateCreation", "testRawDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testCorruptedInput", "testExtraFlagsBestCompression", "testExtraFlagsDefaultCompression", "testExtraFlagsFastestCompression", "testGzipCreation", "testGzipUnarchive", "testInteroperabilityWithGZIPInputStream", "testInteroperabilityWithGzipCompressorInputStream", "testMetadataRoundTrip" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "testLZMAUnarchive", "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testBadSignature", "testGoodSignature", "testInputStreamMethods", "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile", "testShortSignature" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testXZCreation", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStreamTest" : [ "shouldThrowAnIOExceptionWhenAppliedToAZipFile" ],
        "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest" : [ "availableShouldReturnNonZero", "shouldBeAbleToSkipAByte", "singleByteReadReturnsMinusOneAtEof", "singleByteReadWorksAsExpected" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "testAvailable", "testMatches", "testRemainingChunkTypes" ]
      },
      "predecessor" : "bf85a64aaee3abee6f25f031862561162a613dd9~1"
    },
    "3f2c760a4eb82d880e62a03cb9450d9dcf2793f7" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveUtilsTest" : [ "testAsciiConversions", "testCompareAscii", "testCompareBA" ],
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "cantWrite7zToStream", "detectsAndThrowsFor7z", "shortTextFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209", "testEncodingDeprecated", "testEncodingInputStream", "testEncodingInputStreamAutodetect", "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ExceptionMessageTest" : [ "testMessageWhenArchiverNameIsNull_1", "testMessageWhenArchiverNameIsNull_2", "testMessageWhenInputStreamIsNull", "testMessageWhenOutputStreamIsNull" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesBSD", "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesCauseExceptionByDefault", "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testArjUnarchive", "testReadingOfAttributesDosVersion", "testReadingOfAttributesUnixVersion" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive", "testCpioUnarchiveCreatedByRedlineRpm" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.cpio.CpioUtilTest" : [ "oldBinMagic2ByteArrayNotSwapped", "oldBinMagic2ByteArraySwapped", "oldBinMagicFromByteArrayNotSwapped", "oldBinMagicFromByteArraySwapped" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveEntryTest" : [ "publicNameAddsTrailingSlashForDirectories", "publicNameRemovesLeadingDotSlash" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely", "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.memory.MemoryArchiveTestCase" : [ "testReading" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveTest", "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testCompressedHeaderWithNonDefaultDictionarySize", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize", "testSignatureCheck" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZMethodConfigurationTest" : [ "shouldAllowLZMA2OptionsForLZMA2", "shouldAllowNumberForBzip2", "shouldAllowNumberForDeflate", "shouldAllowNumberForLZMA2", "shouldNotAllowStringOptionsForLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZNativeHeapTest" : [ "testEndDeflaterOnCloseStream", "testEndInflaterOnCloseStream" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCantFinishTwice", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU", "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testFileSystemRoot", "testLinkFlagConstructor", "testLinkFlagConstructorWithFileFlag", "testLinkFlagConstructorWithPreserve", "testMaxFileSize", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "paxHeaderEntryWithEmptyValueRemovesKey", "readNonAsciiPaxHeader", "readPaxHeaderWithEmbeddedNewline", "readSimplePaxHeader", "readsArchiveCompletely_COMPRESS245", "secondEntryWinsWhenPaxHeaderContainsDuplicateKey", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testName", "testNegative", "testOverflow", "testParseOctal", "testParseOctalCompress330", "testParseOctalInvalid", "testReadNegativeBinary12Byte", "testReadNegativeBinary8Byte", "testRoundEncoding", "testRoundTripNames", "testRoundTripOctal", "testRoundTripOctalOrBinary12", "testRoundTripOctalOrBinary8", "testTrailers", "testVerifyHeaderCheckSum", "testWriteNegativeBinary8Byte" ],
        "org.apache.commons.compress.archivers.zip.AsiExtraFieldTest" : [ "testClone", "testContent", "testModes", "testReparse" ],
        "org.apache.commons.compress.archivers.zip.BinaryTreeTest" : [ "testDecode" ],
        "org.apache.commons.compress.archivers.zip.BitStreamTest" : [ "testEmptyStream", "testNextByte", "testNextByteFromEmptyStream", "testReadAlignedBytes", "testStream" ],
        "org.apache.commons.compress.archivers.zip.CircularBufferTest" : [ "testCopy", "testPutAndGet" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testMergeWithUnparseableData", "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.GeneralPurposeBitTest" : [ "testClone", "testDataDescriptor", "testDefaults", "testEncryption", "testLanguageEncodingFlag", "testParseEdgeCases", "testStrongEncryption" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.StreamCompressorTest" : [ "deflatedEntries", "storedEntries" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X000A_NTFSTest" : [ "simpleRountrip" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testGettersSetters", "testMisc", "testParseReparse", "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testMisc", "testParseReparse", "testSampleFile", "testTrimLeadingZeroesForceMinLength4" ],
        "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest" : [ "testReadCDSizesAndOffset", "testReadCDSizesOffsetAndDisk", "testReadCDSomethingAndDisk", "testReadLFHSizesAndDisk", "testReadLFHSizesAndOffset", "testReadLFHSizesOffsetAndDisk", "testReadLFHSizesOnly", "testReparseCDSingleEightByteData", "testWriteCDOnlySizes", "testWriteCDSizeAndDisk", "testWriteCDSizeAndOffset", "testWriteCDSizeOffsetAndDisk" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeBigStoredEntryToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testCompressionMethod", "testCopyConstructor", "testExtraFieldMerging", "testExtraFields", "testNotEquals", "testNullCommentEqualsEmptyComment" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipEightByteIntegerTest" : [ "testBIFromBytes", "testBIToBytes", "testEquals", "testLongFromBytes", "testLongToBytes", "testSign" ],
        "org.apache.commons.compress.archivers.zip.ZipEncodingTest" : [ "testNioCp1252Encoding", "testSimpleCp437Encoding", "testSimpleCp850Encoding" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipLongTest" : [ "testClone", "testEquals", "testFromBytes", "testPut", "testSign", "testToBytes" ],
        "org.apache.commons.compress.archivers.zip.ZipShortTest" : [ "testClone", "testEquals", "testFromBytes", "testPut", "testSign", "testToBytes" ],
        "org.apache.commons.compress.archivers.zip.ZipUtilTest" : [ "testAdjustToLong", "testBigToLong", "testInsideCalendar", "testLongToBig", "testMinTime", "testOutsideCalendar", "testReverse", "testSignedByteToUnsignedInt", "testUnsignedIntToSignedByte", "testZipLong" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddMoveDelete", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame", "testRenameAndDelete" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.BZip2UtilsTestCase" : [ "testGetCompressedFilename", "testGetUncompressedFilename", "testIsCompressedFilename" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateCreation", "testDeflateUnarchive", "testRawDeflateCreation", "testRawDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples", "testOverride" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testCorruptedInput", "testExtraFlagsBestCompression", "testExtraFlagsDefaultCompression", "testExtraFlagsFastestCompression", "testGzipCreation", "testGzipUnarchive", "testInteroperabilityWithGZIPInputStream", "testInteroperabilityWithGzipCompressorInputStream", "testInvalidCompressionLevel", "testMetadataRoundTrip", "testOverWrite" ],
        "org.apache.commons.compress.compressors.GzipUtilsTestCase" : [ "testGetCompressedFilename", "testGetUncompressedFilename", "testIsCompressedFilename" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "testLZMAUnarchive", "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testBadSignature", "testGoodSignature", "testInputStreamMethods", "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile", "testOutputStreamMethods", "testShortSignature" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testXZCreation", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testMatches", "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStreamTest" : [ "shouldThrowAnIOExceptionWhenAppliedToAZipFile" ],
        "org.apache.commons.compress.compressors.bzip2.BlockSortTest" : [ "testFallbackSort", "testSortFixture", "testSortFixture2", "testSortFixture2FallbackSort", "testSortFixture2MainSort", "testSortFixtureFallbackSort", "testSortFixtureMainSort" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ],
        "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest" : [ "availableShouldReturnNonZero", "shouldBeAbleToSkipAByte", "singleByteReadReturnsMinusOneAtEof", "singleByteReadWorksAsExpected" ],
        "org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStreamTest" : [ "canReadASingleByteFlushAndFinish" ],
        "org.apache.commons.compress.compressors.deflate.DeflateParametersTest" : [ "shouldBeAbleToSetCompressionLevel", "shouldNotBeAbleToSetCompressionLevelToADoubleDigitValue", "shouldNotBeAbleToSetCompressionLevelToANegativeValue" ],
        "org.apache.commons.compress.compressors.lzma.LZMAUtilsTestCase" : [ "testCachingIsEnabledByDefaultAndLZMAIsPresent", "testCanTurnOffCaching", "testGetCompressedFilename", "testGetUncompressedFilename", "testIsCompressedFilename", "testMatches", "testTurningOnCachingReEvaluatesAvailability" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "testAvailable", "testChecksumUnmasking", "testMatches", "testRemainingChunkTypes", "testUnskippableChunk" ],
        "org.apache.commons.compress.compressors.xz.XZCompressorInputStreamTest" : [ "redundantTestOfAlmostDeprecatedMatchesMethod" ],
        "org.apache.commons.compress.compressors.xz.XZUtilsTestCase" : [ "testCachingIsEnabledByDefaultAndXZIsPresent", "testCanTurnOffCaching", "testGetCompressedFilename", "testGetUncompressedFilename", "testIsCompressedFilename", "testMatches", "testTurningOnCachingReEvaluatesAvailability" ],
        "org.apache.commons.compress.utils.BitInputStreamTest" : [ "shouldNotAllowReadingOfANegativeAmountOfBits", "shouldNotAllowReadingOfMoreThan63BitsAtATime", "testClearBitCache", "testEOF", "testReading17BitsInBigEndian", "testReading17BitsInLittleEndian", "testReading24BitsInBigEndian", "testReading24BitsInLittleEndian", "testReading30BitsInBigEndian", "testReading30BitsInLittleEndian", "testReading31BitsInBigEndian", "testReading31BitsInLittleEndian" ],
        "org.apache.commons.compress.utils.CountingStreamTest" : [ "input", "output" ],
        "org.apache.commons.compress.utils.IOUtilsTest" : [ "skipUsingRead", "skipUsingSkip", "skipUsingSkipAndRead" ]
      },
      "predecessor" : "3f2c760a4eb82d880e62a03cb9450d9dcf2793f7~1"
    },
    "ffc026d06b2cafcc77bb426a6a4e7d377afb97aa" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStreamTest" : [ "shouldThrowAnIOExceptionWhenAppliedToAZipFile" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ]
      },
      "predecessor" : "3f2c760a4eb82d880e62a03cb9450d9dcf2793f7"
    },
    "e848f805373f8cda5e7e3ba6df7a9fb8b685653b" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateCreation", "testRawDeflateCreation" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testExtraFlagsBestCompression", "testExtraFlagsDefaultCompression", "testExtraFlagsFastestCompression", "testGzipCreation", "testInteroperabilityWithGZIPInputStream", "testInteroperabilityWithGzipCompressorInputStream", "testMetadataRoundTrip", "testOverWrite" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testOutputStreamMethods" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testXZCreation" ],
        "org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStreamTest" : [ "canReadASingleByteFlushAndFinish" ]
      },
      "predecessor" : "e848f805373f8cda5e7e3ba6df7a9fb8b685653b~1"
    },
    "ddb8f08c79b8568c9cba3af61fb5a613e0ccba22" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testSkipEntryWithUnsupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testUnshrinkEntry", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromZip" ]
      },
      "predecessor" : "ddb8f08c79b8568c9cba3af61fb5a613e0ccba22~1"
    },
    "d0501577d37b594c3ff59a39ac211f7a1b170fa7" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineFilesSomeNotEmpty", "testSevenFilesSomeNotEmpty", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "ddb8f08c79b8568c9cba3af61fb5a613e0ccba22"
    },
    "318de9ae84f1731fda8ce0785ae537f149ea5fcf" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testSkipEntryWithUnsupportedCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testUnshrinkEntry", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromZip" ]
      },
      "predecessor" : "318de9ae84f1731fda8ce0785ae537f149ea5fcf~1"
    },
    "19a620c904587dc0397b43bfe9071ff60033c097" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInPAXFormat", "paxHeaderEntryWithEmptyValueRemovesKey", "readNonAsciiPaxHeader", "readPaxHeaderWithEmbeddedNewline", "readSimplePaxHeader", "secondEntryWinsWhenPaxHeaderContainsDuplicateKey", "shouldReadBigGid" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testOldEntryPosixMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ]
      },
      "predecessor" : "3083ea535f6d76c93825d7a7bd1dbea227f447a5"
    },
    "823cdee9b18508e9e51913d110a20a406f55582b" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "survivesBlankLinesInPaxHeader", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "823cdee9b18508e9e51913d110a20a406f55582b~1"
    },
    "ba6953cfed3b221f90d04d96fdf846f658989b2c" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ]
      },
      "predecessor" : "823cdee9b18508e9e51913d110a20a406f55582b"
    },
    "18daf66b2ccf4c7df9618c9a7067ab56bfa96593" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "testAvailable", "testRemainingChunkTypes", "testUnskippableChunk" ]
      },
      "predecessor" : "ba6953cfed3b221f90d04d96fdf846f658989b2c"
    },
    "952a50372dea32e78800b5127ce3e969ce8ba5f0" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ]
      },
      "predecessor" : "952a50372dea32e78800b5127ce3e969ce8ba5f0~1"
    },
    "11840dfde044fec90b0cb4a715ce9d213acea3ca" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testMessageWithCorruptFileName" ]
      },
      "predecessor" : "952a50372dea32e78800b5127ce3e969ce8ba5f0"
    },
    "b5071c2f8bcaa96cc9efb0214b2896cc26996ca9" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive", "testCpioUnarchiveCreatedByRedlineRpm" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeletePlusAdd" ]
      },
      "predecessor" : "b5071c2f8bcaa96cc9efb0214b2896cc26996ca9~1"
    },
    "8769bb6980ea9d46f8fbec1fa1075128d6f61936" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ]
      },
      "predecessor" : "b5071c2f8bcaa96cc9efb0214b2896cc26996ca9"
    },
    "bdc5ad445101133b7c92f4b2efbad1993913e160" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ]
      },
      "predecessor" : "bdc5ad445101133b7c92f4b2efbad1993913e160~1"
    },
    "e9d6221823e2e0d731a11a8a8931db2e83ca6e5c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ]
      },
      "predecessor" : "e9d6221823e2e0d731a11a8a8931db2e83ca6e5c~1"
    },
    "f87a7ce9321b4901a77786387cfe8026f1249721" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ]
      },
      "predecessor" : "f87a7ce9321b4901a77786387cfe8026f1249721~1"
    },
    "abc2d23900ff5adeef648879af6bc4d2f79c261e" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ]
      },
      "predecessor" : "abc2d23900ff5adeef648879af6bc4d2f79c261e~1"
    },
    "2424036c286f0b3dfc280f00a1e835cb52e39375" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ]
      },
      "predecessor" : "2424036c286f0b3dfc280f00a1e835cb52e39375~1"
    },
    "b3c6bf720c1520276c927bb38b321d22a654590b" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadTar", "testReadZip", "testWriteJar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "testEncodingInputStream", "testEncodingInputStreamAutodetect" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testArjUnarchive", "testReadingOfAttributesDosVersion", "testReadingOfAttributesUnixVersion" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely", "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveTest", "readEntriesOfSize0", "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testCompressedHeaderWithNonDefaultDictionarySize", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInPAXFormat", "paxHeaderEntryWithEmptyValueRemovesKey", "readNonAsciiPaxHeader", "readPaxHeaderWithEmbeddedNewline", "readSimplePaxHeader", "secondEntryWinsWhenPaxHeaderContainsDuplicateKey", "shouldReadBigGid", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "survivesBlankLinesInPaxHeader", "survivesPaxHeaderWithNameEndingInSlash" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForFile", "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallStoredEntryUnnownSizeToFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testAddAsFirstExtraField", "testCopyConstructor", "testExtraFieldMerging", "testExtraFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipEncodingTest" : [ "testSimpleCp437Encoding", "testSimpleCp850Encoding" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "6c8345bff9b68598903a05f702ec15e969478cb9"
    },
    "cd9d5ee5dc83fb74c0e823e0b13db397ef017251" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ]
      },
      "predecessor" : "b3c6bf720c1520276c927bb38b321d22a654590b"
    },
    "d5aa050a642409fab36805b2296a99e8e5ce8449" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveTest", "readEntriesOfSize0", "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testCompressedHeaderWithNonDefaultDictionarySize", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testInputStreamMethods", "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ]
      },
      "predecessor" : "d5aa050a642409fab36805b2296a99e8e5ce8449~1"
    },
    "e2d348e17210d17060394d16c491f0e20783c10c" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testCheckArchive", "testCheckCompressedArchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipsPK00Prefix", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeltaRoundtrip", "testLzma2Roundtrip", "testStackOfContentCompressions" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnixSymlinkSampleFile" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testInputStreamMethods", "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testOutputStreamMethods" ]
      },
      "predecessor" : "e2d348e17210d17060394d16c491f0e20783c10c~1"
    },
    "dee8220e4c56ffca5d4fcded556f3c74c72cedb6" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr" ]
      },
      "predecessor" : "dee8220e4c56ffca5d4fcded556f3c74c72cedb6~1"
    },
    "4865194d5fd2de1df4393a12bfe5552bc2e6a2c0" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveUtilsTest" : [ "sanitizeLeavesShortStringsAlone", "sanitizeRemovesUnprintableCharacters", "sanitizeShortensString" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testMessageWithCorruptFileName" ]
      },
      "predecessor" : "dee8220e4c56ffca5d4fcded556f3c74c72cedb6"
    },
    "77388c82c0f484ebf11b5f3292f0103514fd00f1" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveUtilsTest" : [ "sanitizeLeavesShortStringsAlone", "sanitizeRemovesUnprintableCharacters", "sanitizeShortensString" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "readEntriesOfSize0" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testMessageWithCorruptFileName" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile", "testAvailable", "testRemainingChunkTypes", "testUnskippableChunk" ]
      },
      "predecessor" : "77388c82c0f484ebf11b5f3292f0103514fd00f1~1"
    },
    "32c30f6f072ccfea6ead90f8eef0c205d88d00d3" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveUtilsTest" : [ "sanitizeLeavesShortStringsAlone", "sanitizeRemovesUnprintableCharacters", "sanitizeShortensString" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "detectsAndThrowsFor7z", "skipsPK00Prefix", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive", "testCpioUnarchiveCreatedByRedlineRpm" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveTest", "readEntriesOfSize0", "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testCompressedHeaderWithNonDefaultDictionarySize", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCantFinishTwice", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "readsArchiveCompletely_COMPRESS245", "shouldReadGNULongNameEntryWithWrongName", "survivesBlankLinesInPaxHeader", "survivesPaxHeaderWithNameEndingInSlash", "testCompress197" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testExtraFieldMerging" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateCreation", "testDeflateUnarchive", "testRawDeflateCreation", "testRawDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testExtraFlagsBestCompression", "testExtraFlagsDefaultCompression", "testExtraFlagsFastestCompression", "testGzipCreation", "testGzipUnarchive", "testInteroperabilityWithGZIPInputStream", "testInteroperabilityWithGzipCompressorInputStream", "testMetadataRoundTrip" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "testLZMAUnarchive", "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testBadSignature", "testGoodSignature", "testInputStreamMethods", "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile", "testOutputStreamMethods", "testShortSignature" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testXZCreation", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStreamTest" : [ "shouldThrowAnIOExceptionWhenAppliedToAZipFile" ],
        "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest" : [ "availableShouldReturnNonZero", "shouldBeAbleToSkipAByte", "singleByteReadReturnsMinusOneAtEof", "singleByteReadWorksAsExpected" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile", "testAvailable", "testMatches", "testRemainingChunkTypes" ]
      },
      "predecessor" : "32c30f6f072ccfea6ead90f8eef0c205d88d00d3~1"
    },
    "52dd5908e374973d69c51856b74d4d93d591c90a" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.BinaryTreeTest" : [ "testDecode" ],
        "org.apache.commons.compress.archivers.zip.BitStreamTest" : [ "testEmptyStream", "testNextByte", "testNextByteFromEmptyStream", "testReadAlignedBytes", "testStream" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnshrinkEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnshrinking" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.utils.BitInputStreamTest" : [ "shouldNotAllowReadingOfANegativeAmountOfBits", "shouldNotAllowReadingOfMoreThan63BitsAtATime", "testClearBitCache", "testEOF", "testReading17BitsInBigEndian", "testReading17BitsInLittleEndian", "testReading24BitsInBigEndian", "testReading24BitsInLittleEndian", "testReading30BitsInBigEndian", "testReading30BitsInLittleEndian", "testReading31BitsInBigEndian", "testReading31BitsInLittleEndian" ]
      },
      "predecessor" : "52dd5908e374973d69c51856b74d4d93d591c90a~1"
    },
    "159d9c646d598edde1dbf2e20bb3879abaea7694" : {
      "testcases" : {
        "org.apache.commons.compress.utils.BitInputStreamTest" : [ "bigEndianWithOverflow", "littleEndianWithOverflow" ]
      },
      "predecessor" : "159d9c646d598edde1dbf2e20bb3879abaea7694~1"
    },
    "e71827b5db22d81e0b009f3e205173ce643d2e8e" : {
      "testcases" : {
        "org.apache.commons.compress.utils.BitInputStreamTest" : [ "bigEndianWithOverflow", "littleEndianWithOverflow", "shouldNotAllowReadingOfANegativeAmountOfBits", "shouldNotAllowReadingOfMoreThan63BitsAtATime", "testClearBitCache", "testEOF", "testReading17BitsInBigEndian", "testReading17BitsInLittleEndian", "testReading24BitsInBigEndian", "testReading24BitsInLittleEndian", "testReading30BitsInBigEndian", "testReading30BitsInLittleEndian", "testReading31BitsInBigEndian", "testReading31BitsInLittleEndian" ]
      },
      "predecessor" : "e71827b5db22d81e0b009f3e205173ce643d2e8e~1"
    },
    "7ee18aa0cc99a429e6ff9e3fe4b5e73f91b99776" : {
      "testcases" : {
        "org.apache.commons.compress.utils.CountingStreamTest" : [ "input", "output" ]
      },
      "predecessor" : "7ee18aa0cc99a429e6ff9e3fe4b5e73f91b99776~1"
    },
    "658812c85fe762e361c998161cfb61bd477e1b24" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testUnshrinkEntry", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "7ee18aa0cc99a429e6ff9e3fe4b5e73f91b99776"
    },
    "87f0f2ec35c600cae7a17621455c00e24256011a" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCantFinishTwice", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "658812c85fe762e361c998161cfb61bd477e1b24"
    },
    "daeb07457183232eb9a9fb71bfb31a3700404427" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveTest", "readEntriesOfSize0", "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testCompressedHeaderWithNonDefaultDictionarySize", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "daeb07457183232eb9a9fb71bfb31a3700404427~1"
    },
    "94197a7b6c5c616b19ee532da23d8911d5deefd6" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveTest", "readEntriesOfSize0", "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testCompressedHeaderWithNonDefaultDictionarySize", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "94197a7b6c5c616b19ee532da23d8911d5deefd6~1"
    },
    "d8fc27b40be0c71090fb11d47aba813ce87f3d8b" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod", "testUnixModeInAddRaw" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "d8fc27b40be0c71090fb11d47aba813ce87f3d8b~1"
    },
    "7e35f57ae9ba9e716da122dfa0bec418b1e2b6e8" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testUnixModeInAddRaw", "testZipArchiveCreation" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeBigStoredEntryToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "d8fc27b40be0c71090fb11d47aba813ce87f3d8b"
    },
    "6a5014ed5847a99b9574a2dd1332c1f91d36defb" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod", "testUnixModeInAddRaw" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveTest", "readEntriesOfSize0", "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testCompressedHeaderWithNonDefaultDictionarySize", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCantFinishTwice", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testReadWinZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "7e35f57ae9ba9e716da122dfa0bec418b1e2b6e8"
    },
    "09edbd8f1945cd6a2ecc267f4e466862227e2355" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveInMemoryTest" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrderInMemory" ]
      },
      "predecessor" : "09edbd8f1945cd6a2ecc267f4e466862227e2355~1"
    },
    "d9fe818eef0003afe295e6e6df112257cffbc88f" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreationInMemory" ]
      },
      "predecessor" : "09edbd8f1945cd6a2ecc267f4e466862227e2355"
    },
    "a2976b66b5590c7d0225ca111dabd2b048d25951" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreationInMemory" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveInMemoryTest" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testStackOfContentCompressionsInMemory" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrderInMemory" ]
      },
      "predecessor" : "a2976b66b5590c7d0225ca111dabd2b048d25951~1"
    },
    "72b1789632ca7a97e5fa338ab5a60cb4d02915e6" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreationInMemory" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveInMemoryTest" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testStackOfContentCompressionsInMemory" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrderInMemory" ]
      },
      "predecessor" : "72b1789632ca7a97e5fa338ab5a60cb4d02915e6~1"
    },
    "12d9048c6c09ab622f389c2550d0668dc7ad26dc" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveInMemoryTest" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrderInMemory" ]
      },
      "predecessor" : "72b1789632ca7a97e5fa338ab5a60cb4d02915e6"
    },
    "42216000561c9b19bc258e337738ac125e5e6a06" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveInMemoryTest" ]
      },
      "predecessor" : "42216000561c9b19bc258e337738ac125e5e6a06~1"
    },
    "46f57bf93d140737fcce830f83c962a309fa5a1a" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveInMemoryTest" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testStackOfContentCompressionsInMemory" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrderInMemory" ]
      },
      "predecessor" : "46f57bf93d140737fcce830f83c962a309fa5a1a~1"
    },
    "f538f38bd4db41349fb8f753ec17850861de5e0e" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testZipArchiveCreationInMemory" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testStackOfContentCompressionsInMemory" ],
        "org.apache.commons.compress.utils.SeekableInMemoryByteChannelTest" : [ "shouldThrowExceptionOnWritingToClosedChannel", "shouldWriteDataProperly", "shouldWriteDataProperlyAfterPositionSet" ]
      },
      "predecessor" : "f538f38bd4db41349fb8f753ec17850861de5e0e~1"
    },
    "f965bc23bc9f12748b6693424f829b6b08c8a71b" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testConcatenatedStreamsReadFirstOnly" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateCreation", "testDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testOverride" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testCorruptedInput", "testGzipCreation", "testGzipUnarchive" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testXZCreation", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ]
      },
      "predecessor" : "f965bc23bc9f12748b6693424f829b6b08c8a71b~1"
    },
    "adf0f2a79124e18577861996014e27098934a83b" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.CompressorServiceLoaderTest" : [ "testInputStream", "testOutputStream" ]
      },
      "predecessor" : "adf0f2a79124e18577861996014e27098934a83b~1"
    },
    "f98b32e499d502def4cc5b86b859462bbd030a79" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.CompressorServiceLoaderTest" : [ "testInputStream", "testOutputStream" ]
      },
      "predecessor" : "f98b32e499d502def4cc5b86b859462bbd030a79~1"
    },
    "a61a952522334fb37ebf97bcc971be45ca2bf9a3" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "testEncodingInputStream", "testEncodingInputStreamAutodetect", "testEncodingOutputStream" ]
      },
      "predecessor" : "a61a952522334fb37ebf97bcc971be45ca2bf9a3~1"
    },
    "22edc12a0c1b2fa0b73973f375ddf0f0ada672ae" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testDetection", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "cantRead7zFromStream", "cantWrite7zToStream", "skipsPK00Prefix", "testEncodingInputStream", "testEncodingInputStreamAutodetect", "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ExceptionMessageTest" : [ "testMessageWhenArchiverNameIsNull_1", "testMessageWhenArchiverNameIsNull_2", "testMessageWhenInputStreamIsNull", "testMessageWhenOutputStreamIsNull" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS178", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testZipArchiveCreation", "testZipArchiveCreationInMemory", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testCount" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "22edc12a0c1b2fa0b73973f375ddf0f0ada672ae~1"
    },
    "350f01c78374b4df99c1a84cc32122eeeb48b036" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testConcatenatedStreamsReadFirstOnly" ],
        "org.apache.commons.compress.compressors.CompressorServiceLoaderTest" : [ "testInputStream", "testOutputStream" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactory" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testCorruptedInput", "testGzipUnarchive" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchiveViaFactory" ]
      },
      "predecessor" : "22edc12a0c1b2fa0b73973f375ddf0f0ada672ae"
    },
    "7117039b146155d81857ec29cc48b64324e5f19c" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ],
        "org.apache.commons.compress.compressors.CompressorServiceLoaderTest" : [ "testOutputStream" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateCreation" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testGzipCreation" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testXZCreation" ]
      },
      "predecessor" : "350f01c78374b4df99c1a84cc32122eeeb48b036"
    },
    "9238eab678395743bce4bd273c4534d10f77f715" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveInMemoryTest", "getEntriesOfUnarchiveTest", "readEntriesOfSize0", "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testCompressedHeaderWithNonDefaultDictionarySize", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZMethodConfigurationTest" : [ "shouldAllowLZMA2OptionsForLZMA2", "shouldAllowNumberForBzip2", "shouldAllowNumberForDeflate", "shouldAllowNumberForLZMA2", "shouldNotAllowStringOptionsForLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testNineFilesSomeNotEmpty", "testSevenFilesSomeNotEmpty", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "7117039b146155d81857ec29cc48b64324e5f19c"
    },
    "77579145e7f4050dd5f7677f4a427d33cafd450f" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingLZMA" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testLzmaWithIntConfiguration", "testLzmaWithOptionsConfiguration" ]
      },
      "predecessor" : "fdbfa5d962dbc31a2c77fc3d2d5e0f07b36f732f"
    },
    "dd9f8951419a0431f0c7f1bf65fd995e3c12e6d2" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip" ]
      },
      "predecessor" : "77579145e7f4050dd5f7677f4a427d33cafd450f"
    },
    "9f468f199b2309c15efca530357d5222359d51e1" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testArjUnarchive", "testReadingOfAttributesDosVersion", "testReadingOfAttributesUnixVersion" ]
      },
      "predecessor" : "dd9f8951419a0431f0c7f1bf65fd995e3c12e6d2"
    },
    "4d5518316608aa87c6805b5b67fb3db5ea5eedef" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip" ]
      },
      "predecessor" : "4d5518316608aa87c6805b5b67fb3db5ea5eedef~1"
    },
    "2be44aa3a18c19f675c68e385e6ff86b3fde79bf" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip" ]
      },
      "predecessor" : "2be44aa3a18c19f675c68e385e6ff86b3fde79bf~1"
    },
    "b9153cab6127e4f6d2f1e89805c43f4fcbee8fe7" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "b9153cab6127e4f6d2f1e89805c43f4fcbee8fe7~1"
    },
    "3fc93250aafd2946509839b86ac9b87ba68e09a2" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingLZMA" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveInMemoryTest", "getEntriesOfUnarchiveTest", "readEntriesOfSize0", "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testCompressedHeaderWithNonDefaultDictionarySize", "testEncryptedArchiveRequiresPassword" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testLzmaWithIntConfiguration", "testLzmaWithOptionsConfiguration" ]
      },
      "predecessor" : "b9153cab6127e4f6d2f1e89805c43f4fcbee8fe7"
    },
    "a214d4c165311f6db1ca12169aaa116311fd7c2f" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingLZMA" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testLzmaWithIntConfiguration", "testLzmaWithOptionsConfiguration" ]
      },
      "predecessor" : "a214d4c165311f6db1ca12169aaa116311fd7c2f~1"
    },
    "7145b4a3d1fd2385f59595b890327a6c451188a7" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "detectsAndThrowsFor7z", "shortTextFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209", "testEncodingInputStreamAutodetect" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCompressedArchiveDetection" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "7145b4a3d1fd2385f59595b890327a6c451188a7~1"
    },
    "03239b0ea42312c7b5daf4520c1ce1caaf6189fd" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "detectsAndThrowsFor7z", "shortTextFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209", "testEncodingInputStreamAutodetect" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCompressedArchiveDetection" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "03239b0ea42312c7b5daf4520c1ce1caaf6189fd~1"
    },
    "a428e428df2766f1d1b2b793b3f812344fa61fdc" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "detectsAndThrowsFor7z", "shortTextFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209", "testEncodingInputStreamAutodetect" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCompressedArchiveDetection" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "a428e428df2766f1d1b2b793b3f812344fa61fdc~1"
    },
    "f1a582111a26c4044c289d96ced42fc1621212d1" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "detectsAndThrowsFor7z", "shortTextFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209", "testEncodingInputStreamAutodetect" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCompressedArchiveDetection" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "f1a582111a26c4044c289d96ced42fc1621212d1~1"
    },
    "5c9661c300bad40cbacdb391637dacc991f16da6" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesBSD", "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAr" ]
      },
      "predecessor" : "5c9661c300bad40cbacdb391637dacc991f16da6~1"
    },
    "05415c0eedb027aab44472f114a680baea2dc71b" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "testReadingBackDeltaDistance" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testDeltaRoundtrip" ]
      },
      "predecessor" : "5c9661c300bad40cbacdb391637dacc991f16da6"
    },
    "c3d2cecc83544dfd045e6d80989032a3f9641813" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnixSymlinkSampleFile" ]
      },
      "predecessor" : "c3d2cecc83544dfd045e6d80989032a3f9641813~1"
    },
    "6c523186c6e6b97a97e5b40b34a233baf8f60134" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnixSymlinkSampleFile" ]
      },
      "predecessor" : "6c523186c6e6b97a97e5b40b34a233baf8f60134~1"
    },
    "ffe346a8400f215b6c09825e1959e04c8f303642" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.deflate.DeflateCompressorOutputStreamTest" : [ "canReadASingleByteFlushAndFinish" ]
      },
      "predecessor" : "ffe346a8400f215b6c09825e1959e04c8f303642~1"
    },
    "459314a112dd0d7467870a5a2d07fab734940584" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "testEncodingInputStream", "testEncodingInputStreamAutodetect", "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesBSD", "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesCauseExceptionByDefault", "testLongFileNamesWorkUsingBSDDialect" ]
      },
      "predecessor" : "459314a112dd0d7467870a5a2d07fab734940584~1"
    },
    "f015344879f1bc3505bc616fc7ae517cf9f60838" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipArchiveCreationInMemory", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRawNameReadFromStream", "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "testWithBytesAfterData", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "459314a112dd0d7467870a5a2d07fab734940584"
    },
    "8705e97fbd1aa9de951456f05dff9ec56c4344b2" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209", "testEncodingInputStream", "testEncodingInputStreamAutodetect", "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testLzmaWithIntConfiguration", "testLzmaWithOptionsConfiguration", "testNineFilesSomeNotEmpty", "testSevenFilesSomeNotEmpty", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory", "testTwentyNineFilesSomeNotEmpty" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "shouldReadBigGid", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "survivesBlankLinesInPaxHeader", "survivesPaxHeaderWithNameEndingInSlash" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testReadNegativeBinary8Byte", "testRoundTripOctalOrBinary8", "testWriteNegativeBinary8Byte" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testWithBytesAfterData" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile", "testOutputStreamMethods" ],
        "org.apache.commons.compress.compressors.bzip2.BlockSortTest" : [ "testFallbackSort", "testSortFixture", "testSortFixture2", "testSortFixture2FallbackSort", "testSortFixtureFallbackSort" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile", "testAvailable", "testRemainingChunkTypes", "testUnskippableChunk" ]
      },
      "predecessor" : "71caa69e24c4351bbd3715263325054ea6d72479"
    },
    "6b75de47f629a88aa7962fd2b9a2f1f1c1eaf63c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipArchiveCreationInMemory" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRead7ZipArchiveForStream", "testReadWinZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testUnshrinkEntry", "testWithBytesAfterData", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "6b75de47f629a88aa7962fd2b9a2f1f1c1eaf63c~1"
    },
    "bcc204d7d0c2fa22970cea1e82691e6f6340e0c2" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "readEntriesOfSize0", "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testHelloWorldHeaderCompressionOffCopy" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testLzmaWithIntConfiguration", "testLzmaWithOptionsConfiguration", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory" ]
      },
      "predecessor" : "bcc204d7d0c2fa22970cea1e82691e6f6340e0c2~1"
    },
    "066ee4cd338aa7a168fe372efc33ee7070b9c962" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveUtilsTest" : [ "testAsciiConversions", "testCompareAscii" ],
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testWriteAr", "testWriteCpio", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209", "testEncodingInputStreamAutodetect", "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testUnixModeInAddRaw" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesBSD", "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesCauseExceptionByDefault", "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive", "testCpioUnarchiveCreatedByRedlineRpm" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU", "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testLinkFlagConstructor", "testLinkFlagConstructorWithFileFlag", "testLinkFlagConstructorWithPreserve", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "survivesBlankLinesInPaxHeader", "survivesPaxHeaderWithNameEndingInSlash", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testName", "testRoundTripNames" ],
        "org.apache.commons.compress.archivers.zip.AsiExtraFieldTest" : [ "testClone" ],
        "org.apache.commons.compress.archivers.zip.GeneralPurposeBitTest" : [ "testClone" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCopyConstructor" ],
        "org.apache.commons.compress.archivers.zip.ZipLongTest" : [ "testClone" ],
        "org.apache.commons.compress.archivers.zip.ZipShortTest" : [ "testClone" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeletePlusAdd" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "bcc204d7d0c2fa22970cea1e82691e6f6340e0c2"
    },
    "6a8f6c95f3a1b71c6b5950c558fbc0d22786d763" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarGzip" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testCorruptedInput", "testGzipUnarchive", "testInteroperabilityWithGzipCompressorInputStream", "testMetadataRoundTrip" ],
        "org.apache.commons.compress.compressors.gzip.Compress376Test" : [ "testBuffered", "testUnbuffered" ]
      },
      "predecessor" : "6a8f6c95f3a1b71c6b5950c558fbc0d22786d763~1"
    },
    "a03362129bd63208aa6c0a5a47d5ddd2b0cc81f1" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "shouldReadBigGid", "shouldUseSpecifiedEncodingWhenReadingGNULongNames" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "a03362129bd63208aa6c0a5a47d5ddd2b0cc81f1~1"
    },
    "0c73ea7c62d325bde4612d19cc31b542f36c9457" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209", "testEncodingInputStream", "testEncodingInputStreamAutodetect" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "survivesBlankLinesInPaxHeader", "survivesPaxHeaderWithNameEndingInSlash" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testReadNegativeBinary8Byte", "testRoundTripOctalOrBinary8", "testWriteNegativeBinary8Byte" ]
      },
      "predecessor" : "0c73ea7c62d325bde4612d19cc31b542f36c9457~1"
    },
    "c61c68d802266e0265a60e81f2eb5ae56e14b315" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "testReadLongNamesBSD", "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testArjUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive", "testCpioUnarchiveCreatedByRedlineRpm" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "survivesBlankLinesInPaxHeader", "survivesPaxHeaderWithNameEndingInSlash" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testLongNameMd5Hash", "testOldEntryPosixMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testReadingOfFirstStoredEntry", "testThrowOnInvalidEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "testWithBytesAfterData", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testCDOrderInMemory", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testInputStreamMethods", "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile", "testOutputStreamMethods" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "0c73ea7c62d325bde4612d19cc31b542f36c9457"
    },
    "2b5ba89b7705592e5ac2de46c6b68cfc5c16a53b" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "testEncodingInputStream", "testEncodingInputStreamAutodetect" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely", "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile", "testAvailable", "testRemainingChunkTypes" ]
      },
      "predecessor" : "2b5ba89b7705592e5ac2de46c6b68cfc5c16a53b~1"
    },
    "ce6c33a2bb74d3faa76fce1c816dda24cee495fb" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testUnixModeInAddRaw" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeNever" ]
      },
      "predecessor" : "ce6c33a2bb74d3faa76fce1c816dda24cee495fb~1"
    },
    "85184c3a8945ee1cd22a3fa3a9b8cb71346f2d73" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ]
      },
      "predecessor" : "85184c3a8945ee1cd22a3fa3a9b8cb71346f2d73~1"
    },
    "bf88f6dbb380f6b340404ab5d2785a90ef7b3324" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ]
      },
      "predecessor" : "bf88f6dbb380f6b340404ab5d2785a90ef7b3324~1"
    },
    "aa81e37f23e03b8aec4bc287bc84778c2ffc86c3" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz77support.LZ77CompressorTest" : [ "nonCompressableSentAsSingleBytes", "nonCompressableWithLengthGreaterThanLiteralMaxButLessThanTwiceWindowSize", "nonCompressableWithLengthSmallerThanLiteralMax", "nonCompressableWithLengthThatForcesWindowSlide" ]
      },
      "predecessor" : "aa81e37f23e03b8aec4bc287bc84778c2ffc86c3~1"
    },
    "eba864c6f21243374bcf5b7300ad65c33b94f64e" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz77support.LZ77CompressorTest" : [ "blaExampleSmallerWindowSize", "blaExampleWithFullArrayAvailableForCompression", "blaExampleWithShorterMatchLength", "blaExampleWithSingleByteWrites", "nonCompressableSentAsSingleBytes", "nonCompressableWithLengthGreaterThanLiteralMaxButLessThanTwiceWindowSize", "nonCompressableWithLengthSmallerThanLiteralMax", "nonCompressableWithLengthThatForcesWindowSlide", "samIAmExampleWithFullArrayAvailableForCompression" ]
      },
      "predecessor" : "eba864c6f21243374bcf5b7300ad65c33b94f64e~1"
    },
    "9ae37525134089dd0c9ee1cf8738192b70e0fc07" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile", "testAvailable", "testRemainingChunkTypes" ]
      },
      "predecessor" : "eba864c6f21243374bcf5b7300ad65c33b94f64e"
    },
    "d9421dc3c843177ba7d59ea47319997cfdecc697" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile", "testAvailable", "testRemainingChunkTypes" ]
      },
      "predecessor" : "d9421dc3c843177ba7d59ea47319997cfdecc697~1"
    },
    "e4658ae28cf7204af2ddfa0abfc8f03c2026ba59" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile", "testAvailable", "testRemainingChunkTypes" ]
      },
      "predecessor" : "e4658ae28cf7204af2ddfa0abfc8f03c2026ba59~1"
    },
    "b8101b95c1d647b59697fed229bbbd8b5493b17c" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz77support.LZ77CompressorTest" : [ "blaExampleSmallerWindowSize", "blaExampleWithFullArrayAvailableForCompression", "blaExampleWithShorterMatchLength", "blaExampleWithSingleByteWrites", "nonCompressableSentAsSingleBytes", "nonCompressableWithLengthGreaterThanLiteralMaxButLessThanTwiceWindowSize", "nonCompressableWithLengthSmallerThanLiteralMax", "nonCompressableWithLengthThatForcesWindowSlide", "samIAmExampleWithFullArrayAvailableForCompression" ]
      },
      "predecessor" : "b8101b95c1d647b59697fed229bbbd8b5493b17c~1"
    },
    "f874b8c258f89b464698f86a562812030c5f45f9" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz77support.LZ77CompressorTest" : [ "blaExampleSmallerWindowSize", "blaExampleWithFullArrayAvailableForCompression", "blaExampleWithShorterMatchLength", "blaExampleWithSingleByteWrites", "nonCompressableSentAsSingleBytes", "nonCompressableWithLengthGreaterThanLiteralMaxButLessThanTwiceWindowSize", "nonCompressableWithLengthSmallerThanLiteralMax", "nonCompressableWithLengthThatForcesWindowSlide", "samIAmExampleWithFullArrayAvailableForCompression" ]
      },
      "predecessor" : "b8101b95c1d647b59697fed229bbbd8b5493b17c"
    },
    "d68eccb222545e33b6ef983f345819083ee8f902" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz77support.LZ77CompressorTest" : [ "blaExampleSmallerWindowSize", "blaExampleWithFullArrayAvailableForCompression", "blaExampleWithShorterMatchLength", "blaExampleWithSingleByteWrites", "nonCompressableSentAsSingleBytes", "nonCompressableWithLengthGreaterThanLiteralMaxButLessThanTwiceWindowSize", "nonCompressableWithLengthSmallerThanLiteralMax", "nonCompressableWithLengthThatForcesWindowSlide", "samIAmExampleWithFullArrayAvailableForCompression" ]
      },
      "predecessor" : "d68eccb222545e33b6ef983f345819083ee8f902~1"
    },
    "2d70b7a25386bff27a14e34062fa4c01d4d45681" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz77support.LZ77CompressorTest" : [ "blaExampleSmallerWindowSize", "nonCompressableWithLengthThatForcesWindowSlide" ]
      },
      "predecessor" : "2d70b7a25386bff27a14e34062fa4c01d4d45681~1"
    },
    "6ac58a5915cb471ae58c13cf667ad81f574dde34" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ],
        "org.apache.commons.compress.compressors.CompressorServiceLoaderTest" : [ "testOutputStream" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateCreation" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testGzipCreation" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "lzmaRoundtrip" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testXZCreation" ]
      },
      "predecessor" : "6ac58a5915cb471ae58c13cf667ad81f574dde34~1"
    },
    "2139e87447c825bfd8c7e728cbfab542d1bb6fea" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile", "testAvailable", "testRemainingChunkTypes" ],
        "org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest" : [ "blaTarRoundtrip" ]
      },
      "predecessor" : "6ac58a5915cb471ae58c13cf667ad81f574dde34"
    },
    "5a5abeeb1bdf4bf7a1930af97d500927caeb39d7" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile", "testAvailable", "testRemainingChunkTypes", "testUnskippableChunk" ]
      },
      "predecessor" : "5a5abeeb1bdf4bf7a1930af97d500927caeb39d7~1"
    },
    "75ba40cd9236761b4b3e49013eb38f754b4e539b" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile", "testAvailable", "testRemainingChunkTypes" ],
        "org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest" : [ "blaTarRoundtrip" ]
      },
      "predecessor" : "75ba40cd9236761b4b3e49013eb38f754b4e539b~1"
    },
    "c59fc43c527610ae18d7596eb191817ce674cb29" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnixSymlinkSampleFile" ]
      },
      "predecessor" : "c59fc43c527610ae18d7596eb191817ce674cb29~1"
    },
    "687129547ae314a6b286553ad59af88a7a88d492" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.CompressorServiceLoaderTest" : [ "testOutputStream" ]
      },
      "predecessor" : "742a3bfbb76f6f84140d684de92e9495475517e6"
    },
    "56e82da90f1064c23dd630cf0066231567da3ed6" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testConcatenatedStreamsReadFirstOnly" ],
        "org.apache.commons.compress.compressors.CompressorServiceLoaderTest" : [ "testInputStream" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactory" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testCorruptedInput", "testGzipUnarchive" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchiveViaFactory" ]
      },
      "predecessor" : "56e82da90f1064c23dd630cf0066231567da3ed6~1"
    },
    "51d03dda0e0dacbc2f13d0de196a7acff9ce0134" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStreamTest" : [ "readBlaLz4", "readBlaLz4ViaFactory" ]
      },
      "predecessor" : "51d03dda0e0dacbc2f13d0de196a7acff9ce0134~1"
    },
    "8a949d10e9913b1e25aa507169ea211bb3971ad6" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStreamTest" : [ "readBlaLz4", "readBlaLz4ViaFactory" ]
      },
      "predecessor" : "8a949d10e9913b1e25aa507169ea211bb3971ad6~1"
    },
    "a3620e04e4187c3de15115ef33fb148e4fb29424" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile", "testAvailable", "testRemainingChunkTypes" ],
        "org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest" : [ "blaTarRoundtrip" ]
      },
      "predecessor" : "a3620e04e4187c3de15115ef33fb148e4fb29424~1"
    },
    "b743bb24b8870ebf7adb47f27750bc140a8ef671" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStreamTest" : [ "readBlaLz4", "readBlaLz4ViaFactory" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile", "testAvailable", "testRemainingChunkTypes" ],
        "org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest" : [ "blaTarRoundtrip" ]
      },
      "predecessor" : "b743bb24b8870ebf7adb47f27750bc140a8ef671~1"
    },
    "ea4d697cb86beb3cab57a16a5c5ebb6e4e516c67" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStreamTest" : [ "readBlaLz4", "readBlaLz4ViaFactory" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile", "testAvailable", "testRemainingChunkTypes" ],
        "org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest" : [ "blaTarRoundtrip" ]
      },
      "predecessor" : "ea4d697cb86beb3cab57a16a5c5ebb6e4e516c67~1"
    },
    "0d0dfb142f721abb473a0324ceede467e195d368" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz77support.LZ77CompressorTest" : [ "blaExampleSmallerWindowSize", "blaExampleWithFullArrayAvailableForCompression", "blaExampleWithShorterMatchLength", "blaExampleWithSingleByteWrites", "nonCompressableSentAsSingleBytes", "nonCompressableWithLengthGreaterThanLiteralMaxButLessThanTwiceWindowSize", "nonCompressableWithLengthSmallerThanLiteralMax", "nonCompressableWithLengthThatForcesWindowSlide", "samIAmExampleWithFullArrayAvailableForCompression" ],
        "org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest" : [ "blaTarRoundtrip" ]
      },
      "predecessor" : "0d0dfb142f721abb473a0324ceede467e195d368~1"
    },
    "bb763cdd4e62d06ec030d3e5b7b0257cd61e7976" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarGzip" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testCorruptedInput", "testGzipUnarchive", "testInteroperabilityWithGzipCompressorInputStream", "testMetadataRoundTrip" ]
      },
      "predecessor" : "0d0dfb142f721abb473a0324ceede467e195d368"
    },
    "1a40c3b89a31e17583bc6be42e95dc68aa61381d" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ],
        "org.apache.commons.compress.compressors.CompressorServiceLoaderTest" : [ "testInputStream", "testOutputStream" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateCreation" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testGzipCreation" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "lzmaRoundtrip" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testXZCreation" ]
      },
      "predecessor" : "bb763cdd4e62d06ec030d3e5b7b0257cd61e7976"
    },
    "eec6f0b58660515641e8eb0efab1a8cf77d3cdea" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStreamTest" : [ "readBlaLz4", "readBlaLz4ViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorRoundtripTest" : [ "blaTarRoundtrip" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile", "testAvailable", "testRemainingChunkTypes" ],
        "org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest" : [ "blaTarRoundtrip" ]
      },
      "predecessor" : "eec6f0b58660515641e8eb0efab1a8cf77d3cdea~1"
    },
    "71285af668319ce3af0d7e2ef498b36f4273bcca" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStreamTest" : [ "canWriteBackReferenceFollowedByLongLiteral", "cantWriteBackReferenceFollowedByLiteralThatIsTooShort", "cantWriteBackReferenceIfAccumulatedOffsetIsTooShort" ],
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorRoundtripTest" : [ "blaTarRoundtrip" ]
      },
      "predecessor" : "71285af668319ce3af0d7e2ef498b36f4273bcca~1"
    },
    "ecadea18c800aa1811f4ec64742a6bd2aeb8aa45" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorRoundtripTest" : [ "blaTarRoundtrip" ]
      },
      "predecessor" : "ecadea18c800aa1811f4ec64742a6bd2aeb8aa45~1"
    },
    "3b81f3a94da9e26ec0458f4b5bd3a0469d8a93f7" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testConcatenatedStreamsReadFirstOnly" ],
        "org.apache.commons.compress.compressors.CompressorServiceLoaderTest" : [ "testInputStream", "testOutputStream" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testCorruptedInput", "testGzipUnarchive" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorRoundtripTest" : [ "roundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4" ]
      },
      "predecessor" : "3b81f3a94da9e26ec0458f4b5bd3a0469d8a93f7~1"
    },
    "9e794113568476a20990abc075b6e85be11f1562" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4", "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readsUncompressedBlocks", "rejectsBlocksWithoutChecksum" ]
      },
      "predecessor" : "9e794113568476a20990abc075b6e85be11f1562~1"
    },
    "06d761908b2567f292be102de36f88e230e5ffed" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4", "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readsUncompressedBlocks", "rejectsBlocksWithoutChecksum", "rejectsStreamsWithoutContentChecksum" ]
      },
      "predecessor" : "06d761908b2567f292be102de36f88e230e5ffed~1"
    },
    "3f839db3d391bb92b2ece5810b422ca1725f35ba" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorRoundtripTest" : [ "roundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4ViaFactory" ]
      },
      "predecessor" : "3f839db3d391bb92b2ece5810b422ca1725f35ba~1"
    },
    "2820db32e3fdeff47fbf6cb4be39eeebc1ed287e" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ],
        "org.apache.commons.compress.compressors.CompressorServiceLoaderTest" : [ "testOutputStream" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateCreation" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testGzipCreation" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "lzmaRoundtrip" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testXZCreation" ],
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorRoundtripTest" : [ "roundtripViaFactory" ]
      },
      "predecessor" : "226489c0f04d427f7a75468d12b7ccbdcf4c7ccf"
    },
    "bd0b4b60676525a5eb6733a6ad27c67319bec59f" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStreamTest" : [ "readBlaLz4" ],
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorRoundtripTest" : [ "blaTarRoundtrip", "roundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4", "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readsUncompressedBlocks", "readsUncompressedBlocksUsingSingleByteRead", "rejectsBlocksWithoutChecksum", "rejectsStreamsWithoutContentChecksum" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorRoundtripTest" : [ "blaTarRoundtrip", "roundtripViaFactory" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile", "testAvailable", "testRemainingChunkTypes" ],
        "org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest" : [ "blaTarRoundtrip" ],
        "org.apache.commons.compress.utils.ByteUtilsTest" : [ "fromLittleEndianFromStream", "fromLittleEndianFromStreamThrowsForLengthTooBig", "fromLittleEndianFromStreamThrowsForPrematureEnd", "fromLittleEndianFromSupplier", "fromLittleEndianFromSupplierThrowsForLengthTooBig", "fromLittleEndianFromSupplierThrowsForPrematureEnd", "toLittleEndianToStream" ]
      },
      "predecessor" : "bd0b4b60676525a5eb6733a6ad27c67319bec59f~1"
    },
    "c0932797ed15a9e0f49617b5b96bcb0f7827bc35" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "detectsAndThrowsFor7z", "shortTextFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209", "testEncodingInputStream", "testEncodingInputStreamAutodetect", "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingLZMA" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testReadingOfAttributesDosVersion" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveUtilTest" : [ "convert16", "convert32", "convert64" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveInMemoryTest", "getEntriesOfUnarchiveTest", "readEntriesOfSize0", "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testCompressedHeaderWithNonDefaultDictionarySize", "testEncryptedArchiveRequiresPassword" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testLzmaWithIntConfiguration", "testLzmaWithOptionsConfiguration" ],
        "org.apache.commons.compress.archivers.zip.AsiExtraFieldTest" : [ "testContent", "testReparse" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testMergeWithUnparseableData", "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.GeneralPurposeBitTest" : [ "testDataDescriptor", "testDefaults", "testEncryption", "testLanguageEncodingFlag", "testParseEdgeCases", "testStrongEncryption" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X000A_NTFSTest" : [ "simpleRountrip" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testMisc", "testParseReparse", "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testMisc", "testParseReparse", "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest" : [ "testReadCDSizesOffsetAndDisk", "testReadCDSomethingAndDisk", "testReadLFHSizesAndDisk", "testReadLFHSizesOffsetAndDisk", "testWriteCDSizeAndDisk", "testWriteCDSizeOffsetAndDisk" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeBigStoredEntryToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "isUnixSymlinkIsFalseIfMoreThanOneFlagIsSet", "testAddAsFirstExtraField", "testCompressionMethod", "testExtraFieldMerging", "testExtraFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testReadingOfFirstStoredEntry", "testThrowOnInvalidEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "testWithBytesAfterData", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testCDOrderInMemory", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipLongTest" : [ "testFromBytes", "testPut", "testSign", "testToBytes" ],
        "org.apache.commons.compress.archivers.zip.ZipShortTest" : [ "testFromBytes", "testPut", "testSign", "testToBytes" ],
        "org.apache.commons.compress.archivers.zip.ZipUtilTest" : [ "testAdjustToLong", "testBigToLong", "testInsideCalendar", "testLongToBig", "testMinTime", "testOutsideCalendar", "testReverse", "testSignedByteToUnsignedInt", "testUnsignedIntToSignedByte", "testZipLong" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testCorruptedInput", "testGzipUnarchive", "testInteroperabilityWithGzipCompressorInputStream", "testMetadataRoundTrip" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "c0932797ed15a9e0f49617b5b96bcb0f7827bc35~1"
    },
    "76d913a3cd2224a1e6a13af77f77709ee1b265c6" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4", "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readsUncompressedBlocks", "readsUncompressedBlocksUsingSingleByteRead", "rejectsBlocksWithoutChecksum", "rejectsFileWithInsufficientContentSize", "rejectsFileWithWrongVersion", "rejectsFileWithoutBlockSizeByte", "rejectsFileWithoutFrameDescriptor", "rejectsFileWithoutHeaderChecksum", "rejectsNonLZ4Stream", "rejectsStreamsWithoutContentChecksum" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorOutputStreamTest" : [ "illegalBlockSize" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorRoundtripTest" : [ "blaTarRoundtrip", "roundtripViaFactory" ]
      },
      "predecessor" : "76d913a3cd2224a1e6a13af77f77709ee1b265c6~1"
    },
    "176cd18fb69464d036697cf7c83788eb367ae904" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStreamTest" : [ "rewritingOfFinalBlockWithTrailingLZ77Literals", "rewritingOfFinalBlockWithoutTrailingLZ77Literals", "rewritingOfFourPairs" ],
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorRoundtripTest" : [ "blaTarRoundtrip" ]
      },
      "predecessor" : "176cd18fb69464d036697cf7c83788eb367ae904~1"
    },
    "68fa68928bf3d431209dc0342126b9023de02c93" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "frameRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4", "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readsUncompressedBlocks", "readsUncompressedBlocksUsingSingleByteRead", "rejectsBlocksWithoutChecksum", "rejectsStreamsWithoutContentChecksum" ]
      },
      "predecessor" : "176cd18fb69464d036697cf7c83788eb367ae904"
    },
    "12b7b4d93b945c77b801a26dab153d7f871aee49" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "frameRoundtripViaFactory" ]
      },
      "predecessor" : "12b7b4d93b945c77b801a26dab153d7f871aee49~1"
    },
    "cc0039d23ae4ac1124fc64637872a14d5109bedf" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStreamTest" : [ "rewritingOfFinalBlockWithTrailingLZ77Literals", "rewritingOfFinalBlockWithoutTrailingLZ77Literals", "rewritingOfFourPairs" ],
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorRoundtripTest" : [ "blaTarRoundtrip" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory", "frameRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile", "testAvailable", "testRemainingChunkTypes" ],
        "org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest" : [ "blaTarRoundtrip" ]
      },
      "predecessor" : "76f772691c86a7cb2e3fa2b5a8d5370785c0d7f3"
    },
    "3bf5ef1b921375ae7639b521b05898df42226920" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile", "testAvailable", "testRemainingChunkTypes" ],
        "org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest" : [ "blaTarRoundtrip" ]
      },
      "predecessor" : "3bf5ef1b921375ae7639b521b05898df42226920~1"
    },
    "96e34c6530bd20f4982d9351138a4cfa623fac9e" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStreamTest" : [ "shouldThrowAnIOExceptionWhenAppliedToAZipFile" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ]
      },
      "predecessor" : "3bf5ef1b921375ae7639b521b05898df42226920"
    },
    "a0f55d9ff89a5cec2ccd4efc8200308b6dcf8a33" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory" ],
        "org.apache.commons.compress.archivers.zip.BinaryTreeTest" : [ "testDecode" ],
        "org.apache.commons.compress.archivers.zip.BitStreamTest" : [ "testEmptyStream", "testNextByte", "testNextByteFromEmptyStream", "testReadAlignedBytes", "testStream" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnshrinkEntry", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnshrinking", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStreamTest" : [ "shouldThrowAnIOExceptionWhenAppliedToAZipFile" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ],
        "org.apache.commons.compress.utils.BitInputStreamTest" : [ "bigEndianWithOverflow", "littleEndianWithOverflow", "shouldNotAllowReadingOfANegativeAmountOfBits", "shouldNotAllowReadingOfMoreThan63BitsAtATime", "testClearBitCache", "testEOF", "testReading17BitsInBigEndian", "testReading17BitsInLittleEndian", "testReading24BitsInBigEndian", "testReading24BitsInLittleEndian", "testReading30BitsInBigEndian", "testReading30BitsInLittleEndian", "testReading31BitsInBigEndian", "testReading31BitsInLittleEndian" ]
      },
      "predecessor" : "a0f55d9ff89a5cec2ccd4efc8200308b6dcf8a33~1"
    },
    "88dad2dbdc18b724863d64003622f1a0f4315148" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory" ],
        "org.apache.commons.compress.archivers.zip.BitStreamTest" : [ "testEmptyStream", "testNextByte", "testNextByteFromEmptyStream", "testReadAlignedBytes", "testStream" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ],
        "org.apache.commons.compress.utils.BitInputStreamTest" : [ "bigEndianWithOverflow", "littleEndianWithOverflow", "shouldNotAllowReadingOfANegativeAmountOfBits", "shouldNotAllowReadingOfMoreThan63BitsAtATime", "testClearBitCache", "testEOF", "testReading17BitsInBigEndian", "testReading17BitsInLittleEndian", "testReading24BitsInBigEndian", "testReading24BitsInLittleEndian", "testReading30BitsInBigEndian", "testReading30BitsInLittleEndian", "testReading31BitsInBigEndian", "testReading31BitsInLittleEndian" ]
      },
      "predecessor" : "88dad2dbdc18b724863d64003622f1a0f4315148~1"
    },
    "2adac25cff02050da5c789406b7161a61ee12160" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory" ],
        "org.apache.commons.compress.archivers.zip.BinaryTreeTest" : [ "testDecode" ],
        "org.apache.commons.compress.archivers.zip.BitStreamTest" : [ "testEmptyStream", "testNextByte", "testNextByteFromEmptyStream", "testReadAlignedBytes", "testStream" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnshrinkEntry", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnshrinking", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStreamTest" : [ "shouldThrowAnIOExceptionWhenAppliedToAZipFile" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ],
        "org.apache.commons.compress.utils.BitInputStreamTest" : [ "bigEndianWithOverflow", "littleEndianWithOverflow", "shouldNotAllowReadingOfANegativeAmountOfBits", "shouldNotAllowReadingOfMoreThan63BitsAtATime", "testClearBitCache", "testEOF", "testReading17BitsInBigEndian", "testReading17BitsInLittleEndian", "testReading24BitsInBigEndian", "testReading24BitsInLittleEndian", "testReading30BitsInBigEndian", "testReading30BitsInLittleEndian", "testReading31BitsInBigEndian", "testReading31BitsInLittleEndian" ]
      },
      "predecessor" : "2adac25cff02050da5c789406b7161a61ee12160~1"
    },
    "c1a6e38e4401e7c693ccc14f8cb175e057d01a10" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory" ],
        "org.apache.commons.compress.archivers.zip.BitStreamTest" : [ "testEmptyStream", "testNextByte", "testNextByteFromEmptyStream", "testReadAlignedBytes", "testStream" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStreamTest" : [ "shouldThrowAnIOExceptionWhenAppliedToAZipFile" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ],
        "org.apache.commons.compress.utils.BitInputStreamTest" : [ "bigEndianWithOverflow", "littleEndianWithOverflow", "shouldNotAllowReadingOfANegativeAmountOfBits", "shouldNotAllowReadingOfMoreThan63BitsAtATime", "testClearBitCache", "testEOF", "testReading17BitsInBigEndian", "testReading17BitsInLittleEndian", "testReading24BitsInBigEndian", "testReading24BitsInLittleEndian", "testReading30BitsInBigEndian", "testReading30BitsInLittleEndian", "testReading31BitsInBigEndian", "testReading31BitsInLittleEndian" ]
      },
      "predecessor" : "c1a6e38e4401e7c693ccc14f8cb175e057d01a10~1"
    },
    "25ecc9b177ef21bcc35a82776b71cbdae4a7f708" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testConcatenatedStreamsReadFirstOnly" ],
        "org.apache.commons.compress.compressors.CompressorServiceLoaderTest" : [ "testInputStream" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactory" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testCorruptedInput", "testGzipUnarchive" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory", "frameRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4", "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readsUncompressedBlocks", "readsUncompressedBlocksUsingSingleByteRead", "rejectsBlocksWithoutChecksum", "rejectsFileWithBadHeaderChecksum", "rejectsFileWithInsufficientContentSize", "rejectsFileWithWrongVersion", "rejectsFileWithoutBlockSizeByte", "rejectsFileWithoutFrameDescriptor", "rejectsFileWithoutHeaderChecksum", "rejectsNonLZ4Stream", "rejectsStreamsWithBadContentChecksum", "rejectsStreamsWithoutContentChecksum" ]
      },
      "predecessor" : "25ecc9b177ef21bcc35a82776b71cbdae4a7f708~1"
    },
    "2239893abcf199fa9d8cf4c63ff8ef0d904f5a23" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "frameRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4", "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readBlaLz4WithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated", "readDoubledBlaLz4WithDecompressConcatenatedFalse", "readDoubledBlaLz4WithDecompressConcatenatedTrue", "readDoubledBlaLz4WithoutExplicitDecompressConcatenated", "readsUncompressedBlocks", "rejectsStreamsWithBadContentChecksum", "rejectsStreamsWithoutContentChecksum" ]
      },
      "predecessor" : "2239893abcf199fa9d8cf4c63ff8ef0d904f5a23~1"
    },
    "68bc083e6ba002f7c997f9781f0e24a80d8a3274" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "frameRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4", "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readBlaLz4WithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated", "readDoubledBlaLz4WithDecompressConcatenatedFalse", "readDoubledBlaLz4WithDecompressConcatenatedTrue", "readDoubledBlaLz4WithoutExplicitDecompressConcatenated", "readsUncompressedBlocks", "readsUncompressedBlocksUsingSingleByteRead", "rejectsBlocksWithoutChecksum", "rejectsFileWithBadHeaderChecksum", "rejectsFileWithInsufficientContentSize", "rejectsFileWithWrongVersion", "rejectsFileWithoutBlockSizeByte", "rejectsFileWithoutFrameDescriptor", "rejectsFileWithoutHeaderChecksum", "rejectsNonLZ4Stream", "rejectsStreamsWithBadContentChecksum", "rejectsStreamsWithoutContentChecksum" ]
      },
      "predecessor" : "68bc083e6ba002f7c997f9781f0e24a80d8a3274~1"
    },
    "8c75380e482d7c9945098a258ebba4fe2eba4264" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "frameRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4", "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readBlaLz4WithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated", "readDoubledBlaLz4WithDecompressConcatenatedFalse", "readDoubledBlaLz4WithDecompressConcatenatedTrue", "readDoubledBlaLz4WithoutExplicitDecompressConcatenated", "readsUncompressedBlocks", "readsUncompressedBlocksUsingSingleByteRead", "rejectsBlocksWithoutChecksum", "rejectsFileWithBadHeaderChecksum", "rejectsFileWithInsufficientContentSize", "rejectsFileWithWrongVersion", "rejectsFileWithoutBlockSizeByte", "rejectsFileWithoutFrameDescriptor", "rejectsFileWithoutHeaderChecksum", "rejectsSkippableFrameFollowedByJunk", "rejectsSkippableFrameFollowedByTooFewBytes", "rejectsSkippableFrameWithBadSignaturePrefix", "rejectsSkippableFrameWithBadSignatureTrailer", "rejectsSkippableFrameWithPrematureEnd", "rejectsSkippableFrameWithPrematureEndInLengthBytes", "rejectsStreamsWithBadContentChecksum", "rejectsStreamsWithoutContentChecksum", "rejectsTrailingBytesAfterValidFrame", "skipsOverSkippableFrames", "skipsOverTrailingSkippableFrames" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "68bc083e6ba002f7c997f9781f0e24a80d8a3274"
    },
    "4355b00e5094a3979b73ddb62b23048fc3ea7312" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "frameRoundtripViaFactory" ]
      },
      "predecessor" : "4355b00e5094a3979b73ddb62b23048fc3ea7312~1"
    },
    "a5f7089f692e8bd46f817624eeee9129169197f2" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "frameRoundtripViaFactory" ]
      },
      "predecessor" : "a5f7089f692e8bd46f817624eeee9129169197f2~1"
    },
    "a5720927e1d76cb920d126d8bfecd9695daed09c" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "frameRoundtripViaFactory" ]
      },
      "predecessor" : "a5720927e1d76cb920d126d8bfecd9695daed09c~1"
    },
    "cfd695786f2b4e0e3a2eb5241f8fcd5bc3e412e9" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "frameRoundtripViaFactory" ]
      },
      "predecessor" : "cfd695786f2b4e0e3a2eb5241f8fcd5bc3e412e9~1"
    },
    "cfc68acf12b856e59845e3ad2eace27bc257e8eb" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStreamTest" : [ "rewritingOfFinalBlockWithTrailingLZ77Literals", "rewritingOfFinalBlockWithoutTrailingLZ77Literals", "rewritingOfFourPairs" ],
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorRoundtripTest" : [ "blaTarRoundtrip" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory", "frameRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz77support.LZ77CompressorTest" : [ "blaExampleSmallerWindowSize", "blaExampleWithFullArrayAvailableForCompression", "blaExampleWithPrefill", "blaExampleWithPrefillBiggerThanWindowSize", "blaExampleWithShortPrefill", "blaExampleWithShorterMatchLength", "blaExampleWithSingleByteWrites", "cantPrefillAfterCompress", "cantPrefillTwice", "nonCompressableSentAsSingleBytes", "nonCompressableWithLengthGreaterThanLiteralMaxButLessThanTwiceWindowSize", "nonCompressableWithLengthSmallerThanLiteralMax", "nonCompressableWithLengthThatForcesWindowSlide", "samIAmExampleWithFullArrayAvailableForCompression" ],
        "org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest" : [ "blaTarRoundtrip" ]
      },
      "predecessor" : "cfd695786f2b4e0e3a2eb5241f8fcd5bc3e412e9"
    },
    "b1e524891f908cd667b8c54b4a04b3af2e65969a" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStreamTest" : [ "readBlaLz4" ],
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorRoundtripTest" : [ "blaTarRoundtrip" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory", "frameRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaDumpLz4", "readBlaLz4", "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readBlaLz4WithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated", "readDoubledBlaLz4WithDecompressConcatenatedFalse", "readDoubledBlaLz4WithDecompressConcatenatedTrue", "readDoubledBlaLz4WithoutExplicitDecompressConcatenated" ],
        "org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStreamTest" : [ "ifPrefillExceedsWindowSizeTheLastBytesAreUsed", "prefillCanBeUsedForBackReferences" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile", "testAvailable", "testRemainingChunkTypes" ],
        "org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest" : [ "blaTarRoundtrip" ]
      },
      "predecessor" : "b1e524891f908cd667b8c54b4a04b3af2e65969a~1"
    },
    "72fec65e1c09e14b92a21aae5d0f0dd20e8fe4ef" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStreamTest" : [ "readBlaLz4" ],
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorRoundtripTest" : [ "blaTarRoundtrip" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory", "frameRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaDumpLz4", "readBlaLz4", "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readBlaLz4WithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated", "readDoubledBlaLz4WithDecompressConcatenatedFalse", "readDoubledBlaLz4WithDecompressConcatenatedTrue", "readDoubledBlaLz4WithoutExplicitDecompressConcatenated" ],
        "org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStreamTest" : [ "cantPrefillAfterDataHasBeenRead", "ifPrefillExceedsWindowSizeTheLastBytesAreUsed", "prefillCanBeUsedForBackReferences" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile", "testAvailable", "testRemainingChunkTypes" ],
        "org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest" : [ "blaTarRoundtrip" ]
      },
      "predecessor" : "72fec65e1c09e14b92a21aae5d0f0dd20e8fe4ef~1"
    },
    "982ce0eca9935e65915278ae07febd3a1d52273d" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "frameRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaDumpLz4", "readBlaLz4", "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readBlaLz4WithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated", "readDoubledBlaLz4WithDecompressConcatenatedFalse", "readDoubledBlaLz4WithDecompressConcatenatedTrue", "readDoubledBlaLz4WithoutExplicitDecompressConcatenated", "readsUncompressedBlocks", "readsUncompressedBlocksUsingSingleByteRead", "rejectsBlocksWithoutChecksum", "rejectsFileWithBadHeaderChecksum", "rejectsFileWithInsufficientContentSize", "rejectsFileWithWrongVersion", "rejectsFileWithoutBlockSizeByte", "rejectsFileWithoutFrameDescriptor", "rejectsFileWithoutHeaderChecksum", "rejectsNonLZ4Stream", "rejectsSkippableFrameFollowedByJunk", "rejectsSkippableFrameFollowedByTooFewBytes", "rejectsSkippableFrameWithBadSignaturePrefix", "rejectsSkippableFrameWithBadSignatureTrailer", "rejectsSkippableFrameWithPrematureEnd", "rejectsSkippableFrameWithPrematureEndInLengthBytes", "rejectsStreamsWithBadContentChecksum", "rejectsStreamsWithoutContentChecksum", "rejectsTrailingBytesAfterValidFrame", "skipsOverSkippableFrames", "skipsOverTrailingSkippableFrames" ]
      },
      "predecessor" : "982ce0eca9935e65915278ae07febd3a1d52273d~1"
    },
    "e79465bbecc6033780f91fd41ab7d66c5e9e7bae" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "frameRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaDumpLz4", "readBlaLz4", "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readBlaLz4WithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated", "readDoubledBlaLz4WithDecompressConcatenatedFalse", "readDoubledBlaLz4WithDecompressConcatenatedTrue", "readDoubledBlaLz4WithoutExplicitDecompressConcatenated", "readsUncompressedBlocks", "readsUncompressedBlocksUsingSingleByteRead", "rejectsBlocksWithoutChecksum", "rejectsSkippableFrameFollowedByJunk", "rejectsSkippableFrameFollowedByTooFewBytes", "rejectsSkippableFrameWithBadSignaturePrefix", "rejectsSkippableFrameWithBadSignatureTrailer", "rejectsSkippableFrameWithPrematureEnd", "rejectsSkippableFrameWithPrematureEndInLengthBytes", "rejectsStreamsWithBadContentChecksum", "rejectsStreamsWithoutContentChecksum", "rejectsTrailingBytesAfterValidFrame", "skipsOverSkippableFrames", "skipsOverTrailingSkippableFrames" ]
      },
      "predecessor" : "e79465bbecc6033780f91fd41ab7d66c5e9e7bae~1"
    },
    "7b5816d968d05236821832aecb071e891627ea4e" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory" ],
        "org.apache.commons.compress.archivers.zip.BinaryTreeTest" : [ "testDecode" ],
        "org.apache.commons.compress.archivers.zip.BitStreamTest" : [ "testEmptyStream", "testNextByte", "testNextByteFromEmptyStream", "testReadAlignedBytes", "testStream" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnshrinkEntry", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnshrinking", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStreamTest" : [ "shouldThrowAnIOExceptionWhenAppliedToAZipFile" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ],
        "org.apache.commons.compress.utils.BitInputStreamTest" : [ "bigEndianWithOverflow", "littleEndianWithOverflow", "shouldNotAllowReadingOfANegativeAmountOfBits", "shouldNotAllowReadingOfMoreThan63BitsAtATime", "testClearBitCache", "testEOF", "testReading17BitsInBigEndian", "testReading17BitsInLittleEndian", "testReading24BitsInBigEndian", "testReading24BitsInLittleEndian", "testReading30BitsInBigEndian", "testReading30BitsInLittleEndian", "testReading31BitsInBigEndian", "testReading31BitsInLittleEndian" ]
      },
      "predecessor" : "7b5816d968d05236821832aecb071e891627ea4e~1"
    },
    "2f56fb5c10e6b8c8e01033ee1c50669028f28340" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4", "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readBlaLz4WithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated", "readDoubledBlaLz4WithDecompressConcatenatedFalse", "readDoubledBlaLz4WithDecompressConcatenatedTrue", "readDoubledBlaLz4WithoutExplicitDecompressConcatenated", "readsUncompressedBlocks", "readsUncompressedBlocksUsingSingleByteRead", "rejectsBlocksWithoutChecksum", "rejectsFileWithBadHeaderChecksum", "rejectsFileWithInsufficientContentSize", "rejectsFileWithWrongVersion", "rejectsFileWithoutBlockSizeByte", "rejectsFileWithoutHeaderChecksum", "rejectsSkippableFrameFollowedByJunk", "rejectsSkippableFrameFollowedByTooFewBytes", "rejectsSkippableFrameWithBadSignaturePrefix", "rejectsSkippableFrameWithBadSignatureTrailer", "rejectsSkippableFrameWithPrematureEnd", "rejectsSkippableFrameWithPrematureEndInLengthBytes", "rejectsStreamsWithBadContentChecksum", "rejectsStreamsWithoutContentChecksum", "rejectsTrailingBytesAfterValidFrame", "skipsOverSkippableFrames", "skipsOverTrailingSkippableFrames" ]
      },
      "predecessor" : "2f56fb5c10e6b8c8e01033ee1c50669028f28340~1"
    },
    "1cdc1622ccc608487014a7f10d43d5784ce60037" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4", "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readBlaLz4WithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated", "readDoubledBlaLz4WithDecompressConcatenatedFalse", "readDoubledBlaLz4WithDecompressConcatenatedTrue", "readDoubledBlaLz4WithoutExplicitDecompressConcatenated", "readsUncompressedBlocks", "readsUncompressedBlocksUsingSingleByteRead", "rejectsBlocksWithoutChecksum", "rejectsFileWithBadHeaderChecksum", "rejectsFileWithInsufficientContentSize", "rejectsFileWithWrongVersion", "rejectsFileWithoutBlockSizeByte", "rejectsFileWithoutHeaderChecksum", "rejectsSkippableFrameFollowedByJunk", "rejectsSkippableFrameFollowedByTooFewBytes", "rejectsSkippableFrameWithBadSignaturePrefix", "rejectsSkippableFrameWithBadSignatureTrailer", "rejectsSkippableFrameWithPrematureEnd", "rejectsSkippableFrameWithPrematureEndInLengthBytes", "rejectsStreamsWithBadContentChecksum", "rejectsStreamsWithoutContentChecksum", "rejectsTrailingBytesAfterValidFrame", "skipsOverSkippableFrames", "skipsOverTrailingSkippableFrames" ]
      },
      "predecessor" : "1cdc1622ccc608487014a7f10d43d5784ce60037~1"
    },
    "f4b675664a7c633bdd62d5f85fcf3f95d11ade9b" : {
      "testcases" : {
        "org.apache.commons.compress.utils.SeekableInMemoryByteChannelTest" : [ "shouldReadContentsProperly", "shouldReadContentsWhenBiggerBufferSupplied", "shouldReadDataFromSetPosition", "shouldSetProperPosition", "shouldSetProperPositionOnTruncate", "shouldSignalEOFWhenPositionAtTheEnd", "shouldThrowExceptionWhenSettingIncorrectPosition", "shouldTruncateContentsProperly", "shouldWriteDataProperly", "shouldWriteDataProperlyAfterPositionSet" ]
      },
      "predecessor" : "f4b675664a7c633bdd62d5f85fcf3f95d11ade9b~1"
    },
    "acab253ab45dfa7b6b80dbec9f3623969c4a57a5" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "testEncryptedArchiveRequiresPassword" ],
        "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStreamTest" : [ "shouldThrowAnIOExceptionWhenAppliedToAZipFile" ]
      },
      "predecessor" : "acab253ab45dfa7b6b80dbec9f3623969c4a57a5~1"
    },
    "4344ff7331a4f8908478e72c5c232c7a9d5dc403" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testOptionalFinish" ]
      },
      "predecessor" : "4344ff7331a4f8908478e72c5c232c7a9d5dc403~1"
    },
    "5375fd9dc55f1dd01e155af8646d1ec67bd6be29" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingDeflate" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDeflateUnarchive" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testDeflateRoundtrip", "testDeflateWithConfiguration", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory" ]
      },
      "predecessor" : "5375fd9dc55f1dd01e155af8646d1ec67bd6be29~1"
    },
    "5170392a5b1e7cd7dccd7e3ef4d6c7279022696d" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStreamTest" : [ "rewritingOfFinalBlockWithTrailingLZ77Literals", "rewritingOfFinalBlockWithoutTrailingLZ77Literals", "rewritingOfFourPairs" ],
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorRoundtripTest" : [ "blaTarRoundtrip" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz77support.LZ77CompressorTest" : [ "blaExampleSmallerWindowSize", "blaExampleWithFullArrayAvailableForCompression", "blaExampleWithPrefill", "blaExampleWithPrefillBiggerThanWindowSize", "blaExampleWithShortPrefill", "blaExampleWithSingleByteWrites", "cantPrefillAfterCompress", "cantPrefillTwice", "nonCompressableSentAsSingleBytes", "nonCompressableWithLengthGreaterThanLiteralMaxButLessThanTwiceWindowSize", "nonCompressableWithLengthSmallerThanLiteralMax", "nonCompressableWithLengthThatForcesWindowSlide", "samIAmExampleWithFullArrayAvailableForCompression" ],
        "org.apache.commons.compress.compressors.lz77support.ParametersTest" : [ "allParametersUsuallyTakeTheirSpecifiedValues", "defaultConstructor", "windowSizeMustNotBeAPowerOfTwo" ],
        "org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest" : [ "blaTarRoundtrip" ]
      },
      "predecessor" : "5170392a5b1e7cd7dccd7e3ef4d6c7279022696d~1"
    },
    "043f42b65d9c67fd064d2ba638b246389ad3a26d" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStreamTest" : [ "rewritingOfFinalBlockWithTrailingLZ77Literals", "rewritingOfFinalBlockWithoutTrailingLZ77Literals", "rewritingOfFourPairs" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz77support.LZ77CompressorTest" : [ "blaExampleSmallerWindowSize", "blaExampleWithFullArrayAvailableForCompression", "blaExampleWithPrefill", "blaExampleWithPrefillBiggerThanWindowSize", "blaExampleWithShortPrefill", "blaExampleWithShorterBackReferenceLength", "blaExampleWithSingleByteWrites", "cantPrefillAfterCompress", "cantPrefillTwice", "nonCompressableSentAsSingleBytes", "nonCompressableWithLengthGreaterThanLiteralMaxButLessThanTwiceWindowSize", "nonCompressableWithLengthSmallerThanLiteralMax", "nonCompressableWithLengthThatForcesWindowSlide", "samIAmExampleWithFullArrayAvailableForCompression" ],
        "org.apache.commons.compress.compressors.lz77support.ParametersTest" : [ "allParametersUsuallyTakeTheirSpecifiedValues", "defaultConstructor", "maxBackReferenceLengthIsMinBackReferenceLengthIfBothAreEqual", "maxBackReferenceLengthIsMinBackReferenceLengthWhenSmallerThanMinBackReferenceLength", "maxBackReferenceLengthIsMinBackReferenceLengthWhenSmallerThanMinBackReferenceLengthReversedInvocationOrder", "maxLiteralLengthIsWindowSizeIfSetTo0", "maxLiteralLengthIsWindowSizeIfSetToANegativeValue", "maxLiteralLengthIsWindowSizeIfSetToAValueTooBigToHoldInSlidingWindow", "maxOffsetIsWindowSizeMinus1IfBiggerThanWindowSize", "maxOffsetIsWindowSizeMinus1IfSetTo0", "maxOffsetIsWindowSizeMinus1IfSetToANegativeValue", "minBackReferenceLengthIsAtLeastThree" ],
        "org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest" : [ "blaTarRoundtrip" ]
      },
      "predecessor" : "043f42b65d9c67fd064d2ba638b246389ad3a26d~1"
    },
    "0bc43314c1216a88d0e281e7ed66244c47c57c56" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive", "testCpioUnarchiveCreatedByRedlineRpm" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeletePlusAdd" ]
      },
      "predecessor" : "ad661a8d347c1c0ff1b9264cf0f8c89de7057a69"
    },
    "b893471b95285cc2364e3b2b8f6220ac6dc362a4" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testWriteCpio" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive", "testCpioUnarchiveCreatedByRedlineRpm" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeletePlusAdd" ]
      },
      "predecessor" : "0bc43314c1216a88d0e281e7ed66244c47c57c56"
    },
    "f7e0a4a0212424edd1765d1abe66772af069dafb" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStreamTest" : [ "rewritingOfFinalBlockWithTrailingLZ77Literals", "rewritingOfFinalBlockWithoutTrailingLZ77Literals", "rewritingOfFourPairs" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz77support.LZ77CompressorTest" : [ "blaExampleSmallerWindowSize", "blaExampleWithFullArrayAvailableForCompression", "blaExampleWithPrefill", "blaExampleWithPrefillBiggerThanWindowSize", "blaExampleWithShortPrefill", "blaExampleWithShorterBackReferenceLength", "blaExampleWithSingleByteWrites", "cantPrefillAfterCompress", "cantPrefillTwice", "nonCompressableSentAsSingleBytes", "nonCompressableWithLengthGreaterThanLiteralMaxButLessThanTwiceWindowSize", "nonCompressableWithLengthSmallerThanLiteralMax", "nonCompressableWithLengthThatForcesWindowSlide", "samIAmExampleWithFullArrayAvailableForCompression" ],
        "org.apache.commons.compress.compressors.lz77support.ParametersTest" : [ "allParametersUsuallyTakeTheirSpecifiedValues", "defaultConstructor", "maxBackReferenceLengthIsMinBackReferenceLengthIfBothAreEqual", "maxBackReferenceLengthIsMinBackReferenceLengthWhenSmallerThanMinBackReferenceLength", "maxBackReferenceLengthIsMinBackReferenceLengthWhenSmallerThanMinBackReferenceLengthReversedInvocationOrder", "maxLiteralLengthIsWindowSizeIfSetTo0", "maxLiteralLengthIsWindowSizeIfSetToANegativeValue", "maxLiteralLengthIsWindowSizeIfSetToAValueTooBigToHoldInSlidingWindow", "maxOffsetIsWindowSizeMinus1IfBiggerThanWindowSize", "maxOffsetIsWindowSizeMinus1IfSetTo0", "maxOffsetIsWindowSizeMinus1IfSetToANegativeValue", "minBackReferenceLengthIsAtLeastThree" ],
        "org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest" : [ "blaTarRoundtrip", "blaTarRoundtripTunedForCompressionRatio", "blaTarRoundtripTunedForSpeed" ]
      },
      "predecessor" : "b893471b95285cc2364e3b2b8f6220ac6dc362a4"
    },
    "47213feb954bef78d646da4f4ffe6a8156c7d3f5" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStreamTest" : [ "rewritingOfFinalBlockWithTrailingLZ77Literals", "rewritingOfFinalBlockWithoutTrailingLZ77Literals", "rewritingOfFourPairs" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ]
      },
      "predecessor" : "f7e0a4a0212424edd1765d1abe66772af069dafb"
    },
    "62202d2acd00b43415ce9ed45e1c37f42d6ef616" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStreamTest" : [ "rewritingOfFinalBlockWithTrailingLZ77Literals", "rewritingOfFinalBlockWithoutTrailingLZ77Literals", "rewritingOfFourPairs" ]
      },
      "predecessor" : "62202d2acd00b43415ce9ed45e1c37f42d6ef616~1"
    },
    "5ce60be9d55c62b72262680249ad933850aaa064" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStreamTest" : [ "rewritingOfFinalBlockWithTrailingLZ77Literals", "rewritingOfFinalBlockWithoutTrailingLZ77Literals", "rewritingOfFourPairs" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ]
      },
      "predecessor" : "5ce60be9d55c62b72262680249ad933850aaa064~1"
    },
    "08113862c5dda6dfb0562d84db8db8f5f41bfa4a" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllTempFile" ]
      },
      "predecessor" : "08113862c5dda6dfb0562d84db8db8f5f41bfa4a~1"
    },
    "70594bcaff1d553cbd35312bb63a33bcba0680d3" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "lzmaRoundtrip", "testLZMAUnarchive", "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchiveViaAutoDetection" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4ViaFactoryAutoDetection" ]
      },
      "predecessor" : "70594bcaff1d553cbd35312bb63a33bcba0680d3~1"
    },
    "30fce9d42c5675e9cae0db0401181f84a73a293b" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testConcatenatedStreamsReadFirstOnly" ],
        "org.apache.commons.compress.compressors.CompressorServiceLoaderTest" : [ "testInputStream" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testCorruptedInput", "testGzipUnarchive" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated" ]
      },
      "predecessor" : "30fce9d42c5675e9cae0db0401181f84a73a293b~1"
    },
    "2cf575115748e9865daaa369507019141573b86c" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "detectsAndThrowsFor7z", "shortTextFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209", "testEncodingInputStreamAutodetect" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCompressedArchiveDetection" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetect", "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchiveViaAutoDetection" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4ViaFactoryAutoDetection" ]
      },
      "predecessor" : "2cf575115748e9865daaa369507019141573b86c~1"
    },
    "abf07558021a0ecc50c265dcbdc5f2f99fdbeb35" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "detectsAndThrowsFor7z", "shortTextFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209", "testDetect", "testEncodingInputStreamAutodetect" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCompressedArchiveDetection" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "abf07558021a0ecc50c265dcbdc5f2f99fdbeb35~1"
    },
    "f05101e28403494b81704029cc50e66703c34151" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "detectsAndThrowsFor7z", "shortTextFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209", "testDetect", "testEncodingInputStreamAutodetect" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCompressedArchiveDetection" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetect" ]
      },
      "predecessor" : "f05101e28403494b81704029cc50e66703c34151~1"
    },
    "674886f560b2b1ca051b4cb6346a09a04a3cb628" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testOutputStreamMethods" ]
      },
      "predecessor" : "674886f560b2b1ca051b4cb6346a09a04a3cb628~1"
    },
    "7d73baf10e435fcaa4927495afc185fb473c416b" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testConcatenatedStreamsReadFirstOnly" ],
        "org.apache.commons.compress.compressors.CompressorServiceLoaderTest" : [ "testInputStream", "testOutputStream" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateCreation", "testDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetect", "testDetection", "testMutiples", "testOverride" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testCorruptedInput", "testGzipCreation", "testGzipUnarchive" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "lzmaRoundtrip", "testLZMAUnarchive", "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testXZCreation", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated" ]
      },
      "predecessor" : "13a039029ca7d7fca9862cfb792f7148c555f05f"
    },
    "b10528a62e51b2c5fdc0c4b7884cc93f03f8ce96" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testConcatenatedStreamsReadFirstOnly" ],
        "org.apache.commons.compress.compressors.CompressorServiceLoaderTest" : [ "testInputStream" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testCorruptedInput", "testGzipUnarchive" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated" ]
      },
      "predecessor" : "b10528a62e51b2c5fdc0c4b7884cc93f03f8ce96~1"
    },
    "0e8ff9c44058afbca9c9126a8feebe41cd682626" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testConcatenatedStreamsReadFirstOnly" ],
        "org.apache.commons.compress.compressors.CompressorServiceLoaderTest" : [ "testInputStream", "testOutputStream" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateCreation", "testDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetect", "testDetection", "testLZMAMemoryLimit", "testMutiples", "testOverride" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testCorruptedInput", "testGzipCreation", "testGzipUnarchive" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "lzmaRoundtrip", "testLZMAUnarchive", "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testXZCreation", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated" ]
      },
      "predecessor" : "0e8ff9c44058afbca9c9126a8feebe41cd682626~1"
    },
    "26eab98e3a0d403587cc915eaa8f7d4b7b894cef" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnshrinkEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnshrinking" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testLZMAMemoryLimit", "testMutiples", "testXZMemoryLimitOnRead", "testXZMemoryLimitOnSkip", "testZMemoryLimit" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "lzmaRoundtrip", "testLZMAUnarchive", "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ]
      },
      "predecessor" : "26eab98e3a0d403587cc915eaa8f7d4b7b894cef~1"
    },
    "4e442bb44280243f6e0e72d845fa8275d665ca84" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testLZMAMemoryLimit", "testMutiples", "testXZMemoryLimitOnRead", "testXZMemoryLimitOnSkip", "testZMemoryLimit" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ]
      },
      "predecessor" : "4e442bb44280243f6e0e72d845fa8275d665ca84~1"
    },
    "2247ff9601374845012558ecf5963ebb7e1066c5" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testXZMemoryLimitOnRead" ]
      },
      "predecessor" : "4e442bb44280243f6e0e72d845fa8275d665ca84"
    },
    "7e89c9cc80bc3fd2aab64f25dd816c6d14790988" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testReadWinZipArchive" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testDuplicateEntry", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "7e89c9cc80bc3fd2aab64f25dd816c6d14790988~1"
    },
    "daa69a5981c7c12e0af5922f0a07653446261b07" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testReadWinZipArchive" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testConcurrentReadFile", "testConcurrentReadSeekable", "testDuplicateEntry", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "daa69a5981c7c12e0af5922f0a07653446261b07~1"
    },
    "5def510d00f73b25db8ce44303df49050f99dfbc" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testConcatenatedStreamsReadFirstOnly" ],
        "org.apache.commons.compress.compressors.CompressorServiceLoaderTest" : [ "testInputStream", "testOutputStream" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateCreation", "testDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetect", "testDetection", "testMutiples", "testOverride" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testCorruptedInput", "testGzipCreation", "testGzipUnarchive" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "lzmaRoundtrip", "testLZMAUnarchive", "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testXZCreation", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated" ]
      },
      "predecessor" : "daa69a5981c7c12e0af5922f0a07653446261b07"
    },
    "0ee8f1e8ab53746ea9f735aa07e857a0c4e55656" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testReadWinZipArchive" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testConcurrentReadFile", "testConcurrentReadSeekable", "testReadingOfStoredEntry", "testUnshrinking", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "0ee8f1e8ab53746ea9f735aa07e857a0c4e55656~1"
    },
    "508be17bbc9079769ea99b780db9abcb4655399c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testReadWinZipArchive" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testConcurrentReadFile", "testConcurrentReadSeekable", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "0ee8f1e8ab53746ea9f735aa07e857a0c4e55656"
    },
    "2b31d222b26e0e22b5d4e1f1ae613b1925992a8c" : {
      "testcases" : {
        "org.apache.commons.compress2.formats.ar.ArArchiveFormatTest" : [ "shouldDetectFormat", "shouldRejectXMLFile" ],
        "org.apache.commons.compress2.formats.ar.RoundTripTest" : [ "testRoundtripUsingConstructors", "testRoundtripUsingFormatInstanceAndChannels", "testRoundtripUsingFormatInstanceAndPaths" ],
        "org.apache.commons.compress2.formats.deflate.DeflateCompressionFormatTest" : [ "shouldDetectFormat", "shouldRejectXMLFile" ],
        "org.apache.commons.compress2.formats.deflate.RoundTripTest" : [ "testRoundtripUsingConstructors", "testRoundtripUsingFormatInstanceAndChannels", "testRoundtripUsingFormatInstanceAndPaths" ]
      },
      "predecessor" : "2b31d222b26e0e22b5d4e1f1ae613b1925992a8c~1"
    },
    "9caa606a8c7726b868d8c1bed7da420389191745" : {
      "testcases" : {
        "org.apache.commons.compress2.archivers.ArchiversTest" : [ "shouldFindArArchiveFormatAsChannelReadableFormat", "shouldFindArArchiveFormatAsChannelWritableFormat", "shouldFindArArchiveFormatAsWritableFormat", "shouldFindArArchiveFormatByName", "shouldFindArArchiveFormatWhenIterating", "shouldNotFindArArchiveFormatAsRandomAccessFormat" ]
      },
      "predecessor" : "9caa606a8c7726b868d8c1bed7da420389191745~1"
    },
    "9a92b8526cd13e092b5185a59c7ff0f68a1ad56e" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory" ],
        "org.apache.commons.compress.archivers.zip.BinaryTreeTest" : [ "testDecode" ],
        "org.apache.commons.compress.archivers.zip.BitStreamTest" : [ "testEmptyStream", "testNextByte", "testNextByteFromEmptyStream", "testReadAlignedBytes", "testStream" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnshrinkEntry", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnshrinking", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples", "testZMemoryLimit" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStreamTest" : [ "shouldThrowAnIOExceptionWhenAppliedToAZipFile" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ],
        "org.apache.commons.compress.utils.BitInputStreamTest" : [ "bigEndianWithOverflow", "littleEndianWithOverflow", "shouldNotAllowReadingOfANegativeAmountOfBits", "shouldNotAllowReadingOfMoreThan63BitsAtATime", "testClearBitCache", "testEOF", "testReading17BitsInBigEndian", "testReading17BitsInLittleEndian", "testReading24BitsInBigEndian", "testReading24BitsInLittleEndian", "testReading30BitsInBigEndian", "testReading30BitsInLittleEndian", "testReading31BitsInBigEndian", "testReading31BitsInLittleEndian" ]
      },
      "predecessor" : "76390c0b54bf145f65532ffe1e7b24639f108247"
    },
    "6ae55beb2d28bd6cf36780b4c58da41854dc8248" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4", "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readBlaLz4WithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated", "readDoubledBlaLz4WithDecompressConcatenatedFalse", "readDoubledBlaLz4WithDecompressConcatenatedTrue", "readDoubledBlaLz4WithoutExplicitDecompressConcatenated", "readsUncompressedBlocks", "readsUncompressedBlocksUsingSingleByteRead", "rejectsBlocksWithoutChecksum", "rejectsSkippableFrameFollowedByJunk", "rejectsSkippableFrameFollowedByTooFewBytes", "rejectsSkippableFrameWithBadSignaturePrefix", "rejectsSkippableFrameWithBadSignatureTrailer", "rejectsSkippableFrameWithPrematureEnd", "rejectsSkippableFrameWithPrematureEndInLengthBytes", "rejectsStreamsWithBadContentChecksum", "rejectsStreamsWithoutContentChecksum", "rejectsTrailingBytesAfterValidFrame", "skipsOverSkippableFrames", "skipsOverTrailingSkippableFrames" ]
      },
      "predecessor" : "6ae55beb2d28bd6cf36780b4c58da41854dc8248~1"
    },
    "d681042e60a3a1e92f4c891ce9dcffd672868e7f" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStreamTest" : [ "rewritingOfFinalBlockWithTrailingLZ77Literals", "rewritingOfFinalBlockWithoutTrailingLZ77Literals", "rewritingOfFourPairs", "rewritingWithFinalBackreferenceAndOffsetBiggerThan1" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated", "readDoubledBlaLz4WithDecompressConcatenatedFalse", "readDoubledBlaLz4WithDecompressConcatenatedTrue", "readDoubledBlaLz4WithoutExplicitDecompressConcatenated" ],
        "org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest" : [ "blaTarRoundtrip", "blaTarRoundtripTunedForCompressionRatio", "blaTarRoundtripTunedForSpeed" ]
      },
      "predecessor" : "d681042e60a3a1e92f4c891ce9dcffd672868e7f~1"
    },
    "932d4f89922e96fb1b89ba220d124db187ab7741" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "testEncodingInputStream", "testEncodingInputStreamAutodetect" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples", "testZMemoryLimit" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4", "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readBlaLz4WithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated", "readDoubledBlaLz4WithDecompressConcatenatedFalse", "readDoubledBlaLz4WithDecompressConcatenatedTrue", "readDoubledBlaLz4WithoutExplicitDecompressConcatenated", "readsUncompressedBlocks", "readsUncompressedBlocksUsingSingleByteRead", "rejectsBlocksWithoutChecksum", "rejectsFileWithBadHeaderChecksum", "rejectsFileWithInsufficientContentSize", "rejectsFileWithWrongVersion", "rejectsFileWithoutBlockSizeByte", "rejectsFileWithoutFrameDescriptor", "rejectsFileWithoutHeaderChecksum", "rejectsSkippableFrameFollowedByJunk", "rejectsSkippableFrameFollowedByTooFewBytes", "rejectsSkippableFrameWithBadSignaturePrefix", "rejectsSkippableFrameWithBadSignatureTrailer", "rejectsSkippableFrameWithPrematureEnd", "rejectsSkippableFrameWithPrematureEndInLengthBytes", "rejectsStreamsWithBadContentChecksum", "rejectsStreamsWithoutContentChecksum", "rejectsTrailingBytesAfterValidFrame", "skipsOverSkippableFrames", "skipsOverTrailingSkippableFrames" ]
      },
      "predecessor" : "932d4f89922e96fb1b89ba220d124db187ab7741~1"
    },
    "22fe7f3c8b3fa204c2406c3d15811b2581e1b7b5" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testConcatenatedStreamsReadFirstOnly" ],
        "org.apache.commons.compress.compressors.CompressorServiceLoaderTest" : [ "testInputStream" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testLZMAMemoryLimit", "testMutiples", "testXZMemoryLimitOnRead", "testXZMemoryLimitOnSkip", "testZMemoryLimit" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testCorruptedInput", "testGzipUnarchive" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated" ]
      },
      "predecessor" : "932d4f89922e96fb1b89ba220d124db187ab7741"
    },
    "3856d3f0a0826be3ccc6b160e740d5c7176df743" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStreamTest" : [ "availableShouldReturnZero", "shouldBeAbleToSkipAByte", "singleByteReadReturnsMinusOneAtEof", "singleByteReadWorksAsExpected", "testBrotliDecode" ]
      },
      "predecessor" : "3856d3f0a0826be3ccc6b160e740d5c7176df743~1"
    },
    "4cc3f6e7dbee9e3684884780af82822485c4c7c2" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStreamTest" : [ "availableShouldReturnZero", "shouldBeAbleToSkipAByte", "singleByteReadReturnsMinusOneAtEof", "singleByteReadWorksAsExpected", "testBrotliDecode" ]
      },
      "predecessor" : "4cc3f6e7dbee9e3684884780af82822485c4c7c2~1"
    },
    "886e924019e35dc28eabe7515f614ba4f6c63a2f" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStreamTest" : [ "testCachingIsEnabledByDefaultAndXZIsPresent", "testCanTurnOffCaching", "testTurningOnCachingReEvaluatesAvailability" ]
      },
      "predecessor" : "4cc3f6e7dbee9e3684884780af82822485c4c7c2"
    },
    "4e619852cad8b9b056d4239aff597124e901fe8a" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStreamTest" : [ "availableShouldReturnZero", "shouldBeAbleToSkipAByte", "singleByteReadReturnsMinusOneAtEof", "singleByteReadWorksAsExpected", "testBrotliDecode", "testCachingIsEnabledByDefaultAndXZIsPresent", "testCanTurnOffCaching", "testTurningOnCachingReEvaluatesAvailability" ]
      },
      "predecessor" : "4e619852cad8b9b056d4239aff597124e901fe8a~1"
    },
    "037209cb3e585e59ead364b36d1f1b82a2fc8d54" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStreamTest" : [ "availableShouldReturnZero", "shouldBeAbleToSkipAByte", "singleByteReadReturnsMinusOneAtEof", "singleByteReadWorksAsExpected", "testBrotliDecode" ]
      },
      "predecessor" : "037209cb3e585e59ead364b36d1f1b82a2fc8d54~1"
    },
    "c4ad0b75c1f814d5ec5dd600183fb303f7241c33" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStreamTest" : [ "testBrotliUnarchive", "testCachingIsEnabledByDefaultAndBrotliIsPresent", "testCanTurnOffCaching", "testTurningOnCachingReEvaluatesAvailability" ]
      },
      "predecessor" : "037209cb3e585e59ead364b36d1f1b82a2fc8d54"
    },
    "3bf400edc1add6078a9bd935e3ae684b8bf8493f" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "isUnixSymlinkIsFalseIfMoreThanOneFlagIsSet", "testCopyConstructor", "testNotEquals", "testNullCommentEqualsEmptyComment" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testReadingOfFirstStoredEntry", "testThrowOnInvalidEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "testWithBytesAfterData", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testCDOrderInMemory", "testConcurrentReadFile", "testConcurrentReadSeekable", "testDoubleClose", "testDuplicateEntry", "testExcessDataInZip64ExtraField", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "ccf55ddf2238983ba9f6da9ba2bb61e0c0ac573b"
    },
    "4ac67bf326c1494126161b18612bb62975246ab2" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStreamTest" : [ "readBlaLz4" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4", "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readBlaLz4WithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated", "readDoubledBlaLz4WithDecompressConcatenatedFalse", "readDoubledBlaLz4WithDecompressConcatenatedTrue", "readDoubledBlaLz4WithoutExplicitDecompressConcatenated" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile", "testAvailable", "testRemainingChunkTypes" ],
        "org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest" : [ "blaTarRoundtrip", "blaTarRoundtripTunedForCompressionRatio", "blaTarRoundtripTunedForSpeed" ]
      },
      "predecessor" : "abfdf35fa5df95853d0f1f9fe0c60f4a1ae8fdee"
    },
    "a4b0ee96fc87effd27a4c0af23835cce3647cc0c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "testEncodingInputStream", "testEncodingInputStreamAutodetect" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely", "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ]
      },
      "predecessor" : "a4b0ee96fc87effd27a4c0af23835cce3647cc0c~1"
    },
    "ca7ea939eaa9dad5f00c8a5e269f09681602bc98" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "detectsAndThrowsFor7z", "shortTextFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209", "testDetect", "testEncodingInputStreamAutodetect" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCompressedArchiveDetection" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testLZMAMemoryLimit", "testXZMemoryLimitOnRead", "testXZMemoryLimitOnSkip", "testZMemoryLimit" ]
      },
      "predecessor" : "a4b0ee96fc87effd27a4c0af23835cce3647cc0c"
    },
    "bd64dc7abee36984e830c740588990739b71cc93" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testConcurrentReadFile", "testDelayedOffsetsAndSizes", "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "bd64dc7abee36984e830c740588990739b71cc93~1"
    },
    "e3e137df87f35b4249133478b77c4222f8e530a8" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.AsiExtraFieldTest" : [ "testClone", "testContent", "testModes", "testReparse" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testMergeWithUnparseableData", "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.GeneralPurposeBitTest" : [ "testDataDescriptor", "testDefaults", "testEncryption", "testLanguageEncodingFlag", "testParseEdgeCases", "testStrongEncryption" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X000A_NTFSTest" : [ "simpleRountrip" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest" : [ "testReadCDSizesAndOffset", "testReadCDSizesOffsetAndDisk", "testReadCDSomethingAndDisk", "testReadLFHSizesAndDisk", "testReadLFHSizesAndOffset", "testReadLFHSizesOffsetAndDisk", "testReadLFHSizesOnly", "testReparseCDSingleEightByteData", "testWriteCDOnlySizes", "testWriteCDSizeAndDisk", "testWriteCDSizeAndOffset", "testWriteCDSizeOffsetAndDisk" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "isUnixSymlinkIsFalseIfMoreThanOneFlagIsSet", "testAddAsFirstExtraField", "testCompressionMethod", "testCopyConstructor", "testExtraFieldMerging", "testExtraFields", "testNullCommentEqualsEmptyComment" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testOffsets", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "testWithBytesAfterData", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testCDOrderInMemory", "testConcurrentReadFile", "testConcurrentReadSeekable", "testDelayedOffsetsAndSizes", "testDoubleClose", "testDuplicateEntry", "testEntryAlignment", "testEntryAlignmentExceed", "testExcessDataInZip64ExtraField", "testInvalidAlignment", "testOffsets", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipShortTest" : [ "testClone", "testEquals", "testFromBytes", "testPut", "testSign", "testToBytes" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "e3e137df87f35b4249133478b77c4222f8e530a8~1"
    },
    "702f27a8779fa77a2ea0a1b6cc6e1e4d678d4fbb" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testDelayedOffsetsAndSizes", "testEntryAlignment", "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "702f27a8779fa77a2ea0a1b6cc6e1e4d678d4fbb~1"
    },
    "f2af9f0c583ce5d5e294b60ada9e14516f5e92ac" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testMerge", "testMergeWithUnparseableData", "testParse", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testReadWinZipArchive", "testReadWinZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "isUnixSymlinkIsFalseIfMoreThanOneFlagIsSet", "testAddAsFirstExtraField", "testCopyConstructor", "testExtraFieldMerging", "testExtraFields", "testNullCommentEqualsEmptyComment" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testOffsets", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "testWithBytesAfterData", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testCDOrderInMemory", "testConcurrentReadFile", "testConcurrentReadSeekable", "testDelayedOffsetsAndSizes", "testDoubleClose", "testDuplicateEntry", "testEntryAlignment", "testExcessDataInZip64ExtraField", "testOffsets", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "702f27a8779fa77a2ea0a1b6cc6e1e4d678d4fbb"
    },
    "fef18a23d3b09025e0ddc3733334a4587c3af712" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testConcurrentReadFile", "testConcurrentReadSeekable", "testDelayedOffsetsAndSizes", "testEntryAlignment", "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "fef18a23d3b09025e0ddc3733334a4587c3af712~1"
    },
    "591b9f9795c6eaf782580327e82a70164a640d34" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveInMemoryTest", "getEntriesOfUnarchiveTest", "readEntriesOfSize0", "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testCompressedHeaderWithNonDefaultDictionarySize", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testLzmaWithIntConfiguration", "testLzmaWithOptionsConfiguration", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testConcurrentReadSeekable", "testDelayedOffsetsAndSizes", "testEntryAlignment", "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ],
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStreamTest" : [ "rewritingOfFinalBlockWithTrailingLZ77Literals", "rewritingOfFinalBlockWithoutTrailingLZ77Literals", "rewritingOfFourPairs", "rewritingWithFinalBackreferenceAndOffsetBiggerThan1" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz77support.LZ77CompressorTest" : [ "blaExampleSmallerWindowSize", "blaExampleWithFullArrayAvailableForCompression", "blaExampleWithPrefill", "blaExampleWithPrefillBiggerThanWindowSize", "blaExampleWithShortPrefill", "blaExampleWithShorterBackReferenceLength", "blaExampleWithSingleByteWrites", "cantPrefillAfterCompress", "cantPrefillTwice", "nonCompressableSentAsSingleBytes", "nonCompressableWithLengthGreaterThanLiteralMaxButLessThanTwiceWindowSize", "nonCompressableWithLengthSmallerThanLiteralMax", "nonCompressableWithLengthThatForcesWindowSlide", "samIAmExampleWithFullArrayAvailableForCompression" ],
        "org.apache.commons.compress.compressors.lz77support.ParametersTest" : [ "allParametersUsuallyTakeTheirSpecifiedValues", "defaultConstructor", "maxBackReferenceLengthIsMinBackReferenceLengthIfBothAreEqual", "maxBackReferenceLengthIsMinBackReferenceLengthWhenSmallerThanMinBackReferenceLength", "maxBackReferenceLengthIsMinBackReferenceLengthWhenSmallerThanMinBackReferenceLengthReversedInvocationOrder", "maxLiteralLengthIsWindowSizeIfSetTo0", "maxLiteralLengthIsWindowSizeIfSetToANegativeValue", "maxLiteralLengthIsWindowSizeIfSetToAValueTooBigToHoldInSlidingWindow", "maxOffsetIsWindowSizeMinus1IfBiggerThanWindowSize", "maxOffsetIsWindowSizeMinus1IfSetTo0", "maxOffsetIsWindowSizeMinus1IfSetToANegativeValue", "minBackReferenceLengthIsAtLeastThree" ],
        "org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest" : [ "blaTarRoundtrip", "blaTarRoundtripTunedForCompressionRatio", "blaTarRoundtripTunedForSpeed" ]
      },
      "predecessor" : "fef18a23d3b09025e0ddc3733334a4587c3af712"
    },
    "0daa8708dfcc5c0c3803ab2e41542dba134d71d0" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testConcurrentReadFile", "testConcurrentReadSeekable", "testDuplicateEntry", "testEntryAlignment" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ]
      },
      "predecessor" : "0daa8708dfcc5c0c3803ab2e41542dba134d71d0~1"
    },
    "e97823fb5a340dcdaca397f1c68fee7c907c831c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ]
      },
      "predecessor" : "0daa8708dfcc5c0c3803ab2e41542dba134d71d0"
    },
    "8a6bb5623e92f3d636969488a04a516cd0ae7f36" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testDelayedOffsetsAndSizes", "testEntryAlignment", "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "e97823fb5a340dcdaca397f1c68fee7c907c831c"
    },
    "b1dcd19c2f87a57e4c4b96aebeb4a226f10af636" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeBigStoredEntryToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testDelayedOffsetsAndSizes", "testEntryAlignment", "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "8a6bb5623e92f3d636969488a04a516cd0ae7f36"
    },
    "12edac73ec454bfbdd634af474e140cca7522774" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeNever" ]
      },
      "predecessor" : "12edac73ec454bfbdd634af474e140cca7522774~1"
    },
    "d75b89856ef29bbec6784cd6aa714eafe0eeb312" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testDelayedOffsetsAndSizes", "testEntryAlignment", "testEntryAlignmentExceed", "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "d75b89856ef29bbec6784cd6aa714eafe0eeb312~1"
    },
    "496691bfd82374f1c1bfee8719309343c2fa878d" : {
      "testcases" : {
        "org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest" : [ "testReadTakingByteArray", "testReadTakingNoArguments", "testSkipReturningPositive", "testSkipReturningZero" ],
        "org.apache.commons.compress.utils.ChecksumVerifyingInputStreamTest" : [ "testReadTakingByteArrayThrowsIOException" ]
      },
      "predecessor" : "496691bfd82374f1c1bfee8719309343c2fa878d~1"
    },
    "6f379134ae1807cd404ed6c9579707e5dc6a6df0" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "rejectsBlocksWithoutChecksum" ],
        "org.apache.commons.compress.utils.ChecksumCalculatingInputStreamTest" : [ "testReadTakingByteArray", "testReadTakingNoArguments", "testSkipReturningPositive", "testSkipReturningZero" ]
      },
      "predecessor" : "6f379134ae1807cd404ed6c9579707e5dc6a6df0~1"
    },
    "6b2bd2df127be522a18d044980e84a8b638f25b7" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testRoundTripOctalOrBinary8" ]
      },
      "predecessor" : "6f379134ae1807cd404ed6c9579707e5dc6a6df0"
    },
    "2c8892a206c9374b0cde6fce72299b0fe630f3a0" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testRoundTripOctalOrBinary8" ]
      },
      "predecessor" : "2c8892a206c9374b0cde6fce72299b0fe630f3a0~1"
    },
    "137aa57f9291b5f390de740266042587cfede7ce" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberStarMode", "testOldEntryStarMode" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testRoundTripOctalOrBinary12" ]
      },
      "predecessor" : "137aa57f9291b5f390de740266042587cfede7ce~1"
    },
    "02735ad7e6313515a846bc15bcc89cf254f8161f" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testLinkFlagConstructor", "testLinkFlagConstructorWithFileFlag", "testLinkFlagConstructorWithPreserve", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "shouldReadBigGid", "shouldUseSpecifiedEncodingWhenReadingGNULongNames" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPadsOutputToFullBlockLength", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testRoundTripOctalOrBinary12", "testRoundTripOctalOrBinary8" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "02735ad7e6313515a846bc15bcc89cf254f8161f~1"
    },
    "4be9979b45ceadc50dc24607884d34613fead1f5" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testRoundTripOctalOrBinary12", "testRoundTripOctalOrBinary8" ]
      },
      "predecessor" : "4be9979b45ceadc50dc24607884d34613fead1f5~1"
    },
    "b6ae1d09c384b57115bb34ed94c90e256e4b66b9" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "shouldReadBigGid", "shouldUseSpecifiedEncodingWhenReadingGNULongNames" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "b6ae1d09c384b57115bb34ed94c90e256e4b66b9~1"
    },
    "c93d3e1d7db2971a4e1e7e79d7bf933268cb970e" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.DataDescriptorTest" : [ "doesntWriteDataDescriptorForDeflatedEntryOnSeekableOutput", "doesntWriteDataDescriptorWhenAddingRawEntries", "writesDataDescriptorForDeflatedEntryOnUnseekableOutput" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeBigStoredEntryToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testDelayedOffsetsAndSizes", "testEntryAlignment", "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ],
        "org.apache.commons.compress.utils.FixedLengthBlockOutputStreamTest" : [ "testMultiWriteBuf", "testPartialWritingThrowsException", "testSmallWrite", "testSmallWriteToStream", "testWithFileOutputStream", "testWriteBuf", "testWriteFailsAfterDestClosedThrowsException", "testWriteFailsAfterFLClosedThrowsException" ]
      },
      "predecessor" : "e57007c00d577c8f66a5d93681058a528613645c"
    },
    "9caad351f30249cc72fb2840f87ad12fe660978f" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testParseReparse", "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "shouldReadNestedZip", "testOffsets", "testReadingOfFirstStoredEntry", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testCDOrderInMemory", "testConcurrentReadFile", "testConcurrentReadSeekable", "testDoubleClose", "testOffsets", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testUnixSymlinkSampleFile", "testUnzipBZip2CompressedEntry" ]
      },
      "predecessor" : "c93d3e1d7db2971a4e1e7e79d7bf933268cb970e"
    },
    "19e1b02f754a9b7bc969eb17bd52cc36a85c4d74" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ]
      },
      "predecessor" : "9caad351f30249cc72fb2840f87ad12fe660978f"
    },
    "9bcdc3e9f77f101a0d3031c341c9b4ea554d34de" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU", "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "survivesBlankLinesInPaxHeader", "survivesPaxHeaderWithNameEndingInSlash", "testCompress197", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testBlockSizes", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "9bcdc3e9f77f101a0d3031c341c9b4ea554d34de~1"
    },
    "5481dd326025de2da7d89089cb969759972e7a8c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingDeflate" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDeflateUnarchive" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZNativeHeapTest" : [ "testEndDeflaterOnCloseStream", "testEndInflaterOnCloseStream" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testDeflateRoundtrip", "testDeflateWithConfiguration", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory" ]
      },
      "predecessor" : "9bcdc3e9f77f101a0d3031c341c9b4ea554d34de"
    },
    "d0595b7121f57f1f49fe7fdc384479dd73ad64f5" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testConcurrentReadFile", "testConcurrentReadSeekable" ],
        "org.apache.commons.compress.archivers.zip.ZipLongTest" : [ "testClone", "testEquals", "testSign", "testToBytes" ]
      },
      "predecessor" : "d0595b7121f57f1f49fe7fdc384479dd73ad64f5~1"
    },
    "cd1d329dba95dae161317c123269c24282001a66" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testBitsAreSetWithTime", "testGettersSetters", "testMisc", "testParseReparse", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testConcurrentReadFile" ]
      },
      "predecessor" : "cd1d329dba95dae161317c123269c24282001a66~1"
    },
    "8251cd68f4db4bd56d88646e10d34ef4a1fdf90f" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testConcurrentReadFile" ]
      },
      "predecessor" : "8251cd68f4db4bd56d88646e10d34ef4a1fdf90f~1"
    },
    "8526b85e269b87187008b502692406a5ab1bb907" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile" ]
      },
      "predecessor" : "8526b85e269b87187008b502692406a5ab1bb907~1"
    },
    "283f1bceb87883ba6c965750e9880ce3d67af089" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.z.ZCompressorInputStreamTest" : [ "testFailsToCreateZCompressorInputStreamAndThrowsIOException" ]
      },
      "predecessor" : "2ed2771ca993f24ec6a9511f870d1612a58cfcf7"
    },
    "20494851ef1727739970d2784a805aa928b742e5" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile" ]
      },
      "predecessor" : "20494851ef1727739970d2784a805aa928b742e5~1"
    },
    "db586baee29fc90f79898e9a274cc1bd585b5f53" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testDetection", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209", "testEncodingInputStream", "testEncodingInputStreamAutodetect", "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive", "testCpioUnarchiveCreatedByRedlineRpm" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely", "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU", "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testExtraPaxHeaders", "testLinkFlagConstructor", "testLinkFlagConstructorWithFileFlag", "testLinkFlagConstructorWithPreserve", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "paxHeaderEntryWithEmptyValueRemovesKey", "readNonAsciiPaxHeader", "readPaxHeaderWithEmbeddedNewline", "readSimplePaxHeader", "readsArchiveCompletely_COMPRESS245", "secondEntryWinsWhenPaxHeaderContainsDuplicateKey", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "survivesBlankLinesInPaxHeader", "survivesPaxHeaderWithNameEndingInSlash", "testCompress197", "testGetAndSetOfPaxEntry", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testBlockSizes", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testPutGlobalPaxHeaderEntry", "testRecordSize", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testName", "testNegative", "testOverflow", "testParseOctal", "testParseOctalCompress330", "testParseOctalInvalid", "testReadNegativeBinary12Byte", "testReadNegativeBinary8Byte", "testRoundEncoding", "testRoundTripNames", "testRoundTripOctal", "testRoundTripOctalOrBinary12", "testRoundTripOctalOrBinary8", "testTrailers", "testVerifyHeaderCheckSum", "testWriteNegativeBinary8Byte" ],
        "org.apache.commons.compress.archivers.zip.DataDescriptorTest" : [ "doesntWriteDataDescriptorForDeflatedEntryOnSeekableOutput", "doesntWriteDataDescriptorWhenAddingRawEntries", "writesDataDescriptorForDeflatedEntryOnUnseekableOutput" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeBigStoredEntryToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "isUnixSymlinkIsFalseIfMoreThanOneFlagIsSet", "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testOffsets", "testReadingOfFirstStoredEntry", "testThrowOnInvalidEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "testWithBytesAfterData", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipEncodingTest" : [ "testNioCp1252Encoding", "testSimpleCp437Encoding", "testSimpleCp850Encoding" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testCDOrderInMemory", "testConcurrentReadFile", "testConcurrentReadSeekable", "testDelayedOffsetsAndSizes", "testDoubleClose", "testDuplicateEntry", "testEntryAlignment", "testEntryAlignmentExceed", "testExcessDataInZip64ExtraField", "testOffsets", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "20494851ef1727739970d2784a805aa928b742e5"
    },
    "a67bdc013c9fd965abaca375b9b47554a115f40e" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testDetection", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209", "testEncodingInputStream", "testEncodingInputStreamAutodetect", "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive", "testCpioUnarchiveCreatedByRedlineRpm" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely", "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU", "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testExtraPaxHeaders", "testLinkFlagConstructor", "testLinkFlagConstructorWithFileFlag", "testLinkFlagConstructorWithPreserve", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "paxHeaderEntryWithEmptyValueRemovesKey", "readNonAsciiPaxHeader", "readPaxHeaderWithEmbeddedNewline", "readSimplePaxHeader", "readsArchiveCompletely_COMPRESS245", "secondEntryWinsWhenPaxHeaderContainsDuplicateKey", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "survivesBlankLinesInPaxHeader", "survivesPaxHeaderWithNameEndingInSlash", "testCompress197", "testGetAndSetOfPaxEntry", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testBlockSizes", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testPutGlobalPaxHeaderEntry", "testRecordSize", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testName", "testNegative", "testOverflow", "testParseOctal", "testParseOctalCompress330", "testParseOctalInvalid", "testReadNegativeBinary12Byte", "testReadNegativeBinary8Byte", "testRoundEncoding", "testRoundTripNames", "testRoundTripOctal", "testRoundTripOctalOrBinary12", "testRoundTripOctalOrBinary8", "testTrailers", "testVerifyHeaderCheckSum", "testWriteNegativeBinary8Byte" ],
        "org.apache.commons.compress.archivers.zip.DataDescriptorTest" : [ "doesntWriteDataDescriptorForDeflatedEntryOnSeekableOutput", "doesntWriteDataDescriptorWhenAddingRawEntries", "writesDataDescriptorForDeflatedEntryOnUnseekableOutput" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeBigStoredEntryToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "isUnixSymlinkIsFalseIfMoreThanOneFlagIsSet", "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testOffsets", "testReadingOfFirstStoredEntry", "testThrowOnInvalidEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "testWithBytesAfterData", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipEncodingTest" : [ "testGetNonexistentEncodng", "testIsUTF8", "testNioCp1252Encoding", "testNothingToMakeCoverallsHappier", "testSimpleCp437Encoding", "testSimpleCp850Encoding" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testCDOrderInMemory", "testConcurrentReadFile", "testConcurrentReadSeekable", "testDelayedOffsetsAndSizes", "testDoubleClose", "testDuplicateEntry", "testEntryAlignment", "testEntryAlignmentExceed", "testExcessDataInZip64ExtraField", "testOffsets", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "a67bdc013c9fd965abaca375b9b47554a115f40e~1"
    },
    "b745af3975a0bb3acddbc59ef85860d08221a010" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipEncodingTest" : [ "testNioCp1252Encoding", "testSimpleCp437Encoding", "testSimpleCp850Encoding" ]
      },
      "predecessor" : "a67bdc013c9fd965abaca375b9b47554a115f40e"
    },
    "90a73a4dee53129e33a552e49cb7835ecebb3a5f" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testExtraPaxHeaders", "testLinkFlagConstructor", "testLinkFlagConstructorWithFileFlag", "testLinkFlagConstructorWithPreserve", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "shouldReadBigGid", "shouldUseSpecifiedEncodingWhenReadingGNULongNames" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testBlockSizes", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testPutGlobalPaxHeaderEntry", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testName", "testRoundEncoding", "testRoundTripNames" ],
        "org.apache.commons.compress.archivers.zip.DataDescriptorTest" : [ "doesntWriteDataDescriptorForDeflatedEntryOnSeekableOutput", "doesntWriteDataDescriptorWhenAddingRawEntries", "writesDataDescriptorForDeflatedEntryOnUnseekableOutput" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipEncodingTest" : [ "testEbcidic", "testNioCp1252Encoding", "testSimpleCp437Encoding", "testSimpleCp850Encoding" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testConcurrentReadSeekable", "testDelayedOffsetsAndSizes", "testEntryAlignment", "testEntryAlignmentExceed", "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "b745af3975a0bb3acddbc59ef85860d08221a010"
    },
    "fde66702c33d3888b682adc7e6c35dd21cb1e8da" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testDetection", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209", "testEncodingInputStream", "testEncodingInputStreamAutodetect", "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive", "testCpioUnarchiveCreatedByRedlineRpm" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely", "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU", "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testExtraPaxHeaders", "testLinkFlagConstructor", "testLinkFlagConstructorWithFileFlag", "testLinkFlagConstructorWithPreserve", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "paxHeaderEntryWithEmptyValueRemovesKey", "readNonAsciiPaxHeader", "readPaxHeaderWithEmbeddedNewline", "readSimplePaxHeader", "readsArchiveCompletely_COMPRESS245", "secondEntryWinsWhenPaxHeaderContainsDuplicateKey", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "survivesBlankLinesInPaxHeader", "survivesPaxHeaderWithNameEndingInSlash", "testCompress197", "testGetAndSetOfPaxEntry", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testBlockSizes", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testPutGlobalPaxHeaderEntry", "testRecordSize", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testName", "testNegative", "testOverflow", "testParseOctal", "testParseOctalCompress330", "testParseOctalInvalid", "testReadNegativeBinary12Byte", "testReadNegativeBinary8Byte", "testRoundEncoding", "testRoundTripNames", "testRoundTripOctal", "testRoundTripOctalOrBinary12", "testRoundTripOctalOrBinary8", "testTrailers", "testVerifyHeaderCheckSum", "testWriteNegativeBinary8Byte" ],
        "org.apache.commons.compress.archivers.zip.DataDescriptorTest" : [ "doesntWriteDataDescriptorForDeflatedEntryOnSeekableOutput", "doesntWriteDataDescriptorWhenAddingRawEntries", "writesDataDescriptorForDeflatedEntryOnUnseekableOutput" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeBigStoredEntryToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "isUnixSymlinkIsFalseIfMoreThanOneFlagIsSet", "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testOffsets", "testReadingOfFirstStoredEntry", "testThrowOnInvalidEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "testWithBytesAfterData", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipEncodingTest" : [ "testEbcidic", "testGetNonexistentEncodng", "testIsUTF8", "testNioCp1252Encoding", "testNothingToMakeCoverallsHappier", "testSimpleCp437Encoding", "testSimpleCp850Encoding" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testCDOrderInMemory", "testConcurrentReadFile", "testConcurrentReadSeekable", "testDelayedOffsetsAndSizes", "testDoubleClose", "testDuplicateEntry", "testEntryAlignment", "testEntryAlignmentExceed", "testExcessDataInZip64ExtraField", "testOffsets", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "fde66702c33d3888b682adc7e6c35dd21cb1e8da~1"
    },
    "0065a044e998559df5127a7494953fe863016dca" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testConcurrentReadFile" ]
      },
      "predecessor" : "0065a044e998559df5127a7494953fe863016dca~1"
    },
    "ffa1c55e7f9d8808e4e440effe78e31aa89a4ec1" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.AsiExtraFieldTest" : [ "testClone" ]
      },
      "predecessor" : "b09b95124bc27f39e27ecfed90ce40947bcbf663"
    },
    "10dbea13f4da599af0032dbd77ac7ef9bf047b45" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.AsiExtraFieldTest" : [ "testClone" ]
      },
      "predecessor" : "10dbea13f4da599af0032dbd77ac7ef9bf047b45~1"
    },
    "1ce02e03a870247293051654aeee75807c2276de" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testExtraPaxHeaders", "testLinkFlagConstructor", "testLinkFlagConstructorWithFileFlag", "testLinkFlagConstructorWithPreserve", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "shouldReadBigGid", "shouldUseSpecifiedEncodingWhenReadingGNULongNames" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testBlockSizes", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testPutGlobalPaxHeaderEntry", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testName", "testRoundEncoding", "testRoundTripNames" ],
        "org.apache.commons.compress.archivers.zip.DataDescriptorTest" : [ "doesntWriteDataDescriptorForDeflatedEntryOnSeekableOutput", "doesntWriteDataDescriptorWhenAddingRawEntries", "writesDataDescriptorForDeflatedEntryOnUnseekableOutput" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipEncodingTest" : [ "testEbcidic", "testNioCp1252Encoding", "testSimpleCp437Encoding", "testSimpleCp850Encoding" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testDelayedOffsetsAndSizes", "testEntryAlignment", "testEntryAlignmentExceed", "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "1ce02e03a870247293051654aeee75807c2276de~1"
    },
    "cd90f9ea24823be24133075130cc7cf899527620" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipEncodingTest" : [ "testEbcidic", "testNioCp1252Encoding", "testSimpleCp437Encoding", "testSimpleCp850Encoding" ]
      },
      "predecessor" : "cd90f9ea24823be24133075130cc7cf899527620~1"
    },
    "b4445543def1cc905f66334d42f250d5a637a01d" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testExtraPaxHeaders", "testLinkFlagConstructor", "testLinkFlagConstructorWithFileFlag", "testLinkFlagConstructorWithPreserve", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "shouldReadBigGid", "shouldUseSpecifiedEncodingWhenReadingGNULongNames" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testBlockSizes", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testPutGlobalPaxHeaderEntry", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testName", "testRoundEncoding", "testRoundTripNames" ],
        "org.apache.commons.compress.archivers.zip.DataDescriptorTest" : [ "doesntWriteDataDescriptorForDeflatedEntryOnSeekableOutput", "doesntWriteDataDescriptorWhenAddingRawEntries", "writesDataDescriptorForDeflatedEntryOnUnseekableOutput" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipEncodingTest" : [ "testEbcidic", "testNioCp1252Encoding", "testSimpleCp437Encoding", "testSimpleCp850Encoding" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testConcurrentReadSeekable", "testDelayedOffsetsAndSizes", "testEntryAlignment", "testEntryAlignmentExceed", "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "b4445543def1cc905f66334d42f250d5a637a01d~1"
    },
    "3e3a1388368e8e4421fed0b5222904d40a8805ce" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipEncodingTest" : [ "testGetNonexistentEncodng" ]
      },
      "predecessor" : "3e3a1388368e8e4421fed0b5222904d40a8805ce~1"
    },
    "002d7bf508ee59f23a04a9f21d02e9673dd38a71" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU", "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testExtraPaxHeaders", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "survivesBlankLinesInPaxHeader", "survivesPaxHeaderWithNameEndingInSlash", "testCompress197", "testGetAndSetOfPaxEntry", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testLongNameMd5Hash", "testOldEntryPosixMode", "testOldEntryStarMode", "testPutGlobalPaxHeaderEntry", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "3e3a1388368e8e4421fed0b5222904d40a8805ce"
    },
    "f8a7156259dcc1b3321086939234d80b6ab828c6" : {
      "testcases" : {
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ]
      },
      "predecessor" : "9f5af267e8c143e16f8b20fddb02ada096ee9df8"
    },
    "661008f8238acb71301b172a6aa9aaa8114d0c9c" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testExtraPaxHeaders", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "shouldReadBigGid", "shouldUseSpecifiedEncodingWhenReadingGNULongNames" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testBlockSizes", "testCount", "testLongNameMd5Hash", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testPutGlobalPaxHeaderEntry", "testRecordSize", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "f8a7156259dcc1b3321086939234d80b6ab828c6"
    },
    "469cf4d886f9a184168ba2d179899a600725d4c4" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU", "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testExtraPaxHeaders", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "skipsDevNumbersWhenEntryIsNoDevice", "survivesBlankLinesInPaxHeader", "survivesPaxHeaderWithNameEndingInSlash", "testCompress197", "testGetAndSetOfPaxEntry", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testLongNameMd5Hash", "testOldEntryPosixMode", "testOldEntryStarMode", "testPutGlobalPaxHeaderEntry", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testName", "testRoundEncoding", "testRoundTripNames" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "661008f8238acb71301b172a6aa9aaa8114d0c9c"
    },
    "12d9a805a6df7afdccfac94a7061d369cc986efa" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testName" ]
      },
      "predecessor" : "12d9a805a6df7afdccfac94a7061d369cc986efa~1"
    },
    "bbe4d51f7bbd50e9f878e5c884501856c5e6388c" : {
      "testcases" : {
        "org.apache.commons.compress.utils.FixedLengthBlockOutputStreamTest" : [ "testMultiWriteBuf", "testPartialWritingThrowsException", "testSmallWrite", "testSmallWriteToStream", "testWithFileOutputStream", "testWriteBuf", "testWriteFailsAfterFLClosedThrowsException", "testWriteSingleBytes" ]
      },
      "predecessor" : "12d9a805a6df7afdccfac94a7061d369cc986efa"
    },
    "c82dc1fc6238b6f22797c678f10b64c9cd36ddcb" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testExtraPaxHeaders", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "shouldReadBigGid", "shouldUseSpecifiedEncodingWhenReadingGNULongNames" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testBlockSizes", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testPutGlobalPaxHeaderEntry", "testRecordSize", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "bbe4d51f7bbd50e9f878e5c884501856c5e6388c"
    },
    "7984387af004fcfe1d1ee12e2c8e6b68f23be001" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testConcatenatedStreamsReadFirstOnly" ],
        "org.apache.commons.compress.compressors.CompressorServiceLoaderTest" : [ "testInputStream" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testLZMAMemoryLimit", "testMutiples", "testXZMemoryLimitOnRead", "testXZMemoryLimitOnSkip", "testZMemoryLimit" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testCorruptedInput", "testGzipUnarchive" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStreamTest" : [ "testBrotliUnarchive" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated" ]
      },
      "predecessor" : "c82dc1fc6238b6f22797c678f10b64c9cd36ddcb"
    },
    "1c382914c0ca52e786937e222d8e7aad17348cfa" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testConcatenatedStreamsReadFirstOnly" ],
        "org.apache.commons.compress.compressors.CompressorServiceLoaderTest" : [ "testInputStream" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testLZMAMemoryLimit", "testMutiples", "testXZMemoryLimitOnRead", "testXZMemoryLimitOnSkip", "testZMemoryLimit" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testCorruptedInput", "testGzipUnarchive" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStreamTest" : [ "testBrotliUnarchive" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated" ],
        "org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStreamTest" : [ "testZstandardUnarchive" ]
      },
      "predecessor" : "1c382914c0ca52e786937e222d8e7aad17348cfa~1"
    },
    "099cdc213efa00355f3b6d968423b8ef09fede47" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testConcatenatedStreamsReadFirstOnly" ],
        "org.apache.commons.compress.compressors.CompressorServiceLoaderTest" : [ "testInputStream" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testLZMAMemoryLimit", "testMutiples", "testXZMemoryLimitOnRead", "testXZMemoryLimitOnSkip", "testZMemoryLimit" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testCorruptedInput", "testGzipUnarchive" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStreamTest" : [ "testBrotliUnarchive" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated" ],
        "org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStreamTest" : [ "testZstandardUnarchive" ]
      },
      "predecessor" : "1c382914c0ca52e786937e222d8e7aad17348cfa"
    },
    "a0aec901f411b4bc26734745297b7651d7e6b9a2" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetect", "testDetection", "testLZMAMemoryLimit", "testMutiples", "testXZMemoryLimitOnRead", "testXZMemoryLimitOnSkip", "testZMemoryLimit" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchiveViaAutoDetection" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4ViaFactoryAutoDetection" ]
      },
      "predecessor" : "a0aec901f411b4bc26734745297b7651d7e6b9a2~1"
    },
    "ff0e842058091b3310340f51a130a65a1cf6f725" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ]
      },
      "predecessor" : "a0aec901f411b4bc26734745297b7651d7e6b9a2"
    },
    "9db5028656f9be41ae5809f88ddd4c8ac0b48364" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStreamTest" : [ "rewritingOfFinalBlockWithTrailingLZ77Literals", "rewritingOfFinalBlockWithoutTrailingLZ77Literals", "rewritingOfFourPairs", "rewritingWithFinalBackreferenceAndOffsetBiggerThan1" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz77support.LZ77CompressorTest" : [ "blaExampleSmallerWindowSize", "blaExampleWithFullArrayAvailableForCompression", "blaExampleWithPrefill", "blaExampleWithPrefillBiggerThanWindowSize", "blaExampleWithShortPrefill", "blaExampleWithShorterBackReferenceLength", "blaExampleWithSingleByteWrites", "cantPrefillAfterCompress", "cantPrefillTwice", "nonCompressableSentAsSingleBytes", "nonCompressableWithLengthGreaterThanLiteralMaxButLessThanTwiceWindowSize", "nonCompressableWithLengthSmallerThanLiteralMax", "nonCompressableWithLengthThatForcesWindowSlide", "samIAmExampleWithFullArrayAvailableForCompression" ],
        "org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest" : [ "blaTarRoundtrip", "blaTarRoundtripTunedForCompressionRatio", "blaTarRoundtripTunedForSpeed" ]
      },
      "predecessor" : "9db5028656f9be41ae5809f88ddd4c8ac0b48364~1"
    },
    "810ba6f292cb4eca0d843555c1e8985d9df977c4" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStreamTest" : [ "testZstandardUnarchive" ]
      },
      "predecessor" : "9db5028656f9be41ae5809f88ddd4c8ac0b48364"
    },
    "34b75c6f0ac96df0221bfbd11cafdc62dc0baa79" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ],
        "org.apache.commons.compress.compressors.CompressorServiceLoaderTest" : [ "testOutputStream" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateCreation" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testGzipCreation" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "lzmaRoundtrip" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testXZCreation" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ]
      },
      "predecessor" : "810ba6f292cb4eca0d843555c1e8985d9df977c4"
    },
    "ccf4ce767a6cc07f1a88a0c33393e394af3c328b" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ]
      },
      "predecessor" : "ccf4ce767a6cc07f1a88a0c33393e394af3c328b~1"
    },
    "0c75ccec267ce902ff36278ba928b4573f4fb937" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ]
      },
      "predecessor" : "ccf4ce767a6cc07f1a88a0c33393e394af3c328b"
    },
    "6a80b208569f3d32e39224690a126e52ce06ad14" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ],
        "org.apache.commons.compress.compressors.CompressorServiceLoaderTest" : [ "testOutputStream" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateCreation" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testGzipCreation" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "lzmaRoundtrip" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testXZCreation" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.zstandard.ZstdRoundtripTest" : [ "factoryRoundtrip" ]
      },
      "predecessor" : "0c75ccec267ce902ff36278ba928b4573f4fb937"
    },
    "de9665f3cbaee56c5089392fbee0a6b81689ed8d" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testConcatenatedStreamsReadFirstOnly" ],
        "org.apache.commons.compress.compressors.CompressorServiceLoaderTest" : [ "testInputStream", "testOutputStream" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateCreation", "testDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testLZMAMemoryLimit", "testMutiples", "testXZMemoryLimitOnRead", "testXZMemoryLimitOnSkip", "testZMemoryLimit" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testCorruptedInput", "testGzipCreation", "testGzipUnarchive" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "lzmaRoundtrip", "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testXZCreation", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStreamTest" : [ "testBrotliUnarchive" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated" ],
        "org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStreamTest" : [ "testZstandardUnarchive" ],
        "org.apache.commons.compress.compressors.zstandard.ZstdRoundtripTest" : [ "factoryRoundtrip" ]
      },
      "predecessor" : "de9665f3cbaee56c5089392fbee0a6b81689ed8d~1"
    },
    "d07f04b73c06c45b75f53f38b03b25c987b7bca5" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.DataDescriptorTest" : [ "doesntWriteDataDescriptorForDeflatedEntryOnSeekableOutput", "doesntWriteDataDescriptorWhenAddingRawEntries", "writesDataDescriptorForDeflatedEntryOnUnseekableOutput" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldReadNestedZip", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "testWithBytesAfterData" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testConcurrentReadFile", "testConcurrentReadSeekable", "testDelayedOffsetsAndSizes", "testDuplicateEntry", "testEntryAlignment", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "de9665f3cbaee56c5089392fbee0a6b81689ed8d"
    },
    "ff5fb8a7a657a9068e8cade4566c69c62a1825d9" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStreamTest" : [ "rewritingOfFinalBlockWithTrailingLZ77Literals", "rewritingOfFinalBlockWithoutTrailingLZ77Literals", "rewritingOfFourPairs", "rewritingWithFinalBackreferenceAndOffsetBiggerThan1" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz77support.LZ77CompressorTest" : [ "blaExampleSmallerWindowSize", "blaExampleWithFullArrayAvailableForCompression", "blaExampleWithPrefill", "blaExampleWithPrefillBiggerThanWindowSize", "blaExampleWithShortPrefill", "blaExampleWithShorterBackReferenceLength", "blaExampleWithSingleByteWrites", "cantPrefillAfterCompress", "cantPrefillTwice", "nonCompressableSentAsSingleBytes", "nonCompressableWithLengthGreaterThanLiteralMaxButLessThanTwiceWindowSize", "nonCompressableWithLengthSmallerThanLiteralMax", "nonCompressableWithLengthThatForcesWindowSlide", "samIAmExampleWithFullArrayAvailableForCompression" ],
        "org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest" : [ "blaTarRoundtrip", "blaTarRoundtripTunedForCompressionRatio", "blaTarRoundtripTunedForSpeed" ]
      },
      "predecessor" : "2042aa001474179a031a368f9d6ec73c2c686965"
    },
    "a62c3d0d8301c450d5bd0ab1bd9bb3862aac5853" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testConcurrentReadFile", "testConcurrentReadSeekable" ]
      },
      "predecessor" : "a62c3d0d8301c450d5bd0ab1bd9bb3862aac5853~1"
    },
    "79e76d5f48fc44ae3d716ac28ebe1a76ebb90b61" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testConcurrentReadFile", "testConcurrentReadSeekable", "testDuplicateEntry", "testEntryAlignment", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "79e76d5f48fc44ae3d716ac28ebe1a76ebb90b61~1"
    },
    "07cc1a278b217d45cb090ff6cb3a7934105cb2d0" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testConcurrentReadFile", "testConcurrentReadSeekable", "testDuplicateEntry", "testEntryAlignment", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ],
        "org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStreamTest" : [ "closeCallsDecoder", "closeIsDelegatedJustOnce", "properSizeWhenClosed", "readWhenClosed", "uncompressedBlock" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "07cc1a278b217d45cb090ff6cb3a7934105cb2d0~1"
    },
    "c36fef5f567576ae143ad83fb0b0fa68998cab4c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testConcurrentReadFile", "testConcurrentReadSeekable", "testDuplicateEntry", "testEntryAlignment", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "c36fef5f567576ae143ad83fb0b0fa68998cab4c~1"
    },
    "ccc3067f5216630d6c96f21f1ed2ef174aba9bd5" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipArchiveCreationInMemory", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRawNameReadFromStream", "testRead7ZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testOffsets", "testReadingOfFirstStoredEntry", "testThrowOnInvalidEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "testWithBytesAfterData", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "ccc3067f5216630d6c96f21f1ed2ef174aba9bd5~1"
    },
    "53ec5829855e8a80b2857b7cfef8bce3e63058a7" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testConcatenatedStreamsReadFirstOnly" ],
        "org.apache.commons.compress.compressors.CompressorServiceLoaderTest" : [ "testInputStream" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testLZMAMemoryLimit", "testMutiples", "testXZMemoryLimitOnRead", "testXZMemoryLimitOnSkip", "testZMemoryLimit" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testCorruptedInput", "testGzipUnarchive" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStreamTest" : [ "testBrotliUnarchive" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated" ],
        "org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStreamTest" : [ "testZstandardUnarchive" ],
        "org.apache.commons.compress.compressors.zstandard.ZstdRoundtripTest" : [ "factoryRoundtrip" ]
      },
      "predecessor" : "53ec5829855e8a80b2857b7cfef8bce3e63058a7~1"
    },
    "0e74bef9b2bcc7f41123fb2eb6d10433ebb80a23" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStreamTest" : [ "uncompressedBlock", "uncompressedBlockAvailable", "uncompressedBlockViaFactory" ]
      },
      "predecessor" : "53ec5829855e8a80b2857b7cfef8bce3e63058a7"
    },
    "b97a02ca1c1c220f18971bce3dc41d781da8f5f0" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStreamTest" : [ "uncompressedBlock", "uncompressedBlockAvailable", "uncompressedBlockViaFactory" ]
      },
      "predecessor" : "b97a02ca1c1c220f18971bce3dc41d781da8f5f0~1"
    },
    "f4b750165bc27f6a36bc3abed650e18d474e296b" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStreamTest" : [ "uncompressedBlock", "uncompressedBlockAvailable", "uncompressedBlockViaFactory" ]
      },
      "predecessor" : "f4b750165bc27f6a36bc3abed650e18d474e296b~1"
    },
    "aed74ea03276362cd301a36787774843ebd4f70c" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStreamTest" : [ "closeCallsDecoder", "closeIsDelegatedJustOnce", "readWhenClosed", "streamIgnoresExtraBytesAfterDeflatedInput", "throwsEOFExceptionOnTruncatedStreams", "uncompressedBlock", "uncompressedBlockAvailable", "uncompressedBlockViaFactory" ]
      },
      "predecessor" : "f4b750165bc27f6a36bc3abed650e18d474e296b"
    },
    "27b16a26212d5e4b61ebe07c4bd9c36465f56702" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipArchiveCreationInMemory", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRawNameReadFromStream", "testRead7ZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testOffsets", "testReadingOfFirstStoredEntry", "testThrowOnInvalidEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "testWithBytesAfterData", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "27b16a26212d5e4b61ebe07c4bd9c36465f56702~1"
    },
    "e83b4d8484cdb3dcef44ce3aede866663b526158" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.DataDescriptorTest" : [ "doesntWriteDataDescriptorForDeflatedEntryOnSeekableOutput", "doesntWriteDataDescriptorWhenAddingRawEntries", "writesDataDescriptorForDeflatedEntryOnUnseekableOutput" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRead7ZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testOffsets", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "testWithBytesAfterData", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testCDOrderInMemory", "testConcurrentReadFile", "testConcurrentReadSeekable", "testDelayedOffsetsAndSizes", "testDoubleClose", "testDuplicateEntry", "testEntryAlignment", "testExcessDataInZip64ExtraField", "testOffsets", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "27b16a26212d5e4b61ebe07c4bd9c36465f56702"
    },
    "f488eba11289fae758646a21f86b2ad6c4156538" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.DataDescriptorTest" : [ "doesntWriteDataDescriptorWhenAddingRawEntries" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "isUnixSymlinkIsFalseIfMoreThanOneFlagIsSet" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testOffsets", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "testWithBytesAfterData", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testCDOrderInMemory", "testConcurrentReadFile", "testConcurrentReadSeekable", "testDelayedOffsetsAndSizes", "testDoubleClose", "testDuplicateEntry", "testEntryAlignment", "testExcessDataInZip64ExtraField", "testOffsets", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "f488eba11289fae758646a21f86b2ad6c4156538~1"
    },
    "d549178f36aaf95fd1aa2fe6a3c1403c095929b2" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipArchiveCreationInMemory", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRawNameReadFromStream", "testRead7ZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testOffsets", "testReadingOfFirstStoredEntry", "testThrowOnInvalidEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "testWithBytesAfterData", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "f488eba11289fae758646a21f86b2ad6c4156538"
    },
    "0517c7f2e4ea6806098453b295f230dd42a8f510" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testConcurrentReadFile" ]
      },
      "predecessor" : "d549178f36aaf95fd1aa2fe6a3c1403c095929b2"
    },
    "c2906092f9fab7bb718ba177d521ae152d4d9f1c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "nameSourceDefaultsToName", "nameSourceIsSetToEFS", "nameSourceIsSetToUnicodeExtraField", "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testOffsets", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "testWithBytesAfterData", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "nameSourceDefaultsToName", "nameSourceIsSetToEFS", "nameSourceIsSetToUnicodeExtraField", "testCDOrder", "testCDOrderInMemory", "testConcurrentReadFile", "testConcurrentReadSeekable", "testDoubleClose", "testExcessDataInZip64ExtraField", "testOffsets", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromJar", "testDeleteFromZip" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "0517c7f2e4ea6806098453b295f230dd42a8f510"
    },
    "ced2075cabcda4e5fb2db60e88cdf87bf815d24b" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "nameSourceDefaultsToName", "nameSourceIsSetToEFS", "nameSourceIsSetToUnicodeExtraField", "properUseOfInflater", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testOffsets", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "testWithBytesAfterData", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "nameSourceDefaultsToName", "nameSourceIsSetToEFS", "nameSourceIsSetToUnicodeExtraField", "testCDOrder", "testCDOrderInMemory", "testConcurrentReadFile", "testConcurrentReadSeekable", "testDoubleClose", "testExcessDataInZip64ExtraField", "testOffsets", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromJar", "testDeleteFromZip" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "ced2075cabcda4e5fb2db60e88cdf87bf815d24b~1"
    },
    "77a0a69e3135253b3762672ef6bdf96ebaa8a882" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "readDeflate64CompressedStreamWithDataDescriptor" ]
      },
      "predecessor" : "a123142d947dbf38fc053c29291b555872c91ff2"
    },
    "2d25368dd82e50dd68cf0d256084881e6a3153d9" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "readDeflate64CompressedStreamWithDataDescriptor" ],
        "org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStreamTest" : [ "streamIgnoresExtraBytesAfterDeflatedInput", "throwsEOFExceptionOnTruncatedStreams", "uncompressedBlock", "uncompressedBlockAvailable", "uncompressedBlockViaFactory" ]
      },
      "predecessor" : "2d25368dd82e50dd68cf0d256084881e6a3153d9~1"
    },
    "3600a5f510cee298397d5ffc21c978ab6e52a160" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "readDeflate64CompressedStreamWithDataDescriptor" ],
        "org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStreamTest" : [ "streamIgnoresExtraBytesAfterDeflatedInput", "throwsEOFExceptionOnTruncatedStreams", "uncompressedBlock", "uncompressedBlockAvailable", "uncompressedBlockViaFactory" ]
      },
      "predecessor" : "3600a5f510cee298397d5ffc21c978ab6e52a160~1"
    },
    "32d507b028b15fd21775f25c83f41059cdc58e75" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "readDeflate64CompressedStreamWithDataDescriptor" ],
        "org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStreamTest" : [ "streamIgnoresExtraBytesAfterDeflatedInput", "throwsEOFExceptionOnTruncatedStreams", "uncompressedBlock", "uncompressedBlockAvailable", "uncompressedBlockViaFactory" ]
      },
      "predecessor" : "3600a5f510cee298397d5ffc21c978ab6e52a160"
    },
    "b18ef2a10393824bd9a79c908bda656de4d45006" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.DataDescriptorTest" : [ "doesntWriteDataDescriptorWhenAddingRawEntries" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "isUnixSymlinkIsFalseIfMoreThanOneFlagIsSet" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "readDeflate64CompressedStreamWithDataDescriptor", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testOffsets", "testReadingOfFirstStoredEntry", "testThrowOnInvalidEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "testWithBytesAfterData", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrder", "testCDOrderInMemory", "testConcurrentReadFile", "testConcurrentReadSeekable", "testDelayedOffsetsAndSizes", "testDoubleClose", "testDuplicateEntry", "testEntryAlignment", "testExcessDataInZip64ExtraField", "testOffsets", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "32d507b028b15fd21775f25c83f41059cdc58e75"
    },
    "45b5e0cb3a4a499ff8b0594c082d490d7b7b7c1d" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "readDeflate64CompressedStreamWithDataDescriptor" ],
        "org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStreamTest" : [ "closeCallsDecoder", "closeIsDelegatedJustOnce", "streamIgnoresExtraBytesAfterDeflatedInput", "throwsEOFExceptionOnTruncatedStreams", "uncompressedBlock", "uncompressedBlockAvailable", "uncompressedBlockViaFactory" ]
      },
      "predecessor" : "b18ef2a10393824bd9a79c908bda656de4d45006"
    },
    "29ce3e0e9ecc31a5c3cecb19246ff978fc7e7c20" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip", "testWriteJar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceJar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.DataDescriptorTest" : [ "doesntWriteDataDescriptorForDeflatedEntryOnSeekableOutput", "doesntWriteDataDescriptorWhenAddingRawEntries", "writesDataDescriptorForDeflatedEntryOnUnseekableOutput" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testDelayedOffsetsAndSizes", "testEntryAlignment", "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile" ]
      },
      "predecessor" : "29ce3e0e9ecc31a5c3cecb19246ff978fc7e7c20~1"
    },
    "3bf9dad70ea4b93de850312cec2681f3242280c7" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testUnixModeInAddRaw", "testZipArchiveCreationInMemory", "testZipUnarchive" ]
      },
      "predecessor" : "3bf9dad70ea4b93de850312cec2681f3242280c7~1"
    },
    "135dd48fda61f81d9b8e0aec0661c1d48226ae3c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testConcurrentReadFile", "testConcurrentReadSeekable", "testDuplicateEntry", "testEntryAlignment", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "3bf9dad70ea4b93de850312cec2681f3242280c7"
    },
    "9240ae1b1764232f1a3c53298dd2281b72d2466d" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "nameSourceDefaultsToName", "nameSourceIsSetToEFS", "nameSourceIsSetToUnicodeExtraField", "properUseOfInflater", "readDeflate64CompressedStreamWithDataDescriptor", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testOffsets", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "testWithBytesAfterData", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "nameSourceDefaultsToName", "nameSourceIsSetToEFS", "nameSourceIsSetToUnicodeExtraField", "testCDOrder", "testCDOrderInMemory", "testConcurrentReadFile", "testConcurrentReadSeekable", "testDoubleClose", "testExcessDataInZip64ExtraField", "testOffsets", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToJar", "testDeleteFromJar", "testDeleteFromZip" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "135dd48fda61f81d9b8e0aec0661c1d48226ae3c"
    },
    "90d775ce2270c35a7c514f5638b8a3b23d5a4f3c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "readDeflate64CompressedStreamWithDataDescriptor" ],
        "org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStreamTest" : [ "streamIgnoresExtraBytesAfterDeflatedInput", "throwsEOFExceptionOnTruncatedStreams", "uncompressedBlock", "uncompressedBlockAvailable", "uncompressedBlockViaFactory" ]
      },
      "predecessor" : "9240ae1b1764232f1a3c53298dd2281b72d2466d"
    },
    "738c708be3dbfd99a6ef5c0b486bf0b55e315406" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveInMemoryTest", "getEntriesOfUnarchiveTest", "readEntriesOfSize0", "test7zDecryptUnarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testCompressedHeaderWithNonDefaultDictionarySize", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZMethodConfigurationTest" : [ "shouldAllowLZMA2OptionsForLZMA", "shouldAllowLZMA2OptionsForLZMA2", "shouldAllowNumberForBzip2", "shouldAllowNumberForDeflate", "shouldAllowNumberForLZMA", "shouldAllowNumberForLZMA2", "shouldNotAllowStringOptionsForLZMA", "shouldNotAllowStringOptionsForLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testLzmaWithIntConfiguration", "testLzmaWithOptionsConfiguration", "testNineFilesSomeNotEmpty", "testSevenFilesSomeNotEmpty", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "90d775ce2270c35a7c514f5638b8a3b23d5a4f3c"
    },
    "c66db899cb061c79934986f0efa19a50ca33703f" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipArchiveCreationInMemory", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "readDeflate64CompressedStreamWithDataDescriptor", "shouldReadNestedZip", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "testWithBytesAfterData" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "738c708be3dbfd99a6ef5c0b486bf0b55e315406"
    },
    "43e8d3d5f13209ee0c0bcf4b5a7d785fcae796da" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingDeflate" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDeflateUnarchive" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testDeflateRoundtrip", "testDeflateWithConfiguration", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory" ],
        "org.apache.commons.compress.archivers.zip.DataDescriptorTest" : [ "doesntWriteDataDescriptorWhenAddingRawEntries" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testConcurrentReadFile", "testConcurrentReadSeekable", "testDuplicateEntry", "testEntryAlignment", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "43e8d3d5f13209ee0c0bcf4b5a7d785fcae796da~1"
    },
    "b2fac804f5e867099cd84fe525d52bd77fa4ff19" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingDeflate" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDeflateUnarchive" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZNativeHeapTest" : [ "testEndInflaterOnCloseStream" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testDeflateRoundtrip", "testDeflateWithConfiguration", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testConcurrentReadFile", "testConcurrentReadSeekable", "testDuplicateEntry", "testEntryAlignment", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "43e8d3d5f13209ee0c0bcf4b5a7d785fcae796da"
    },
    "0194bb8ca57e5a4a3fd5fe3c39b0ccdeb4711043" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "detectsAndThrowsFor7z", "shortTextFilesAreNoTARs", "testCOMPRESS209", "testDetect", "testEncodingInputStreamAutodetect" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCompressedArchiveDetection" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAr", "testDeleteFromTar", "testDeletePlusAdd" ]
      },
      "predecessor" : "0194bb8ca57e5a4a3fd5fe3c39b0ccdeb4711043~1"
    },
    "f21a7054086522e3d34b569d8d05d5caa6297f69" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testDetection", "testDetectionNotArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "shortTextFilesAreNoTARs", "testCOMPRESS209", "testDetect", "testEncodingInputStream", "testEncodingInputStreamAutodetect" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testExtraPaxHeaders", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "skipsDevNumbersWhenEntryIsNoDevice", "survivesBlankLinesInPaxHeader", "survivesPaxHeaderWithNameEndingInSlash", "testCompress197", "testGetAndSetOfPaxEntry", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testBlockSizes", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testPutGlobalPaxHeaderEntry", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetect", "testDetection", "testLZMAMemoryLimit", "testMutiples", "testXZMemoryLimitOnRead", "testXZMemoryLimitOnSkip", "testZMemoryLimit" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchiveViaAutoDetection" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4ViaFactoryAutoDetection" ],
        "org.apache.commons.compress.compressors.lzma.LZMAUtilsTestCase" : [ "testCachingIsEnabledByDefaultAndLZMAIsPresent", "testCanTurnOffCaching", "testGetCompressedFilename", "testGetUncompressedFilename", "testIsCompressedFilename", "testMatches", "testTurningOnCachingReEvaluatesAvailability" ]
      },
      "predecessor" : "f21a7054086522e3d34b569d8d05d5caa6297f69~1"
    },
    "f8e33e702ca0570076c58eaa7a83baeefece9553" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS178" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testParseOctalInvalid" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ]
      },
      "predecessor" : "f8e33e702ca0570076c58eaa7a83baeefece9553~1"
    },
    "6c203ab46b24751c285f021caad9d8969cf2f45f" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testConcurrentReadFile", "testConcurrentReadSeekable", "testDuplicateEntry", "testEntryAlignment", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "6c203ab46b24751c285f021caad9d8969cf2f45f~1"
    },
    "5b56985334a63d63cdd9bbea30f225013302a7d3" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testLZMAMemoryLimit", "testOverride", "testXZMemoryLimitOnRead", "testXZMemoryLimitOnSkip", "testZMemoryLimit" ]
      },
      "predecessor" : "6c203ab46b24751c285f021caad9d8969cf2f45f"
    },
    "f43590aaf5416ce79cb1aad770c83096ddf2a5c2" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteCpio", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "shortTextFilesAreNoTARs", "testCOMPRESS209", "testDetect", "testEncodingInputStream", "testEncodingInputStreamAutodetect", "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingLZMA" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "testReadingOfAttributesDosVersion", "testReadingOfAttributesUnixVersion" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveUtilTest" : [ "convert16", "convert32", "convert64" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveInMemoryTest", "getEntriesOfUnarchiveTest", "readEntriesOfSize0", "test7zDecryptUnarchive", "test7zDeflate64Unarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testCompressedHeaderWithNonDefaultDictionarySize", "testEncryptedArchiveRequiresPassword" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testLzmaWithIntConfiguration", "testLzmaWithOptionsConfiguration" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testExtraPaxHeaders", "testLinkFlagConstructor", "testLinkFlagConstructorWithFileFlag", "testLinkFlagConstructorWithPreserve", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "shouldReadBigGid", "shouldUseSpecifiedEncodingWhenReadingGNULongNames" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testBlockSizes", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testPutGlobalPaxHeaderEntry", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testRoundTripOctalOrBinary8", "testRoundTripOctalOrBinary8_ValueTooBigForBinary" ],
        "org.apache.commons.compress.archivers.zip.AsiExtraFieldTest" : [ "testReparse" ],
        "org.apache.commons.compress.archivers.zip.DataDescriptorTest" : [ "doesntWriteDataDescriptorForDeflatedEntryOnSeekableOutput", "doesntWriteDataDescriptorWhenAddingRawEntries", "writesDataDescriptorForDeflatedEntryOnUnseekableOutput" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testParse", "testParseCentral", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.GeneralPurposeBitTest" : [ "testDataDescriptor", "testEncryption", "testLanguageEncodingFlag", "testParseEdgeCases", "testStrongEncryption" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X000A_NTFSTest" : [ "simpleRountrip" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testParseReparse", "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.Zip64ExtendedInformationExtraFieldTest" : [ "testReadCDSizesOffsetAndDisk", "testReadCDSomethingAndDisk", "testReadLFHSizesAndDisk", "testReadLFHSizesOffsetAndDisk" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "isUnixSymlinkIsFalseIfMoreThanOneFlagIsSet", "testExtraFieldMerging" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "nameSourceDefaultsToName", "nameSourceIsSetToEFS", "nameSourceIsSetToUnicodeExtraField", "properUseOfInflater", "readDeflate64CompressedStreamWithDataDescriptor", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testOffsets", "testReadingOfFirstStoredEntry", "testThrowOnInvalidEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "testWithBytesAfterData", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "nameSourceDefaultsToName", "nameSourceIsSetToEFS", "nameSourceIsSetToUnicodeExtraField", "testCDOrder", "testCDOrderInMemory", "testConcurrentReadFile", "testConcurrentReadSeekable", "testDelayedOffsetsAndSizes", "testDoubleClose", "testDuplicateEntry", "testEntryAlignment", "testEntryAlignmentExceed", "testExcessDataInZip64ExtraField", "testInvalidAlignment", "testOffsets", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipLongTest" : [ "testFromBytes", "testSign" ],
        "org.apache.commons.compress.archivers.zip.ZipShortTest" : [ "testFromBytes", "testSign" ],
        "org.apache.commons.compress.archivers.zip.ZipUtilTest" : [ "testAdjustToLong", "testBigToLong", "testInsideCalendar", "testLongToBig", "testMinTime", "testOutsideCalendar", "testReverse", "testSignedByteToUnsignedInt", "testUnsignedIntToSignedByte", "testZipLong" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testMutiples" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testCorruptedInput", "testGzipUnarchive", "testInteroperabilityWithGzipCompressorInputStream" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStreamTest" : [ "streamIgnoresExtraBytesAfterDeflatedInput", "throwsEOFExceptionOnTruncatedStreams", "uncompressedBlock", "uncompressedBlockAvailable", "uncompressedBlockViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4", "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readBlaLz4WithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated", "readDoubledBlaLz4WithDecompressConcatenatedFalse", "readDoubledBlaLz4WithDecompressConcatenatedTrue", "readDoubledBlaLz4WithoutExplicitDecompressConcatenated", "readsUncompressedBlocks", "readsUncompressedBlocksUsingSingleByteRead", "rejectsBlocksWithoutChecksum", "rejectsFileWithBadHeaderChecksum", "rejectsSkippableFrameFollowedByJunk", "rejectsSkippableFrameFollowedByTooFewBytes", "rejectsSkippableFrameWithBadSignaturePrefix", "rejectsSkippableFrameWithBadSignatureTrailer", "rejectsSkippableFrameWithPrematureEnd", "rejectsSkippableFrameWithPrematureEndInLengthBytes", "rejectsStreamsWithBadContentChecksum", "rejectsStreamsWithoutContentChecksum", "rejectsTrailingBytesAfterValidFrame", "skipsOverSkippableFrames", "skipsOverTrailingSkippableFrames" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile", "testAvailable", "testRemainingChunkTypes", "testUnskippableChunk" ],
        "org.apache.commons.compress.utils.BitInputStreamTest" : [ "bigEndianWithOverflow", "littleEndianWithOverflow" ],
        "org.apache.commons.compress.utils.ByteUtilsTest" : [ "fromLittleEndianFromArray", "fromLittleEndianFromArrayOneArg", "fromLittleEndianFromArrayOneArgThrowsForLengthTooBig", "fromLittleEndianFromArrayOneArgUnsignedInt32", "fromLittleEndianFromArrayThrowsForLengthTooBig", "fromLittleEndianFromArrayUnsignedInt32" ]
      },
      "predecessor" : "f43590aaf5416ce79cb1aad770c83096ddf2a5c2~1"
    },
    "d5f61b4398e6572d974ee13d01f47f82744fb495" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDeflate64Unarchive" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory" ],
        "org.apache.commons.compress.archivers.zip.BinaryTreeTest" : [ "testDecode", "testExceptions" ],
        "org.apache.commons.compress.archivers.zip.BitStreamTest" : [ "testEmptyStream", "testNextByte", "testNextByteFromEmptyStream", "testReadAlignedBytes", "testStream" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "readDeflate64CompressedStreamWithDataDescriptor", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnshrinking", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples", "testZMemoryLimit" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStreamTest" : [ "shouldThrowAnIOExceptionWhenAppliedToAZipFile" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ],
        "org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStreamTest" : [ "streamIgnoresExtraBytesAfterDeflatedInput", "throwsEOFExceptionOnTruncatedStreams", "uncompressedBlock", "uncompressedBlockAvailable", "uncompressedBlockViaFactory" ],
        "org.apache.commons.compress.compressors.z.ZCompressorInputStreamTest" : [ "testFailsToCreateZCompressorInputStreamAndThrowsIOException" ],
        "org.apache.commons.compress.utils.BitInputStreamTest" : [ "alignWithByteBoundaryWhenAtBoundary", "alignWithByteBoundaryWhenNotAtBoundary", "availableWithCache", "bigEndianWithOverflow", "littleEndianWithOverflow", "shouldNotAllowReadingOfANegativeAmountOfBits", "shouldNotAllowReadingOfMoreThan63BitsAtATime", "testClearBitCache", "testEOF", "testReading17BitsInBigEndian", "testReading17BitsInLittleEndian", "testReading24BitsInBigEndian", "testReading24BitsInLittleEndian", "testReading30BitsInBigEndian", "testReading30BitsInLittleEndian", "testReading31BitsInBigEndian", "testReading31BitsInLittleEndian" ]
      },
      "predecessor" : "d5f61b4398e6572d974ee13d01f47f82744fb495~1"
    },
    "0367fb31efae4535e15f01f6c27ea814a0739b81" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDeflate64Unarchive" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "readDeflate64CompressedStreamWithDataDescriptor", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ],
        "org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStreamTest" : [ "streamIgnoresExtraBytesAfterDeflatedInput", "throwsEOFExceptionOnTruncatedStreams", "uncompressedBlock", "uncompressedBlockAvailable", "uncompressedBlockViaFactory" ]
      },
      "predecessor" : "0367fb31efae4535e15f01f6c27ea814a0739b81~1"
    },
    "c1470f52ed67a82abcadb0333ea2620f11e475c5" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDeflate64Unarchive" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory" ],
        "org.apache.commons.compress.archivers.zip.BinaryTreeTest" : [ "testDecode", "testExceptions" ],
        "org.apache.commons.compress.archivers.zip.BitStreamTest" : [ "testEmptyStream", "testNextByte", "testNextByteFromEmptyStream", "testReadAlignedBytes", "testStream" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "readDeflate64CompressedStreamWithDataDescriptor", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnshrinking", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples", "testZMemoryLimit" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStreamTest" : [ "shouldThrowAnIOExceptionWhenAppliedToAZipFile" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ],
        "org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStreamTest" : [ "streamIgnoresExtraBytesAfterDeflatedInput", "throwsEOFExceptionOnTruncatedStreams", "uncompressedBlock", "uncompressedBlockAvailable", "uncompressedBlockViaFactory" ],
        "org.apache.commons.compress.compressors.z.ZCompressorInputStreamTest" : [ "testFailsToCreateZCompressorInputStreamAndThrowsIOException" ],
        "org.apache.commons.compress.utils.BitInputStreamTest" : [ "alignWithByteBoundaryWhenAtBoundary", "alignWithByteBoundaryWhenNotAtBoundary", "availableWithCache", "availableWithoutCache", "bigEndianWithOverflow", "littleEndianWithOverflow", "testClearBitCache", "testEOF", "testReading17BitsInBigEndian", "testReading17BitsInLittleEndian", "testReading24BitsInBigEndian", "testReading24BitsInLittleEndian", "testReading30BitsInBigEndian", "testReading30BitsInLittleEndian", "testReading31BitsInBigEndian", "testReading31BitsInLittleEndian" ]
      },
      "predecessor" : "0367fb31efae4535e15f01f6c27ea814a0739b81"
    },
    "3c452f77969b3578c0f678a08f6fb0549cc27b2e" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDeflate64Unarchive" ],
        "org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStreamTest" : [ "readWhenClosed", "uncompressedBlockAvailable" ]
      },
      "predecessor" : "3c452f77969b3578c0f678a08f6fb0549cc27b2e~1"
    },
    "34a1f829c3b465d031a875b9c1e409bd05de7ff6" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDeflate64Unarchive" ],
        "org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStreamTest" : [ "readWhenClosed", "uncompressedBlockAvailable" ]
      },
      "predecessor" : "3c452f77969b3578c0f678a08f6fb0549cc27b2e"
    },
    "237b7e3d8b0bcccc4962a7ef6d163b8bed2a5e1b" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDeflate64Unarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU", "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testExtraPaxHeaders", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "skipsDevNumbersWhenEntryIsNoDevice", "survivesBlankLinesInPaxHeader", "survivesPaxHeaderWithNameEndingInSlash", "testCompress197", "testGetAndSetOfPaxEntry", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testLongNameMd5Hash", "testOldEntryPosixMode", "testOldEntryStarMode", "testPutGlobalPaxHeaderEntry", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testName", "testRoundEncoding", "testRoundTripNames" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "readDeflate64CompressedStreamWithDataDescriptor" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ],
        "org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStreamTest" : [ "streamIgnoresExtraBytesAfterDeflatedInput", "throwsEOFExceptionOnTruncatedStreams", "uncompressedBlock", "uncompressedBlockAvailable", "uncompressedBlockViaFactory" ]
      },
      "predecessor" : "34a1f829c3b465d031a875b9c1e409bd05de7ff6"
    },
    "66607ddc07ecc319ef7cba0d9994066ad6928b9f" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testExtraPaxHeaders", "testFileSystemRoot", "testLinkFlagConstructor", "testLinkFlagConstructorWithFileFlag", "testLinkFlagConstructorWithPreserve", "testMaxFileSize", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "readsArchiveCompletely_COMPRESS245", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "survivesBlankLinesInPaxHeader", "survivesPaxHeaderWithNameEndingInSlash", "testGetAndSetOfPaxEntry" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testBlockSizes", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testPutGlobalPaxHeaderEntry", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar" ]
      },
      "predecessor" : "237b7e3d8b0bcccc4962a7ef6d163b8bed2a5e1b"
    },
    "7dcce66f1354cd54a6e64228bd56f0476a1ceb4d" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar", "testWriteTar" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceTar", "testFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU", "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testExtraPaxHeaders", "testFileSystemRoot", "testLinkFlagConstructor", "testLinkFlagConstructorWithFileFlag", "testLinkFlagConstructorWithPreserve", "testMaxFileSize", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "skipsDevNumbersWhenEntryIsNoDevice", "survivesBlankLinesInPaxHeader", "survivesPaxHeaderWithNameEndingInSlash", "testCompress197", "testGetAndSetOfPaxEntry", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testBlockSizes", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testPutGlobalPaxHeaderEntry", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "66607ddc07ecc319ef7cba0d9994066ad6928b9f"
    },
    "f35ff5f49f9255f1d0dddbf8aa9d810ce51c7f0a" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip" ]
      },
      "predecessor" : "2e74d637f9c25cfc02d6e2b3b568174057a7cf86"
    },
    "8faba69945721e10b2bea0acda2db53298ffa124" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ]
      },
      "predecessor" : "f35ff5f49f9255f1d0dddbf8aa9d810ce51c7f0a"
    },
    "69f38e81872d70705fd7919df3d771f28c22dadc" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testDetection", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "skipsPK00Prefix", "testCOMPRESS209", "testEncodingInputStream", "testEncodingInputStreamAutodetect", "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive", "testCpioUnarchiveCreatedByRedlineRpm" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "testConsumesArchiveCompletely", "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU", "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testExtraPaxHeaders", "testLinkFlagConstructor", "testLinkFlagConstructorWithFileFlag", "testLinkFlagConstructorWithPreserve", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "paxHeaderEntryWithEmptyValueRemovesKey", "readNonAsciiPaxHeader", "readPaxHeaderWithEmbeddedNewline", "readSimplePaxHeader", "readsArchiveCompletely_COMPRESS245", "secondEntryWinsWhenPaxHeaderContainsDuplicateKey", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "skipsDevNumbersWhenEntryIsNoDevice", "survivesBlankLinesInPaxHeader", "survivesPaxHeaderWithNameEndingInSlash", "testCompress197", "testGetAndSetOfPaxEntry", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testBlockSizes", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testPutGlobalPaxHeaderEntry", "testRecordSize", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.tar.TarUtilsTest" : [ "testName", "testNegative", "testOverflow", "testParseOctal", "testParseOctalCompress330", "testParseOctalInvalid", "testReadNegativeBinary12Byte", "testReadNegativeBinary8Byte", "testRoundEncoding", "testRoundTripNames", "testRoundTripOctal", "testRoundTripOctalOrBinary12", "testRoundTripOctalOrBinary8", "testRoundTripOctalOrBinary8_ValueTooBigForBinary", "testTrailers", "testVerifyHeaderCheckSum", "testWriteNegativeBinary8Byte" ],
        "org.apache.commons.compress.archivers.zip.DataDescriptorTest" : [ "doesntWriteDataDescriptorForDeflatedEntryOnSeekableOutput", "doesntWriteDataDescriptorWhenAddingRawEntries", "writesDataDescriptorForDeflatedEntryOnUnseekableOutput" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeBigStoredEntryToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "isUnixSymlinkIsFalseIfMoreThanOneFlagIsSet", "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "nameSourceDefaultsToName", "nameSourceIsSetToEFS", "nameSourceIsSetToUnicodeExtraField", "properUseOfInflater", "properlyMarksEntriesAsUnreadableIfUncompressedSizeIsUnknown", "readDeflate64CompressedStreamWithDataDescriptor", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testOffsets", "testReadingOfFirstStoredEntry", "testThrowOnInvalidEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "testWithBytesAfterData", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipEncodingTest" : [ "testEbcidic", "testGetNonexistentEncodng", "testIsUTF8", "testNioCp1252Encoding", "testNothingToMakeCoverallsHappier", "testSimpleCp437Encoding", "testSimpleCp850Encoding" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "nameSourceDefaultsToName", "nameSourceIsSetToEFS", "nameSourceIsSetToUnicodeExtraField", "testCDOrder", "testCDOrderInMemory", "testConcurrentReadFile", "testConcurrentReadSeekable", "testDelayedOffsetsAndSizes", "testDoubleClose", "testDuplicateEntry", "testEntryAlignment", "testEntryAlignmentExceed", "testExcessDataInZip64ExtraField", "testOffsets", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "8faba69945721e10b2bea0acda2db53298ffa124"
    },
    "765b8f88bdb9d3f9f0c7032208ab020d217953b3" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testExtraPaxHeaders", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "skipsDevNumbersWhenEntryIsNoDevice", "survivesBlankLinesInPaxHeader", "survivesPaxHeaderWithNameEndingInSlash", "testCompress197", "testGetAndSetOfPaxEntry", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testLongNameMd5Hash", "testOldEntryPosixMode", "testPutGlobalPaxHeaderEntry", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "765b8f88bdb9d3f9f0c7032208ab020d217953b3~1"
    },
    "7778533696b9644be3680228f25fce21e680e364" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarGzip" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testMutiples", "testXZMemoryLimitOnSkip" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testCorruptedInput", "testGzipUnarchive", "testInteroperabilityWithGzipCompressorInputStream" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testInputStreamMethods" ],
        "org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStreamTest" : [ "shouldBeAbleToSkipAByte" ],
        "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest" : [ "shouldBeAbleToSkipAByte" ],
        "org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStreamTest" : [ "shouldBeAbleToSkipAByte" ]
      },
      "predecessor" : "7778533696b9644be3680228f25fce21e680e364~1"
    },
    "bd3e6cf204f249c2d60eca2268c8b9f402149f1b" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.DataDescriptorTest" : [ "doesntWriteDataDescriptorWhenAddingRawEntries" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream", "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ExtraFieldUtilsTest" : [ "testParse", "testParseCentral", "testParseWithRead", "testParseWithSkip" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "isUnixSymlinkIsFalseIfMoreThanOneFlagIsSet", "testExtraFieldMerging" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "nameSourceDefaultsToName", "nameSourceIsSetToEFS", "nameSourceIsSetToUnicodeExtraField", "properUseOfInflater", "readDeflate64CompressedStreamWithDataDescriptor", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testOffsets", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "testWithBytesAfterData", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "nameSourceDefaultsToName", "nameSourceIsSetToEFS", "nameSourceIsSetToUnicodeExtraField", "testCDOrder", "testCDOrderInMemory", "testConcurrentReadFile", "testConcurrentReadSeekable", "testDelayedOffsetsAndSizes", "testDoubleClose", "testDuplicateEntry", "testEntryAlignment", "testExcessDataInZip64ExtraField", "testOffsets", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "bd3e6cf204f249c2d60eca2268c8b9f402149f1b~1"
    },
    "02c963a47ecb50a7f84b9711841e60447f9bfcc1" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipArchiveCreationInMemory", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDeflate64Unarchive" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory" ],
        "org.apache.commons.compress.archivers.zip.BinaryTreeTest" : [ "testDecode", "testExceptions" ],
        "org.apache.commons.compress.archivers.zip.BitStreamTest" : [ "testEmptyStream", "testNextByte", "testNextByteFromEmptyStream", "testReadAlignedBytes", "testStream" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRawNameReadFromStream", "testRead7ZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "nameSourceDefaultsToName", "nameSourceIsSetToEFS", "nameSourceIsSetToUnicodeExtraField", "properUseOfInflater", "readDeflate64CompressedStreamWithDataDescriptor", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testOffsets", "testReadingOfFirstStoredEntry", "testThrowOnInvalidEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "testWithBytesAfterData", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnshrinking", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples", "testZMemoryLimit" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.bzip2.BZip2CompressorInputStreamTest" : [ "shouldThrowAnIOExceptionWhenAppliedToAZipFile" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ],
        "org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStreamTest" : [ "streamIgnoresExtraBytesAfterDeflatedInput", "throwsEOFExceptionOnTruncatedStreams", "uncompressedBlock", "uncompressedBlockAvailable", "uncompressedBlockViaFactory" ],
        "org.apache.commons.compress.compressors.deflate64.HuffmanDecoderTest" : [ "decodeFixedHuffmanBlockWithMemoryLookup", "decodeFixedHuffmanBlockWithMemoryLookupInExactBuffer", "decodeFixedHuffmanBlockWithMemoryLookupInSmallBuffer", "decodeSimpleFixedHuffmanBlock", "decodeSimpleFixedHuffmanBlockToSmallBuffer", "decodeUncompressedBlock", "decodeUncompressedBlockWithInvalidLenNLenValue" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.z.ZCompressorInputStreamTest" : [ "testFailsToCreateZCompressorInputStreamAndThrowsIOException" ],
        "org.apache.commons.compress.utils.BitInputStreamTest" : [ "alignWithByteBoundaryWhenAtBoundary", "alignWithByteBoundaryWhenNotAtBoundary", "availableWithCache", "availableWithoutCache", "bigEndianWithOverflow", "littleEndianWithOverflow", "shouldNotAllowReadingOfANegativeAmountOfBits", "shouldNotAllowReadingOfMoreThan63BitsAtATime", "testClearBitCache", "testEOF", "testReading17BitsInBigEndian", "testReading17BitsInLittleEndian", "testReading24BitsInBigEndian", "testReading24BitsInLittleEndian", "testReading30BitsInBigEndian", "testReading30BitsInLittleEndian", "testReading31BitsInBigEndian", "testReading31BitsInLittleEndian" ]
      },
      "predecessor" : "bd3e6cf204f249c2d60eca2268c8b9f402149f1b"
    },
    "22c79b2f6abf6fbe7292e097dfb1edfaf8584613" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData" ]
      },
      "predecessor" : "22c79b2f6abf6fbe7292e097dfb1edfaf8584613~1"
    },
    "b8f7d772c96b0d1fa3b7a82c741d336d052940b2" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "test7zDeflate64Unarchive" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "readDeflate64CompressedStreamWithDataDescriptor" ],
        "org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStreamTest" : [ "readWhenClosed", "streamIgnoresExtraBytesAfterDeflatedInput", "throwsEOFExceptionOnTruncatedStreams", "uncompressedBlock", "uncompressedBlockAvailable", "uncompressedBlockViaFactory" ]
      },
      "predecessor" : "b8f7d772c96b0d1fa3b7a82c741d336d052940b2~1"
    },
    "74abd5b73c28bb625d0c74323e64a941c4dc02e7" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testConcurrentReadFile", "testConcurrentReadSeekable", "testDuplicateEntry", "testEntryAlignment", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "74abd5b73c28bb625d0c74323e64a941c4dc02e7~1"
    },
    "be86c6236d4cbea207f3a4924687a0bbd99af360" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "inputStreamStatisticsForBzip2Entry", "inputStreamStatisticsForShrunkEntry", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipArchiveCreationInMemory", "testZipUnarchive" ]
      },
      "predecessor" : "be86c6236d4cbea207f3a4924687a0bbd99af360~1"
    },
    "906d27704c5952cff37e76372f9a44a85746aa20" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ]
      },
      "predecessor" : "906d27704c5952cff37e76372f9a44a85746aa20~1"
    },
    "eee4d197d25ad99614cb63445ea71557d6a75c43" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarGzip" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "inputStreamStatisticsForBzip2Entry", "inputStreamStatisticsForShrunkEntry" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateUnarchive", "testRawDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testLZMAMemoryLimit", "testMutiples", "testXZMemoryLimitOnRead", "testXZMemoryLimitOnSkip" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testCorruptedInput", "testGzipUnarchive", "testInteroperabilityWithGzipCompressorInputStream", "testMetadataRoundTrip" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "lzmaRoundtrip", "testLZMAUnarchive", "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStreamTest" : [ "availableShouldReturnZero", "shouldBeAbleToSkipAByte", "singleByteReadReturnsMinusOneAtEof", "singleByteReadWorksAsExpected", "testBrotliDecode", "testBrotliUnarchive" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ],
        "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest" : [ "availableShouldReturnNonZero", "shouldBeAbleToSkipAByte", "singleByteReadReturnsMinusOneAtEof", "singleByteReadWorksAsExpected" ],
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStreamTest" : [ "readBlaLz4" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4", "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readBlaLz4WithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated", "readDoubledBlaLz4WithDecompressConcatenatedFalse", "readDoubledBlaLz4WithDecompressConcatenatedTrue", "readDoubledBlaLz4WithoutExplicitDecompressConcatenated", "readsUncompressedBlocks", "readsUncompressedBlocksUsingSingleByteRead", "rejectsBlocksWithoutChecksum", "rejectsFileWithBadHeaderChecksum", "rejectsFileWithInsufficientContentSize", "rejectsFileWithWrongVersion", "rejectsFileWithoutBlockSizeByte", "rejectsFileWithoutFrameDescriptor", "rejectsFileWithoutHeaderChecksum", "rejectsNonLZ4Stream", "rejectsSkippableFrameFollowedByJunk", "rejectsSkippableFrameFollowedByTooFewBytes", "rejectsSkippableFrameWithBadSignaturePrefix", "rejectsSkippableFrameWithBadSignatureTrailer", "rejectsSkippableFrameWithPrematureEnd", "rejectsSkippableFrameWithPrematureEndInLengthBytes", "rejectsStreamsWithBadContentChecksum", "rejectsStreamsWithoutContentChecksum", "rejectsTrailingBytesAfterValidFrame", "skipsOverSkippableFrames", "skipsOverTrailingSkippableFrames" ],
        "org.apache.commons.compress.compressors.lz77support.AbstractLZ77CompressorInputStreamTest" : [ "cantPrefillAfterDataHasBeenRead", "ifPrefillExceedsWindowSizeTheLastBytesAreUsed", "prefillCanBeUsedForBackReferences" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile", "testAvailable", "testRemainingChunkTypes", "testUnskippableChunk" ],
        "org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest" : [ "blaTarRoundtrip", "blaTarRoundtripTunedForCompressionRatio", "blaTarRoundtripTunedForSpeed" ],
        "org.apache.commons.compress.compressors.xz.XZCompressorOutputStreamTest" : [ "testWrite" ],
        "org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStreamTest" : [ "shouldBeAbleToSkipAByte", "singleByteReadReturnsMinusOneAtEof", "singleByteReadWorksAsExpected", "testZstandardUnarchive", "testZstdDecode" ],
        "org.apache.commons.compress.compressors.zstandard.ZstdRoundtripTest" : [ "directRoundtrip", "factoryRoundtrip" ]
      },
      "predecessor" : "9146faa1d7f1375c50c2732f4a18fe955772a1b6"
    },
    "ffb618d50a74e316aef01ffa2e381d4617900f3f" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "readEntriesOfSize0", "test7zDecryptUnarchive", "test7zDeflate64Unarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testCompressedHeaderWithNonDefaultDictionarySize", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testLzmaWithIntConfiguration", "testLzmaWithOptionsConfiguration", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "eee4d197d25ad99614cb63445ea71557d6a75c43"
    },
    "27ff59931984fed98c4cc3971819ad63f81d35de" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU", "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testExtraPaxHeaders", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "skipsDevNumbersWhenEntryIsNoDevice", "survivesBlankLinesInPaxHeader", "survivesPaxHeaderWithNameEndingInSlash", "testCompress197", "testGetAndSetOfPaxEntry", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testLongNameMd5Hash", "testOldEntryPosixMode", "testOldEntryStarMode", "testPutGlobalPaxHeaderEntry", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "27ff59931984fed98c4cc3971819ad63f81d35de~1"
    },
    "3a0ac2ca83436ebe59cbe91e241f6a245125f0b1" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU", "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testExtraPaxHeaders", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "readsArchiveCompletely_COMPRESS245", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "skipsDevNumbersWhenEntryIsNoDevice", "survivesBlankLinesInPaxHeader", "survivesPaxHeaderWithNameEndingInSlash", "testCompress197", "testGetAndSetOfPaxEntry", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testLongNameMd5Hash", "testOldEntryPosixMode", "testOldEntryStarMode", "testPutGlobalPaxHeaderEntry", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "3a0ac2ca83436ebe59cbe91e241f6a245125f0b1~1"
    },
    "0aeda4fcc3c6de7109acd8cf78f8779654b9f771" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testCheckArchive", "testCheckCompressedArchive", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveInMemoryTest" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "shouldThrowAnExceptionOnTruncatedEntries" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBlockSizes" ],
        "org.apache.commons.compress.archivers.zip.DataDescriptorTest" : [ "doesntWriteDataDescriptorForDeflatedEntryOnSeekableOutput" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees", "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "readDeflate64CompressedStreamWithDataDescriptor", "testReadingOfFirstStoredEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testCDOrderInMemory", "testConcurrentReadFile", "testConcurrentReadSeekable", "testEntryAlignment", "testReadingOfFirstStoredEntry", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateCreation", "testDeflateUnarchive", "testRawDeflateCreation", "testRawDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testCorruptedInput", "testExtraFlagsBestCompression", "testExtraFlagsDefaultCompression", "testExtraFlagsFastestCompression", "testGzipCreation", "testGzipUnarchive", "testInteroperabilityWithGZIPInputStream", "testInteroperabilityWithGzipCompressorInputStream", "testMetadataRoundTrip" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "lzmaRoundtrip", "testLZMAUnarchive", "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testXZCreation", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStreamTest" : [ "singleByteReadReturnsMinusOneAtEof", "testBrotliUnarchive" ],
        "org.apache.commons.compress.compressors.deflate.DeflateCompressorInputStreamTest" : [ "singleByteReadReturnsMinusOneAtEof" ],
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStreamTest" : [ "readBlaLz4" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4", "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readBlaLz4WithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated", "readDoubledBlaLz4WithDecompressConcatenatedFalse", "readDoubledBlaLz4WithDecompressConcatenatedTrue", "readDoubledBlaLz4WithoutExplicitDecompressConcatenated", "readsUncompressedBlocks", "rejectsBlocksWithoutChecksum", "rejectsSkippableFrameFollowedByJunk", "rejectsSkippableFrameFollowedByTooFewBytes", "rejectsSkippableFrameWithBadSignaturePrefix", "rejectsSkippableFrameWithBadSignatureTrailer", "rejectsSkippableFrameWithPrematureEnd", "rejectsSkippableFrameWithPrematureEndInLengthBytes", "rejectsStreamsWithBadContentChecksum", "rejectsStreamsWithoutContentChecksum", "rejectsTrailingBytesAfterValidFrame", "skipsOverSkippableFrames", "skipsOverTrailingSkippableFrames" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile", "testRemainingChunkTypes" ],
        "org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest" : [ "blaTarRoundtrip", "blaTarRoundtripTunedForCompressionRatio", "blaTarRoundtripTunedForSpeed" ],
        "org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStreamTest" : [ "singleByteReadReturnsMinusOneAtEof", "testZstandardUnarchive" ],
        "org.apache.commons.compress.compressors.zstandard.ZstdRoundtripTest" : [ "directRoundtrip", "factoryRoundtrip" ]
      },
      "predecessor" : "e15c80ae3fafe8903f220a6232c37a77b919c60e"
    },
    "446555b160d4221d414710ea97a3140f50f889c6" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "inputStreamStatisticsForBzip2Entry", "inputStreamStatisticsForShrunkEntry", "inputStreamStatisticsForStoredEntry", "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testConcurrentReadFile", "testConcurrentReadSeekable", "testDuplicateEntry", "testEntryAlignment", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "0aeda4fcc3c6de7109acd8cf78f8779654b9f771"
    },
    "436a2ce3111d019a98a8615bb83dd93091b3a0a5" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveInMemoryTest", "getEntriesOfUnarchiveTest", "readEntriesOfSize0", "test7zDecryptUnarchive", "test7zDeflate64Unarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testCompressedHeaderWithNonDefaultDictionarySize", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testLzmaWithIntConfiguration", "testLzmaWithOptionsConfiguration", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "446555b160d4221d414710ea97a3140f50f889c6"
    },
    "44785c780487c41944fb2ee3d206ddbd6b963522" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveInMemoryTest", "getEntriesOfUnarchiveTest", "readEntriesOfSize0", "test7zDecryptUnarchive", "test7zDeflate64Unarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testCompressedHeaderWithNonDefaultDictionarySize", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testLzmaWithIntConfiguration", "testLzmaWithOptionsConfiguration", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "44785c780487c41944fb2ee3d206ddbd6b963522~1"
    },
    "7a34528b18b5ebdd33089a9b330206ccae56a9a0" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testStackOfContentCompressionsInMemory" ]
      },
      "predecessor" : "dc52c6b8da6cdf4f23c87c2e55c46cbdaf96d6fa"
    },
    "2544a0cf5252027dcd42d9c9fdd73fdfceab396d" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.examples.ExpanderTest" : [ "sevenZChannelVersion", "sevenZFileVersion", "sevenZTwoFileVersion", "sevenZTwoFileVersionWithAutoDetection", "zipFileVersion" ]
      },
      "predecessor" : "c67040b8d18e6cb3ad8035045039ac066c3eb923"
    },
    "63eeef3e0ea511229fd3417b7863e8c709cca2fb" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.examples.ExpanderTest" : [ "sevenZFileVersion", "zipFileVersion" ]
      },
      "predecessor" : "63eeef3e0ea511229fd3417b7863e8c709cca2fb~1"
    },
    "e899bcd1aaa0f9c34510afbfce21ea5cdecef29a" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "inputStreamStatisticsForBzip2Entry" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ]
      },
      "predecessor" : "8cc2702c9bc6f39bb7eaba8a35a171869bb3f394"
    },
    "54e90aa4d61468074ae295cc2df8f05a4d074177" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "inputStreamStatisticsForBzip2Entry" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ]
      },
      "predecessor" : "54e90aa4d61468074ae295cc2df8f05a4d074177~1"
    },
    "4224709bc3aa602135da6aa73c783e0d9d6f6ee8" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "inputStreamStatisticsForBzip2Entry" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ]
      },
      "predecessor" : "4224709bc3aa602135da6aa73c783e0d9d6f6ee8~1"
    },
    "6bd79a285e89c6a4b1e0e2e869e2ee23dddda0f2" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "inputStreamStatisticsForBzip2Entry" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ]
      },
      "predecessor" : "6bd79a285e89c6a4b1e0e2e869e2ee23dddda0f2~1"
    },
    "e8c44e6090536bb4603d2c478724a7675e0a99fc" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "inputStreamStatisticsForBzip2Entry" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testUnzipBZip2CompressedEntry" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DetectCompressorTestCase" : [ "testDetection", "testMutiples" ],
        "org.apache.commons.compress.compressors.bzip2.PythonTruncatedBzip2Test" : [ "testPartialReadTruncatedData", "testTruncatedData" ]
      },
      "predecessor" : "e8c44e6090536bb4603d2c478724a7675e0a99fc~1"
    },
    "a080293da69f3fe3d11d5214432e1469ee195870" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.examples.ExpanderTest" : [ "fileCantEscapeViaAbsolutePath", "sevenZChannelVersion", "sevenZFileVersion", "sevenZTwoFileVersion", "sevenZTwoFileVersionWithAutoDetection", "zipFileVersion" ]
      },
      "predecessor" : "c2ace88644826c227191ca52c8d4372a13605e50"
    },
    "e9f2dadb916063c1e97ab2bbf41bee059e277c19" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.examples.ExpanderTest" : [ "fileCantEscapeViaAbsolutePath", "sevenZChannelVersion", "sevenZFileVersion", "sevenZTwoFileVersion", "sevenZTwoFileVersionWithAutoDetection", "zipFileVersion" ]
      },
      "predecessor" : "a080293da69f3fe3d11d5214432e1469ee195870"
    },
    "16e358e242b41ac350fbd7ad9a93a0cae3e92564" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesCauseExceptionByDefault", "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.examples.ExpanderTest" : [ "fileCantEscapeViaAbsolutePath", "sevenZChannelVersion", "sevenZFileVersion", "sevenZInputStreamVersion", "sevenZInputStreamVersionWithAutoDetection", "sevenZTwoFileVersion", "sevenZTwoFileVersionWithAutoDetection", "zipFileVersion" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCantFinishTwice", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testLzmaWithIntConfiguration", "testLzmaWithOptionsConfiguration", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testExtraPaxHeaders", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "shouldReadBigGid", "shouldUseSpecifiedEncodingWhenReadingGNULongNames" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testBlockSizes", "testCount", "testLongNameMd5Hash", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testPutGlobalPaxHeaderEntry", "testRecordSize", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.zip.DataDescriptorTest" : [ "doesntWriteDataDescriptorForDeflatedEntryOnSeekableOutput", "doesntWriteDataDescriptorWhenAddingRawEntries", "writesDataDescriptorForDeflatedEntryOnUnseekableOutput" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeBigDeflatedEntryKnownSizeToFileModeNever", "writeBigDeflatedEntryKnownSizeToStreamModeNever", "writeBigStoredEntryKnownSizeToFileModeNever", "writeBigStoredEntryToStreamModeNever", "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryKnownSizeToStream", "writeSmallDeflatedEntryKnownSizeToStreamModeAlways", "writeSmallDeflatedEntryKnownSizeToStreamModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToStream", "writeSmallDeflatedEntryUnknownSizeToStreamModeAlways", "writeSmallDeflatedEntryUnknownSizeToStreamModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryToStream", "writeSmallStoredEntryToStreamModeAlways", "writeSmallStoredEntryToStreamModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "testCompressionMethod" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testDelayedOffsetsAndSizes", "testEntryAlignment", "testEntryAlignmentExceed", "testReadingOfStoredEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzipCreation" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "testExtraFlagsBestCompression", "testExtraFlagsDefaultCompression", "testExtraFlagsFastestCompression", "testGzipCreation", "testInteroperabilityWithGZIPInputStream", "testInteroperabilityWithGzipCompressorInputStream", "testMetadataRoundTrip", "testOverWrite" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllTempFile", "testOutputStreamMethods" ],
        "org.apache.commons.compress.compressors.deflate64.Deflate64CompressorInputStreamTest" : [ "closeCallsDecoder", "closeIsDelegatedJustOnce", "streamIgnoresExtraBytesAfterDeflatedInput", "throwsEOFExceptionOnTruncatedStreams", "uncompressedBlock", "uncompressedBlockAvailable", "uncompressedBlockViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorOutputStreamTest" : [ "rewritingOfFinalBlockWithTrailingLZ77Literals", "rewritingOfFinalBlockWithoutTrailingLZ77Literals", "rewritingOfFourPairs", "rewritingWithFinalBackreferenceAndOffsetBiggerThan1" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "readBlaLz4", "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readBlaLz4WithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated", "readDoubledBlaLz4WithDecompressConcatenatedFalse", "readDoubledBlaLz4WithDecompressConcatenatedTrue", "readDoubledBlaLz4WithoutExplicitDecompressConcatenated", "readsUncompressedBlocks", "readsUncompressedBlocksUsingSingleByteRead", "rejectsBlocksWithoutChecksum", "rejectsSkippableFrameFollowedByJunk", "rejectsSkippableFrameFollowedByTooFewBytes", "rejectsSkippableFrameWithBadSignaturePrefix", "rejectsSkippableFrameWithBadSignatureTrailer", "rejectsSkippableFrameWithPrematureEnd", "rejectsSkippableFrameWithPrematureEndInLengthBytes", "rejectsStreamsWithBadContentChecksum", "rejectsStreamsWithoutContentChecksum", "rejectsTrailingBytesAfterValidFrame", "skipsOverSkippableFrames", "skipsOverTrailingSkippableFrames" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile", "testAvailable" ],
        "org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest" : [ "blaTarRoundtrip", "blaTarRoundtripTunedForCompressionRatio", "blaTarRoundtripTunedForSpeed" ],
        "org.apache.commons.compress.utils.FixedLengthBlockOutputStreamTest" : [ "testMultiWriteBuf", "testPartialWritingThrowsException", "testSmallWrite", "testSmallWriteToStream", "testWithFileOutputStream", "testWriteBuf", "testWriteFailsAfterFLClosedThrowsException", "testWriteSingleBytes" ]
      },
      "predecessor" : "16e358e242b41ac350fbd7ad9a93a0cae3e92564~1"
    },
    "af6fe141036d30bfd1613758b7a9fb413bf2bafc" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadJar", "testReadZip" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "inputStreamStatisticsForBzip2Entry", "inputStreamStatisticsForShrunkEntry", "inputStreamStatisticsForStoredEntry", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testZipArchiveCreation", "testZipArchiveCreationInMemory", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaStream" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testZipStreamWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testRawNameReadFromStream", "testRead7ZipArchiveForStream", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "nameSourceDefaultsToName", "nameSourceIsSetToEFS", "nameSourceIsSetToUnicodeExtraField", "properUseOfInflater", "readDeflate64CompressedStreamWithDataDescriptor", "shouldConsumeArchiveCompletely", "shouldReadNestedZip", "testMessageWithCorruptFileName", "testOffsets", "testReadingOfFirstStoredEntry", "testThrowOnInvalidEntry", "testUnshrinkEntry", "testUnzipBZip2CompressedEntry", "testWithBytesAfterData", "winzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ]
      },
      "predecessor" : "16e358e242b41ac350fbd7ad9a93a0cae3e92564"
    },
    "9e80104befc54daaa097870b857e1bc334521490" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testWriteCpio" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive", "testCpioUnarchiveCreatedByRedlineRpm" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeletePlusAdd" ]
      },
      "predecessor" : "af6fe141036d30bfd1613758b7a9fb413bf2bafc"
    },
    "1fbb16b037e62c6af90ab89ab3ac8d3633c59a90" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testWriteCpio" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeletePlusAdd" ]
      },
      "predecessor" : "1fbb16b037e62c6af90ab89ab3ac8d3633c59a90~1"
    },
    "72bfc1247553bdd2711d6bb27a7179be86ded4f1" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testWriteCpio" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeletePlusAdd" ]
      },
      "predecessor" : "1fbb16b037e62c6af90ab89ab3ac8d3633c59a90"
    },
    "c8ee9f781900f874b075433141de779723b3e110" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testWriteCpio" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeletePlusAdd" ]
      },
      "predecessor" : "c8ee9f781900f874b075433141de779723b3e110~1"
    },
    "6f8c4960c2af25b7e4b36473d81fe652490dbbeb" : {
      "testcases" : {
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testEmptyCpioArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio", "testWriteCpio" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceCpio", "testFinish" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "testEncodingOutputStream" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeletePlusAdd" ]
      },
      "predecessor" : "c8ee9f781900f874b075433141de779723b3e110"
    },
    "c5c231e643365485c5805cbca81070a51429de9c" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.zstandard.ZstdRoundtripTest" : [ "directRoundtrip", "factoryRoundtrip" ]
      },
      "predecessor" : "c5c231e643365485c5805cbca81070a51429de9c~1"
    },
    "792da6735e532a6e7f2f2a017d999a8f7c30f2fe" : {
      "testcases" : {
        "org.apache.commons.compress.compressors.zstandard.ZstdRoundtripTest" : [ "directRoundtrip" ]
      },
      "predecessor" : "792da6735e532a6e7f2f2a017d999a8f7c30f2fe~1"
    },
    "64ed6dde03afbef6715fdfdeab5fc04be6192899" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadCpio" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioUnarchive" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "testCpioUnarchive", "testCpioUnarchiveCreatedByRedlineRpm", "testCpioUnarchiveMultibyteCharName" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "testConcurrentReadFile", "testConcurrentReadSeekable" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeletePlusAdd" ]
      },
      "predecessor" : "64ed6dde03afbef6715fdfdeab5fc04be6192899~1"
    },
    "a41ce6892cb0590b2e658704434ac0dbcb6834c8" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "inputStreamStatisticsForStoredEntry" ],
        "org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest" : [ "testRead7ZipMultiVolumeArchiveForStream" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "shouldReadNestedZip", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingStore", "testReadingOfFirstStoredEntry" ]
      },
      "predecessor" : "a41ce6892cb0590b2e658704434ac0dbcb6834c8~1"
    },
    "ba53647bf0fa16501445c7ec50d0ffa4a8288eff" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "cantReadAfterClose", "multiByteReadConsistentlyReturnsMinusOneAtEof", "singleByteReadConsistentlyReturnsMinusOneAtEof", "testReadLongNamesBSD", "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAr" ]
      },
      "predecessor" : "ba53647bf0fa16501445c7ec50d0ffa4a8288eff~1"
    },
    "087e4a9d51437243eb0a4698b3bd2b71b4567c3e" : {
      "testcases" : {
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArDelete", "testArUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "testListAllFilesWithNestedArchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "cantReadAfterClose", "cantReadWithoutOpeningAnEntry", "multiByteReadConsistentlyReturnsMinusOneAtEof", "singleByteReadConsistentlyReturnsMinusOneAtEof", "testReadLongNamesBSD", "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.examples.ExpanderTest" : [ "fileCantEscapeViaAbsolutePath", "sevenZChannelVersion", "sevenZFileVersion", "sevenZTwoFileVersion", "sevenZTwoFileVersionWithAutoDetection", "zipFileVersion" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "testThrowOnInvalidEntry" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToAr", "testDeleteFromAr" ]
      },
      "predecessor" : "0326bd90ac20652f1efd747a3c293a8110d109be"
    },
    "6e1702e95e6a487b42b6642b9cd8f3d865151b8f" : {
      "testcases" : {
        "org.apache.commons.compress.ArchiveUtilsTest" : [ "sanitizeLeavesShortStringsAlone", "sanitizeRemovesUnprintableCharacters", "sanitizeShortensString", "testAsciiConversions", "testCompareAscii", "testCompareBA", "testIsEqual", "testIsEqualWithNullWithPositive", "testToAsciiBytes", "testToAsciiStringThrowsStringIndexOutOfBoundsException", "testToStringWithNonNull" ],
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testDetection", "testDetectionNotArchive", "testEmptyCpioArchive", "testEmptyJarArchive", "testEmptyZipArchive" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadAr", "testReadCpio", "testReadJar", "testReadTar", "testReadZip", "testWriteAr", "testWriteCpio", "testWriteJar", "testWriteTar", "testWriteZip" ],
        "org.apache.commons.compress.archivers.ArTestCase" : [ "testArArchiveCreation", "testArDelete", "testArUnarchive", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testCallSequenceAr", "testCallSequenceCpio", "testCallSequenceJar", "testCallSequenceTar", "testCallSequenceZip", "testFinish", "testOptionalFinish" ],
        "org.apache.commons.compress.archivers.CpioTestCase" : [ "testCpioArchiveCreation", "testCpioUnarchive", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile" ],
        "org.apache.commons.compress.archivers.DumpTestCase" : [ "testArchiveDetection", "testCheckArchive", "testCheckCompressedArchive", "testCompressedArchiveDetection", "testCompressedDumpUnarchiveAll", "testDumpUnarchiveAll" ],
        "org.apache.commons.compress.archivers.JarTestCase" : [ "testJarArchiveCreation", "testJarUnarchive", "testJarUnarchiveAll" ],
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "multiByteReadConsistentlyReturnsMinusOneAtEofUsingAES", "multiByteReadConsistentlyReturnsMinusOneAtEofUsingBZIP2", "multiByteReadConsistentlyReturnsMinusOneAtEofUsingDeflate", "multiByteReadConsistentlyReturnsMinusOneAtEofUsingLZMA", "multiByteReadConsistentlyReturnsMinusOneAtEofUsingLZMA2", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingAES", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingBZIP2", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingCopy", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingDeflate", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingLZMA", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingLZMA2", "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarArchiveCreation", "testTarArchiveLongNameCreation", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "inputStreamStatisticsForBzip2Entry", "inputStreamStatisticsForShrunkEntry", "inputStreamStatisticsForStoredEntry", "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testListAllFilesWithNestedArchive", "testSkipEntryWithUnsupportedCompressionMethod", "testSkipsPK00Prefix", "testSupportedCompressionMethod", "testUnixModeInAddRaw", "testZipArchiveCreation", "testZipArchiveCreationInMemory", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest" : [ "cantReadAfterClose", "cantReadWithoutOpeningAnEntry", "multiByteReadConsistentlyReturnsMinusOneAtEof", "singleByteReadConsistentlyReturnsMinusOneAtEof", "testReadLongNamesBSD", "testReadLongNamesGNU" ],
        "org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest" : [ "testLongFileNamesCauseExceptionByDefault", "testLongFileNamesWorkUsingBSDDialect" ],
        "org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest" : [ "multiByteReadConsistentlyReturnsMinusOneAtEof", "singleByteReadConsistentlyReturnsMinusOneAtEof", "testArjUnarchive", "testReadingOfAttributesDosVersion", "testReadingOfAttributesUnixVersion" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest" : [ "multiByteReadConsistentlyReturnsMinusOneAtEof", "singleByteReadConsistentlyReturnsMinusOneAtEof", "testCpioUnarchive", "testCpioUnarchiveCreatedByRedlineRpm", "testCpioUnarchiveMultibyteCharName" ],
        "org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest" : [ "testWriteOldBinary" ],
        "org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest" : [ "multiByteReadConsistentlyReturnsMinusOneAtEof", "singleByteReadConsistentlyReturnsMinusOneAtEof", "testConsumesArchiveCompletely", "testNotADumpArchive", "testNotADumpArchiveButBigEnough" ],
        "org.apache.commons.compress.archivers.examples.ExpanderTest" : [ "fileCantEscapeViaAbsolutePath", "sevenZChannelVersion", "sevenZFileVersion", "sevenZInputStreamVersion", "sevenZInputStreamVersionWithAutoDetection", "sevenZTwoFileVersion", "sevenZTwoFileVersionWithAutoDetection", "zipFileVersion" ],
        "org.apache.commons.compress.archivers.examples.SevenZArchiverTest" : [ "channelVersion", "fileVersion", "outputStreamVersion", "unknownFormat" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "getEntriesOfUnarchiveInMemoryTest", "getEntriesOfUnarchiveTest", "readEntriesOfSize0", "test7zDecryptUnarchive", "test7zDecryptUnarchiveUsingCharArrayPassword", "test7zDeflate64Unarchive", "test7zDeflateUnarchive", "test7zUnarchive", "testAllEmptyFilesArchive", "testCompressedHeaderWithNonDefaultDictionarySize", "testEncryptedArchiveRequiresPassword", "testHelloWorldHeaderCompressionOffCopy", "testHelloWorldHeaderCompressionOffLZMA2", "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize", "testSignatureCheck" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZNativeHeapTest" : [ "testEndDeflaterOnCloseStream", "testEndInflaterOnCloseStream" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCantFinishTwice", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testDirectoriesOnly", "testEightEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testLzmaWithIntConfiguration", "testLzmaWithOptionsConfiguration", "testNineEmptyFiles", "testNineFilesSomeNotEmpty", "testSevenEmptyFiles", "testSevenFilesSomeNotEmpty", "testSixEmptyFiles", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory", "testTwentyNineEmptyFiles", "testTwentyNineFilesSomeNotEmpty" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "shouldThrowAnExceptionOnTruncatedEntries" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testBlockSizes", "testCount", "testLongNameMd5Hash", "testMaxFileSizeError", "testOldEntryError", "testOldEntryPosixMode", "testOldEntryStarMode", "testPaxHeadersWithLength101", "testPaxHeadersWithLength99", "testPutGlobalPaxHeaderEntry", "testRecordSize", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameErrorMode", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameErrorMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader", "testWriteSimplePaxHeaders" ],
        "org.apache.commons.compress.archivers.zip.DataDescriptorTest" : [ "doesntWriteDataDescriptorForDeflatedEntryOnSeekableOutput", "doesntWriteDataDescriptorWhenAddingRawEntries", "writesDataDescriptorForDeflatedEntryOnUnseekableOutput" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromStream", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testRead7ZipArchiveForStream", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddChangeTwice", "testAddChangeTwiceWithoutReplace", "testAddDeleteAdd", "testAddDeleteToOneFileArchive", "testAddMoveDelete", "testAddToEmptyArchive", "testChangeSetResults", "testDeleteAddDelete", "testDeleteAddToOneFileArchive", "testDeleteDir", "testDeleteDir2", "testDeleteDir3", "testDeleteFile", "testDeleteFile2", "testDeleteFromAndAddToAr", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToTar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromAr", "testDeleteFromJar", "testDeleteFromTar", "testDeleteFromZip", "testDeletePlusAdd", "testDeletePlusAddSame", "testRenameAndDelete" ],
        "org.apache.commons.compress.compressors.BZip2TestCase" : [ "testBzip2Unarchive", "testBzipCreation", "testCOMPRESS131", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully" ],
        "org.apache.commons.compress.compressors.DeflateTestCase" : [ "testDeflateCreation", "testDeflateUnarchive", "testRawDeflateCreation", "testRawDeflateUnarchive" ],
        "org.apache.commons.compress.compressors.FramedSnappyTestCase" : [ "testDefaultExtraction", "testDefaultExtractionViaFactory", "testDefaultExtractionViaFactoryAutodetection" ],
        "org.apache.commons.compress.compressors.GZipTestCase" : [ "multiByteReadConsistentlyReturnsMinusOneAtEof", "singleByteReadConsistentlyReturnsMinusOneAtEof", "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testCorruptedInput", "testExtraFlagsBestCompression", "testExtraFlagsDefaultCompression", "testExtraFlagsFastestCompression", "testGzipCreation", "testGzipUnarchive", "testInteroperabilityWithGZIPInputStream", "testInteroperabilityWithGzipCompressorInputStream", "testInvalidCompressionLevel", "testMetadataRoundTrip", "testOverWrite" ],
        "org.apache.commons.compress.compressors.LZMATestCase" : [ "lzmaRoundtrip", "multiByteReadConsistentlyReturnsMinusOneAtEof", "singleByteReadConsistentlyReturnsMinusOneAtEof", "testLZMAUnarchive", "testLZMAUnarchiveWithAutodetection" ],
        "org.apache.commons.compress.compressors.Pack200TestCase" : [ "multiByteReadFromMemoryConsistentlyReturnsMinusOneAtEof", "multiByteReadFromTempFileConsistentlyReturnsMinusOneAtEof", "singleByteReadFromMemoryConsistentlyReturnsMinusOneAtEof", "singleByteReadFromTempFileConsistentlyReturnsMinusOneAtEof", "testBadSignature", "testGoodSignature", "testInputStreamMethods", "testJarArchiveCreationInMemory", "testJarArchiveCreationTempFile", "testJarUnarchiveAllFileArgInMemory", "testJarUnarchiveAllFileTempFile", "testJarUnarchiveAllInMemory", "testJarUnarchiveAllTempFile", "testOutputStreamMethods", "testShortSignature" ],
        "org.apache.commons.compress.compressors.XZTestCase" : [ "testConcatenatedStreamsReadFirstOnly", "testConcatenatedStreamsReadFully", "testXZCreation", "testXZUnarchive" ],
        "org.apache.commons.compress.compressors.ZTestCase" : [ "testMatches", "testZUnarchive", "testZUnarchiveViaAutoDetection", "testZUnarchiveViaFactory" ],
        "org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStreamTest" : [ "availableShouldReturnZero", "multiByteReadConsistentlyReturnsMinusOneAtEof", "shouldBeAbleToSkipAByte", "singleByteReadConsistentlyReturnsMinusOneAtEof", "singleByteReadWorksAsExpected", "testBrotliDecode", "testBrotliUnarchive", "testCanTurnOffCaching", "testTurningOnCachingReEvaluatesAvailability" ],
        "org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStreamTest" : [ "multiByteReadConsistentlyReturnsMinusOneAtEof", "readBlaLz4", "singleByteReadConsistentlyReturnsMinusOneAtEof" ],
        "org.apache.commons.compress.compressors.lz4.FactoryTest" : [ "blockRoundtripViaFactory" ],
        "org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest" : [ "multiByteReadConsistentlyReturnsMinusOneAtEof", "readBlaLz4", "readBlaLz4ViaFactory", "readBlaLz4ViaFactoryAutoDetection", "readBlaLz4ViaFactoryWithDecompressConcatenated", "readBlaLz4WithDecompressConcatenated", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse", "readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue", "readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated", "readDoubledBlaLz4WithDecompressConcatenatedFalse", "readDoubledBlaLz4WithDecompressConcatenatedTrue", "readDoubledBlaLz4WithoutExplicitDecompressConcatenated", "readsUncompressedBlocks", "readsUncompressedBlocksUsingSingleByteRead", "rejectsBlocksWithoutChecksum", "rejectsFileWithBadHeaderChecksum", "rejectsFileWithInsufficientContentSize", "rejectsFileWithWrongVersion", "rejectsFileWithoutBlockSizeByte", "rejectsFileWithoutFrameDescriptor", "rejectsFileWithoutHeaderChecksum", "rejectsNonLZ4Stream", "rejectsSkippableFrameFollowedByJunk", "rejectsSkippableFrameFollowedByTooFewBytes", "rejectsSkippableFrameWithBadSignaturePrefix", "rejectsSkippableFrameWithBadSignatureTrailer", "rejectsSkippableFrameWithPrematureEnd", "rejectsSkippableFrameWithPrematureEndInLengthBytes", "rejectsStreamsWithBadContentChecksum", "rejectsStreamsWithoutContentChecksum", "rejectsTrailingBytesAfterValidFrame", "singleByteReadConsistentlyReturnsMinusOneAtEof", "skipsOverSkippableFrames", "skipsOverTrailingSkippableFrames", "testMatches" ],
        "org.apache.commons.compress.compressors.pack200.Pack200UtilsTest" : [ "testNormalize", "testNormalizeInPlace" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "multiByteReadConsistentlyReturnsMinusOneAtEof", "readIWAFile", "singleByteReadConsistentlyReturnsMinusOneAtEof", "testAvailable", "testChecksumUnmasking", "testMatches", "testRemainingChunkTypes", "testUnskippableChunk" ],
        "org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest" : [ "blaTarRoundtrip", "blaTarRoundtripTunedForCompressionRatio", "blaTarRoundtripTunedForSpeed" ],
        "org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStreamTest" : [ "multiByteReadConsistentlyReturnsMinusOneAtEof", "shouldBeAbleToSkipAByte", "singleByteReadConsistentlyReturnsMinusOneAtEof", "singleByteReadWorksAsExpected", "testCanTurnOffCaching", "testTurningOnCachingReEvaluatesAvailability", "testZstandardUnarchive", "testZstdDecode" ],
        "org.apache.commons.compress.compressors.zstandard.ZstdRoundtripTest" : [ "directRoundtrip", "factoryRoundtrip", "roundtripWithChecksum", "roundtripWithCloseFrameOnFlush", "roundtripWithCustomLevel" ]
      },
      "predecessor" : "f7726c4f727dd78f616374f87ae1e9424b41af67"
    },
    "1152309971ae0e31ced5365e81e5c80af8bf251c" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "inputStreamStatisticsForBzip2Entry", "inputStreamStatisticsForShrunkEntry", "inputStreamStatisticsForStoredEntry", "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod", "testUnixModeInAddRaw" ],
        "org.apache.commons.compress.archivers.examples.ExpanderTest" : [ "fileCantEscapeViaAbsolutePath", "zipFileVersion" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.DataDescriptorTest" : [ "doesntWriteDataDescriptorWhenAddingRawEntries" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "isUnixSymlinkIsFalseIfMoreThanOneFlagIsSet" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "multiByteReadConsistentlyReturnsMinusOneAtEofUsingBzip2", "multiByteReadConsistentlyReturnsMinusOneAtEofUsingDeflate", "multiByteReadConsistentlyReturnsMinusOneAtEofUsingStore", "multiByteReadConsistentlyReturnsMinusOneAtEofUsingUnshrink", "nameSourceDefaultsToName", "nameSourceIsSetToEFS", "nameSourceIsSetToUnicodeExtraField", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingBzip2", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingDeflate", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingStore", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingUnshrink", "testCDOrder", "testCDOrderInMemory", "testConcurrentReadFile", "testConcurrentReadSeekable", "testDelayedOffsetsAndSizes", "testDoubleClose", "testDuplicateEntry", "testEntryAlignment", "testExcessDataInZip64ExtraField", "testOffsets", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "1152309971ae0e31ced5365e81e5c80af8bf251c~1"
    },
    "a8fc27c1d9a40474085464ad1f592c65ac81a906" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "inputStreamStatisticsForBzip2Entry", "inputStreamStatisticsForShrunkEntry", "inputStreamStatisticsForStoredEntry", "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod", "testUnixModeInAddRaw" ],
        "org.apache.commons.compress.archivers.examples.ExpanderTest" : [ "fileCantEscapeViaAbsolutePath", "zipFileVersion" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.DataDescriptorTest" : [ "doesntWriteDataDescriptorWhenAddingRawEntries" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "isUnixSymlinkIsFalseIfMoreThanOneFlagIsSet" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "multiByteReadConsistentlyReturnsMinusOneAtEofUsingBzip2", "multiByteReadConsistentlyReturnsMinusOneAtEofUsingDeflate", "multiByteReadConsistentlyReturnsMinusOneAtEofUsingStore", "multiByteReadConsistentlyReturnsMinusOneAtEofUsingUnshrink", "nameSourceDefaultsToName", "nameSourceIsSetToEFS", "nameSourceIsSetToUnicodeExtraField", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingBzip2", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingDeflate", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingStore", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingUnshrink", "testCDOrder", "testCDOrderInMemory", "testConcurrentReadFile", "testConcurrentReadSeekable", "testDelayedOffsetsAndSizes", "testDoubleClose", "testDuplicateEntry", "testEntryAlignment", "testExcessDataInZip64ExtraField", "testOffsets", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "a8fc27c1d9a40474085464ad1f592c65ac81a906~1"
    },
    "cfec567237c7300d0335f8ec5358e5dbfbbcdf00" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "inputStreamStatisticsForBzip2Entry", "inputStreamStatisticsForShrunkEntry", "inputStreamStatisticsForStoredEntry", "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod", "testUnixModeInAddRaw" ],
        "org.apache.commons.compress.archivers.examples.ExpanderTest" : [ "fileCantEscapeViaAbsolutePath", "zipFileVersion" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.DataDescriptorTest" : [ "doesntWriteDataDescriptorWhenAddingRawEntries" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "isUnixSymlinkIsFalseIfMoreThanOneFlagIsSet" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "multiByteReadConsistentlyReturnsMinusOneAtEofUsingBzip2", "multiByteReadConsistentlyReturnsMinusOneAtEofUsingDeflate", "multiByteReadConsistentlyReturnsMinusOneAtEofUsingStore", "multiByteReadConsistentlyReturnsMinusOneAtEofUsingUnshrink", "nameSourceDefaultsToName", "nameSourceIsSetToEFS", "nameSourceIsSetToUnicodeExtraField", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingBzip2", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingDeflate", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingStore", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingUnshrink", "testCDOrder", "testCDOrderInMemory", "testConcurrentReadFile", "testConcurrentReadSeekable", "testDelayedOffsetsAndSizes", "testDoubleClose", "testDuplicateEntry", "testEntryAlignment", "testExcessDataInZip64ExtraField", "testOffsets", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "cfec567237c7300d0335f8ec5358e5dbfbbcdf00~1"
    },
    "14242fe6bbfe3dcb455ccfeaf210d3fef1c0a72f" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "inputStreamStatisticsForBzip2Entry", "inputStreamStatisticsForShrunkEntry", "inputStreamStatisticsForStoredEntry", "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod", "testUnixModeInAddRaw" ],
        "org.apache.commons.compress.archivers.examples.ExpanderTest" : [ "fileCantEscapeViaAbsolutePath", "zipFileVersion" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.DataDescriptorTest" : [ "doesntWriteDataDescriptorWhenAddingRawEntries" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "isUnixSymlinkIsFalseIfMoreThanOneFlagIsSet" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "multiByteReadConsistentlyReturnsMinusOneAtEofUsingBzip2", "multiByteReadConsistentlyReturnsMinusOneAtEofUsingDeflate", "multiByteReadConsistentlyReturnsMinusOneAtEofUsingStore", "multiByteReadConsistentlyReturnsMinusOneAtEofUsingUnshrink", "nameSourceDefaultsToName", "nameSourceIsSetToEFS", "nameSourceIsSetToUnicodeExtraField", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingBzip2", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingDeflate", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingStore", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingUnshrink", "testCDOrder", "testCDOrderInMemory", "testConcurrentReadFile", "testConcurrentReadSeekable", "testDelayedOffsetsAndSizes", "testDoubleClose", "testDuplicateEntry", "testEntryAlignment", "testExcessDataInZip64ExtraField", "testOffsets", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToZipUsingZipFilePerform" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "14242fe6bbfe3dcb455ccfeaf210d3fef1c0a72f~1"
    },
    "7a3889d47b76b248deb4ae6d3c71cf7cf48dc734" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.ArchiveOutputStreamTest" : [ "testFinish" ],
        "org.apache.commons.compress.archivers.ZipTestCase" : [ "inputStreamStatisticsForBzip2Entry", "inputStreamStatisticsForShrunkEntry", "inputStreamStatisticsForStoredEntry", "testCopyRawEntriesFromFile", "testCopyRawZip64EntryFromFile", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testSupportedCompressionMethod", "testUnixModeInAddRaw" ],
        "org.apache.commons.compress.archivers.examples.ExpanderTest" : [ "fileCantEscapeViaAbsolutePath", "zipFileVersion" ],
        "org.apache.commons.compress.archivers.jar.JarArchiveOutputStreamTest" : [ "testJarMarker" ],
        "org.apache.commons.compress.archivers.zip.DataDescriptorTest" : [ "doesntWriteDataDescriptorForDeflatedEntryOnSeekableOutput", "doesntWriteDataDescriptorWhenAddingRawEntries" ],
        "org.apache.commons.compress.archivers.zip.EncryptedArchiveTest" : [ "testReadPasswordEncryptedEntryViaZipFile" ],
        "org.apache.commons.compress.archivers.zip.ExplodeSupportTest" : [ "testArchiveWithImplodeCompression4K2Trees" ],
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ],
        "org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest" : [ "testASCIIFileRoundtripExplicitUnicodeExtra", "testASCIIFileRoundtripImplicitUnicodeExtra", "testCP437FileRoundtripExplicitUnicodeExtra", "testCP437FileRoundtripImplicitUnicodeExtra", "testRawNameReadFromZipFile", "testRead7ZipArchive", "testUtf8FileRoundtripExplicitUnicodeExtra", "testUtf8FileRoundtripImplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSExplicitUnicodeExtra", "testUtf8FileRoundtripNoEFSImplicitUnicodeExtra", "testUtf8Interoperability", "testZipArchiveInputStreamReadsUnicodeFields", "testZipFileReadsUnicodeFields" ],
        "org.apache.commons.compress.archivers.zip.X5455_ExtendedTimestampTest" : [ "testSampleFile", "testWriteReadRoundtrip" ],
        "org.apache.commons.compress.archivers.zip.X7875_NewUnixTest" : [ "testSampleFile" ],
        "org.apache.commons.compress.archivers.zip.Zip64SupportIT" : [ "writeSmallDeflatedEntryKnownSizeToFile", "writeSmallDeflatedEntryKnownSizeToFileModeAlways", "writeSmallDeflatedEntryKnownSizeToFileModeNever", "writeSmallDeflatedEntryUnknownSizeToFile", "writeSmallDeflatedEntryUnknownSizeToFileModeAlways", "writeSmallDeflatedEntryUnknownSizeToFileModeNever", "writeSmallStoredEntryKnownSizeToFile", "writeSmallStoredEntryKnownSizeToFileModeAlways", "writeSmallStoredEntryKnownSizeToFileModeNever", "writeSmallStoredEntryUnnownSizeToFile", "writeSmallStoredEntryUnnownSizeToFileModeAlways", "writeSmallStoredEntryUnnownSizeToFileModeNever" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest" : [ "isUnixSymlinkIsFalseIfMoreThanOneFlagIsSet" ],
        "org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest" : [ "properUseOfInflater", "readDeflate64CompressedStreamWithDataDescriptor" ],
        "org.apache.commons.compress.archivers.zip.ZipFileIgnoringLocalFileHeaderTest" : [ "getEntryWorks", "getRawInputStreamReturnsNull", "testDuplicateEntry", "testPhysicalOrder", "testZipUnarchive" ],
        "org.apache.commons.compress.archivers.zip.ZipFileTest" : [ "multiByteReadConsistentlyReturnsMinusOneAtEofUsingBzip2", "multiByteReadConsistentlyReturnsMinusOneAtEofUsingDeflate", "multiByteReadConsistentlyReturnsMinusOneAtEofUsingStore", "multiByteReadConsistentlyReturnsMinusOneAtEofUsingUnshrink", "nameSourceDefaultsToName", "nameSourceIsSetToEFS", "nameSourceIsSetToUnicodeExtraField", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingBzip2", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingDeflate", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingStore", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingUnshrink", "testCDOrder", "testCDOrderInMemory", "testConcurrentReadFile", "testConcurrentReadSeekable", "testDelayedOffsetsAndSizes", "testDoubleClose", "testDuplicateEntry", "testEntryAlignment", "testExcessDataInZip64ExtraField", "testOffsets", "testPhysicalOrder", "testReadingOfFirstStoredEntry", "testReadingOfStoredEntry", "testSkipsPK00Prefix", "testUnixSymlinkSampleFile", "testUnshrinking", "testUnzipBZip2CompressedEntry", "testWinzipBackSlashWorkaround" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testAddAllreadyExistingWithReplaceFalse", "testAddAllreadyExistingWithReplaceTrue", "testAddToEmptyArchive", "testDeleteAddToOneFileArchive", "testDeleteFromAndAddToJar", "testDeleteFromAndAddToZip", "testDeleteFromAndAddToZipUsingZipFilePerform", "testDeleteFromJar", "testDeleteFromZip", "testDeletePlusAddSame" ],
        "org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest" : [ "readIWAFile" ]
      },
      "predecessor" : "7a3889d47b76b248deb4ae6d3c71cf7cf48dc734~1"
    },
    "fd69d8ca2212d373a5a8f220530e8c0fa17ddf3b" : {
      "testcases" : {
        "org.apache.commons.compress.ChainingTestCase" : [ "testTarBzip2", "testTarGzip" ],
        "org.apache.commons.compress.DetectArchiverTestCase" : [ "testCOMPRESS117", "testCOMPRESS335", "testDetection" ],
        "org.apache.commons.compress.IOMethodsTest" : [ "testReadTar" ],
        "org.apache.commons.compress.archivers.ArchiveStreamFactoryTest" : [ "aiffFilesAreNoTARs", "testCOMPRESS209", "testEncodingInputStream", "testEncodingInputStreamAutodetect" ],
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS114", "testCOMPRESS178", "testDirectoryEntryFromFile", "testExplicitDirectoryEntry", "testExplicitFileEntry", "testFileEntryFromFile", "testTarUnarchive" ],
        "org.apache.commons.compress.archivers.tar.SparseFilesTest" : [ "testOldGNU", "testPaxGNU" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveEntryTest" : [ "testExtraPaxHeaders", "testTarFileWithFSRoot" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest" : [ "datePriorToEpochInGNUFormat", "datePriorToEpochInPAXFormat", "multiByteReadConsistentlyReturnsMinusOneAtEof", "paxHeaderEntryWithEmptyValueRemovesKey", "readNonAsciiPaxHeader", "readPaxHeaderWithEmbeddedNewline", "readSimplePaxHeader", "readsArchiveCompletely_COMPRESS245", "secondEntryWinsWhenPaxHeaderContainsDuplicateKey", "shouldConsumeArchiveCompletely", "shouldReadBigGid", "shouldReadGNULongNameEntryWithWrongName", "shouldThrowAnExceptionOnTruncatedEntries", "shouldUseSpecifiedEncodingWhenReadingGNULongNames", "singleByteReadConsistentlyReturnsMinusOneAtEof", "skipsDevNumbersWhenEntryIsNoDevice", "survivesBlankLinesInPaxHeader", "survivesPaxHeaderWithNameEndingInSlash", "testCompress197", "testGetAndSetOfPaxEntry", "workaroundForBrokenTimeHeader" ],
        "org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest" : [ "testBigNumberPosixMode", "testBigNumberStarMode", "testLongNameMd5Hash", "testOldEntryPosixMode", "testOldEntryStarMode", "testPutGlobalPaxHeaderEntry", "testRoundtripWith67CharFileNameGnu", "testRoundtripWith67CharFileNamePosix", "testWriteLongDirectoryNameGnuMode", "testWriteLongDirectoryNamePosixMode", "testWriteLongDirectoryNameTruncateMode", "testWriteLongFileNamePosixMode", "testWriteLongLinkNameGnuMode", "testWriteLongLinkNamePosixMode", "testWriteLongLinkNameTruncateMode", "testWriteNonAsciiDirectoryNamePosixMode", "testWriteNonAsciiLinkPathNamePaxHeader", "testWriteNonAsciiNameWithUnfortunateNamePosixMode", "testWriteNonAsciiPathNamePaxHeader" ],
        "org.apache.commons.compress.changes.ChangeSetTestCase" : [ "testDeleteFromAndAddToTar", "testDeleteFromTar" ]
      },
      "predecessor" : "fd69d8ca2212d373a5a8f220530e8c0fa17ddf3b~1"
    },
    "979260717c1a4730e49a094e02c9c873946e1237" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.TarTestCase" : [ "testCOMPRESS178Lenient" ]
      },
      "predecessor" : "fd69d8ca2212d373a5a8f220530e8c0fa17ddf3b"
    },
    "2f75fbb5269bd5b2c7b799b7a4f93992fa1f9196" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ]
      },
      "predecessor" : "2f75fbb5269bd5b2c7b799b7a4f93992fa1f9196~1"
    },
    "f132d6c50285b7a7652909aa85a5afdb3b828939" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ],
        "org.apache.commons.compress.archivers.zip.ScatterZipOutputStreamTest" : [ "putArchiveEntry" ]
      },
      "predecessor" : "2f75fbb5269bd5b2c7b799b7a4f93992fa1f9196"
    },
    "6e47be35fca595d8637441a578e29045b329c611" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ]
      },
      "predecessor" : "6e47be35fca595d8637441a578e29045b329c611~1"
    },
    "76f428958f83348692a67e9f41b86cbc7ee83878" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "multiByteReadConsistentlyReturnsMinusOneAtEofUsingBZIP2", "multiByteReadConsistentlyReturnsMinusOneAtEofUsingDeflate", "multiByteReadConsistentlyReturnsMinusOneAtEofUsingLZMA", "multiByteReadConsistentlyReturnsMinusOneAtEofUsingLZMA2", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingBZIP2", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingCopy", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingDeflate", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingLZMA", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingLZMA2", "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.examples.ExpanderTest" : [ "sevenZChannelVersion", "sevenZFileVersion", "sevenZInputStreamVersion", "sevenZInputStreamVersionWithAutoDetection", "sevenZTwoFileVersion", "sevenZTwoFileVersionWithAutoDetection" ],
        "org.apache.commons.compress.archivers.examples.SevenZArchiverTest" : [ "channelVersion", "fileVersion" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testLzmaWithIntConfiguration", "testLzmaWithOptionsConfiguration", "testNineFilesSomeNotEmpty", "testSevenFilesSomeNotEmpty", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "76f428958f83348692a67e9f41b86cbc7ee83878~1"
    },
    "f3c0dd3fb2fc4231cf3faa0224c125aee9725548" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.zip.ScatterSampleTest" : [ "testSample" ]
      },
      "predecessor" : "76f428958f83348692a67e9f41b86cbc7ee83878"
    },
    "44933200a8efcd8bebea32ca51e4c571c3ed113d" : {
      "testcases" : {
        "org.apache.commons.compress.archivers.SevenZTestCase" : [ "multiByteReadConsistentlyReturnsMinusOneAtEofUsingBZIP2", "multiByteReadConsistentlyReturnsMinusOneAtEofUsingDeflate", "multiByteReadConsistentlyReturnsMinusOneAtEofUsingLZMA", "multiByteReadConsistentlyReturnsMinusOneAtEofUsingLZMA2", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingBZIP2", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingCopy", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingDeflate", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingLZMA", "singleByteReadConsistentlyReturnsMinusOneAtEofUsingLZMA2", "testSevenZArchiveCreationUsingBZIP2", "testSevenZArchiveCreationUsingCopy", "testSevenZArchiveCreationUsingDeflate", "testSevenZArchiveCreationUsingLZMA", "testSevenZArchiveCreationUsingLZMA2" ],
        "org.apache.commons.compress.archivers.examples.ExpanderTest" : [ "sevenZChannelVersion", "sevenZFileVersion", "sevenZInputStreamVersion", "sevenZInputStreamVersionWithAutoDetection", "sevenZTwoFileVersion", "sevenZTwoFileVersionWithAutoDetection" ],
        "org.apache.commons.compress.archivers.examples.SevenZArchiverTest" : [ "channelVersion", "fileVersion" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZFileTest" : [ "testReadingBackDeltaDistance", "testReadingBackLZMA2DictSize" ],
        "org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest" : [ "testArchiveWithMixedMethods", "testBCJARMRoundtrip", "testBCJARMThumbRoundtrip", "testBCJIA64Roundtrip", "testBCJPPCRoundtrip", "testBCJSparcRoundtrip", "testBCJX86Roundtrip", "testBzip2Roundtrip", "testBzip2WithConfiguration", "testCopyRoundtrip", "testDeflateRoundtrip", "testDeflateWithConfiguration", "testDeltaRoundtrip", "testDirectoriesAndEmptyFiles", "testEightFilesSomeNotEmpty", "testLzma2Roundtrip", "testLzma2WithIntConfiguration", "testLzma2WithOptionsConfiguration", "testLzmaWithIntConfiguration", "testLzmaWithOptionsConfiguration", "testNineFilesSomeNotEmpty", "testSevenFilesSomeNotEmpty", "testSixFilesSomeNotEmpty", "testStackOfContentCompressions", "testStackOfContentCompressionsInMemory", "testTwentyNineFilesSomeNotEmpty" ]
      },
      "predecessor" : "44933200a8efcd8bebea32ca51e4c571c3ed113d~1"
    }
  },
  "android" : false
}