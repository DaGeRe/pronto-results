{
  "url" : "https://github.com/apache/commons-text.git",
  "initialversion" : {
    "version" : "750beb9233003e5ba78ad92bfa4d6d4f4c0aeddb",
    "jdk" : 8,
    "initialDependencies" : { }
  },
  "versions" : {
    "c0e8c021059d8300f90cf2123528a35d7c468b57" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c0e8c021059d8300f90cf2123528a35d7c468b57~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.FuzzyDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.FuzzyDistance#compare" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestFuzzyDistance" : [ "testGetFuzzyDistance", "testGetFuzzyDistance_NullNullNull", "testGetFuzzyDistance_NullStringLocale", "testGetFuzzyDistance_StringNullLoclae", "testGetFuzzyDistance_StringStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWrinklerDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.JaroWrinklerDistance#compare" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestJaroWrinklerDistance" : [ "testGetJaroWinklerDistance_NullNull", "testGetJaroWinklerDistance_NullString", "testGetJaroWinklerDistance_StringNull" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance#compare" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestLevenshteinDistance" : [ "testGetLevenshteinDistance_NullString", "testGetLevenshteinDistance_NullStringInt", "testGetLevenshteinDistance_StringNull", "testGetLevenshteinDistance_StringNullInt", "testGetLevenshteinDistance_StringString", "testGetLevenshteinDistance_StringStringInt", "testGetLevenshteinDistance_StringStringNegativeInt" ]
          }
        },
        "org.apache.commons.text.similarity.StringMetric" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.TestFuzzyDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestFuzzyDistance" : [ "testGetFuzzyDistance", "testGetFuzzyDistance_NullNullNull", "testGetFuzzyDistance_NullStringLocale", "testGetFuzzyDistance_StringNullLoclae", "testGetFuzzyDistance_StringStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.TestFuzzyDistance#testGetFuzzyDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestFuzzyDistance" : [ "testGetFuzzyDistance" ]
          }
        },
        "org.apache.commons.text.similarity.TestFuzzyDistance#testGetFuzzyDistance_NullNullNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestFuzzyDistance" : [ "testGetFuzzyDistance_NullNullNull" ]
          }
        },
        "org.apache.commons.text.similarity.TestFuzzyDistance#testGetFuzzyDistance_NullStringLocale" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestFuzzyDistance" : [ "testGetFuzzyDistance_NullStringLocale" ]
          }
        },
        "org.apache.commons.text.similarity.TestFuzzyDistance#testGetFuzzyDistance_StringNullLoclae" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestFuzzyDistance" : [ "testGetFuzzyDistance_StringNullLoclae" ]
          }
        },
        "org.apache.commons.text.similarity.TestFuzzyDistance#testGetFuzzyDistance_StringStringNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestFuzzyDistance" : [ "testGetFuzzyDistance_StringStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.TestJaroWrinklerDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestJaroWrinklerDistance" : [ "testGetJaroWinklerDistance_NullNull", "testGetJaroWinklerDistance_NullString", "testGetJaroWinklerDistance_StringNull" ]
          }
        },
        "org.apache.commons.text.similarity.TestJaroWrinklerDistance#testGetJaroWinklerDistance_NullNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestJaroWrinklerDistance" : [ "testGetJaroWinklerDistance_NullNull" ]
          }
        },
        "org.apache.commons.text.similarity.TestJaroWrinklerDistance#testGetJaroWinklerDistance_NullString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestJaroWrinklerDistance" : [ "testGetJaroWinklerDistance_NullString" ]
          }
        },
        "org.apache.commons.text.similarity.TestJaroWrinklerDistance#testGetJaroWinklerDistance_StringNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestJaroWrinklerDistance" : [ "testGetJaroWinklerDistance_StringNull" ]
          }
        },
        "org.apache.commons.text.similarity.TestLevenshteinDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestLevenshteinDistance" : [ "testGetLevenshteinDistance_NullString", "testGetLevenshteinDistance_NullStringInt", "testGetLevenshteinDistance_StringNull", "testGetLevenshteinDistance_StringNullInt", "testGetLevenshteinDistance_StringString", "testGetLevenshteinDistance_StringStringInt", "testGetLevenshteinDistance_StringStringNegativeInt" ]
          }
        },
        "org.apache.commons.text.similarity.TestLevenshteinDistance#testGetLevenshteinDistance_NullString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestLevenshteinDistance" : [ "testGetLevenshteinDistance_NullString" ]
          }
        },
        "org.apache.commons.text.similarity.TestLevenshteinDistance#testGetLevenshteinDistance_NullStringInt" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestLevenshteinDistance" : [ "testGetLevenshteinDistance_NullStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.TestLevenshteinDistance#testGetLevenshteinDistance_StringNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestLevenshteinDistance" : [ "testGetLevenshteinDistance_StringNull" ]
          }
        },
        "org.apache.commons.text.similarity.TestLevenshteinDistance#testGetLevenshteinDistance_StringNullInt" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestLevenshteinDistance" : [ "testGetLevenshteinDistance_StringNullInt" ]
          }
        },
        "org.apache.commons.text.similarity.TestLevenshteinDistance#testGetLevenshteinDistance_StringString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestLevenshteinDistance" : [ "testGetLevenshteinDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.TestLevenshteinDistance#testGetLevenshteinDistance_StringStringInt" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestLevenshteinDistance" : [ "testGetLevenshteinDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.TestLevenshteinDistance#testGetLevenshteinDistance_StringStringNegativeInt" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestLevenshteinDistance" : [ "testGetLevenshteinDistance_StringStringNegativeInt" ]
          }
        },
        "org.apache.commons.text.similarity.package-info" : {
          "testcases" : { }
        }
      }
    },
    "7cbefa01015156df13aa95f083191adb02f34e85" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7cbefa01015156df13aa95f083191adb02f34e85~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.JaroWrinklerDistance#commonPrefixLength" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestJaroWrinklerDistance" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWrinklerDistance#compare" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestJaroWrinklerDistance" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWrinklerDistance#compare(CharSequence,CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestJaroWrinklerDistance" : [ "testGetJaroWinklerDistance_NullNull", "testGetJaroWinklerDistance_NullString", "testGetJaroWinklerDistance_StringNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWrinklerDistance#getCommonPrefix" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestJaroWrinklerDistance" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWrinklerDistance#getSetOfMatchingCharacterWithin" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestJaroWrinklerDistance" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWrinklerDistance#indexOfDifference" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestJaroWrinklerDistance" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWrinklerDistance#score" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestJaroWrinklerDistance" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWrinklerDistance#transpositions" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestJaroWrinklerDistance" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.TestJaroWrinklerDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestJaroWrinklerDistance" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.TestJaroWrinklerDistance#testGetJaroWinklerDistance_StringString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.TestJaroWrinklerDistance" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        }
      }
    },
    "feb9a9b1ce94541c3dd4d14401ea097da103684c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "feb9a9b1ce94541c3dd4d14401ea097da103684c~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.FuzzyDistance#compare" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyDistanceTest" : [ "testGetFuzzyDistance", "testGetFuzzyDistance_NullNullNull", "testGetFuzzyDistance_NullStringLocale", "testGetFuzzyDistance_StringNullLoclae", "testGetFuzzyDistance_StringStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyDistanceTest" : [ "testGetFuzzyDistance", "testGetFuzzyDistance_NullNullNull", "testGetFuzzyDistance_NullStringLocale", "testGetFuzzyDistance_StringNullLoclae", "testGetFuzzyDistance_StringStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyDistanceTest#testGetFuzzyDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyDistanceTest" : [ "testGetFuzzyDistance" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyDistanceTest#testGetFuzzyDistance_NullNullNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyDistanceTest" : [ "testGetFuzzyDistance_NullNullNull" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyDistanceTest#testGetFuzzyDistance_NullStringLocale" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyDistanceTest" : [ "testGetFuzzyDistance_NullStringLocale" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyDistanceTest#testGetFuzzyDistance_StringNullLoclae" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyDistanceTest" : [ "testGetFuzzyDistance_StringNullLoclae" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyDistanceTest#testGetFuzzyDistance_StringStringNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyDistanceTest" : [ "testGetFuzzyDistance_StringStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWrinklerDistance#commonPrefixLength" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWrinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWrinklerDistance#compare" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWrinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullNull", "testGetJaroWinklerDistance_NullString", "testGetJaroWinklerDistance_StringNull", "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWrinklerDistance#getCommonPrefix" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWrinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWrinklerDistance#getSetOfMatchingCharacterWithin" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWrinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWrinklerDistance#indexOfDifference" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWrinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWrinklerDistance#score" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWrinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWrinklerDistance#transpositions" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWrinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWrinklerDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWrinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullNull", "testGetJaroWinklerDistance_NullString", "testGetJaroWinklerDistance_StringNull", "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWrinklerDistanceTest#testGetJaroWinklerDistance_NullNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWrinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWrinklerDistanceTest#testGetJaroWinklerDistance_NullString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWrinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWrinklerDistanceTest#testGetJaroWinklerDistance_StringNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWrinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWrinklerDistanceTest#testGetJaroWinklerDistance_StringString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWrinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance#compare" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_NullString", "testGetLevenshteinDistance_NullStringInt", "testGetLevenshteinDistance_StringNull", "testGetLevenshteinDistance_StringNullInt", "testGetLevenshteinDistance_StringString", "testGetLevenshteinDistance_StringStringInt", "testGetLevenshteinDistance_StringStringNegativeInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_NullString", "testGetLevenshteinDistance_NullStringInt", "testGetLevenshteinDistance_StringNull", "testGetLevenshteinDistance_StringNullInt", "testGetLevenshteinDistance_StringString", "testGetLevenshteinDistance_StringStringInt", "testGetLevenshteinDistance_StringStringNegativeInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest#testGetLevenshteinDistance_NullString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_NullString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest#testGetLevenshteinDistance_NullStringInt" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_NullStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest#testGetLevenshteinDistance_StringNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_StringNull" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest#testGetLevenshteinDistance_StringNullInt" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_StringNullInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest#testGetLevenshteinDistance_StringString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest#testGetLevenshteinDistance_StringStringInt" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest#testGetLevenshteinDistance_StringStringNegativeInt" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_StringStringNegativeInt" ]
          }
        }
      }
    },
    "87b789fbec0360a7e2c54f7cb45225e238530ee8" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "87b789fbec0360a7e2c54f7cb45225e238530ee8~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.HammingDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.HammingDistance#compare" : {
          "testcases" : {
            "org.apache.commons.text.similarity.HammingDistanceTest" : [ "testHammingDistance", "testHammingDistance_nullLeftValue", "testHammingDistance_nullRightValue" ]
          }
        },
        "org.apache.commons.text.similarity.HammingDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.HammingDistanceTest" : [ "testHammingDistance", "testHammingDistance_nullLeftValue", "testHammingDistance_nullRightValue" ]
          }
        },
        "org.apache.commons.text.similarity.HammingDistanceTest#testHammingDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.HammingDistanceTest" : [ "testHammingDistance" ]
          }
        },
        "org.apache.commons.text.similarity.HammingDistanceTest#testHammingDistance_nullLeftValue" : {
          "testcases" : {
            "org.apache.commons.text.similarity.HammingDistanceTest" : [ "testHammingDistance_nullLeftValue" ]
          }
        },
        "org.apache.commons.text.similarity.HammingDistanceTest#testHammingDistance_nullRightValue" : {
          "testcases" : {
            "org.apache.commons.text.similarity.HammingDistanceTest" : [ "testHammingDistance_nullRightValue" ]
          }
        }
      }
    },
    "93fb453ccc2b4d048e416de55c28e33d0327daeb" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "93fb453ccc2b4d048e416de55c28e33d0327daeb~1",
      "changedClazzes" : {
        "org.apache.commons.text.diff.CommandVisitor" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.DeleteCommand" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.DeleteCommand#<init>" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.DeleteCommand#accept" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.diff.EditCommand" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.EditCommand#<init>" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.EditCommand#getObject" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.diff.EditScript" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.EditScript#<init>" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.EditScript#append" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.EditScript#getLCSLength" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.EditScript#getModifications" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testLength" ]
          }
        },
        "org.apache.commons.text.diff.EditScript#visit" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.diff.InsertCommand" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.InsertCommand#<init>" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.InsertCommand#accept" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.diff.KeepCommand" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.KeepCommand#<init>" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.KeepCommand#accept" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.diff.ReplacementsFinder" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.ReplacementsFinderTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.ReplacementsHandler" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.StringsComparator" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.StringsComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparator#buildScript" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparator#buildSnake" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparator#getMiddleSnake" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparator#getScript" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparator$Snake#<init>" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparator$Snake#getDiag" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparator$Snake#getEnd" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparator$Snake#getStart" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest#setUp" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest#tearDown" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest#testExecution" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest#testLength" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testLength" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest#testLongestCommonSubsequence" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest$ExecutionVisitor#<init>" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest$ExecutionVisitor#getString" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest$ExecutionVisitor#visitDeleteCommand" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest$ExecutionVisitor#visitInsertCommand" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest$ExecutionVisitor#visitKeepCommand" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.diff.package-info" : {
          "testcases" : { }
        }
      }
    },
    "1e7d2aa5057ad5e067ec9cd762ab8772546bc777" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1e7d2aa5057ad5e067ec9cd762ab8772546bc777~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.FuzzyScore" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.FuzzyScore#compare" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore", "testGetFuzzyScore_NullNullNull", "testGetFuzzyScore_NullStringLocale", "testGetFuzzyScore_StringNullLoclae", "testGetFuzzyScore_StringStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore", "testGetFuzzyScore_NullNullNull", "testGetFuzzyScore_NullStringLocale", "testGetFuzzyScore_StringNullLoclae", "testGetFuzzyScore_StringStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testGetFuzzyScore" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testGetFuzzyScore_NullNullNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore_NullNullNull" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testGetFuzzyScore_NullStringLocale" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore_NullStringLocale" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testGetFuzzyScore_StringNullLoclae" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore_StringNullLoclae" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testGetFuzzyScore_StringStringNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore_StringStringNull" ]
          }
        }
      }
    },
    "75cdc00afc674aca39a4fca4c1745d029da43648" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "75cdc00afc674aca39a4fca4c1745d029da43648~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.FuzzyScore" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore", "testGetFuzzyScore_NullStringLocale" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScore#<init>" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testMissingLocale" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScore#compare" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore_NullNullLocale", "testGetFuzzyScore_StringNullLocale" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore", "testGetFuzzyScore_NullNullLocale", "testGetFuzzyScore_NullStringLocale", "testGetFuzzyScore_StringNullLocale", "testMissingLocale" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testGetFuzzyScore_NullNullLocale" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore_NullNullLocale" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testGetFuzzyScore_StringNullLocale" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore_StringNullLocale" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testMissingLocale" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testMissingLocale" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_NullString", "testGetLevenshteinDistance_NullStringInt", "testGetLevenshteinDistance_StringNull", "testGetLevenshteinDistance_StringNullInt", "testGetLevenshteinDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance#<init>" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testConstructorWithNegativeThreshold" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testConstructorWithNegativeThreshold", "testGetLevenshteinDistance_NullString", "testGetLevenshteinDistance_NullStringInt", "testGetLevenshteinDistance_StringNull", "testGetLevenshteinDistance_StringNullInt", "testGetLevenshteinDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest#testConstructorWithNegativeThreshold" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testConstructorWithNegativeThreshold" ]
          }
        },
        "org.apache.commons.text.similarity.ParameterizedLevenshteinDistanceTest" : {
          "testcases" : { }
        }
      }
    },
    "980791b69dc4cb1a639e835ea3b151d9d107ea7f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "980791b69dc4cb1a639e835ea3b151d9d107ea7f~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.FuzzyScoreTest#testGetFuzzyScore" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testGetFuzzyScore_NullNullLocale" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore_NullNullLocale" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testGetFuzzyScore_NullStringLocale" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore_NullStringLocale" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testGetFuzzyScore_StringNullLocale" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore_StringNullLocale" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testMissingLocale" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testMissingLocale" ]
          }
        },
        "org.apache.commons.text.similarity.HammingDistanceTest#testHammingDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.HammingDistanceTest" : [ "testHammingDistance" ]
          }
        },
        "org.apache.commons.text.similarity.HammingDistanceTest#testHammingDistance_nullLeftValue" : {
          "testcases" : {
            "org.apache.commons.text.similarity.HammingDistanceTest" : [ "testHammingDistance_nullLeftValue" ]
          }
        },
        "org.apache.commons.text.similarity.HammingDistanceTest#testHammingDistance_nullRightValue" : {
          "testcases" : {
            "org.apache.commons.text.similarity.HammingDistanceTest" : [ "testHammingDistance_nullRightValue" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWrinklerDistanceTest#testGetJaroWinklerDistance_NullNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWrinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWrinklerDistanceTest#testGetJaroWinklerDistance_NullString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWrinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWrinklerDistanceTest#testGetJaroWinklerDistance_StringNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWrinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWrinklerDistanceTest#testGetJaroWinklerDistance_StringString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWrinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance#<init>" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance#apply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance#limitedCompare" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testConstructorWithNegativeThreshold", "testGetLevenshteinDistance_NullString", "testGetLevenshteinDistance_NullStringInt", "testGetLevenshteinDistance_StringNull", "testGetLevenshteinDistance_StringNullInt", "testGetLevenshteinDistance_StringString", "testGetLevenshteinDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest#testGetLevenshteinDistance_StringStringInt" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.ParameterizedLevenshteinDistanceTest#test" : {
          "testcases" : { }
        }
      }
    },
    "3ccdabb1e27bd41bf88e5b623136481d989b2b0e" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "548a7918ef57e2591c3d6aaa9bb3e42e17fa6cbe" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "980791b69dc4cb1a639e835ea3b151d9d107ea7f",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.CosineDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.CosineDistance#apply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.CosineDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.CosineDistanceTest#roundValue" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.CosineDistanceTest#testCosineDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarity" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.CosineSimilarity#cosineSimilarity" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarity#dot" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarity#getIntersection" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.internal.Counter" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.internal.Counter#of" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.internal.RegexTokenizer" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.internal.RegexTokenizer#tokenize" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.internal.Tokenizer" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.internal.package-info" : {
          "testcases" : { }
        }
      }
    },
    "a5ac07106f25c0e359bb5782cf8eb16ce15aa0b8" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a5ac07106f25c0e359bb5782cf8eb16ce15aa0b8~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.JaroWrinklerDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWrinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullNull", "testGetJaroWinklerDistance_NullString", "testGetJaroWinklerDistance_StringNull", "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance#limitedCompare(CharSequence,CharSequence,int)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance#unlimitedCompare(CharSequence,CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_NullString", "testGetLevenshteinDistance_NullStringInt", "testGetLevenshteinDistance_StringNull", "testGetLevenshteinDistance_StringNullInt", "testGetLevenshteinDistance_StringString" ]
          }
        }
      }
    },
    "6280d46c5d5e87e0491573efa969fcf4a6397cd7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6280d46c5d5e87e0491573efa969fcf4a6397cd7~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.LevenshteinDistance#<init>" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance#apply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance#unlimitedCompare" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample" ]
          }
        },
        "org.apache.commons.text.similarity.ParameterizedStringMetricFromTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.StringMetricFrom" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.StringMetricFrom#<init>" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample", "testMissingMetric" ]
          }
        },
        "org.apache.commons.text.similarity.StringMetricFrom#apply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample" ]
          }
        },
        "org.apache.commons.text.similarity.StringMetricFromTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample", "testMissingMetric" ]
          }
        },
        "org.apache.commons.text.similarity.StringMetricFromTest#testEquivalence" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence" ]
          }
        },
        "org.apache.commons.text.similarity.StringMetricFromTest#testJavadocExample" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testJavadocExample" ]
          }
        },
        "org.apache.commons.text.similarity.StringMetricFromTest#testMissingMetric" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testMissingMetric" ]
          }
        }
      }
    },
    "411e81f8de92779b29b76a34412a68b6fcfee664" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "411e81f8de92779b29b76a34412a68b6fcfee664~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.HumanNameParser" : {
          "testcases" : { }
        },
        "org.apache.commons.text.names.HumanNameParser#<init>" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testAll" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#getFirst" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testAll" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#getLast" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testAll" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#getLeadingInit" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testAll" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#getMiddle" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testAll" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#getNickname" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testAll" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#getSuffix" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testAll" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#parse" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testAll" ]
          }
        },
        "org.apache.commons.text.names.Name" : {
          "testcases" : { }
        },
        "org.apache.commons.text.names.Name#<init>" : {
          "testcases" : {
            "org.apache.commons.text.names.NameTest" : [ "testChopWithRegexChopsEndOffNameStr", "testChopWithRegexChopsMiddleFromNameStr", "testChopWithRegexChopsStartOffNameStr", "testChopWithRegexReturnsChoppedSubstring", "testFlip", "testSetStrRemovesRedudentantWhitespace", "testSetStrRemovesWhitespaceAtEnds" ],
            "org.apache.commons.text.names.ParserTest" : [ "testAll" ]
          }
        },
        "org.apache.commons.text.names.Name#chopWithRegex" : {
          "testcases" : {
            "org.apache.commons.text.names.NameTest" : [ "testChopWithRegexChopsEndOffNameStr", "testChopWithRegexChopsMiddleFromNameStr", "testChopWithRegexChopsStartOffNameStr", "testChopWithRegexReturnsChoppedSubstring" ],
            "org.apache.commons.text.names.ParserTest" : [ "testAll" ]
          }
        },
        "org.apache.commons.text.names.Name#flip" : {
          "testcases" : {
            "org.apache.commons.text.names.NameTest" : [ "testFlip" ],
            "org.apache.commons.text.names.ParserTest" : [ "testAll" ]
          }
        },
        "org.apache.commons.text.names.Name#getStr" : {
          "testcases" : {
            "org.apache.commons.text.names.NameTest" : [ "testChopWithRegexChopsEndOffNameStr", "testChopWithRegexChopsMiddleFromNameStr", "testChopWithRegexChopsStartOffNameStr", "testFlip", "testSetStrRemovesRedudentantWhitespace", "testSetStrRemovesWhitespaceAtEnds" ],
            "org.apache.commons.text.names.ParserTest" : [ "testAll" ]
          }
        },
        "org.apache.commons.text.names.Name#norm" : {
          "testcases" : {
            "org.apache.commons.text.names.NameTest" : [ "testChopWithRegexChopsEndOffNameStr", "testChopWithRegexChopsMiddleFromNameStr", "testChopWithRegexChopsStartOffNameStr", "testChopWithRegexReturnsChoppedSubstring", "testFlip", "testSetStrRemovesRedudentantWhitespace", "testSetStrRemovesWhitespaceAtEnds" ],
            "org.apache.commons.text.names.ParserTest" : [ "testAll" ]
          }
        },
        "org.apache.commons.text.names.Name#setStr" : {
          "testcases" : {
            "org.apache.commons.text.names.NameTest" : [ "testChopWithRegexChopsEndOffNameStr", "testChopWithRegexChopsMiddleFromNameStr", "testChopWithRegexChopsStartOffNameStr", "testChopWithRegexReturnsChoppedSubstring", "testFlip", "testSetStrRemovesRedudentantWhitespace", "testSetStrRemovesWhitespaceAtEnds" ]
          }
        },
        "org.apache.commons.text.names.NameParseException" : {
          "testcases" : { }
        },
        "org.apache.commons.text.names.NameTest" : {
          "testcases" : {
            "org.apache.commons.text.names.NameTest" : [ "testChopWithRegexChopsEndOffNameStr", "testChopWithRegexChopsMiddleFromNameStr", "testChopWithRegexChopsStartOffNameStr", "testChopWithRegexReturnsChoppedSubstring", "testFlip", "testSetStrRemovesRedudentantWhitespace", "testSetStrRemovesWhitespaceAtEnds" ]
          }
        },
        "org.apache.commons.text.names.NameTest#setUp" : {
          "testcases" : {
            "org.apache.commons.text.names.NameTest" : [ "testChopWithRegexChopsEndOffNameStr", "testChopWithRegexChopsMiddleFromNameStr", "testChopWithRegexChopsStartOffNameStr", "testChopWithRegexReturnsChoppedSubstring", "testFlip", "testSetStrRemovesRedudentantWhitespace", "testSetStrRemovesWhitespaceAtEnds" ]
          }
        },
        "org.apache.commons.text.names.NameTest#testChopWithRegexChopsEndOffNameStr" : {
          "testcases" : {
            "org.apache.commons.text.names.NameTest" : [ "testChopWithRegexChopsEndOffNameStr" ]
          }
        },
        "org.apache.commons.text.names.NameTest#testChopWithRegexChopsMiddleFromNameStr" : {
          "testcases" : {
            "org.apache.commons.text.names.NameTest" : [ "testChopWithRegexChopsMiddleFromNameStr" ]
          }
        },
        "org.apache.commons.text.names.NameTest#testChopWithRegexChopsStartOffNameStr" : {
          "testcases" : {
            "org.apache.commons.text.names.NameTest" : [ "testChopWithRegexChopsStartOffNameStr" ]
          }
        },
        "org.apache.commons.text.names.NameTest#testChopWithRegexReturnsChoppedSubstring" : {
          "testcases" : {
            "org.apache.commons.text.names.NameTest" : [ "testChopWithRegexReturnsChoppedSubstring" ]
          }
        },
        "org.apache.commons.text.names.NameTest#testFlip" : {
          "testcases" : {
            "org.apache.commons.text.names.NameTest" : [ "testFlip" ]
          }
        },
        "org.apache.commons.text.names.NameTest#testSetStrRemovesRedudentantWhitespace" : {
          "testcases" : {
            "org.apache.commons.text.names.NameTest" : [ "testSetStrRemovesRedudentantWhitespace" ]
          }
        },
        "org.apache.commons.text.names.NameTest#testSetStrRemovesWhitespaceAtEnds" : {
          "testcases" : {
            "org.apache.commons.text.names.NameTest" : [ "testSetStrRemovesWhitespaceAtEnds" ]
          }
        },
        "org.apache.commons.text.names.ParserTest" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testAll" ]
          }
        },
        "org.apache.commons.text.names.ParserTest#testAll" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testAll" ]
          }
        },
        "org.apache.commons.text.names.ParserTest#validateLine" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testAll" ]
          }
        },
        "org.apache.commons.text.names.package-info" : {
          "testcases" : { }
        }
      }
    },
    "b0b9d358cc44e8e52d0675abf49eaefac003a112" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b0b9d358cc44e8e52d0675abf49eaefac003a112~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.EditDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.EditDistanceFrom" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.FuzzyScore" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore", "testGetFuzzyScore_NullNullLocale", "testGetFuzzyScore_NullStringLocale", "testGetFuzzyScore_StringNullLocale", "testMissingLocale" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testGetFuzzyScore" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testGetFuzzyScore_NullNullLocale" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore_NullNullLocale" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testGetFuzzyScore_NullStringLocale" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore_NullStringLocale" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testGetFuzzyScore_StringNullLocale" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore_StringNullLocale" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWrinklerDistance#apply(CharSequence,CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWrinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullNull", "testGetJaroWinklerDistance_NullString", "testGetJaroWinklerDistance_StringNull", "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.ParameterizedEditDistanceFromTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.StringMetricFromTest#testEquivalence" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence" ]
          }
        },
        "org.apache.commons.text.similarity.StringMetricFromTest#testJavadocExample" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testJavadocExample" ]
          }
        },
        "org.apache.commons.text.similarity.StringMetricFromTest#testMissingMetric" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testMissingMetric" ]
          }
        }
      }
    },
    "f2f24aa6f589401094f998cd27d677473d4ad4ac" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f2f24aa6f589401094f998cd27d677473d4ad4ac~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.ParameterizedEditDistanceFromTest#parameters" : {
          "testcases" : { }
        }
      }
    },
    "0ecf9afc8473fae8537c76178b4044d85c2b743e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0ecf9afc8473fae8537c76178b4044d85c2b743e~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.StringMetricFromTest#testJavadocExample" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testJavadocExample" ]
          }
        }
      }
    },
    "49ae4553c1599ab82d77cf29684878e4b11b610f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "49ae4553c1599ab82d77cf29684878e4b11b610f~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.HumanNameParser#<init>" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#getFirst" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#getLast" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#getLeadingInit" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#getMiddle" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#getNickname" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#getSuffix" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#parse" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.Name#<init>" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.Name#chopWithRegex" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.Name#flip" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.Name#getStr" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.Name#norm" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.ParserTest" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.ParserTest#setUp" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.ParserTest#tearDown" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.ParserTest#testInputs" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.ParserTest#validateRecord" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserTest" : [ "testInputs" ]
          }
        }
      }
    },
    "b6dbc7ae77721054f1f7fe87c9913fe34a36278a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b6dbc7ae77721054f1f7fe87c9913fe34a36278a~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.HumanNameParser#<init>" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#getFirst" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#getLast" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#getLeadingInit" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#getMiddle" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#getNickname" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#getSuffix" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#parse" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParserTest" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParserTest#setUp" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParserTest#tearDown" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParserTest#testInputs" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParserTest#validateRecord" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.Name#<init>" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.Name#chopWithRegex" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.Name#flip" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.Name#getStr" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.Name#norm" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        }
      }
    },
    "734b777c09b6a637dbfa2eb341eeaa573dbe39bb" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "734b777c09b6a637dbfa2eb341eeaa573dbe39bb~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.HumanNameParserTest" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        }
      }
    },
    "1ccc7b3d1348cf3b981f0a8a4ee885a0a6e8c3f2" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1ccc7b3d1348cf3b981f0a8a4ee885a0a6e8c3f2~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.HumanNameParserTest#validateRecord(CSVRecord)" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        }
      }
    },
    "65852f808ce5b7d0652b479cc237e7531a7eb395" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "65852f808ce5b7d0652b479cc237e7531a7eb395~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.HumanNameParserTest" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.ParserTest" : {
          "testcases" : { }
        }
      }
    },
    "aa293500080d6872b3ac653dcf74a50cf8223ae5" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "aa293500080d6872b3ac653dcf74a50cf8223ae5~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.HumanNameParser#<init>(Name)" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParserTest#validateRecord(CSVRecord)" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        }
      }
    },
    "df7e7a7b0aba73a1bf09c41dbd32e913252a8707" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "df7e7a7b0aba73a1bf09c41dbd32e913252a8707~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.HumanNameParser" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParserTest#validateRecord(CSVRecord)" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        }
      }
    },
    "9a0cc85ad01dcf1f468736984cdd5dec0a7a3bf3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9a0cc85ad01dcf1f468736984cdd5dec0a7a3bf3~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.HumanNameParser#<init>" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#parse" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#parse(String)" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParserTest" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed", "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParserTest#setUp" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParserTest#shouldThrowNullPointerException_WhenNullIsParsed" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParserTest#tearDown" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed" ]
          }
        }
      }
    },
    "685f9a864d46cc526b14e3a7476465c49d991478" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "685f9a864d46cc526b14e3a7476465c49d991478~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.HumanNameParser" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed", "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParserTest#validateRecord(CSVRecord)" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.Name" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.NameString" : {
          "testcases" : { }
        },
        "org.apache.commons.text.names.NameString#<init>" : {
          "testcases" : {
            "org.apache.commons.text.names.NameStringTest" : [ "testChopWithRegexChopsEndOffNameStr", "testChopWithRegexChopsMiddleFromNameStr", "testChopWithRegexChopsStartOffNameStr", "testChopWithRegexReturnsChoppedSubstring", "testFlip", "testSetStrRemovesRedudentantWhitespace", "testSetStrRemovesWhitespaceAtEnds" ]
          }
        },
        "org.apache.commons.text.names.NameString#chopWithRegex" : {
          "testcases" : {
            "org.apache.commons.text.names.NameStringTest" : [ "testChopWithRegexChopsEndOffNameStr", "testChopWithRegexChopsMiddleFromNameStr", "testChopWithRegexChopsStartOffNameStr", "testChopWithRegexReturnsChoppedSubstring" ]
          }
        },
        "org.apache.commons.text.names.NameString#flip" : {
          "testcases" : {
            "org.apache.commons.text.names.NameStringTest" : [ "testFlip" ]
          }
        },
        "org.apache.commons.text.names.NameString#getStr" : {
          "testcases" : {
            "org.apache.commons.text.names.NameStringTest" : [ "testChopWithRegexChopsEndOffNameStr", "testChopWithRegexChopsMiddleFromNameStr", "testChopWithRegexChopsStartOffNameStr", "testFlip", "testSetStrRemovesRedudentantWhitespace", "testSetStrRemovesWhitespaceAtEnds" ]
          }
        },
        "org.apache.commons.text.names.NameString#norm" : {
          "testcases" : {
            "org.apache.commons.text.names.NameStringTest" : [ "testChopWithRegexChopsEndOffNameStr", "testChopWithRegexChopsMiddleFromNameStr", "testChopWithRegexChopsStartOffNameStr", "testChopWithRegexReturnsChoppedSubstring", "testFlip", "testSetStrRemovesRedudentantWhitespace", "testSetStrRemovesWhitespaceAtEnds" ]
          }
        },
        "org.apache.commons.text.names.NameString#setStr" : {
          "testcases" : {
            "org.apache.commons.text.names.NameStringTest" : [ "testChopWithRegexChopsEndOffNameStr", "testChopWithRegexChopsMiddleFromNameStr", "testChopWithRegexChopsStartOffNameStr", "testChopWithRegexReturnsChoppedSubstring", "testFlip", "testSetStrRemovesRedudentantWhitespace", "testSetStrRemovesWhitespaceAtEnds" ]
          }
        },
        "org.apache.commons.text.names.NameStringTest" : {
          "testcases" : {
            "org.apache.commons.text.names.NameStringTest" : [ "testChopWithRegexChopsEndOffNameStr", "testChopWithRegexChopsMiddleFromNameStr", "testChopWithRegexChopsStartOffNameStr", "testChopWithRegexReturnsChoppedSubstring", "testFlip", "testSetStrRemovesRedudentantWhitespace", "testSetStrRemovesWhitespaceAtEnds" ]
          }
        },
        "org.apache.commons.text.names.NameStringTest#setUp" : {
          "testcases" : {
            "org.apache.commons.text.names.NameStringTest" : [ "testChopWithRegexChopsEndOffNameStr", "testChopWithRegexChopsMiddleFromNameStr", "testChopWithRegexChopsStartOffNameStr", "testChopWithRegexReturnsChoppedSubstring", "testFlip", "testSetStrRemovesRedudentantWhitespace", "testSetStrRemovesWhitespaceAtEnds" ]
          }
        },
        "org.apache.commons.text.names.NameStringTest#testChopWithRegexChopsEndOffNameStr" : {
          "testcases" : {
            "org.apache.commons.text.names.NameStringTest" : [ "testChopWithRegexChopsEndOffNameStr" ]
          }
        },
        "org.apache.commons.text.names.NameStringTest#testChopWithRegexChopsMiddleFromNameStr" : {
          "testcases" : {
            "org.apache.commons.text.names.NameStringTest" : [ "testChopWithRegexChopsMiddleFromNameStr" ]
          }
        },
        "org.apache.commons.text.names.NameStringTest#testChopWithRegexChopsStartOffNameStr" : {
          "testcases" : {
            "org.apache.commons.text.names.NameStringTest" : [ "testChopWithRegexChopsStartOffNameStr" ]
          }
        },
        "org.apache.commons.text.names.NameStringTest#testChopWithRegexReturnsChoppedSubstring" : {
          "testcases" : {
            "org.apache.commons.text.names.NameStringTest" : [ "testChopWithRegexReturnsChoppedSubstring" ]
          }
        },
        "org.apache.commons.text.names.NameStringTest#testFlip" : {
          "testcases" : {
            "org.apache.commons.text.names.NameStringTest" : [ "testFlip" ]
          }
        },
        "org.apache.commons.text.names.NameStringTest#testSetStrRemovesRedudentantWhitespace" : {
          "testcases" : {
            "org.apache.commons.text.names.NameStringTest" : [ "testSetStrRemovesRedudentantWhitespace" ]
          }
        },
        "org.apache.commons.text.names.NameStringTest#testSetStrRemovesWhitespaceAtEnds" : {
          "testcases" : {
            "org.apache.commons.text.names.NameStringTest" : [ "testSetStrRemovesWhitespaceAtEnds" ]
          }
        }
      }
    },
    "1f6c5daecded67a17c07371a564f74ef623b3f29" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1f6c5daecded67a17c07371a564f74ef623b3f29~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.HumanNameParser" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed", "testInputs" ]
          }
        }
      }
    },
    "bbba0a327b7ad8873d176254ec2a550757911bda" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "bbba0a327b7ad8873d176254ec2a550757911bda~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.HumanNameParserTest" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed", "testInputs" ]
          }
        }
      }
    },
    "a942b4c02194a6f544f129e89e0f399d51c5c01a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a942b4c02194a6f544f129e89e0f399d51c5c01a~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.HumanNameParserTest#validateRecord(CSVRecord)" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        }
      }
    },
    "9e340643cfebd7b4088fd9946b3e92fc9f8cd394" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9e340643cfebd7b4088fd9946b3e92fc9f8cd394~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.HumanNameParser" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed", "testInputs" ]
          }
        },
        "org.apache.commons.text.names.NameParseException" : {
          "testcases" : { }
        }
      }
    },
    "ed985cd51220e956f516acecf1039defd0141d34" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ed985cd51220e956f516acecf1039defd0141d34~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.HumanNameParser#parse(String)" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed", "testInputs" ]
          }
        },
        "org.apache.commons.text.names.NameString" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ],
            "org.apache.commons.text.names.NameStringTest" : [ "testChopWithRegexChopsEndOffNameStr", "testChopWithRegexChopsMiddleFromNameStr", "testChopWithRegexChopsStartOffNameStr", "testChopWithRegexReturnsChoppedSubstring", "testFlip" ]
          }
        },
        "org.apache.commons.text.names.NameStringTest" : {
          "testcases" : {
            "org.apache.commons.text.names.NameStringTest" : [ "testChopWithRegexChopsEndOffNameStr", "testChopWithRegexChopsMiddleFromNameStr", "testChopWithRegexChopsStartOffNameStr", "testChopWithRegexReturnsChoppedSubstring", "testFlip" ]
          }
        }
      }
    },
    "b1c7e564251e7a404aa3d021c282349150fd4061" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b1c7e564251e7a404aa3d021c282349150fd4061~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.NameString#flip(String)" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ],
            "org.apache.commons.text.names.NameStringTest" : [ "testFlip" ]
          }
        }
      }
    },
    "bf8bfb0a46c0e6d7f9e3d3416bf2f147c9b81074" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "bf8bfb0a46c0e6d7f9e3d3416bf2f147c9b81074~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.NameTest" : {
          "testcases" : { }
        }
      }
    },
    "331f80bfcf0380fcc35a6d18a327aef4a9e844e4" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "331f80bfcf0380fcc35a6d18a327aef4a9e844e4~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.HumanNameParser" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed", "testInputs" ]
          }
        },
        "org.apache.commons.text.names.ParserOptions" : {
          "testcases" : { }
        }
      }
    },
    "0e7aad06a4967bec1581b88cdf706bed32599d4c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0e7aad06a4967bec1581b88cdf706bed32599d4c~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.HumanNameParser" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed", "testInputs" ]
          }
        }
      }
    },
    "4310744eb62e735a39ff84840cd4eb41ae6eb5a6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4310744eb62e735a39ff84840cd4eb41ae6eb5a6~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.NameStringTest#testChopWithRegexChopsEndOffNameStr" : {
          "testcases" : {
            "org.apache.commons.text.names.NameStringTest" : [ "testChopWithRegexChopsEndOffNameStr" ]
          }
        },
        "org.apache.commons.text.names.NameStringTest#testChopWithRegexChopsMiddleFromNameStr" : {
          "testcases" : {
            "org.apache.commons.text.names.NameStringTest" : [ "testChopWithRegexChopsMiddleFromNameStr" ]
          }
        },
        "org.apache.commons.text.names.NameStringTest#testChopWithRegexChopsStartOffNameStr" : {
          "testcases" : {
            "org.apache.commons.text.names.NameStringTest" : [ "testChopWithRegexChopsStartOffNameStr" ]
          }
        },
        "org.apache.commons.text.names.NameStringTest#testChopWithRegexReturnsChoppedSubstring" : {
          "testcases" : {
            "org.apache.commons.text.names.NameStringTest" : [ "testChopWithRegexReturnsChoppedSubstring" ]
          }
        },
        "org.apache.commons.text.names.NameStringTest#testFlip" : {
          "testcases" : {
            "org.apache.commons.text.names.NameStringTest" : [ "testFlip" ]
          }
        },
        "org.apache.commons.text.names.ParserOptions" : {
          "testcases" : { }
        },
        "org.apache.commons.text.names.ParserOptions#<init>" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserOptionsTest" : [ "testParseOptionsShouldBeConfigurable", "testParserOptionsIsImmutableForPrefixes", "testParserOptionsIsImmutableForSuffixes", "testParserOptionsUsesDefaultOptions" ]
          }
        },
        "org.apache.commons.text.names.ParserOptions#getPrefixes" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserOptionsTest" : [ "testParseOptionsShouldBeConfigurable", "testParserOptionsIsImmutableForPrefixes", "testParserOptionsUsesDefaultOptions" ]
          }
        },
        "org.apache.commons.text.names.ParserOptions#getSuffixes" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserOptionsTest" : [ "testParseOptionsShouldBeConfigurable", "testParserOptionsIsImmutableForSuffixes", "testParserOptionsUsesDefaultOptions" ]
          }
        },
        "org.apache.commons.text.names.ParserOptionsTest" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserOptionsTest" : [ "testParseOptionsShouldBeConfigurable", "testParserOptionsIsImmutableForPrefixes", "testParserOptionsIsImmutableForSuffixes", "testParserOptionsUsesDefaultOptions" ]
          }
        },
        "org.apache.commons.text.names.ParserOptionsTest#setUp" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserOptionsTest" : [ "testParseOptionsShouldBeConfigurable", "testParserOptionsIsImmutableForPrefixes", "testParserOptionsIsImmutableForSuffixes", "testParserOptionsUsesDefaultOptions" ]
          }
        },
        "org.apache.commons.text.names.ParserOptionsTest#testParseOptionsShouldBeConfigurable" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserOptionsTest" : [ "testParseOptionsShouldBeConfigurable" ]
          }
        },
        "org.apache.commons.text.names.ParserOptionsTest#testParserOptionsIsImmutableForPrefixes" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserOptionsTest" : [ "testParserOptionsIsImmutableForPrefixes" ]
          }
        },
        "org.apache.commons.text.names.ParserOptionsTest#testParserOptionsIsImmutableForSuffixes" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserOptionsTest" : [ "testParserOptionsIsImmutableForSuffixes" ]
          }
        },
        "org.apache.commons.text.names.ParserOptionsTest#testParserOptionsUsesDefaultOptions" : {
          "testcases" : {
            "org.apache.commons.text.names.ParserOptionsTest" : [ "testParserOptionsUsesDefaultOptions" ]
          }
        }
      }
    },
    "1c6403353bad890d0338d7f2d50274c7d79e4a3b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1c6403353bad890d0338d7f2d50274c7d79e4a3b~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.HumanNameParser" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed", "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParserTest" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed", "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParserTest$Columns" : {
          "testcases" : { }
        },
        "org.apache.commons.text.names.Name" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        }
      }
    },
    "4bb5dddf5001745e890b4fcd7bd77404e462d7c7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4bb5dddf5001745e890b4fcd7bd77404e462d7c7~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.HumanNameParser#<init>" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed", "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#parse(String)" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed", "testInputs" ]
          }
        }
      }
    },
    "ddafb1fc1f459de6d3b16c683793830549210699" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ddafb1fc1f459de6d3b16c683793830549210699~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.HumanNameParser#<init>" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed", "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#parse(String)" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed", "testInputs" ]
          }
        }
      }
    },
    "f66640340226e149c5500f68a16ede503a75fd65" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f66640340226e149c5500f68a16ede503a75fd65~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.HumanNameParser" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed", "testInputs" ]
          }
        }
      }
    },
    "cd92a0eacc7c0f37fe2e52ea94eb41c522012f06" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "cd92a0eacc7c0f37fe2e52ea94eb41c522012f06~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.Name" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        }
      }
    },
    "c05e0251a0178f8544696e3d1451826b4d66cc40" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c05e0251a0178f8544696e3d1451826b4d66cc40~1",
      "changedClazzes" : {
        "org.apache.commons.text.AlphabetConverter" : {
          "testcases" : { }
        },
        "org.apache.commons.text.AlphabetConverter#<init>" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#addSingleEncoding" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#codePointToString" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#convertCharsToIntegers" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#createConverter" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#createConverterFromChars" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#createConverterFromMap" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#decode" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#encode" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#equals" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#getEncodedCharLength" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "unicodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#getOriginalToEncoded" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#hashCode" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#toString" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#binaryTest" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#createJavadocExample" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "javadocExampleTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#doNotEncodeTest" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "doNotEncodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#hebrewTest" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "hebrewTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#javadocExampleTest" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "javadocExampleTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#test" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#unicodeTest" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "unicodeTest" ]
          }
        }
      }
    },
    "79a48781ccc3cec748fa6a650bbf0096e6e7ca7d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "79a48781ccc3cec748fa6a650bbf0096e6e7ca7d~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.NameStringTest#testChopWithRegexChopsEndOffNameStr" : {
          "testcases" : {
            "org.apache.commons.text.names.NameStringTest" : [ "testChopWithRegexChopsEndOffNameStr" ]
          }
        },
        "org.apache.commons.text.names.NameStringTest#testChopWithRegexChopsMiddleFromNameStr" : {
          "testcases" : {
            "org.apache.commons.text.names.NameStringTest" : [ "testChopWithRegexChopsMiddleFromNameStr" ]
          }
        },
        "org.apache.commons.text.names.NameStringTest#testChopWithRegexChopsStartOffNameStr" : {
          "testcases" : {
            "org.apache.commons.text.names.NameStringTest" : [ "testChopWithRegexChopsStartOffNameStr" ]
          }
        },
        "org.apache.commons.text.names.NameStringTest#testChopWithRegexReturnsChoppedSubstring" : {
          "testcases" : {
            "org.apache.commons.text.names.NameStringTest" : [ "testChopWithRegexReturnsChoppedSubstring" ]
          }
        },
        "org.apache.commons.text.names.NameStringTest#testFlip" : {
          "testcases" : {
            "org.apache.commons.text.names.NameStringTest" : [ "testFlip" ]
          }
        }
      }
    },
    "02168c1f6c8e8c5d231203831eccea591de4c2a4" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "02168c1f6c8e8c5d231203831eccea591de4c2a4~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#<init>" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testConstructorWithNegativeThreshold", "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#apply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#findDetailedResults" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#limitedCompare" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#unlimitedCompare" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testConstructorWithNegativeThreshold", "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testConstructorWithNegativeThreshold" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testConstructorWithNegativeThreshold" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_NullString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_NullString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_NullStringInt" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_NullStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_StringNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringNull" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_StringNullInt" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringNullInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_StringString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_StringStringInt" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#<init>" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#getDeleteCount" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#getDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#getInsertCount" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#getSubstituteCount" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        }
      }
    },
    "0db2470616e634e66786102ac8a75c4de61422a6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0db2470616e634e66786102ac8a75c4de61422a6~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.JaroWrinklerDistanceTest#setUp" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.JaroWrinklerSimilarity" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.ParameterizedEditDistanceFromTest#parameters" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.StringSimilarity" : {
          "testcases" : { }
        }
      }
    },
    "9e84145b1ea2b873b73c8722230b511883623f92" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9e84145b1ea2b873b73c8722230b511883623f92~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.HumanNameParser" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed", "testInputs" ]
          }
        },
        "org.apache.commons.text.names.Name" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        }
      }
    },
    "0443ecaa3e418131dd4642fc40f1cc5caaeb522a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0443ecaa3e418131dd4642fc40f1cc5caaeb522a~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testConstructorWithNegativeThreshold", "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testConstructorWithNegativeThreshold", "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        }
      }
    },
    "a0db3fa8fa5ed0dfc84892334ac1ea13149ee620" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a0db3fa8fa5ed0dfc84892334ac1ea13149ee620~1",
      "changedClazzes" : {
        "org.apache.commons.text.diff.EditScript" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.ReplacementsFinder" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.StringsComparator" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarity" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.Counter" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.ParameterizedEditDistanceFromTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.RegexTokenizer" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.StringMetricFromTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample", "testMissingMetric" ]
          }
        }
      }
    },
    "feeab27693c01a8789df89f9fad9a6f6edb9ccb5" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "feeab27693c01a8789df89f9fad9a6f6edb9ccb5~1",
      "changedClazzes" : {
        "org.apache.commons.text.translate.CharSequenceTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup", "testLang882" ],
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ],
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ],
            "org.apache.commons.text.translate.OctalUnescaperTest" : [ "testBetween" ],
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ],
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testLessThanFour", "testUPlus", "testUuuuu" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ],
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ],
            "org.apache.commons.text.translate.OctalUnescaperTest" : [ "testBetween" ],
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ],
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testLessThanFour", "testUPlus", "testUuuuu" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ],
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ],
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testConstructorExists" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#HTML40_EXTENDED_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testHTML40_EXTENDED_ESCAPE" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#ISO8859_1_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testISO8859_1_ESCAPE" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#invert" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testConstructorExists", "testHTML40_EXTENDED_ESCAPE", "testISO8859_1_ESCAPE" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testConstructorExists", "testHTML40_EXTENDED_ESCAPE", "testISO8859_1_ESCAPE" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testConstructorExists" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testConstructorExists" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testHTML40_EXTENDED_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testHTML40_EXTENDED_ESCAPE" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testISO8859_1_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testISO8859_1_ESCAPE" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup", "testLang882" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup", "testLang882" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslatorTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup", "testLang882" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslatorTest#testBasicLookup" : {
          "testcases" : {
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslatorTest#testLang882" : {
          "testcases" : {
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testLang882" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#above" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#below" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testBelow" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#between" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#outsideOf" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaperTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaperTest#testAbove" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaperTest#testBelow" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testBelow" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaperTest#testBetween" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaperTest#testSupplementary" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testSupplementary" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper#isSet" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testUnfinishedEntity" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaperTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaperTest#testOutOfBounds" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaperTest#testSupplementaryUnescaping" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testSupplementaryUnescaping" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaperTest#testUnfinishedEntity" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testUnfinishedEntity" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.OctalUnescaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper#isOctalDigit" : {
          "testcases" : {
            "org.apache.commons.text.translate.OctalUnescaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper#isZeroToThree" : {
          "testcases" : {
            "org.apache.commons.text.translate.OctalUnescaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.OctalUnescaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaperTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.OctalUnescaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaperTest#testBetween" : {
          "testcases" : {
            "org.apache.commons.text.translate.OctalUnescaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#above" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#below" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testBelow" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#between" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#outsideOf" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaperTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaperTest#testAbove" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaperTest#testBelow" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testBelow" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaperTest#testBetween" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testLessThanFour", "testUPlus", "testUuuuu" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testLessThanFour", "testUPlus", "testUuuuu" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaperTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testLessThanFour", "testUPlus", "testUuuuu" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaperTest#testLessThanFour" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testLessThanFour" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaperTest#testUPlus" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testUPlus" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaperTest#testUuuuu" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testUuuuu" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemover#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemoverTest" : [ "testInvalidCharacters", "testValidCharacters" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemoverTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemoverTest" : [ "testInvalidCharacters", "testValidCharacters" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemoverTest#testInvalidCharacters" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemoverTest" : [ "testInvalidCharacters" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemoverTest#testValidCharacters" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemoverTest" : [ "testValidCharacters" ]
          }
        }
      }
    },
    "6bbe66feb6d8dc69a0464085dd4117e6e23aa389" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6bbe66feb6d8dc69a0464085dd4117e6e23aa389~1",
      "changedClazzes" : {
        "org.apache.commons.text.AlphabetConverter" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.names.Name#equals(Object)" : {
          "testcases" : { }
        },
        "org.apache.commons.text.package-info" : {
          "testcases" : { }
        }
      }
    },
    "bf86c1d139aff068c97fd949b8b68fdb0e784835" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "bf86c1d139aff068c97fd949b8b68fdb0e784835~1",
      "changedClazzes" : {
        "org.apache.commons.text.AlphabetConverter" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        }
      }
    },
    "4168de224d0341d9cf0fd38456b296800d245044" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4168de224d0341d9cf0fd38456b296800d245044~1",
      "changedClazzes" : {
        "org.apache.commons.text.AlphabetConverterTest#noEncodingLettersTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.AlphabetConverterTest#onlyOneEncodingLettersTest" : {
          "testcases" : { }
        }
      }
    },
    "930c07d6d7a165b1c16d2eaba702bc2074580899" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "930c07d6d7a165b1c16d2eaba702bc2074580899~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#<init>" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testConstructorWithNegativeThreshold", "testEquals", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#apply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals", "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#findDetailedResults" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#limitedCompare" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#unlimitedCompare" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals", "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testConstructorWithNegativeThreshold", "testEquals", "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testConstructorWithNegativeThreshold" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testConstructorWithNegativeThreshold" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testEquals" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_NullString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_NullString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_NullStringInt" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_NullStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_StringNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringNull" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_StringNullInt" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringNullInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_StringString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_StringStringInt" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testHashCode" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testHashCode" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testToString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#<init>" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#equals" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#getDeleteCount" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#getDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#getInsertCount" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#getSubstituteCount" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#hashCode" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testHashCode" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#toString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testToString" ]
          }
        }
      }
    },
    "c8a803c21cd53e431e90569233730e0dd4d025ba" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c8a803c21cd53e431e90569233730e0dd4d025ba~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#findDetailedResults(CharSequence,CharSequence,int[][],boolean)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#limitedCompare(CharSequence,CharSequence,int)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#equals(Object)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals" ]
          }
        }
      }
    },
    "2f55bd1520d73c3c46d48b9066107d37f38926c4" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2f55bd1520d73c3c46d48b9066107d37f38926c4~1",
      "changedClazzes" : {
        "org.apache.commons.text.translate.AggregateTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull", "testNullConstructor" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslatorTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull", "testNullConstructor" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslatorTest#testNonNull" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslatorTest#testNullConstructor" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNullConstructor" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull", "testNullConstructor" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull" ]
          }
        }
      }
    },
    "32196b189ac7e4909f8b4dab7ed5a34ef65e532c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "32196b189ac7e4909f8b4dab7ed5a34ef65e532c~1",
      "changedClazzes" : {
        "org.apache.commons.text.translate.CharSequenceTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#hex" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#above" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#below" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testBelow", "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#between" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#outsideOf" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#toUtf16Escape" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaperTest#testAbove" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaperTest#testBelow" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testBelow" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaperTest#testBetween" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaperTest#testToUtf16Escape" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        }
      }
    },
    "e3c006e13b202cf92f274d7b26ee5ffb2316dd2c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e3c006e13b202cf92f274d7b26ee5ffb2316dd2c~1",
      "changedClazzes" : {
        "org.apache.commons.text.translate.EntityArrays#APOS_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#APOS_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#BASIC_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testBasicArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#BASIC_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testBasicArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#HTML40_EXTENDED_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testHtml40ExtendedArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#HTML40_EXTENDED_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testHtml40ExtendedArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#ISO8859_1_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testISO8859Arrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#ISO8859_1_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testISO8859Arrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#JAVA_CTRL_CHARS_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testJavaCntrlCharsArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#invert" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposArrays", "testBasicArrays", "testHtml40ExtendedArrays", "testISO8859Arrays", "testJavaCntrlCharsArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposArrays", "testBasicArrays", "testConstructorExists", "testHTML40_EXTENDED_ESCAPE", "testHtml40ExtendedArrays", "testISO8859Arrays", "testISO8859_1_ESCAPE", "testJavaCntrlCharsArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testAposArrays" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testBasicArrays" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testBasicArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testEscapeVsUnescapeArrays" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposArrays", "testBasicArrays", "testHtml40ExtendedArrays", "testISO8859Arrays", "testJavaCntrlCharsArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testHtml40ExtendedArrays" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testHtml40ExtendedArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testISO8859Arrays" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testISO8859Arrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testJavaCntrlCharsArrays" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testJavaCntrlCharsArrays" ]
          }
        }
      }
    },
    "6f24aa4568fb62777d515625cd0146d4c36d5a6c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6f24aa4568fb62777d515625cd0146d4c36d5a6c~1",
      "changedClazzes" : {
        "org.apache.commons.text.Builder" : {
          "testcases" : { }
        },
        "org.apache.commons.text.CompositeFormat" : {
          "testcases" : { }
        },
        "org.apache.commons.text.CompositeFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.CompositeFormatTest" : [ "testCompositeFormat", "testUsage" ]
          }
        },
        "org.apache.commons.text.CompositeFormat#format" : {
          "testcases" : {
            "org.apache.commons.text.CompositeFormatTest" : [ "testCompositeFormat", "testUsage" ]
          }
        },
        "org.apache.commons.text.CompositeFormat#getFormatter" : {
          "testcases" : {
            "org.apache.commons.text.CompositeFormatTest" : [ "testCompositeFormat" ]
          }
        },
        "org.apache.commons.text.CompositeFormat#getParser" : {
          "testcases" : {
            "org.apache.commons.text.CompositeFormatTest" : [ "testCompositeFormat" ]
          }
        },
        "org.apache.commons.text.CompositeFormat#parseObject" : {
          "testcases" : {
            "org.apache.commons.text.CompositeFormatTest" : [ "testCompositeFormat", "testUsage" ]
          }
        },
        "org.apache.commons.text.CompositeFormat#reformat" : {
          "testcases" : {
            "org.apache.commons.text.CompositeFormatTest" : [ "testUsage" ]
          }
        },
        "org.apache.commons.text.CompositeFormatTest" : {
          "testcases" : {
            "org.apache.commons.text.CompositeFormatTest" : [ "testCompositeFormat", "testUsage" ]
          }
        },
        "org.apache.commons.text.CompositeFormatTest#testCompositeFormat" : {
          "testcases" : {
            "org.apache.commons.text.CompositeFormatTest" : [ "testCompositeFormat" ]
          }
        },
        "org.apache.commons.text.CompositeFormatTest#testUsage" : {
          "testcases" : {
            "org.apache.commons.text.CompositeFormatTest" : [ "testUsage" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat" : {
          "testcases" : { }
        },
        "org.apache.commons.text.ExtendedMessageFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#appendQuotedString" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#applyPattern" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#containsElements" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#equals" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEqualsHashcode" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#getFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#hashCode" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEqualsHashcode" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#insertFormats" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#next" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#parseFormatDescription" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#readArgumentIndex" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#seekNonWs" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#toPattern" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#assertPatternsEqual" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#checkBuiltInFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#createMessageFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testExtendedAndBuiltInFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#setUp" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testBuiltInChoiceFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testBuiltInDateTimeFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInDateTimeFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testBuiltInNumberFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInNumberFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testEmbeddedPatternInChoice" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testEqualsHashcode" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEqualsHashcode" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testEscapedBraces_LANG_948" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEscapedBraces_LANG_948" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testEscapedQuote_LANG_477" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEscapedQuote_LANG_477" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testExtendedAndBuiltInFormats" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testExtendedAndBuiltInFormats" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testExtendedFormats" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testExtendedFormats" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testOverriddenBuiltinFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$LowerCaseFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$LowerCaseFormat#format" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEscapedQuote_LANG_477", "testExtendedFormats" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$LowerCaseFormatFactory#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$LowerCaseFormatFactory#getFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedQuote_LANG_477", "testExtendedFormats" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$OtherExtendedMessageFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEqualsHashcode" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$OverrideShortDateFormatFactory#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$OverrideShortDateFormatFactory#getFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$UpperCaseFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$UpperCaseFormat#format" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testExtendedAndBuiltInFormats", "testExtendedFormats" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$UpperCaseFormatFactory#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$UpperCaseFormatFactory#getFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testExtendedAndBuiltInFormats", "testExtendedFormats" ]
          }
        },
        "org.apache.commons.text.FormatFactory" : {
          "testcases" : { }
        },
        "org.apache.commons.text.FormattableUtils" : {
          "testcases" : { }
        },
        "org.apache.commons.text.FormattableUtils#append" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testAlternatePadCharAndEllipsis", "testAlternatePadCharacter", "testDefaultAppend", "testEllipsis", "testIllegalEllipsis" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testAlternatePadCharAndEllipsis", "testAlternatePadCharacter", "testDefaultAppend", "testEllipsis", "testIllegalEllipsis" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest#testAlternatePadCharAndEllipsis" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testAlternatePadCharAndEllipsis" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest#testAlternatePadCharacter" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testAlternatePadCharacter" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest#testDefaultAppend" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testDefaultAppend" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest#testEllipsis" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testEllipsis" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest#testIllegalEllipsis" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testIllegalEllipsis" ]
          }
        },
        "org.apache.commons.text.StrBuilder" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrBuilder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText", "testLang299" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testGetSetNewLineText", "testGetSetNullText", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLang412Left", "testLang412Right", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim", "test_LANG_1131_EqualsWithNullStrBuilder" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrBuilder#append" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBufferAppendsToEnd", "testReadFromReadableAppendsToEnd", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrBuilder#appendAll" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAsBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilder#appendFixedWidthPadLeft" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testLang412Left" ]
          }
        },
        "org.apache.commons.text.StrBuilder#appendFixedWidthPadRight" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testLang299" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testLang412Right" ]
          }
        },
        "org.apache.commons.text.StrBuilder#appendNewLine" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendNewLine", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int" ]
          }
        },
        "org.apache.commons.text.StrBuilder#appendNull" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_Object", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Object" ]
          }
        },
        "org.apache.commons.text.StrBuilder#appendPadding" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendPadding" ]
          }
        },
        "org.apache.commons.text.StrBuilder#appendSeparator" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int" ]
          }
        },
        "org.apache.commons.text.StrBuilder#appendTo" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter" ]
          }
        },
        "org.apache.commons.text.StrBuilder#appendWithSeparators" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testCyclicReplacement" ]
          }
        },
        "org.apache.commons.text.StrBuilder#appendln" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int" ]
          }
        },
        "org.apache.commons.text.StrBuilder#asReader" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.StrBuilder#asTokenizer" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrBuilder#asWriter" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsWriter" ]
          }
        },
        "org.apache.commons.text.StrBuilder#build" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilder#capacity" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testCapacity", "testCapacityAndLength", "testConstructors", "testEnsureCapacity", "testMinimizeCapacity" ]
          }
        },
        "org.apache.commons.text.StrBuilder#charAt" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsReader", "testCharAt" ]
          }
        },
        "org.apache.commons.text.StrBuilder#clear" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppendln_Boolean", "testAppendln_PrimitiveNumber", "testInsert", "testInsertWithNullText" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer", "testCapacityAndLength", "testChaining", "testClear", "testEquals", "testEqualsIgnoreCase", "testIsEmpty", "testReverse", "testTrim" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrBuilder#contains" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testContains_StrMatcher", "testContains_String", "testContains_char", "testLang295" ]
          }
        },
        "org.apache.commons.text.StrBuilder#delete" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteIntInt", "testTrim" ]
          }
        },
        "org.apache.commons.text.StrBuilder#deleteAll" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testLang294" ]
          }
        },
        "org.apache.commons.text.StrBuilder#deleteCharAt" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteCharAt" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testReplaceComplexEscaping", "testReplaceEscaping", "testReplaceSoloEscaping", "testReplaceToIdentical", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrBuilder#deleteFirst" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testIndexOfLang294", "testLang295" ]
          }
        },
        "org.apache.commons.text.StrBuilder#deleteImpl" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testIndexOfLang294", "testLang294", "testLang295", "testTrim" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testReplaceComplexEscaping", "testReplaceEscaping", "testReplaceSoloEscaping", "testReplaceToIdentical", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrBuilder#endsWith" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testEndsWith" ]
          }
        },
        "org.apache.commons.text.StrBuilder#ensureCapacity" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText", "testLang299" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLang412Left", "testLang412Right", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrBuilder#equals" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testEquals", "test_LANG_1131_EqualsWithNullStrBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilder#equalsIgnoreCase" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testEqualsIgnoreCase" ]
          }
        },
        "org.apache.commons.text.StrBuilder#getChars" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_StrBuilder_int_int", "testAppendln_StrBuilder_int_int" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAsReader", "testGetChars", "testGetCharsIntIntCharArrayInt" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceToIdentical", "testReplaceUnknownKey" ]
          }
        },
        "org.apache.commons.text.StrBuilder#getNewLineText" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testGetSetNewLineText" ]
          }
        },
        "org.apache.commons.text.StrBuilder#getNullText" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadRight" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testGetSetNullText", "testLang412Left", "testLang412Right" ]
          }
        },
        "org.apache.commons.text.StrBuilder#hashCode" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testHashCode" ]
          }
        },
        "org.apache.commons.text.StrBuilder#indexOf" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testContains_StrMatcher", "testContains_String", "testDeleteAll_String", "testDeleteFirst_String", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testLang294", "testLang295", "testReplaceAll_String_String", "testReplaceFirst_String_String" ]
          }
        },
        "org.apache.commons.text.StrBuilder#insert" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testInsert", "testInsertWithNullText" ]
          }
        },
        "org.apache.commons.text.StrBuilder#isEmpty" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendSeparator_String", "testAppendSeparator_String_String" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testCapacityAndLength", "testIsEmpty" ]
          }
        },
        "org.apache.commons.text.StrBuilder#lastIndexOf" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int" ]
          }
        },
        "org.apache.commons.text.StrBuilder#leftString" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLeftString" ]
          }
        },
        "org.apache.commons.text.StrBuilder#length" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBufferAppendsToEnd", "testReadFromReadableAppendsToEnd", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrBuilder#midString" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testMidString" ]
          }
        },
        "org.apache.commons.text.StrBuilder#minimizeCapacity" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testCapacityAndLength", "testChaining", "testMinimizeCapacity" ]
          }
        },
        "org.apache.commons.text.StrBuilder#readFrom" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd" ]
          }
        },
        "org.apache.commons.text.StrBuilder#replace" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteAll_StrMatcher", "testDeleteFirst_StrMatcher", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrBuilder#replaceAll" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char" ]
          }
        },
        "org.apache.commons.text.StrBuilder#replaceFirst" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char" ]
          }
        },
        "org.apache.commons.text.StrBuilder#replaceImpl" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteAll_StrMatcher", "testDeleteFirst_StrMatcher", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrBuilder#reverse" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testChaining", "testReverse", "testTrim" ]
          }
        },
        "org.apache.commons.text.StrBuilder#rightString" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testRightString" ]
          }
        },
        "org.apache.commons.text.StrBuilder#setCharAt" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testChaining", "testSetCharAt" ]
          }
        },
        "org.apache.commons.text.StrBuilder#setLength" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsWriter", "testCapacityAndLength", "testChaining", "testSetLength" ]
          }
        },
        "org.apache.commons.text.StrBuilder#setNewLineText" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendNewLine" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testChaining", "testGetSetNewLineText" ]
          }
        },
        "org.apache.commons.text.StrBuilder#setNullText" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadRight", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testInsertWithNullText" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testChaining", "testGetSetNullText" ]
          }
        },
        "org.apache.commons.text.StrBuilder#size" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendSeparator_char", "testAppendSeparator_char_char" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendToCharBuffer", "testAsReader", "testAsTokenizer", "testCapacityAndLength", "testConstructors", "testSize" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrBuilder#startsWith" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testStartsWith" ]
          }
        },
        "org.apache.commons.text.StrBuilder#subSequence" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testSubSequenceIntInt" ]
          }
        },
        "org.apache.commons.text.StrBuilder#substring" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrBuilder#toString" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText", "testLang299" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer", "testAsBuilder", "testAsTokenizer", "testAsWriter", "testCapacityAndLength", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testLang294", "testLang412Left", "testLang412Right", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testSetCharAt", "testSetLength", "testToString", "testTrim" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrBuilder#toStringBuffer" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testToStringBuffer" ]
          }
        },
        "org.apache.commons.text.StrBuilder#toStringBuilder" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testToStringBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilder#trim" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testChaining", "testTrim" ]
          }
        },
        "org.apache.commons.text.StrBuilder#validateIndex" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testInsert", "testInsertWithNullText" ]
          }
        },
        "org.apache.commons.text.StrBuilder#validateRange" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer", "testDeleteAll_StrMatcher", "testDeleteFirst_StrMatcher", "testDeleteIntInt", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testTrim" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderReader#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderReader#close" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderReader#mark" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderReader#markSupported" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderReader#read" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderReader#ready" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderReader#reset" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderReader#skip" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderTokenizer#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderTokenizer#getContent" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderTokenizer#tokenize" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderWriter#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsWriter" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsWriter" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderWriter#flush" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsWriter" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderWriter#write" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsWriter" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText", "testLang299" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendAll_Array" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Array" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendAll_Collection" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Collection" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendAll_Iterator" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Iterator" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendFixedWidthPadLeft" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendFixedWidthPadLeft" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendFixedWidthPadLeft_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendFixedWidthPadLeft_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendFixedWidthPadRight" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendFixedWidthPadRight" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendFixedWidthPadRight_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendFixedWidthPadRight_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendNewLine" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendNewLine" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendPadding" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendPadding" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendSeparator_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendSeparator_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendSeparator_String_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendSeparator_String_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendSeparator_String_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendSeparator_String_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendSeparator_char" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendSeparator_char" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendSeparator_char_char" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendSeparator_char_char" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendSeparator_char_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendSeparator_char_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendWithNullText" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendWithNullText" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendWithSeparatorsWithNullText" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendWithSeparatorsWithNullText" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendWithSeparators_Array" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendWithSeparators_Array" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendWithSeparators_Collection" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendWithSeparators_Collection" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendWithSeparators_Iterator" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendWithSeparators_Iterator" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_Boolean" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_Boolean" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_CharArray" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_CharArray" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_CharArray_int_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_CharArray_int_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_FormattedString" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_FormattedString" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_Object" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_Object" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_PrimitiveNumber" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_PrimitiveNumber" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_StrBuilder" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_StrBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_StrBuilder_int_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_StrBuilder_int_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_StringBuffer" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_StringBuffer" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_StringBuffer_int_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_StringBuffer_int_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_StringBuilder" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_StringBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_StringBuilder_int_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_StringBuilder_int_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_String_int_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_String_int_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_Boolean" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_Boolean" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_CharArray" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_CharArray" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_CharArray_int_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_CharArray_int_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_FormattedString" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_FormattedString" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_Object" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_Object" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_PrimitiveNumber" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_PrimitiveNumber" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_StrBuilder" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_StrBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_StrBuilder_int_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_StrBuilder_int_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_StringBuffer" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_StringBuffer" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_StringBuffer_int_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_StringBuffer_int_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_StringBuilder" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_StringBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_StringBuilder_int_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_StringBuilder_int_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_String_int_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_String_int_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testInsert" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testInsert" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testInsertWithNullText" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testInsertWithNullText" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testLang299" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testLang299" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testGetSetNewLineText", "testGetSetNullText", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLang412Left", "testLang412Right", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim", "test_LANG_1131_EqualsWithNullStrBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAppendCharBuffer" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAppendToCharBuffer" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendToCharBuffer" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAppendToStringBuffer" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendToStringBuffer" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAppendToStringBuilder" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendToStringBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAppendToWriter" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendToWriter" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAsBuilder" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAsReader" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAsTokenizer" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAsWriter" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsWriter" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testCapacity" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testCapacity" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testCapacityAndLength" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testCapacityAndLength" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testChaining" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testChaining" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testCharAt" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testCharAt" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testClear" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testClear" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testConstructors" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testConstructors" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testContains_StrMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testContains_StrMatcher" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testContains_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testContains_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testContains_char" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testContains_char" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testDeleteAll_StrMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteAll_StrMatcher" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testDeleteAll_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteAll_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testDeleteAll_char" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteAll_char" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testDeleteCharAt" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteCharAt" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testDeleteFirst_StrMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteFirst_StrMatcher" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testDeleteFirst_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteFirst_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testDeleteFirst_char" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteFirst_char" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testDeleteIntInt" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteIntInt" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testEndsWith" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testEndsWith" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testEnsureCapacity" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testEnsureCapacity" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testEquals" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testEquals" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testEqualsIgnoreCase" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testEqualsIgnoreCase" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testGetChars" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testGetChars" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testGetCharsIntIntCharArrayInt" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testGetCharsIntIntCharArrayInt" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testGetSetNewLineText" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testGetSetNewLineText" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testGetSetNullText" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testGetSetNullText" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testHashCode" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testHashCode" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testIndexOfLang294" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testIndexOfLang294" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testIndexOf_StrMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testIndexOf_StrMatcher" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testIndexOf_StrMatcher_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testIndexOf_StrMatcher_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testIndexOf_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testIndexOf_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testIndexOf_String_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testIndexOf_String_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testIndexOf_char" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testIndexOf_char" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testIndexOf_char_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testIndexOf_char_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testIsEmpty" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testIsEmpty" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testLang294" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLang294" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testLang295" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLang295" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testLang412Left" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLang412Left" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testLang412Right" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLang412Right" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testLastIndexOf_StrMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLastIndexOf_StrMatcher" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testLastIndexOf_StrMatcher_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLastIndexOf_StrMatcher_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testLastIndexOf_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLastIndexOf_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testLastIndexOf_String_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLastIndexOf_String_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testLastIndexOf_char" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLastIndexOf_char" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testLastIndexOf_char_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLastIndexOf_char_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testLeftString" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLeftString" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testLength" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLength" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testMidString" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testMidString" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testMinimizeCapacity" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testMinimizeCapacity" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReadFromCharBuffer" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReadFromCharBuffer" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReadFromCharBufferAppendsToEnd" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReadFromCharBufferAppendsToEnd" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReadFromReadable" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReadFromReadable" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReadFromReadableAppendsToEnd" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReadFromReadableAppendsToEnd" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReadFromReader" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReadFromReader" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReadFromReaderAppendsToEnd" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReadFromReaderAppendsToEnd" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReplaceAll_StrMatcher_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplaceAll_StrMatcher_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReplaceAll_String_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplaceAll_String_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReplaceAll_char_char" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplaceAll_char_char" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReplaceFirst_StrMatcher_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplaceFirst_StrMatcher_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReplaceFirst_String_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplaceFirst_String_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReplaceFirst_char_char" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplaceFirst_char_char" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReplace_StrMatcher_String_int_int_int_VaryCount" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplace_StrMatcher_String_int_int_int_VaryCount" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReplace_StrMatcher_String_int_int_int_VaryEndIndex" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplace_StrMatcher_String_int_int_int_VaryEndIndex" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReplace_StrMatcher_String_int_int_int_VaryMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplace_StrMatcher_String_int_int_int_VaryMatcher" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReplace_StrMatcher_String_int_int_int_VaryReplace" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplace_StrMatcher_String_int_int_int_VaryReplace" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReplace_StrMatcher_String_int_int_int_VaryStartIndex" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplace_StrMatcher_String_int_int_int_VaryStartIndex" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReplace_int_int_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplace_int_int_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReverse" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReverse" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testRightString" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testRightString" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testSetCharAt" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testSetCharAt" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testSetLength" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testSetLength" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testSize" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testSize" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testStartsWith" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testStartsWith" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testSubSequenceIntInt" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testSubSequenceIntInt" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testSubstringInt" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testSubstringInt" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testSubstringIntInt" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testSubstringIntInt" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testToString" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testToString" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testToStringBuffer" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testToStringBuffer" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testToStringBuilder" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testToStringBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testTrim" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testTrim" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#test_LANG_1131_EqualsWithNullStrBuilder" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "test_LANG_1131_EqualsWithNullStrBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest$MockReadable#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReadFromReadable", "testReadFromReadableAppendsToEnd" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest$MockReadable#read" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReadFromReadable", "testReadFromReadableAppendsToEnd" ]
          }
        },
        "org.apache.commons.text.StrLookup" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrLookup#mapLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrLookup#noneLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testNoneLookup" ]
          }
        },
        "org.apache.commons.text.StrLookup#systemPropertiesLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrLookup$MapStrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrLookup$MapStrLookup#lookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrLookup$SystemPropertiesStrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrLookup$SystemPropertiesStrLookup#lookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrLookupTest" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ]
          }
        },
        "org.apache.commons.text.StrLookupTest#testMapLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup" ]
          }
        },
        "org.apache.commons.text.StrLookupTest#testMapLookup_nullMap" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup_nullMap" ]
          }
        },
        "org.apache.commons.text.StrLookupTest#testNoneLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testNoneLookup" ]
          }
        },
        "org.apache.commons.text.StrLookupTest#testSystemProperiesLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testSystemProperiesLookup" ]
          }
        },
        "org.apache.commons.text.StrLookupTest#testSystemPropertiesLookupReplacedProperties" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testSystemPropertiesLookupReplacedProperties" ]
          }
        },
        "org.apache.commons.text.StrLookupTest#testSystemPropertiesLookupUpdatedProperty" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testSystemPropertiesLookupUpdatedProperty" ]
          }
        },
        "org.apache.commons.text.StrMatcher" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testContains_StrMatcher", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcher#charMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testContains_StrMatcher", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryMatcher" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testChaining", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray_char", "testConstructor_charArray_char_char" ]
          }
        },
        "org.apache.commons.text.StrMatcher#charSetMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testCharSetMatcher_String", "testCharSetMatcher_charArray" ]
          }
        },
        "org.apache.commons.text.StrMatcher#commaMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testCommaMatcher" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcher#doubleQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testDoubleQuoteMatcher" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrMatcher#noneMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testNoneMatcher", "testStringMatcher_String" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcher#quoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testQuoteMatcher" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicQuoted6", "testBasicQuoted7" ]
          }
        },
        "org.apache.commons.text.StrMatcher#singleQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testSingleQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcher#spaceMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testSpaceMatcher" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test7", "test8" ]
          }
        },
        "org.apache.commons.text.StrMatcher#splitMatcher" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testSplitMatcher" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcher#stringMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testContains_StrMatcher", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testMatcherIndices", "testStringMatcher_String" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicTrimmed2", "testChaining" ]
          }
        },
        "org.apache.commons.text.StrMatcher#tabMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testTabMatcher" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcher#trimMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testTrimMatcher" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testContains_StrMatcher", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryMatcher" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testContains_StrMatcher", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryMatcher" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char", "testCommaMatcher", "testDoubleQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testTabMatcher" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testTSV" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharSetMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharSetMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testQuoteMatcher", "testSplitMatcher" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasicEmpty1", "testBasicEmpty2", "testBasicQuoted6", "testBasicQuoted7", "testCloneReset", "testConstructor_String", "testConstructor_charArray", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcher$NoMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcher$NoMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testNoneMatcher" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcher$StringMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testContains_StrMatcher", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testMatcherIndices", "testStringMatcher_String" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicTrimmed2", "testChaining" ]
          }
        },
        "org.apache.commons.text.StrMatcher$StringMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testContains_StrMatcher", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testMatcherIndices", "testStringMatcher_String" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicTrimmed2" ]
          }
        },
        "org.apache.commons.text.StrMatcher$TrimMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcher$TrimMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testTrimMatcher" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test4", "test5", "test6", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed4", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testCharMatcher_char" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testCharSetMatcher_String" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testCharSetMatcher_String" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testCharSetMatcher_charArray" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testCharSetMatcher_charArray" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testCommaMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testCommaMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testDoubleQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testDoubleQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testMatcherIndices" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testMatcherIndices" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testNoneMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testNoneMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testSingleQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testSingleQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testSpaceMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testSpaceMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testSplitMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testSplitMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testStringMatcher_String" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testStringMatcher_String" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testTabMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testTabMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testTrimMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testTrimMatcher" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrSubstitutor#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#checkCyclicSubstitution" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getEscapeChar" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getValueDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getVariablePrefixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetPrefix", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getVariableResolver" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getVariableSuffixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetSuffix", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#isEnableSubstitutionInVariables" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#isPreserveEscapes" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#replace" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#replaceIn" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#replaceSystemProperties" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#resolveVariable" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setEnableSubstitutionInVariables" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInVariable", "testReplaceInVariableRecursive" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setEscapeChar" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setPreserveEscapes" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setValueDelimiter" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testDefaultValueDelimiters", "testGetSetValueDelimiter" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setValueDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariablePrefix" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testDefaultValueDelimiters", "testGetSetPrefix", "testSamePrefixAndSuffix", "testStaticReplacePrefixSuffix", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariablePrefixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariableResolver" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariableSuffix" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testDefaultValueDelimiters", "testGetSetSuffix", "testSamePrefixAndSuffix", "testStaticReplacePrefixSuffix", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariableSuffixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#substitute" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#doTestNoReplace" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceEmpty", "testReplaceNoVariables", "testReplaceNull", "testReplaceWeirdPattens" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#doTestReplace" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#setUp" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#tearDown" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testConstructorMapFull" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testConstructorMapPrefixSuffix" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapPrefixSuffix" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testConstructorNoArgs" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorNoArgs" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testCyclicReplacement" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testCyclicReplacement" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testDefaultValueDelimiters" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDefaultValueDelimiters" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testGetSetEscape" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testGetSetEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testGetSetPrefix" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testGetSetPrefix" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testGetSetSuffix" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testGetSetSuffix" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testGetSetValueDelimiter" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testGetSetValueDelimiter" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testLANG1055" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceAdjacentAtEnd" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceAdjacentAtEnd" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceAdjacentAtStart" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceAdjacentAtStart" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceChangedMap" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceChangedMap" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceComplexEscaping" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceComplexEscaping" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceEmpty" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceEmpty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceEmptyKeys" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceEmptyKeys" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceEscaping" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceEscaping" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceInVariable" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInVariable" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceInVariableDisabled" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInVariableDisabled" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceInVariableRecursive" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInVariableRecursive" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceIncompletePrefix" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceIncompletePrefix" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceNoPrefixNoSuffix" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceNoPrefixNoSuffix" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceNoPrefixSuffix" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceNoPrefixSuffix" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceNoVariables" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceNoVariables" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceNull" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceNull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplacePartialString_noReplace" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplacePartialString_noReplace" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplacePrefixNoSuffix" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplacePrefixNoSuffix" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceRecursive" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceRecursive" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceSimple" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceSimple" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceSolo" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceSolo" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceSoloEscaping" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceSoloEscaping" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceToIdentical" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceToIdentical" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceUnknownKey" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceUnknownKey" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceWeirdPattens" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceWeirdPattens" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testResolveVariable" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testResolveVariable" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testSamePrefixAndSuffix" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testSamePrefixAndSuffix" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testStaticReplace" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testStaticReplace" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testStaticReplacePrefixSuffix" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testStaticReplacePrefixSuffix" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testStaticReplaceSystemProperties" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testSubstituteDefaultProperties" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testSubstituteDefaultProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testSubstitutePreserveEscape" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrTokenizer" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrTokenizer#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#add" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testIteration" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#addToken" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#checkTokenized" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#clone" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#cloneReset" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneNull", "testCloneReset", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getCSVClone" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getCSVInstance" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getContent" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "testGetContent" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getIgnoredMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getTSVClone" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getTSVInstance" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getTokenArray" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testListArray" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getTokenList" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testListArray", "testToString" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getTrimmerMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#hasNext" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test6", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testIteration", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#hasPrevious" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test6", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testIteration", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#isEmptyTokenAsNull" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test5", "test6", "test7", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed4", "testBasicQuoted2", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#isIgnoreEmptyTokens" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed4", "testBasicQuoted2", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testListArray" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#isQuote" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#next" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test6", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testIteration", "testReset", "testReset_String", "testReset_charArray", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#nextIndex" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#nextToken" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneNull", "testCloneReset", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#previous" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test6", "testIteration" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#previousIndex" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#previousToken" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#readNextToken" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#readWithQuotes" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#remove" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testIteration" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#reset" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNull", "testCloneReset", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#set" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testIteration" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setDelimiterChar" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testChaining", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray_char", "testConstructor_charArray_char_char" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setDelimiterString" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testChaining" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setEmptyTokenAsNull" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setIgnoreEmptyTokens" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setIgnoredChar" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testChaining" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setIgnoredMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setQuoteChar" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "testBasic5", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuotedTrimmed1", "testChaining", "testConstructor_String_char_char", "testConstructor_charArray_char_char" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setTrimmerMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#size" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#toString" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testToString" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#tokenize" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#checkClone" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test1" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test1" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test2" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test2" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test3" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test3" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test4" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test4" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test5" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test5" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test6" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test6" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test7" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test7" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test8" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test8" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasic1" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasic1" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasic2" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasic2" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasic3" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasic3" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasic4" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasic4" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasic5" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasic5" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicDelim1" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicDelim1" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicDelim2" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicDelim2" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicEmpty1" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicEmpty1" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicEmpty2" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicEmpty2" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicIgnoreTrimmed1" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicIgnoreTrimmed1" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicIgnoreTrimmed2" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicIgnoreTrimmed2" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicIgnoreTrimmed3" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicIgnoreTrimmed3" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicIgnoreTrimmed4" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicIgnoreTrimmed4" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicQuoted1" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicQuoted1" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicQuoted2" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicQuoted2" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicQuoted3" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicQuoted3" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicQuoted4" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicQuoted4" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicQuoted5" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicQuoted5" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicQuoted6" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicQuoted6" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicQuoted7" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicQuoted7" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicQuotedTrimmed1" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicQuotedTrimmed1" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicTrimmed1" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicTrimmed1" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicTrimmed2" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicTrimmed2" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testCSV" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVSimple", "testCSVSimpleNeedsTrim" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testCSVEmpty" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testCSVSimple" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVSimple" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testCSVSimpleNeedsTrim" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVSimpleNeedsTrim" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testChaining" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testChaining" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testCloneNotSupportedException" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCloneNotSupportedException" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testCloneNull" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCloneNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testCloneReset" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCloneReset" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testConstructor_String" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testConstructor_String" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testConstructor_String_char" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testConstructor_String_char" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testConstructor_String_char_char" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testConstructor_String_char_char" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testConstructor_charArray" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testConstructor_charArray" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testConstructor_charArray_char" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testConstructor_charArray_char" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testConstructor_charArray_char_char" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testConstructor_charArray_char_char" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testEmpty" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testGetContent" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testGetContent" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testIteration" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testIteration" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testListArray" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testListArray" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testReset" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testReset" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testReset_String" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testReset_String" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testReset_charArray" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testReset_charArray" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testTSV" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testTSV" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testTSVEmpty" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testToString" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testToString" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testTokenizeSubclassInputChange" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testTokenizeSubclassInputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testTokenizeSubclassOutputChange" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testXSVAbc" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV" ]
          }
        },
        "org.apache.commons.text.WordUtils" : {
          "testcases" : { }
        },
        "org.apache.commons.text.WordUtils#<init>" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testConstructor" ]
          }
        },
        "org.apache.commons.text.WordUtils#capitalize" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeWithDelimiters_String", "testCapitalize_String" ]
          }
        },
        "org.apache.commons.text.WordUtils#capitalizeFully" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String" ]
          }
        },
        "org.apache.commons.text.WordUtils#containsAllWords" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testContainsAllWords_StringString" ]
          }
        },
        "org.apache.commons.text.WordUtils#initials" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testInitials_String", "testInitials_String_charArray" ]
          }
        },
        "org.apache.commons.text.WordUtils#isDelimiter" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testInitials_String", "testInitials_String_charArray", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String" ]
          }
        },
        "org.apache.commons.text.WordUtils#swapCase" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testSwapCase_String" ]
          }
        },
        "org.apache.commons.text.WordUtils#uncapitalize" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testUncapitalizeWithDelimiters_String", "testUncapitalize_String" ]
          }
        },
        "org.apache.commons.text.WordUtils#wrap" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testConstructor", "testContainsAllWords_StringString", "testInitials_String", "testInitials_String_charArray", "testSwapCase_String", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testCapitalizeFullyWithDelimiters_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testCapitalizeFully_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFully_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testCapitalizeWithDelimiters_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeWithDelimiters_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testCapitalize_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalize_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testConstructor" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testConstructor" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testContainsAllWords_StringString" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testContainsAllWords_StringString" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testInitials_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testInitials_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testInitials_String_charArray" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testInitials_String_charArray" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testSwapCase_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testSwapCase_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testUncapitalizeWithDelimiters_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testUncapitalizeWithDelimiters_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testUncapitalize_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testUncapitalize_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testWrap_StringInt" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testWrap_StringInt" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testWrap_StringIntStringBoolean" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testWrap_StringIntStringBoolean" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testWrap_StringIntStringBooleanString" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testWrap_StringIntStringBooleanString" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull", "testNullConstructor" ],
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ],
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup", "testLang882" ],
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ],
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ],
            "org.apache.commons.text.translate.OctalUnescaperTest" : [ "testBetween" ],
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ],
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testLessThanFour", "testUPlus", "testUuuuu" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ],
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        }
      }
    },
    "7adf1d5ea33fc1a67196f96ce71c17ebdb28efed" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7adf1d5ea33fc1a67196f96ce71c17ebdb28efed~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrBuilder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testToCharArray", "testToCharArrayIntInt" ]
          }
        },
        "org.apache.commons.text.StrBuilder#append" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testToCharArray", "testToCharArrayIntInt" ]
          }
        },
        "org.apache.commons.text.StrBuilder#ensureCapacity" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testToCharArray", "testToCharArrayIntInt" ]
          }
        },
        "org.apache.commons.text.StrBuilder#length" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testToCharArray", "testToCharArrayIntInt" ]
          }
        },
        "org.apache.commons.text.StrBuilder#toCharArray" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testToCharArray", "testToCharArrayIntInt" ]
          }
        },
        "org.apache.commons.text.StrBuilder#validateRange" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testToCharArrayIntInt" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testToCharArray", "testToCharArrayIntInt" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testToCharArray" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testToCharArray" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testToCharArrayIntInt" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testToCharArrayIntInt" ]
          }
        }
      }
    },
    "56c0a0728f80241d550a070e43fc60ec80d0b806" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "56c0a0728f80241d550a070e43fc60ec80d0b806~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testConstructorWithNegativeThreshold", "testEquals", "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testConstructorWithNegativeThreshold", "testEquals", "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        }
      }
    },
    "ad7ee397ae87f6a436568f84f8546e08dfd6ac75" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ad7ee397ae87f6a436568f84f8546e08dfd6ac75~1",
      "changedClazzes" : {
        "org.apache.commons.text.translate.CharSequenceTranslator" : {
          "testcases" : {
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup", "testLang882" ],
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ],
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ],
            "org.apache.commons.text.translate.OctalUnescaperTest" : [ "testBetween" ],
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ],
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testLessThanFour", "testUPlus", "testUuuuu" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testConstructorExists", "testHTML40_EXTENDED_ESCAPE", "testISO8859_1_ESCAPE" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        }
      }
    },
    "a408a7cfa9a436d84954003e6977abea1bf0a3cd" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a408a7cfa9a436d84954003e6977abea1bf0a3cd~1",
      "changedClazzes" : {
        "org.apache.commons.text.Builder" : {
          "testcases" : { }
        },
        "org.apache.commons.text.CompositeFormat" : {
          "testcases" : {
            "org.apache.commons.text.CompositeFormatTest" : [ "testCompositeFormat", "testUsage" ]
          }
        },
        "org.apache.commons.text.CompositeFormatTest" : {
          "testcases" : {
            "org.apache.commons.text.CompositeFormatTest" : [ "testCompositeFormat", "testUsage" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.FormatFactory" : {
          "testcases" : { }
        },
        "org.apache.commons.text.FormattableUtils" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testAlternatePadCharAndEllipsis", "testAlternatePadCharacter", "testDefaultAppend", "testEllipsis", "testIllegalEllipsis" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testAlternatePadCharAndEllipsis", "testAlternatePadCharacter", "testDefaultAppend", "testEllipsis", "testIllegalEllipsis" ]
          }
        },
        "org.apache.commons.text.StrBuilder" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText", "testLang299" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testGetSetNewLineText", "testGetSetNullText", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLang412Left", "testLang412Right", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim", "test_LANG_1131_EqualsWithNullStrBuilder" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText", "testLang299" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testGetSetNewLineText", "testGetSetNullText", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLang412Left", "testLang412Right", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim", "test_LANG_1131_EqualsWithNullStrBuilder" ]
          }
        },
        "org.apache.commons.text.StrLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrLookupTest" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ]
          }
        },
        "org.apache.commons.text.StrMatcher" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer", "testContains_StrMatcher", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrTokenizer" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.WordUtils" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testConstructor", "testContainsAllWords_StringString", "testInitials_String", "testInitials_String_charArray", "testSwapCase_String", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testConstructor", "testContainsAllWords_StringString", "testInitials_String", "testInitials_String_charArray", "testSwapCase_String", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull", "testNullConstructor" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslatorTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull", "testNullConstructor" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslatorTest#testNonNull" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslatorTest#testNullConstructor" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNullConstructor" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator" : {
          "testcases" : {
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup", "testLang882" ],
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ],
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ],
            "org.apache.commons.text.translate.OctalUnescaperTest" : [ "testBetween" ],
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ],
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testLessThanFour", "testUPlus", "testUuuuu" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull", "testNullConstructor" ],
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#hex" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#APOS_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#APOS_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#BASIC_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testBasicArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#BASIC_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testBasicArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#HTML40_EXTENDED_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testHtml40ExtendedArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#HTML40_EXTENDED_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testHtml40ExtendedArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#ISO8859_1_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testISO8859Arrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#ISO8859_1_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testISO8859Arrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#JAVA_CTRL_CHARS_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testJavaCntrlCharsArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#invert" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposArrays", "testBasicArrays", "testHtml40ExtendedArrays", "testISO8859Arrays", "testJavaCntrlCharsArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposArrays", "testBasicArrays", "testConstructorExists", "testHTML40_EXTENDED_ESCAPE", "testHtml40ExtendedArrays", "testISO8859Arrays", "testISO8859_1_ESCAPE", "testJavaCntrlCharsArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testAposArrays" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testBasicArrays" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testBasicArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testEscapeVsUnescapeArrays" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposArrays", "testBasicArrays", "testHtml40ExtendedArrays", "testISO8859Arrays", "testJavaCntrlCharsArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testHtml40ExtendedArrays" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testHtml40ExtendedArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testISO8859Arrays" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testISO8859Arrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testJavaCntrlCharsArrays" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testJavaCntrlCharsArrays" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#above" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#below" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testBelow", "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#between" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#outsideOf" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#toUtf16Escape" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaperTest#testAbove" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaperTest#testBelow" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testBelow" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaperTest#testBetween" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaperTest#testToUtf16Escape" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        }
      }
    },
    "594aa29b8100d9766334be2b96da55a8a8befd54" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "594aa29b8100d9766334be2b96da55a8a8befd54~1",
      "changedClazzes" : {
        "org.apache.commons.text.Builder" : {
          "testcases" : { }
        },
        "org.apache.commons.text.CompositeFormat" : {
          "testcases" : {
            "org.apache.commons.text.CompositeFormatTest" : [ "testCompositeFormat", "testUsage" ]
          }
        },
        "org.apache.commons.text.CompositeFormatTest" : {
          "testcases" : {
            "org.apache.commons.text.CompositeFormatTest" : [ "testCompositeFormat", "testUsage" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.FormatFactory" : {
          "testcases" : { }
        },
        "org.apache.commons.text.FormattableUtils" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testAlternatePadCharAndEllipsis", "testAlternatePadCharacter", "testDefaultAppend", "testEllipsis", "testIllegalEllipsis" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testAlternatePadCharAndEllipsis", "testAlternatePadCharacter", "testDefaultAppend", "testEllipsis", "testIllegalEllipsis" ]
          }
        },
        "org.apache.commons.text.StrBuilder" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText", "testLang299" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testGetSetNewLineText", "testGetSetNullText", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLang412Left", "testLang412Right", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim", "test_LANG_1131_EqualsWithNullStrBuilder" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText", "testLang299" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testGetSetNewLineText", "testGetSetNullText", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLang412Left", "testLang412Right", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim", "test_LANG_1131_EqualsWithNullStrBuilder" ]
          }
        },
        "org.apache.commons.text.StrLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrLookupTest" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ]
          }
        },
        "org.apache.commons.text.StrMatcher" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer", "testContains_StrMatcher", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrTokenizer" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.WordUtils" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testConstructor", "testContainsAllWords_StringString", "testInitials_String", "testInitials_String_charArray", "testSwapCase_String", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testConstructor", "testContainsAllWords_StringString", "testInitials_String", "testInitials_String_charArray", "testSwapCase_String", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testConstructorWithNegativeThreshold", "testEquals", "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testConstructorWithNegativeThreshold", "testEquals", "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull", "testNullConstructor" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslatorTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull", "testNullConstructor" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull", "testNullConstructor" ],
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ],
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup", "testLang882" ],
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ],
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ],
            "org.apache.commons.text.translate.OctalUnescaperTest" : [ "testBetween" ],
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ],
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testLessThanFour", "testUPlus", "testUuuuu" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslator" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ],
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ],
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposArrays", "testBasicArrays", "testConstructorExists", "testHTML40_EXTENDED_ESCAPE", "testHtml40ExtendedArrays", "testISO8859Arrays", "testISO8859_1_ESCAPE", "testJavaCntrlCharsArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposArrays", "testBasicArrays", "testConstructorExists", "testHTML40_EXTENDED_ESCAPE", "testHtml40ExtendedArrays", "testISO8859Arrays", "testISO8859_1_ESCAPE", "testJavaCntrlCharsArrays" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull" ],
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup", "testLang882" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslatorTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup", "testLang882" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaperTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaperTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper" : {
          "testcases" : {
            "org.apache.commons.text.translate.OctalUnescaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaperTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.OctalUnescaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ],
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaperTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaper" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testLessThanFour", "testUPlus", "testUuuuu" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaperTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testLessThanFour", "testUPlus", "testUuuuu" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemover" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemoverTest" : [ "testInvalidCharacters", "testValidCharacters" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemoverTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemoverTest" : [ "testInvalidCharacters", "testValidCharacters" ]
          }
        },
        "org.apache.commons.text.translate.package-info" : {
          "testcases" : { }
        }
      }
    },
    "7af39fb28d371bf1ca8aff63c5ddb71b9390e0de" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7af39fb28d371bf1ca8aff63c5ddb71b9390e0de~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.JaroWinklerDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistance#apply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullNull", "testGetJaroWinklerDistance_NullString", "testGetJaroWinklerDistance_StringNull", "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistance#commonPrefixLength" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistance#getCommonPrefix" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistance#getSetOfMatchingCharacterWithin" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistance#indexOfDifference" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistance#score" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistance#transpositions" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullNull", "testGetJaroWinklerDistance_NullString", "testGetJaroWinklerDistance_StringNull", "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistanceTest#testGetJaroWinklerDistance_NullNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistanceTest#testGetJaroWinklerDistance_NullString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistanceTest#testGetJaroWinklerDistance_StringNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistanceTest#testGetJaroWinklerDistance_StringString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.ParameterizedEditDistanceFromTest#parameters" : {
          "testcases" : { }
        }
      }
    },
    "7909652f51344c1206699518ae4cd510b8532765" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7909652f51344c1206699518ae4cd510b8532765~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.ParameterizedEditDistanceFromTest#parameters" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.ParameterizedSimilarityScoreFromTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.SimilarityScoreFrom" : {
          "testcases" : { }
        }
      }
    },
    "25299c59903f263054204958806abef771194332" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "25299c59903f263054204958806abef771194332~1",
      "changedClazzes" : {
        "org.apache.commons.text.diff.ReplacementsFinderTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.ReplacementsFinderTest$SimpleHandler" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.StringsComparatorTest$ExecutionVisitor" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        }
      }
    },
    "f6214db8c8452471051ad3540f2cc4b69d5f7ba6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f6214db8c8452471051ad3540f2cc4b69d5f7ba6~1",
      "changedClazzes" : {
        "org.apache.commons.text.AlphabetConverter" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.diff.ReplacementsFinderTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.ReplacementsFinderTest$SimpleHandler" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.StringsComparator" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed", "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParserTest" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed", "testInputs" ]
          }
        },
        "org.apache.commons.text.names.Name" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.NameParseException" : {
          "testcases" : { }
        },
        "org.apache.commons.text.names.NameString" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ],
            "org.apache.commons.text.names.NameStringTest" : [ "testChopWithRegexChopsEndOffNameStr", "testChopWithRegexChopsMiddleFromNameStr", "testChopWithRegexChopsStartOffNameStr", "testChopWithRegexReturnsChoppedSubstring", "testFlip" ]
          }
        },
        "org.apache.commons.text.similarity.CosineDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.CosineDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarity" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.Counter" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.EditDistanceFrom" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample", "testMissingMetric" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScore" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore", "testGetFuzzyScore_NullNullLocale", "testGetFuzzyScore_NullStringLocale", "testGetFuzzyScore_StringNullLocale", "testMissingLocale" ]
          }
        },
        "org.apache.commons.text.similarity.HammingDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.HammingDistanceTest" : [ "testHammingDistance", "testHammingDistance_nullLeftValue", "testHammingDistance_nullRightValue" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullNull", "testGetJaroWinklerDistance_NullString", "testGetJaroWinklerDistance_StringNull", "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testConstructorWithNegativeThreshold", "testEquals", "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testConstructorWithNegativeThreshold", "testGetLevenshteinDistance_NullString", "testGetLevenshteinDistance_NullStringInt", "testGetLevenshteinDistance_StringNull", "testGetLevenshteinDistance_StringNullInt", "testGetLevenshteinDistance_StringString", "testGetLevenshteinDistance_StringStringInt" ],
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.ParameterizedEditDistanceFromTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.ParameterizedSimilarityScoreFromTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.RegexTokenizer" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.SimilarityScoreFrom" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.EntityArraysTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposArrays", "testBasicArrays", "testConstructorExists", "testHTML40_EXTENDED_ESCAPE", "testHtml40ExtendedArrays", "testISO8859Arrays", "testISO8859_1_ESCAPE", "testJavaCntrlCharsArrays" ]
          }
        }
      }
    },
    "aca047e2ddbfed2208fd64d9429e3487c9b2c955" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "aca047e2ddbfed2208fd64d9429e3487c9b2c955~1",
      "changedClazzes" : {
        "org.apache.commons.text.AlphabetConverter#addSingleEncoding(int,String,Collection,Iterator,Map)" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#convertCharsToIntegers(Character[])" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#createConverter(Integer[],Integer[],Integer[])" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#createConverterFromMap(Map)" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#decode(String)" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#encode(String)" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#toString" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#createJavadocExample" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "javadocExampleTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#javadocExampleTest" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "javadocExampleTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#onlyOneEncodingLettersTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.AlphabetConverterTest#test(Character[],Character[],Character[],String[])" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#unexpectedEndwhileDecodingTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.AlphabetConverterTest#unexpectedStringWhileDecodingTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.AlphabetConverterTest#unicodeTest" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "unicodeTest" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#parse(String)" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed", "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParserTest#testInputs" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParserTest#validateRecord(CSVRecord)" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.Name#equals(Object)" : {
          "testcases" : { }
        },
        "org.apache.commons.text.names.NameString#chopWithRegex(String,int)" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ],
            "org.apache.commons.text.names.NameStringTest" : [ "testChopWithRegexChopsEndOffNameStr", "testChopWithRegexChopsMiddleFromNameStr", "testChopWithRegexChopsStartOffNameStr", "testChopWithRegexReturnsChoppedSubstring" ]
          }
        },
        "org.apache.commons.text.names.NameString#flip(String)" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ],
            "org.apache.commons.text.names.NameStringTest" : [ "testFlip" ]
          }
        },
        "org.apache.commons.text.similarity.CosineDistance#apply(CharSequence,CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarity#cosineSimilarity(Map,Map)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarity#dot(Map,Map,Set)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarity#getIntersection(Map,Map)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.Counter#of(CharSequence[])" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#limitedCompare(CharSequence,CharSequence,int)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#unlimitedCompare(CharSequence,CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals", "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testEquals" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testHashCode" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testHashCode" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testToString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#equals(Object)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals" ]
          }
        },
        "org.apache.commons.text.similarity.ParameterizedEditDistanceFromTest#test" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.ParameterizedLevenshteinDistanceTest#test" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.ParameterizedSimilarityScoreFromTest#test" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.RegexTokenizer#tokenize(CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.StringMetricFromTest#testEquivalence" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence" ]
          }
        },
        "org.apache.commons.text.similarity.StringMetricFromTest#testJavadocExample" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testJavadocExample" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslatorTest#testNonNull" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslatorTest#testNullConstructor" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNullConstructor" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#translate(CharSequence,Writer)" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ],
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ],
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ],
            "org.apache.commons.text.translate.OctalUnescaperTest" : [ "testBetween" ],
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ],
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testLessThanFour", "testUPlus", "testUuuuu" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testEscapeVsUnescapeArrays(String[][],String[][])" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposArrays", "testBasicArrays", "testHtml40ExtendedArrays", "testISO8859Arrays", "testJavaCntrlCharsArrays" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaperTest#testToUtf16Escape" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testToUtf16Escape" ]
          }
        }
      }
    },
    "eb5e153fd119d7f5125f5142dd6627f5355eb15d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "eb5e153fd119d7f5125f5142dd6627f5355eb15d~1",
      "changedClazzes" : {
        "org.apache.commons.text.diff.ReplacementsFinder" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.StringsComparatorTest$ExecutionVisitor" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.similarity.EditDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testConstructorWithNegativeThreshold", "testEquals", "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testConstructorWithNegativeThreshold", "testGetLevenshteinDistance_NullString", "testGetLevenshteinDistance_NullStringInt", "testGetLevenshteinDistance_StringNull", "testGetLevenshteinDistance_StringNullInt", "testGetLevenshteinDistance_StringString", "testGetLevenshteinDistance_StringStringInt" ],
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample" ]
          }
        },
        "org.apache.commons.text.similarity.ParameterizedEditDistanceFromTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.ParameterizedSimilarityScoreFromTest" : {
          "testcases" : { }
        }
      }
    },
    "4c38c532e84f20b8367b01788cad7884a74a9ef6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4c38c532e84f20b8367b01788cad7884a74a9ef6~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.ParameterizedSimilarityScoreFromTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.EntityArraysTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposArrays", "testBasicArrays", "testConstructorExists", "testHTML40_EXTENDED_ESCAPE", "testHtml40ExtendedArrays", "testISO8859Arrays", "testISO8859_1_ESCAPE", "testJavaCntrlCharsArrays" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull" ],
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup", "testLang882" ]
          }
        }
      }
    },
    "c62c658f7eaf77a91d9c15deecb122719cb2c313" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c62c658f7eaf77a91d9c15deecb122719cb2c313~1",
      "changedClazzes" : {
        "org.apache.commons.text.ExtendedMessageFormatTest#testBuiltInChoiceFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat" ]
          }
        }
      }
    },
    "6fd10f89aaa3870d91368979e4f8a32ebcfc1049" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6fd10f89aaa3870d91368979e4f8a32ebcfc1049~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.HumanNameParser" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParserTest" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParserTest$Columns" : {
          "testcases" : { }
        },
        "org.apache.commons.text.names.Name" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ ]
          }
        }
      }
    },
    "7de03831b805f795041ce4f13d53a6330cd64904" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7de03831b805f795041ce4f13d53a6330cd64904~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.HumanNameParser#<init>" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#parse" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser#parse(String)" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParserTest" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParserTest#setUp" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParserTest#tearDown" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParserTest#testInputs" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParserTest#validateRecord" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.Name#<init>" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.Name#getFirstName" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.Name#getLastName" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.Name#getLeadingInitial" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.Name#getMiddleName" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.Name#getNickName" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.Name#getSalutation" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.Name#getSuffix" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.NameString#<init>" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.NameString#chopWithRegex" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.NameString#flip" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.NameString#getWrappedString" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.NameString#norm" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        }
      }
    },
    "fed66c0f8976cd61e476bb7e633df659f74ea0e1" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "fed66c0f8976cd61e476bb7e633df659f74ea0e1~1",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtils#wrap(String,int,String,boolean,String)" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        }
      }
    },
    "10b97cb5f9e9b599a72d6d165cec851533551567" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "10b97cb5f9e9b599a72d6d165cec851533551567~1",
      "changedClazzes" : {
        "org.apache.commons.text.AlphabetConverter#codePointToString(int)" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#decode(String)" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#apply(CharSequence,CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals", "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance#apply(CharSequence,CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_NullString", "testGetLevenshteinDistance_NullStringInt", "testGetLevenshteinDistance_StringNull", "testGetLevenshteinDistance_StringNullInt", "testGetLevenshteinDistance_StringString", "testGetLevenshteinDistance_StringStringInt" ],
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample" ]
          }
        }
      }
    },
    "a6a6a274a6ed92945ae0ea0707b38629c9a01ace" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a6a6a274a6ed92945ae0ea0707b38629c9a01ace~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.JaccardDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.JaccardDistance#apply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistance", "testGettingJaccardDistanceNullNull", "testGettingJaccardDistanceNullString", "testGettingJaccardDistanceStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistance", "testGettingJaccardDistanceNullNull", "testGettingJaccardDistanceNullString", "testGettingJaccardDistanceStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardDistanceTest#testGettingJaccardDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistance" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardDistanceTest#testGettingJaccardDistanceNullNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistanceNullNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardDistanceTest#testGettingJaccardDistanceNullString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistanceNullString" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardDistanceTest#testGettingJaccardDistanceStringNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistanceStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardSimilarity" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.JaccardSimilarity#apply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistance" ],
            "org.apache.commons.text.similarity.JaccardSimilarityTest" : [ "testGettingJaccardSimilarity", "testGettingJaccardSimilarityNullNull", "testGettingJaccardSimilarityNullString", "testGettingJaccardSimilarityStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardSimilarity#calculateJaccardSimilarity" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistance" ],
            "org.apache.commons.text.similarity.JaccardSimilarityTest" : [ "testGettingJaccardSimilarity" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardSimilarityTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardSimilarityTest" : [ "testGettingJaccardSimilarity", "testGettingJaccardSimilarityNullNull", "testGettingJaccardSimilarityNullString", "testGettingJaccardSimilarityStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardSimilarityTest#testGettingJaccardSimilarity" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardSimilarityTest" : [ "testGettingJaccardSimilarity" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardSimilarityTest#testGettingJaccardSimilarityNullNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardSimilarityTest" : [ "testGettingJaccardSimilarityNullNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardSimilarityTest#testGettingJaccardSimilarityNullString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardSimilarityTest" : [ "testGettingJaccardSimilarityNullString" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardSimilarityTest#testGettingJaccardSimilarityStringNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardSimilarityTest" : [ "testGettingJaccardSimilarityStringNull" ]
          }
        }
      }
    },
    "d8f547e818d815c0439f4b3c317d077a0290a5f5" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d8f547e818d815c0439f4b3c317d077a0290a5f5~1",
      "changedClazzes" : {
        "org.apache.commons.text.StringEscapeUtils" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StringEscapeUtils#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#escapeCsv" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeCsvString" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#escapeEcmaScript" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeEcmaScript" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#escapeHtml4" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#escapeJava" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeJava", "testEscapeJavaWithSlash", "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#escapeJson" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeJson" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#escapeXml" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXml", "testLang720" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#escapeXml10" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXml10" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#escapeXml11" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXml11" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#unescapeCsv" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeCsvString" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#unescapeHtml4" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHiragana", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testLang313", "testStandaloneAmphersand", "testUnescapeHtml4", "testUnescapeUnknownEntity" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#unescapeJava" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#unescapeXml" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXml", "testStandaloneAmphersand", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$CsvEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$CsvEscaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeCsvString", "testEscapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$CsvUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$CsvUnescaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeCsvString", "testUnescapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#assertEscapeJava" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeJava" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#assertUnescapeJava" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#checkCsvEscapeWriter" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#checkCsvUnescapeWriter" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testConstructor" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeCsvString" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeCsvString" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeCsvWriter" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeEcmaScript" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeEcmaScript" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeHiragana" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHiragana" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeHtml" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeHtmlHighUnicode" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlHighUnicode" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeHtmlVersions" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlVersions" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeJava" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeJava" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeJavaWithSlash" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeJavaWithSlash" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeJson" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeJson" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeXml" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXml" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeXml10" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXml10" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeXml11" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXml11" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeXmlAllCharacters" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXmlAllCharacters" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeXmlSupplementaryCharacters" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testLang313" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang313" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testLang720" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang720" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testLang911" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testStandaloneAmphersand" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testStandaloneAmphersand" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testUnescapeCsvString" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeCsvString" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testUnescapeCsvWriter" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testUnescapeHtml4" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeHtml4" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testUnescapeJava" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testUnescapeUnknownEntity" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeUnknownEntity" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testUnescapeXmlSupplementaryCharacters" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#hex" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#with" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeEcmaScript", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#APOS_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#APOS_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#BASIC_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#BASIC_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#HTML40_EXTENDED_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#HTML40_EXTENDED_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#ISO8859_1_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#ISO8859_1_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#JAVA_CTRL_CHARS_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#JAVA_CTRL_CHARS_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#invert" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#outsideOf" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#toUtf16Escape" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#above" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXmlAllCharacters" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#below" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXmlAllCharacters" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#between" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#outsideOf" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXmlAllCharacters" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper#isSet" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeHtml4" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHiragana", "testEscapeHtmlHighUnicode", "testEscapeXml", "testLang313", "testStandaloneAmphersand", "testUnescapeHtml4", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper#isOctalDigit" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeEcmaScript", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemover#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemover#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXml10", "testEscapeXml11" ]
          }
        }
      }
    },
    "43ba72325738c0882aa495b262f9e48205c0222f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "43ba72325738c0882aa495b262f9e48205c0222f~1",
      "changedClazzes" : {
        "org.apache.commons.text.StringEscapeUtils#escapeEcmaScript" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$CsvEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$CsvUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testLang708" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#hex" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#with" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#APOS_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#APOS_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#BASIC_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#BASIC_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#HTML40_EXTENDED_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#HTML40_EXTENDED_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#ISO8859_1_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#ISO8859_1_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#JAVA_CTRL_CHARS_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#JAVA_CTRL_CHARS_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#invert" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#outsideOf" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#toUtf16Escape" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#between" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemover#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        }
      }
    },
    "1cf32287b072227dffdc67ceb6a832358851f104" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1cf32287b072227dffdc67ceb6a832358851f104~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.JaccardSimilarity" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistance" ],
            "org.apache.commons.text.similarity.JaccardSimilarityTest" : [ "testGettingJaccardSimilarity", "testGettingJaccardSimilarityNullNull", "testGettingJaccardSimilarityNullString", "testGettingJaccardSimilarityStringNull" ]
          }
        }
      }
    },
    "96a6438f4801a063e472f4f72412ad435a70be73" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "96a6438f4801a063e472f4f72412ad435a70be73~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.JaccardDistanceTest#testGettingJaccardDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistance" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardSimilarityTest#testGettingJaccardSimilarity" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardSimilarityTest" : [ "testGettingJaccardSimilarity" ]
          }
        }
      }
    },
    "e3bb7f75a17e613fafa0b9c9a24439fbeda39c13" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e3bb7f75a17e613fafa0b9c9a24439fbeda39c13~1",
      "changedClazzes" : {
        "org.apache.commons.text.AlphabetConverter" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testBuiltInChoiceFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang708", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.WordUtils#wrap(String,int,String,boolean,String)" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        },
        "org.apache.commons.text.diff.ReplacementsFinder" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.ReplacementsFinderTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.ReplacementsFinderTest$SimpleHandler" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.StringsComparator" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest$ExecutionVisitor" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParser" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed", "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParserTest" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "shouldThrowNullPointerException_WhenNullIsParsed", "testInputs" ]
          }
        },
        "org.apache.commons.text.names.HumanNameParserTest$Columns" : {
          "testcases" : { }
        },
        "org.apache.commons.text.names.Name" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ]
          }
        },
        "org.apache.commons.text.names.NameParseException" : {
          "testcases" : { }
        },
        "org.apache.commons.text.names.NameString" : {
          "testcases" : {
            "org.apache.commons.text.names.HumanNameParserTest" : [ "testInputs" ],
            "org.apache.commons.text.names.NameStringTest" : [ "testChopWithRegexChopsEndOffNameStr", "testChopWithRegexChopsMiddleFromNameStr", "testChopWithRegexChopsStartOffNameStr", "testChopWithRegexReturnsChoppedSubstring", "testFlip" ]
          }
        },
        "org.apache.commons.text.similarity.CosineDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.CosineDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarity" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.Counter" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.EditDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.EditDistanceFrom" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample", "testMissingMetric" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScore" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore", "testGetFuzzyScore_NullNullLocale", "testGetFuzzyScore_NullStringLocale", "testGetFuzzyScore_StringNullLocale", "testMissingLocale" ]
          }
        },
        "org.apache.commons.text.similarity.HammingDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.HammingDistanceTest" : [ "testHammingDistance", "testHammingDistance_nullLeftValue", "testHammingDistance_nullRightValue" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullNull", "testGetJaroWinklerDistance_NullString", "testGetJaroWinklerDistance_StringNull", "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testConstructorWithNegativeThreshold", "testEquals", "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testEquals" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testHashCode" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testHashCode" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testToString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testConstructorWithNegativeThreshold", "testGetLevenshteinDistance_NullString", "testGetLevenshteinDistance_NullStringInt", "testGetLevenshteinDistance_StringNull", "testGetLevenshteinDistance_StringNullInt", "testGetLevenshteinDistance_StringString", "testGetLevenshteinDistance_StringStringInt" ],
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.ParameterizedEditDistanceFromTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.ParameterizedLevenshteinDistanceTest#test" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.ParameterizedSimilarityScoreFromTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.RegexTokenizer" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.SimilarityScoreFrom" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.StringMetricFromTest#testEquivalence" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence" ]
          }
        },
        "org.apache.commons.text.similarity.StringMetricFromTest#testJavadocExample" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testJavadocExample" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslatorTest#testNonNull" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslatorTest#testNullConstructor" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNullConstructor" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#translate(CharSequence,Writer)" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang708", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ],
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ],
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ],
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ],
            "org.apache.commons.text.translate.OctalUnescaperTest" : [ "testBetween" ],
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ],
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testLessThanFour", "testUPlus", "testUuuuu" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposArrays", "testBasicArrays", "testConstructorExists", "testHTML40_EXTENDED_ESCAPE", "testHtml40ExtendedArrays", "testISO8859Arrays", "testISO8859_1_ESCAPE", "testJavaCntrlCharsArrays" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaperTest#testToUtf16Escape" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang708", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ],
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull" ],
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup", "testLang882" ]
          }
        }
      }
    },
    "53279c1237a8b503fbd39ea279e2ae216779d2ed" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "53279c1237a8b503fbd39ea279e2ae216779d2ed~1",
      "changedClazzes" : {
        "org.apache.commons.text.names.HumanNameParser" : {
          "testcases" : { }
        },
        "org.apache.commons.text.names.HumanNameParserTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.names.Name" : {
          "testcases" : { }
        },
        "org.apache.commons.text.names.NameParseException" : {
          "testcases" : { }
        },
        "org.apache.commons.text.names.NameString" : {
          "testcases" : { }
        },
        "org.apache.commons.text.names.NameStringTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.names.package-info" : {
          "testcases" : { }
        }
      }
    },
    "a37bead303adb298f59f76389d5704bef6ff183d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a37bead303adb298f59f76389d5704bef6ff183d~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.LevenshteinDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testConstructorWithNegativeThreshold", "testGetLevenshteinDistance_NullString", "testGetLevenshteinDistance_NullStringInt", "testGetLevenshteinDistance_StringNull", "testGetLevenshteinDistance_StringNullInt", "testGetLevenshteinDistance_StringString", "testGetLevenshteinDistance_StringStringInt" ],
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample" ]
          }
        }
      }
    },
    "8587bb6f01521e794595df2ebb726ecc704f0076" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8587bb6f01521e794595df2ebb726ecc704f0076~1",
      "changedClazzes" : {
        "org.apache.commons.text.StringEscapeUtils" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#builder" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$Builder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$Builder#append" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$Builder#escape" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$Builder#toString" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$CsvEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$CsvUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang708", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testBuilder" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#with" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#APOS_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#APOS_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#BASIC_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#BASIC_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#HTML40_EXTENDED_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#HTML40_EXTENDED_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#ISO8859_1_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#ISO8859_1_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#JAVA_CTRL_CHARS_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#JAVA_CTRL_CHARS_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#invert" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#outsideOf" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#between" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemover#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        }
      }
    },
    "6b0ff8df40c1e65598ca43a62815c410095ecae1" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6b0ff8df40c1e65598ca43a62815c410095ecae1~1",
      "changedClazzes" : {
        "org.apache.commons.text.StringEscapeUtils" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#escapeXSI" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#unescapeXSI" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$CsvEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$CsvUnescaper" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang708", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$CsvUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$XsiUnescaper" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StringEscapeUtils$XsiUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$XsiUnescaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang708", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeXSI" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testUnscapeXSI" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#with" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#APOS_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#APOS_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#BASIC_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#BASIC_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#HTML40_EXTENDED_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#HTML40_EXTENDED_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#ISO8859_1_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#ISO8859_1_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#JAVA_CTRL_CHARS_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#JAVA_CTRL_CHARS_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#invert" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#outsideOf" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#between" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemover#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI", "testUnscapeXSI" ]
          }
        }
      }
    },
    "d51148f5b244a1cc45881ab8c786789540fef545" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d51148f5b244a1cc45881ab8c786789540fef545~1",
      "changedClazzes" : {
        "org.apache.commons.text.StringEscapeUtils" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor", "testEscapeCsvString", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#builder" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$Builder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$Builder#append" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$Builder#escape" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$Builder#toString" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$CsvEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$CsvUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$XsiUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml", "testEscapeXml10", "testEscapeXml11", "testEscapeXmlAllCharacters", "testEscapeXmlSupplementaryCharacters", "testLang313", "testLang708", "testLang720", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testBuilder" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#with" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#APOS_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#APOS_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#BASIC_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#BASIC_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#HTML40_EXTENDED_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#HTML40_EXTENDED_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#ISO8859_1_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#ISO8859_1_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#JAVA_CTRL_CHARS_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#JAVA_CTRL_CHARS_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#invert" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#outsideOf" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#between" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemover#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        }
      }
    },
    "9d5e6d8914a9bef5accb422880166daccf8c5125" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9d5e6d8914a9bef5accb422880166daccf8c5125~1",
      "changedClazzes" : {
        "org.apache.commons.text.StringEscapeUtils" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        }
      }
    },
    "cdd0ee23e3c8bf33cf43a9c425e46db2cfc7eeea" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "cdd0ee23e3c8bf33cf43a9c425e46db2cfc7eeea~1",
      "changedClazzes" : {
        "org.apache.commons.text.translate.AggregateTranslatorTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull", "testNullConstructor" ]
          }
        }
      }
    },
    "8010b3b19a5503fbf5f7080fc2ffbc505760209e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8010b3b19a5503fbf5f7080fc2ffbc505760209e~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrBuilder" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText", "testLang299" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testGetSetNewLineText", "testGetSetNullText", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLang412Left", "testLang412Right", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim", "test_LANG_1131_EqualsWithNullStrBuilder" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        }
      }
    },
    "98d62f36fc3dfba2693ddf5c301de15fe40320ee" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "98d62f36fc3dfba2693ddf5c301de15fe40320ee~1",
      "changedClazzes" : {
        "org.apache.commons.text.StringEscapeUtilsTest#testLang708" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        }
      }
    },
    "144ee0ecfcfa32e4a2618997f05eeb96b85d9cda" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "144ee0ecfcfa32e4a2618997f05eeb96b85d9cda~1",
      "changedClazzes" : {
        "org.apache.commons.text.ExtendedMessageFormatTest" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        }
      }
    },
    "8d37111622aaa576198d081db7613eff8ba46724" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8d37111622aaa576198d081db7613eff8ba46724~1",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtilsTest#testWrap_StringInt" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testWrap_StringInt" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testWrap_StringIntStringBoolean" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testWrap_StringIntStringBoolean" ]
          }
        }
      }
    },
    "0306d48d3c38a12563a850ed83adf0f9209670c2" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0306d48d3c38a12563a850ed83adf0f9209670c2~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrBuilderTest#testToCharArray" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testToCharArray" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testToCharArrayIntInt" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testToCharArrayIntInt" ]
          }
        }
      }
    },
    "2166def7473b98bf40522f48b84a80e962174b70" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2166def7473b98bf40522f48b84a80e962174b70~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrTokenizerTest#test1" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test1" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test2" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test2" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test3" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test3" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test4" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test4" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test5" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test5" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test6" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test6" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test7" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test7" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test8" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test8" ]
          }
        }
      }
    },
    "0e09bb82a9edc9553530f4755d4b69b282cb910c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0e09bb82a9edc9553530f4755d4b69b282cb910c~1",
      "changedClazzes" : {
        "org.apache.commons.text.ExtendedMessageFormat#equals(Object)" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEqualsHashcode" ]
          }
        }
      }
    },
    "120409051714e218d260b15531a5363ccbef6618" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "120409051714e218d260b15531a5363ccbef6618~1",
      "changedClazzes" : {
        "org.apache.commons.text.RandomStringBuilder" : {
          "testcases" : { }
        },
        "org.apache.commons.text.RandomStringBuilder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringBuilderTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testDefaultLength", "testInvalidLength", "testLetterPredicate", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange" ]
          }
        },
        "org.apache.commons.text.RandomStringBuilder#build" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringBuilderTest" : [ "testChangeOfFilter", "testDefaultLength", "testLetterPredicate", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange" ]
          }
        },
        "org.apache.commons.text.RandomStringBuilder#filteredBy" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringBuilderTest" : [ "testChangeOfFilter", "testLetterPredicate", "testMultipleFilters", "testRemoveFilters" ]
          }
        },
        "org.apache.commons.text.RandomStringBuilder#ofLength" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringBuilderTest" : [ "testChangeOfFilter", "testInvalidLength", "testLetterPredicate", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange" ]
          }
        },
        "org.apache.commons.text.RandomStringBuilder#usingRandom" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringBuilderTest" : [ "testUsingRandom" ]
          }
        },
        "org.apache.commons.text.RandomStringBuilder#withinRange" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringBuilderTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testMultipleFilters", "testNoPrivateCharacters", "testRemoveFilters", "testWithinRange" ]
          }
        },
        "org.apache.commons.text.RandomStringBuilder$DigitPredicate#<init>" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringBuilderTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testDefaultLength", "testInvalidLength", "testLetterPredicate", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange" ]
          }
        },
        "org.apache.commons.text.RandomStringBuilder$LetterPredicate#<init>" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringBuilderTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testDefaultLength", "testInvalidLength", "testLetterPredicate", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange" ]
          }
        },
        "org.apache.commons.text.RandomStringBuilder$LetterPredicate#test" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringBuilderTest" : [ "testLetterPredicate" ]
          }
        },
        "org.apache.commons.text.RandomStringBuilderTest" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringBuilderTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testDefaultLength", "testInvalidLength", "testLetterPredicate", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange" ]
          }
        },
        "org.apache.commons.text.RandomStringBuilderTest#codePointLength" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringBuilderTest" : [ "testDefaultLength", "testSetLength" ]
          }
        },
        "org.apache.commons.text.RandomStringBuilderTest#testBadMaximumCodePoint" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringBuilderTest" : [ "testBadMaximumCodePoint" ]
          }
        },
        "org.apache.commons.text.RandomStringBuilderTest#testBadMinAndMax" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringBuilderTest" : [ "testBadMinAndMax" ]
          }
        },
        "org.apache.commons.text.RandomStringBuilderTest#testBadMinimumCodePoint" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringBuilderTest" : [ "testBadMinimumCodePoint" ]
          }
        },
        "org.apache.commons.text.RandomStringBuilderTest#testChangeOfFilter" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringBuilderTest" : [ "testChangeOfFilter" ]
          }
        },
        "org.apache.commons.text.RandomStringBuilderTest#testDefaultLength" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringBuilderTest" : [ "testDefaultLength" ]
          }
        },
        "org.apache.commons.text.RandomStringBuilderTest#testInvalidLength" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringBuilderTest" : [ "testInvalidLength" ]
          }
        },
        "org.apache.commons.text.RandomStringBuilderTest#testLetterPredicate" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringBuilderTest" : [ "testLetterPredicate" ]
          }
        },
        "org.apache.commons.text.RandomStringBuilderTest#testMultipleFilters" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringBuilderTest" : [ "testMultipleFilters" ]
          }
        },
        "org.apache.commons.text.RandomStringBuilderTest#testNoLoneSurrogates" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringBuilderTest" : [ "testNoLoneSurrogates" ]
          }
        },
        "org.apache.commons.text.RandomStringBuilderTest#testNoPrivateCharacters" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringBuilderTest" : [ "testNoPrivateCharacters" ]
          }
        },
        "org.apache.commons.text.RandomStringBuilderTest#testRemoveFilters" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringBuilderTest" : [ "testRemoveFilters" ]
          }
        },
        "org.apache.commons.text.RandomStringBuilderTest#testSetLength" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringBuilderTest" : [ "testSetLength" ]
          }
        },
        "org.apache.commons.text.RandomStringBuilderTest#testUsingRandom" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringBuilderTest" : [ "testUsingRandom" ]
          }
        },
        "org.apache.commons.text.RandomStringBuilderTest#testWithinRange" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringBuilderTest" : [ "testWithinRange" ]
          }
        }
      }
    },
    "322fe272311bedffe4c2f5275c816cc196a74890" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "322fe272311bedffe4c2f5275c816cc196a74890~1",
      "changedClazzes" : {
        "org.apache.commons.text.translate.AggregateTranslatorTest#testNullConstructor" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNullConstructor" ]
          }
        }
      }
    },
    "4c29a73b03f93eec9c8e2d47b8d4b65b7db9f136" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4c29a73b03f93eec9c8e2d47b8d4b65b7db9f136~1",
      "changedClazzes" : {
        "org.apache.commons.text.translate.AggregateTranslator" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull", "testNullConstructor" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNullVarargConstructor" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNullVarargConstructor" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslatorTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull", "testNullConstructor", "testNullVarargConstructor" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslatorTest#testNullVarargConstructor" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNullVarargConstructor" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNullVarargConstructor" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNullVarargConstructor" ]
          }
        }
      }
    },
    "676a1a70557b60e849bef86ccf565faff49b45e9" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "676a1a70557b60e849bef86ccf565faff49b45e9~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.LongestCommonSubsequence" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequence#<init>" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testLcsLengthArray", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequence#logestCommonSubsequence" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequence#longestCommonSubstringLengthArray" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testLcsLengthArray", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testLcsLengthArray", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testLcsLengthArray" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testLcsLengthArray" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testLongestCommonSubsequence" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testLongestCommonSubsequence" ]
          }
        }
      }
    },
    "46bb20abc4bd2dd2afbf92eb5005158a281f0ba7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "46bb20abc4bd2dd2afbf92eb5005158a281f0ba7~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.LongestCommonSubsequence" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequence#<init>" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceApplyNullNull", "testGettingLongestCommonSubsequenceApplyNullString", "testGettingLongestCommonSubsequenceApplyStringNull", "testGettingLongestCommonSubsequenceNullNull", "testGettingLongestCommonSubsequenceNullString", "testGettingLongestCommonSubsequenceStringNull", "testLongestCommonSubsequenceApply" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequence#apply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceApplyNullNull", "testGettingLongestCommonSubsequenceApplyNullString", "testGettingLongestCommonSubsequenceApplyStringNull", "testLongestCommonSubsequenceApply" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequence#logestCommonSubsequence" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceNullNull", "testGettingLongestCommonSubsequenceNullString", "testGettingLongestCommonSubsequenceStringNull", "testLongestCommonSubsequenceApply" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequence#longestCommonSubstringLengthArray" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testLongestCommonSubsequenceApply" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceApplyNullNull", "testGettingLongestCommonSubsequenceApplyNullString", "testGettingLongestCommonSubsequenceApplyStringNull", "testGettingLongestCommonSubsequenceNullNull", "testGettingLongestCommonSubsequenceNullString", "testGettingLongestCommonSubsequenceStringNull", "testLongestCommonSubsequence", "testLongestCommonSubsequenceApply" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#setup" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceApplyNullNull", "testGettingLongestCommonSubsequenceApplyNullString", "testGettingLongestCommonSubsequenceApplyStringNull", "testGettingLongestCommonSubsequenceNullNull", "testGettingLongestCommonSubsequenceNullString", "testGettingLongestCommonSubsequenceStringNull", "testLongestCommonSubsequenceApply" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testGettingLongestCommonSubsequenceApplyNullNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceApplyNullNull" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testGettingLongestCommonSubsequenceApplyNullString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceApplyNullString" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testGettingLongestCommonSubsequenceApplyStringNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceApplyStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testGettingLongestCommonSubsequenceNullNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceNullNull" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testGettingLongestCommonSubsequenceNullString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceNullString" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testGettingLongestCommonSubsequenceStringNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testLongestCommonSubsequenceApply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testLongestCommonSubsequenceApply" ]
          }
        }
      }
    },
    "288781eff3725fd55c1ddece95be9f22fddfd324" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "288781eff3725fd55c1ddece95be9f22fddfd324~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.LongestCommonSubsequence#apply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLogestCommonSubsequenceDistacne" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequence#logestCommonSubsequence" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLogestCommonSubsequenceDistacne" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequence#longestCommonSubstringLengthArray" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLogestCommonSubsequenceDistacne" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceDistance#apply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLogestCommonSubsequenceDistacne", "testGettingLongestCommonSubsequenceDistanceNullNull", "testGettingLongestCommonSubsequenceDistanceNullString", "testGettingLongestCommonSubsequenceDistanceStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLogestCommonSubsequenceDistacne", "testGettingLongestCommonSubsequenceDistanceNullNull", "testGettingLongestCommonSubsequenceDistanceNullString", "testGettingLongestCommonSubsequenceDistanceStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest#testGettingLogestCommonSubsequenceDistacne" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLogestCommonSubsequenceDistacne" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest#testGettingLongestCommonSubsequenceDistanceNullNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLongestCommonSubsequenceDistanceNullNull" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest#testGettingLongestCommonSubsequenceDistanceNullString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLongestCommonSubsequenceDistanceNullString" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest#testGettingLongestCommonSubsequenceDistanceStringNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLongestCommonSubsequenceDistanceStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceApplyNullNull", "testGettingLongestCommonSubsequenceApplyNullString", "testGettingLongestCommonSubsequenceApplyStringNull", "testGettingLongestCommonSubsequenceNullNull", "testGettingLongestCommonSubsequenceNullString", "testGettingLongestCommonSubsequenceStringNull", "testLongestCommonSubsequence", "testLongestCommonSubsequenceApply" ]
          }
        }
      }
    },
    "4263ce38d789622ec107f2d666586c8a8de219aa" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4263ce38d789622ec107f2d666586c8a8de219aa~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.LongestCommonSubsequence#logestCommonSubsequence(CharSequence,CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLogestCommonSubsequenceDistacne" ],
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceNullNull", "testGettingLongestCommonSubsequenceNullString", "testGettingLongestCommonSubsequenceStringNull", "testLongestCommonSubsequence", "testLongestCommonSubsequenceApply" ]
          }
        }
      }
    },
    "7059ba3a4c746a867192d3d7044871e8d416b204" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7059ba3a4c746a867192d3d7044871e8d416b204~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.JaroWinklerDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullNull", "testGetJaroWinklerDistance_NullString", "testGetJaroWinklerDistance_StringNull", "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistanceTest#testGetJaroWinklerDistance_StringString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        }
      }
    },
    "f94e314415f2dd0ca1a9659f09f6921eca2783ef" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "336204ee586cc3404e0aa5d5c8b5b39919ed5e95" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6f6da346724162ca3cab1aa10ad97e1dd30ec3ad",
      "changedClazzes" : {
        "org.apache.commons.text.StringEscapeUtils" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#escapeHtml4Once" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$CsvEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$CsvUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$XsiUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeHtml4Once" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullNull", "testGetJaroWinklerDistance_NullString", "testGetJaroWinklerDistance_StringNull", "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistanceTest#testGetJaroWinklerDistance_StringString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#with" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#APOS_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#APOS_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#BASIC_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#BASIC_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#HTML40_EXTENDED_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#HTML40_EXTENDED_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#ISO8859_1_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#ISO8859_1_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#JAVA_CTRL_CHARS_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#JAVA_CTRL_CHARS_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#invert" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#outsideOf" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#between" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.SingleLookupTranslator" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.SingleLookupTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.SingleLookupTranslator#append" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.SingleLookupTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemover#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        }
      }
    },
    "08ac56a502adb0d274d02f9d97f394e4a5c5966e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "08ac56a502adb0d274d02f9d97f394e4a5c5966e~1",
      "changedClazzes" : {
        "org.apache.commons.text.CharacterPredicate" : {
          "testcases" : { }
        },
        "org.apache.commons.text.CharacterPredicates" : {
          "testcases" : { }
        },
        "org.apache.commons.text.CharacterPredicatesTest" : {
          "testcases" : {
            "org.apache.commons.text.CharacterPredicatesTest" : [ "testLetterPredicate" ]
          }
        },
        "org.apache.commons.text.CharacterPredicatesTest#testLetterPredicate" : {
          "testcases" : {
            "org.apache.commons.text.CharacterPredicatesTest" : [ "testLetterPredicate" ]
          }
        },
        "org.apache.commons.text.RandomStringBuilder" : {
          "testcases" : { }
        },
        "org.apache.commons.text.RandomStringGenerator" : {
          "testcases" : { }
        },
        "org.apache.commons.text.RandomStringGenerator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.CharacterPredicatesTest" : [ "testLetterPredicate" ],
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testChangeOfFilter", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#generate" : {
          "testcases" : {
            "org.apache.commons.text.CharacterPredicatesTest" : [ "testLetterPredicate" ],
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testChangeOfFilter", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#generateRandomNumber" : {
          "testcases" : {
            "org.apache.commons.text.CharacterPredicatesTest" : [ "testLetterPredicate" ],
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testChangeOfFilter", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.CharacterPredicatesTest" : [ "testLetterPredicate" ],
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#build" : {
          "testcases" : {
            "org.apache.commons.text.CharacterPredicatesTest" : [ "testLetterPredicate" ],
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testChangeOfFilter", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#filteredBy" : {
          "testcases" : {
            "org.apache.commons.text.CharacterPredicatesTest" : [ "testLetterPredicate" ],
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testChangeOfFilter", "testMultipleFilters", "testRemoveFilters" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#usingRandom" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testUsingRandom" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#withinRange" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testMultipleFilters", "testNoPrivateCharacters", "testRemoveFilters", "testWithinRange" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#codePointLength" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSetLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testBadMaximumCodePoint" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testBadMinAndMax" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMinAndMax" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testBadMinimumCodePoint" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMinimumCodePoint" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testChangeOfFilter" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testChangeOfFilter" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testInvalidLength" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testInvalidLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testMultipleFilters" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testMultipleFilters" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testNoLoneSurrogates" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testNoLoneSurrogates" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testNoPrivateCharacters" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testNoPrivateCharacters" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testRemoveFilters" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testRemoveFilters" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testSetLength" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSetLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testUsingRandom" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testUsingRandom" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testWithinRange" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testWithinRange" ]
          }
        }
      }
    },
    "0b1ca53b3e00e74364849a14372e4b3f57c2d3a0" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0b1ca53b3e00e74364849a14372e4b3f57c2d3a0~1",
      "changedClazzes" : {
        "org.apache.commons.text.RandomStringGenerator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#generate" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#build" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testZeroLength" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testZeroLength" ]
          }
        }
      }
    },
    "f65880d2e658a70d40b7fd93c280d3b977a787fa" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "afdc3cad348b113d9114a80b6a73c3ff7aecc0f9" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0b1ca53b3e00e74364849a14372e4b3f57c2d3a0",
      "changedClazzes" : {
        "org.apache.commons.text.StringEscapeUtils" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.SingleLookupTranslator" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        }
      }
    },
    "0edde4023f47276a5f4e6db4ed9ff973366c2ad8" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0edde4023f47276a5f4e6db4ed9ff973366c2ad8~1",
      "changedClazzes" : {
        "org.apache.commons.text.StringEscapeUtils#escapeHtml3Once" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$CsvEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$CsvUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$XsiUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeHtml3Once" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#with" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#APOS_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#APOS_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#BASIC_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#BASIC_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#HTML40_EXTENDED_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#HTML40_EXTENDED_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#ISO8859_1_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#ISO8859_1_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#JAVA_CTRL_CHARS_ESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#JAVA_CTRL_CHARS_UNESCAPE" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#invert" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#outsideOf" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#between" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.SingleLookupTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.SingleLookupTranslator#append" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.SingleLookupTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemover#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        }
      }
    },
    "ba4e4932f0d864a15c94d32fb8c341e230d928df" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ba4e4932f0d864a15c94d32fb8c341e230d928df~1",
      "changedClazzes" : {
        "org.apache.commons.text.CharacterPredicatesTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.RandomStringGenerator" : {
          "testcases" : { }
        },
        "org.apache.commons.text.RandomStringGeneratorTest" : {
          "testcases" : { }
        }
      }
    },
    "a28e32ea2f3b887b34cbed19aa6436b8759e8d12" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a28e32ea2f3b887b34cbed19aa6436b8759e8d12~1",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtils" : {
          "testcases" : { }
        },
        "org.apache.commons.text.WordUtilsTest" : {
          "testcases" : { }
        }
      }
    },
    "ac536cda62397e5720e5c8cd1db7799680f7d5bc" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ac536cda62397e5720e5c8cd1db7799680f7d5bc~1",
      "changedClazzes" : {
        "org.apache.commons.text.StringEscapeUtils" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$Builder" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$CsvUnescaper" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$XsiUnescaper" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslators" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.SinglePassTranslator" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.SinglePassTranslator#getClassName" : {
          "testcases" : {
            "org.apache.commons.text.translate.SinglePassTranslatorTest" : [ "indexIsValidated" ]
          }
        },
        "org.apache.commons.text.translate.SinglePassTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.SinglePassTranslatorTest" : [ "codePointsAreReturned", "indexIsValidated" ]
          }
        },
        "org.apache.commons.text.translate.SinglePassTranslatorTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.SinglePassTranslatorTest" : [ "codePointsAreReturned", "indexIsValidated" ]
          }
        },
        "org.apache.commons.text.translate.SinglePassTranslatorTest#before" : {
          "testcases" : {
            "org.apache.commons.text.translate.SinglePassTranslatorTest" : [ "codePointsAreReturned", "indexIsValidated" ]
          }
        },
        "org.apache.commons.text.translate.SinglePassTranslatorTest#codePointsAreReturned" : {
          "testcases" : {
            "org.apache.commons.text.translate.SinglePassTranslatorTest" : [ "codePointsAreReturned" ]
          }
        },
        "org.apache.commons.text.translate.SinglePassTranslatorTest#indexIsValidated" : {
          "testcases" : {
            "org.apache.commons.text.translate.SinglePassTranslatorTest" : [ "indexIsValidated" ]
          }
        }
      }
    },
    "1414ae2dd232bbac1a4ba115db5700a6395b8bec" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1414ae2dd232bbac1a4ba115db5700a6395b8bec~1",
      "changedClazzes" : {
        "org.apache.commons.text.CharacterPredicatesTest" : {
          "testcases" : {
            "org.apache.commons.text.CharacterPredicatesTest" : [ "testDigits", "testLetters" ]
          }
        },
        "org.apache.commons.text.CharacterPredicatesTest#testDigits" : {
          "testcases" : {
            "org.apache.commons.text.CharacterPredicatesTest" : [ "testDigits" ]
          }
        },
        "org.apache.commons.text.CharacterPredicatesTest#testLetters" : {
          "testcases" : {
            "org.apache.commons.text.CharacterPredicatesTest" : [ "testLetters" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#applyPattern" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#setFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testSetFormatIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#setFormatByArgumentIndex" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testSetFormatByArgumentIndexIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#setFormats" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#setFormatsByArgumentIndex" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testSetFormatsByArgumentIndex" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat", "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#setUp" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testSetFormatByArgumentIndexIsUnsupported" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testSetFormatByArgumentIndexIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testSetFormatIsUnsupported" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testSetFormatIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testSetFormatsByArgumentIndex" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testSetFormatsByArgumentIndex" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testSetFormatsIsUnsupported" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$LowerCaseFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$LowerCaseFormatFactory#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$UpperCaseFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$UpperCaseFormatFactory#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.FormattableUtils#<init>" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testPublicConstructorExists" ]
          }
        },
        "org.apache.commons.text.FormattableUtils#toString" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testSimplestFormat" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testAlternatePadCharAndEllipsis", "testAlternatePadCharacter", "testDefaultAppend", "testEllipsis", "testIllegalEllipsis", "testPublicConstructorExists", "testSimplestFormat" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest#testPublicConstructorExists" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testPublicConstructorExists" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest#testSimplestFormat" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testSimplestFormat" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest$SimplestFormattable#<init>" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testSimplestFormat" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest$SimplestFormattable#formatTo" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testSimplestFormat" ]
          }
        },
        "org.apache.commons.text.StrBuilder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrBuilder#append" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrBuilder#clear" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrBuilder#ensureCapacity" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrBuilder#length" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrBuilder#size" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrBuilder#substring" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrBuilder#validateRange" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrMatcher#commaMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrMatcher#doubleQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrMatcher#noneMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrMatcher#splitMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrMatcher#stringMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrMatcher#tabMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrMatcher#trimMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharSetMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrMatcher$NoMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrMatcher$NoMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrMatcher$StringMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrMatcher$StringMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrMatcher$TrimMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#addToken" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#checkTokenized" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getIgnoredMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getTrimmerMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#hasNext" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#next" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#readNextToken" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#readWithQuotes" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setDelimiterString" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setEmptyTokenAsNull" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setIgnoreEmptyTokens" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setIgnoredMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setTrimmerMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#tokenize" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testDelimString" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        }
      }
    },
    "dba22a2f5b03d595c0d9ce681a1c3b2018a75f1d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "dba22a2f5b03d595c0d9ce681a1c3b2018a75f1d~1",
      "changedClazzes" : {
        "org.apache.commons.text.StringEscapeUtils" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$Builder" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$CsvUnescaper" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeCsvWriter", "testUnescapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$XsiUnescaper" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslators" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeCsvString", "testEscapeCsvWriter", "testUnescapeCsvString", "testUnescapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.translate.SinglePassTranslator" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.SinglePassTranslatorTest" : [ "codePointsAreReturned", "indexIsValidated" ]
          }
        },
        "org.apache.commons.text.translate.SinglePassTranslatorTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.SinglePassTranslatorTest" : [ "codePointsAreReturned", "indexIsValidated" ]
          }
        }
      }
    },
    "d3051739d9fc77890218a8dbebdc9560d12532a7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d3051739d9fc77890218a8dbebdc9560d12532a7~1",
      "changedClazzes" : {
        "org.apache.commons.text.translate.SinglePassTranslator#translate(CharSequence,int,Writer)" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeCsvString", "testEscapeCsvWriter", "testUnescapeCsvString", "testUnescapeCsvWriter" ],
            "org.apache.commons.text.translate.SinglePassTranslatorTest" : [ "codePointsAreReturned", "indexIsValidated" ]
          }
        }
      }
    },
    "5bea132319fc7a3c13cb65edcddbec5d8d862159" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5bea132319fc7a3c13cb65edcddbec5d8d862159~1",
      "changedClazzes" : {
        "org.apache.commons.text.translate.EntityArrays" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposArrays", "testBasicArrays", "testConstructorExists", "testHTML40_EXTENDED_ESCAPE", "testHtml40ExtendedArrays", "testISO8859Arrays", "testISO8859_1_ESCAPE", "testJavaCntrlCharsArrays" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposArrays", "testBasicArrays", "testConstructorExists", "testHTML40_EXTENDED_ESCAPE", "testHtml40ExtendedArrays", "testISO8859Arrays", "testISO8859_1_ESCAPE", "testJavaCntrlCharsArrays" ]
          }
        }
      }
    },
    "ddd93aa6a36ff7483ac78e29f8b552cf5ae984a3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ddd93aa6a36ff7483ac78e29f8b552cf5ae984a3~1",
      "changedClazzes" : {
        "org.apache.commons.text.translate.EntityArrays#invert" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposMap", "testBasicMap", "testForDuplicateDeclaredMapValuesAposMap", "testForDuplicateDeclaredMapValuesBasicMap", "testForDuplicateDeclaredMapValuesHtml40ExtendedMap", "testForDuplicateDeclaredMapValuesISO8859Map", "testForDuplicateDeclaredMapValuesJavaCtrlCharsMap", "testForDuplicatedDeclaredMapKeys", "testHtml40ExtendedMap", "testISO8859Map", "testJavaCntrlCharsMap" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposMap", "testBasicMap", "testConstructorExists", "testForDuplicateDeclaredMapValuesAposMap", "testForDuplicateDeclaredMapValuesBasicMap", "testForDuplicateDeclaredMapValuesHtml40ExtendedMap", "testForDuplicateDeclaredMapValuesISO8859Map", "testForDuplicateDeclaredMapValuesJavaCtrlCharsMap", "testForDuplicatedDeclaredMapKeys", "testHtml40ExtendedMap", "testISO8859Map", "testJavaCntrlCharsMap" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testAposMap" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposMap" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testBasicMap" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testBasicMap" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testEscapeVsUnescapeMaps" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposMap", "testBasicMap", "testHtml40ExtendedMap", "testISO8859Map", "testJavaCntrlCharsMap" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testForDuplicateDeclaredMapValuesAposMap" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testForDuplicateDeclaredMapValuesAposMap" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testForDuplicateDeclaredMapValuesBasicMap" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testForDuplicateDeclaredMapValuesBasicMap" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testForDuplicateDeclaredMapValuesHtml40ExtendedMap" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testForDuplicateDeclaredMapValuesHtml40ExtendedMap" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testForDuplicateDeclaredMapValuesISO8859Map" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testForDuplicateDeclaredMapValuesISO8859Map" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testForDuplicateDeclaredMapValuesJavaCtrlCharsMap" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testForDuplicateDeclaredMapValuesJavaCtrlCharsMap" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testForDuplicatedDeclaredMapKeys" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testForDuplicatedDeclaredMapKeys" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testHtml40ExtendedMap" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testHtml40ExtendedMap" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testISO8859Map" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testISO8859Map" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testJavaCntrlCharsMap" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testJavaCntrlCharsMap" ]
          }
        }
      }
    },
    "bdfa83094669b649504695032cd2aac57e500592" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "bdfa83094669b649504695032cd2aac57e500592~1",
      "changedClazzes" : {
        "org.apache.commons.text.translate.EntityArrays#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testConstructorExists" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#invert(Map)" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposMap", "testBasicMap", "testConstructorExists", "testForDuplicateDeclaredMapValuesAposMap", "testForDuplicateDeclaredMapValuesBasicMap", "testForDuplicateDeclaredMapValuesHtml40ExtendedMap", "testForDuplicateDeclaredMapValuesISO8859Map", "testForDuplicateDeclaredMapValuesJavaCtrlCharsMap", "testForDuplicatedDeclaredMapKeys", "testHtml40ExtendedMap", "testISO8859Map", "testJavaCntrlCharsMap" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testEscapeVsUnescapeMaps(Map,Map)" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposMap", "testBasicMap", "testHtml40ExtendedMap", "testISO8859Map", "testJavaCntrlCharsMap" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull" ],
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup", "testLang882" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslatorTest#testBasicLookup" : {
          "testcases" : {
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslatorTest#testLang882" : {
          "testcases" : {
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testLang882" ]
          }
        }
      }
    },
    "ae4dc0820de1f848a3c85cfe41cf886bebea0680" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ae4dc0820de1f848a3c85cfe41cf886bebea0680~1",
      "changedClazzes" : {
        "org.apache.commons.text.translate.AggregateTranslatorTest#testNonNull" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull" ]
          }
        }
      }
    },
    "c642c12fe24763ad30a67950955de8ea5cab2c80" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c642c12fe24763ad30a67950955de8ea5cab2c80~1",
      "changedClazzes" : {
        "org.apache.commons.text.StringEscapeUtils" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeHtml4", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposMap", "testBasicMap", "testConstructorExists", "testForDuplicateDeclaredMapValuesAposMap", "testForDuplicateDeclaredMapValuesBasicMap", "testForDuplicateDeclaredMapValuesHtml40ExtendedMap", "testForDuplicateDeclaredMapValuesISO8859Map", "testForDuplicateDeclaredMapValuesJavaCtrlCharsMap", "testForDuplicatedDeclaredMapKeys", "testHtml40ExtendedMap", "testISO8859Map", "testJavaCntrlCharsMap" ]
          }
        },
        "org.apache.commons.text.translate.SingleLookupTranslator" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        }
      }
    },
    "5b5dced79238b559bf80dc74d2739539459feeaf" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5b5dced79238b559bf80dc74d2739539459feeaf~1",
      "changedClazzes" : {
        "org.apache.commons.text.StringEscapeUtils#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#escapeJava" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#unescapeJava" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$XsiUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#assertUnescapeJava" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testLang911" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testUnescapeJava" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#hex" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslators$CsvEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslators$CsvUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#invert" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#outsideOf" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#toUtf16Escape" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#between" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper#isOctalDigit" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.SingleLookupTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.SinglePassTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemover#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        }
      }
    },
    "5c46042505c0d8410777666cb125edbbec1ff769" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5c46042505c0d8410777666cb125edbbec1ff769~1",
      "changedClazzes" : {
        "org.apache.commons.text.StringEscapeUtils#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull" ],
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup", "testLang882" ]
          }
        }
      }
    },
    "75679e19ce8329c2a97196b15a89e3aba336ba50" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "17021c85efb892adddc4b7f14d601cc032afd89b" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "4d927351f82e925f2c67dde6411339eb7c98af5b" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "2f6c57270aff6a506eaf8ee2ab85130c1d4e74b3" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "165c8e60fbc9c6a54f2c516774af4258ca9d0f52" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "cc979fa13e060f2032e0ecaa5d1a095b9a51904b",
      "changedClazzes" : {
        "org.apache.commons.text.beta.AlphabetConverter" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.AlphabetConverter#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.beta.AlphabetConverter#addSingleEncoding" : {
          "testcases" : {
            "org.apache.commons.text.beta.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.beta.AlphabetConverter#codePointToString" : {
          "testcases" : {
            "org.apache.commons.text.beta.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.beta.AlphabetConverter#convertCharsToIntegers" : {
          "testcases" : {
            "org.apache.commons.text.beta.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest" ]
          }
        },
        "org.apache.commons.text.beta.AlphabetConverter#createConverter" : {
          "testcases" : {
            "org.apache.commons.text.beta.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.beta.AlphabetConverter#createConverterFromChars" : {
          "testcases" : {
            "org.apache.commons.text.beta.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest" ]
          }
        },
        "org.apache.commons.text.beta.AlphabetConverter#createConverterFromMap" : {
          "testcases" : {
            "org.apache.commons.text.beta.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest" ]
          }
        },
        "org.apache.commons.text.beta.AlphabetConverter#decode" : {
          "testcases" : {
            "org.apache.commons.text.beta.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.beta.AlphabetConverter#encode" : {
          "testcases" : {
            "org.apache.commons.text.beta.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.beta.AlphabetConverter#equals" : {
          "testcases" : {
            "org.apache.commons.text.beta.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest" ]
          }
        },
        "org.apache.commons.text.beta.AlphabetConverter#getEncodedCharLength" : {
          "testcases" : {
            "org.apache.commons.text.beta.AlphabetConverterTest" : [ "unicodeTest" ]
          }
        },
        "org.apache.commons.text.beta.AlphabetConverter#getOriginalToEncoded" : {
          "testcases" : {
            "org.apache.commons.text.beta.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest" ]
          }
        },
        "org.apache.commons.text.beta.AlphabetConverter#hashCode" : {
          "testcases" : {
            "org.apache.commons.text.beta.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest" ]
          }
        },
        "org.apache.commons.text.beta.AlphabetConverter#toString" : {
          "testcases" : {
            "org.apache.commons.text.beta.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest" ]
          }
        },
        "org.apache.commons.text.beta.AlphabetConverterTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.beta.AlphabetConverterTest#binaryTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.AlphabetConverterTest" : [ "binaryTest" ]
          }
        },
        "org.apache.commons.text.beta.AlphabetConverterTest#createJavadocExample" : {
          "testcases" : {
            "org.apache.commons.text.beta.AlphabetConverterTest" : [ "javadocExampleTest" ]
          }
        },
        "org.apache.commons.text.beta.AlphabetConverterTest#doNotEncodeTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.AlphabetConverterTest" : [ "doNotEncodeTest" ]
          }
        },
        "org.apache.commons.text.beta.AlphabetConverterTest#hebrewTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.AlphabetConverterTest" : [ "hebrewTest" ]
          }
        },
        "org.apache.commons.text.beta.AlphabetConverterTest#javadocExampleTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.AlphabetConverterTest" : [ "javadocExampleTest" ]
          }
        },
        "org.apache.commons.text.beta.AlphabetConverterTest#test" : {
          "testcases" : {
            "org.apache.commons.text.beta.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest" ]
          }
        },
        "org.apache.commons.text.beta.AlphabetConverterTest#unicodeTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.AlphabetConverterTest" : [ "unicodeTest" ]
          }
        },
        "org.apache.commons.text.beta.Builder" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.CharacterPredicate" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.CharacterPredicates" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.CharacterPredicatesTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.CharacterPredicatesTest" : [ "testDigits", "testLetters" ]
          }
        },
        "org.apache.commons.text.beta.CharacterPredicatesTest#testDigits" : {
          "testcases" : {
            "org.apache.commons.text.beta.CharacterPredicatesTest" : [ "testDigits" ]
          }
        },
        "org.apache.commons.text.beta.CharacterPredicatesTest#testLetters" : {
          "testcases" : {
            "org.apache.commons.text.beta.CharacterPredicatesTest" : [ "testLetters" ]
          }
        },
        "org.apache.commons.text.beta.CompositeFormat" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.CompositeFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.CompositeFormatTest" : [ "testCompositeFormat", "testUsage" ]
          }
        },
        "org.apache.commons.text.beta.CompositeFormat#format" : {
          "testcases" : {
            "org.apache.commons.text.beta.CompositeFormatTest" : [ "testCompositeFormat", "testUsage" ]
          }
        },
        "org.apache.commons.text.beta.CompositeFormat#getFormatter" : {
          "testcases" : {
            "org.apache.commons.text.beta.CompositeFormatTest" : [ "testCompositeFormat" ]
          }
        },
        "org.apache.commons.text.beta.CompositeFormat#getParser" : {
          "testcases" : {
            "org.apache.commons.text.beta.CompositeFormatTest" : [ "testCompositeFormat" ]
          }
        },
        "org.apache.commons.text.beta.CompositeFormat#parseObject" : {
          "testcases" : {
            "org.apache.commons.text.beta.CompositeFormatTest" : [ "testCompositeFormat", "testUsage" ]
          }
        },
        "org.apache.commons.text.beta.CompositeFormat#reformat" : {
          "testcases" : {
            "org.apache.commons.text.beta.CompositeFormatTest" : [ "testUsage" ]
          }
        },
        "org.apache.commons.text.beta.CompositeFormatTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.CompositeFormatTest" : [ "testCompositeFormat", "testUsage" ]
          }
        },
        "org.apache.commons.text.beta.CompositeFormatTest#testCompositeFormat" : {
          "testcases" : {
            "org.apache.commons.text.beta.CompositeFormatTest" : [ "testCompositeFormat" ]
          }
        },
        "org.apache.commons.text.beta.CompositeFormatTest#testUsage" : {
          "testcases" : {
            "org.apache.commons.text.beta.CompositeFormatTest" : [ "testUsage" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormat" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat", "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormat#appendQuotedString" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormat#applyPattern" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat", "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormat#containsElements" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormat#equals" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEqualsHashcode" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormat#getFormat" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormat#hashCode" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEqualsHashcode" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormat#insertFormats" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormat#next" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormat#parseFormatDescription" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormat#readArgumentIndex" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormat#seekNonWs" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormat#setFormat" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testSetFormatIsUnsupported" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormat#setFormatByArgumentIndex" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testSetFormatByArgumentIndexIsUnsupported" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormat#setFormats" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormat#setFormatsByArgumentIndex" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testSetFormatsByArgumentIndex" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormat#toPattern" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat", "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest#checkBuiltInFormat" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest#createMessageFormat" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testExtendedAndBuiltInFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest#setUp" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat", "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest#testBuiltInChoiceFormat" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest#testBuiltInDateTimeFormat" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testBuiltInDateTimeFormat" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest#testBuiltInNumberFormat" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testBuiltInNumberFormat" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest#testEmbeddedPatternInChoice" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest#testEqualsHashcode" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEqualsHashcode" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest#testEscapedBraces_LANG_948" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEscapedBraces_LANG_948" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest#testEscapedQuote_LANG_477" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEscapedQuote_LANG_477" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest#testExtendedAndBuiltInFormats" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testExtendedAndBuiltInFormats" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest#testExtendedFormats" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testExtendedFormats" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest#testOverriddenBuiltinFormat" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest#testSetFormatByArgumentIndexIsUnsupported" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testSetFormatByArgumentIndexIsUnsupported" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest#testSetFormatIsUnsupported" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testSetFormatIsUnsupported" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest#testSetFormatsByArgumentIndex" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testSetFormatsByArgumentIndex" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest#testSetFormatsIsUnsupported" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest$LowerCaseFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat", "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest$LowerCaseFormat#format" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEscapedQuote_LANG_477", "testExtendedFormats" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest$LowerCaseFormatFactory#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat", "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest$LowerCaseFormatFactory#getFormat" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedQuote_LANG_477", "testExtendedFormats" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest$OtherExtendedMessageFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEqualsHashcode" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest$OverrideShortDateFormatFactory#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest$OverrideShortDateFormatFactory#getFormat" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest$UpperCaseFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat", "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest$UpperCaseFormat#format" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testExtendedAndBuiltInFormats", "testExtendedFormats" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest$UpperCaseFormatFactory#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat", "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.beta.ExtendedMessageFormatTest$UpperCaseFormatFactory#getFormat" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testExtendedAndBuiltInFormats", "testExtendedFormats" ]
          }
        },
        "org.apache.commons.text.beta.FormatFactory" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.FormattableUtils" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.FormattableUtils#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.FormattableUtilsTest" : [ "testPublicConstructorExists" ]
          }
        },
        "org.apache.commons.text.beta.FormattableUtils#append" : {
          "testcases" : {
            "org.apache.commons.text.beta.FormattableUtilsTest" : [ "testAlternatePadCharAndEllipsis", "testAlternatePadCharacter", "testDefaultAppend", "testEllipsis", "testIllegalEllipsis" ]
          }
        },
        "org.apache.commons.text.beta.FormattableUtils#toString" : {
          "testcases" : {
            "org.apache.commons.text.beta.FormattableUtilsTest" : [ "testSimplestFormat" ]
          }
        },
        "org.apache.commons.text.beta.FormattableUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.FormattableUtilsTest" : [ "testAlternatePadCharAndEllipsis", "testAlternatePadCharacter", "testDefaultAppend", "testEllipsis", "testIllegalEllipsis", "testPublicConstructorExists", "testSimplestFormat" ]
          }
        },
        "org.apache.commons.text.beta.FormattableUtilsTest#testAlternatePadCharAndEllipsis" : {
          "testcases" : {
            "org.apache.commons.text.beta.FormattableUtilsTest" : [ "testAlternatePadCharAndEllipsis" ]
          }
        },
        "org.apache.commons.text.beta.FormattableUtilsTest#testAlternatePadCharacter" : {
          "testcases" : {
            "org.apache.commons.text.beta.FormattableUtilsTest" : [ "testAlternatePadCharacter" ]
          }
        },
        "org.apache.commons.text.beta.FormattableUtilsTest#testDefaultAppend" : {
          "testcases" : {
            "org.apache.commons.text.beta.FormattableUtilsTest" : [ "testDefaultAppend" ]
          }
        },
        "org.apache.commons.text.beta.FormattableUtilsTest#testEllipsis" : {
          "testcases" : {
            "org.apache.commons.text.beta.FormattableUtilsTest" : [ "testEllipsis" ]
          }
        },
        "org.apache.commons.text.beta.FormattableUtilsTest#testIllegalEllipsis" : {
          "testcases" : {
            "org.apache.commons.text.beta.FormattableUtilsTest" : [ "testIllegalEllipsis" ]
          }
        },
        "org.apache.commons.text.beta.FormattableUtilsTest#testPublicConstructorExists" : {
          "testcases" : {
            "org.apache.commons.text.beta.FormattableUtilsTest" : [ "testPublicConstructorExists" ]
          }
        },
        "org.apache.commons.text.beta.FormattableUtilsTest#testSimplestFormat" : {
          "testcases" : {
            "org.apache.commons.text.beta.FormattableUtilsTest" : [ "testSimplestFormat" ]
          }
        },
        "org.apache.commons.text.beta.FormattableUtilsTest$SimplestFormattable#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.FormattableUtilsTest" : [ "testSimplestFormat" ]
          }
        },
        "org.apache.commons.text.beta.FormattableUtilsTest$SimplestFormattable#formatTo" : {
          "testcases" : {
            "org.apache.commons.text.beta.FormattableUtilsTest" : [ "testSimplestFormat" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.StrBuilder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText", "testLang299" ],
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testGetSetNewLineText", "testGetSetNullText", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLang412Left", "testLang412Right", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim", "test_LANG_1131_EqualsWithNullStrBuilder" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#append" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText" ],
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBufferAppendsToEnd", "testReadFromReadableAppendsToEnd", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#appendAll" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator" ],
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsBuilder" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#appendFixedWidthPadLeft" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int" ],
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testLang412Left" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#appendFixedWidthPadRight" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testLang299" ],
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testLang412Right" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#appendNewLine" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendNewLine", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#appendNull" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_Object", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Object" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#appendPadding" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendPadding" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#appendSeparator" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#appendTo" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#appendWithSeparators" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testCyclicReplacement" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#appendln" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#asReader" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#asTokenizer" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#asWriter" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsWriter" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#build" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsBuilder" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#capacity" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testCapacity", "testCapacityAndLength", "testConstructors", "testEnsureCapacity", "testMinimizeCapacity" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#charAt" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsReader", "testCharAt" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#clear" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppendln_Boolean", "testAppendln_PrimitiveNumber", "testInsert", "testInsertWithNullText" ],
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer", "testCapacityAndLength", "testChaining", "testClear", "testEquals", "testEqualsIgnoreCase", "testIsEmpty", "testReverse", "testTrim" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#contains" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testContains_StrMatcher", "testContains_String", "testContains_char", "testLang295" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#delete" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testDeleteIntInt", "testTrim" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#deleteAll" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testLang294" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#deleteCharAt" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testDeleteCharAt" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testReplaceComplexEscaping", "testReplaceEscaping", "testReplaceSoloEscaping", "testReplaceToIdentical", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#deleteFirst" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testIndexOfLang294", "testLang295" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#deleteImpl" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testIndexOfLang294", "testLang294", "testLang295", "testTrim" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testReplaceComplexEscaping", "testReplaceEscaping", "testReplaceSoloEscaping", "testReplaceToIdentical", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#endsWith" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testEndsWith" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#ensureCapacity" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText", "testLang299" ],
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLang412Left", "testLang412Right", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#equals" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testEquals", "test_LANG_1131_EqualsWithNullStrBuilder" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#equalsIgnoreCase" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testEqualsIgnoreCase" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#getChars" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppend_StrBuilder_int_int", "testAppendln_StrBuilder_int_int" ],
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsReader", "testGetChars", "testGetCharsIntIntCharArrayInt" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceToIdentical", "testReplaceUnknownKey" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#getNewLineText" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testGetSetNewLineText" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#getNullText" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadRight" ],
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testGetSetNullText", "testLang412Left", "testLang412Right" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#hashCode" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testHashCode" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#indexOf" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testContains_StrMatcher", "testContains_String", "testDeleteAll_String", "testDeleteFirst_String", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testLang294", "testLang295", "testReplaceAll_String_String", "testReplaceFirst_String_String" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#insert" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testInsert", "testInsertWithNullText" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#isEmpty" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendSeparator_String", "testAppendSeparator_String_String" ],
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testCapacityAndLength", "testIsEmpty" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#lastIndexOf" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#leftString" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testLeftString" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#length" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText" ],
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBufferAppendsToEnd", "testReadFromReadableAppendsToEnd", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#midString" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testMidString" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#minimizeCapacity" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testCapacityAndLength", "testChaining", "testMinimizeCapacity" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#readFrom" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#replace" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testDeleteAll_StrMatcher", "testDeleteFirst_StrMatcher", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#replaceAll" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#replaceFirst" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#replaceImpl" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testDeleteAll_StrMatcher", "testDeleteFirst_StrMatcher", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#reverse" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testChaining", "testReverse", "testTrim" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#rightString" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testRightString" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#setCharAt" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testChaining", "testSetCharAt" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#setLength" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsWriter", "testCapacityAndLength", "testChaining", "testSetLength" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#setNewLineText" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendNewLine" ],
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testChaining", "testGetSetNewLineText" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#setNullText" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadRight", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testInsertWithNullText" ],
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testChaining", "testGetSetNullText" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#size" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendSeparator_char", "testAppendSeparator_char_char" ],
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAppendToCharBuffer", "testAsReader", "testAsTokenizer", "testCapacityAndLength", "testConstructors", "testSize" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#startsWith" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testStartsWith" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#subSequence" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testSubSequenceIntInt" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#substring" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#toCharArray" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testToCharArray", "testToCharArrayIntInt" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#toString" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText", "testLang299" ],
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAppendCharBuffer", "testAsBuilder", "testAsTokenizer", "testAsWriter", "testCapacityAndLength", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testLang294", "testLang412Left", "testLang412Right", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testSetCharAt", "testSetLength", "testToString", "testTrim" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#toStringBuffer" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testToStringBuffer" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#toStringBuilder" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testToStringBuilder" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#trim" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testChaining", "testTrim" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#validateIndex" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testInsert", "testInsertWithNullText" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#validateRange" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer", "testDeleteAll_StrMatcher", "testDeleteFirst_StrMatcher", "testDeleteIntInt", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArrayIntInt", "testTrim" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder$StrBuilderReader#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder$StrBuilderReader#close" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder$StrBuilderReader#mark" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder$StrBuilderReader#markSupported" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder$StrBuilderReader#read" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder$StrBuilderReader#ready" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder$StrBuilderReader#reset" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder$StrBuilderReader#skip" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder$StrBuilderTokenizer#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder$StrBuilderTokenizer#getContent" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder$StrBuilderTokenizer#tokenize" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder$StrBuilderWriter#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsWriter" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder$StrBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsWriter" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder$StrBuilderWriter#flush" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsWriter" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder$StrBuilderWriter#write" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsWriter" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText", "testLang299" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendAll_Array" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendAll_Array" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendAll_Collection" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendAll_Collection" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendAll_Iterator" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendAll_Iterator" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendFixedWidthPadLeft" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendFixedWidthPadLeft" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendFixedWidthPadLeft_int" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendFixedWidthPadLeft_int" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendFixedWidthPadRight" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendFixedWidthPadRight" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendFixedWidthPadRight_int" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendFixedWidthPadRight_int" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendNewLine" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendNewLine" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendPadding" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendPadding" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendSeparator_String" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendSeparator_String" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendSeparator_String_String" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendSeparator_String_String" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendSeparator_String_int" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendSeparator_String_int" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendSeparator_char" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendSeparator_char" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendSeparator_char_char" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendSeparator_char_char" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendSeparator_char_int" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendSeparator_char_int" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendWithNullText" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendWithNullText" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendWithSeparatorsWithNullText" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendWithSeparatorsWithNullText" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendWithSeparators_Array" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendWithSeparators_Array" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendWithSeparators_Collection" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendWithSeparators_Collection" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendWithSeparators_Iterator" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendWithSeparators_Iterator" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppend_Boolean" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppend_Boolean" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppend_CharArray" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppend_CharArray" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppend_CharArray_int_int" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppend_CharArray_int_int" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppend_FormattedString" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppend_FormattedString" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppend_Object" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppend_Object" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppend_PrimitiveNumber" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppend_PrimitiveNumber" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppend_StrBuilder" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppend_StrBuilder" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppend_StrBuilder_int_int" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppend_StrBuilder_int_int" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppend_String" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppend_String" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppend_StringBuffer" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppend_StringBuffer" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppend_StringBuffer_int_int" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppend_StringBuffer_int_int" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppend_StringBuilder" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppend_StringBuilder" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppend_StringBuilder_int_int" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppend_StringBuilder_int_int" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppend_String_int_int" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppend_String_int_int" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendln_Boolean" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendln_Boolean" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendln_CharArray" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendln_CharArray" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendln_CharArray_int_int" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendln_CharArray_int_int" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendln_FormattedString" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendln_FormattedString" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendln_Object" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendln_Object" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendln_PrimitiveNumber" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendln_PrimitiveNumber" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendln_StrBuilder" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendln_StrBuilder" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendln_StrBuilder_int_int" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendln_StrBuilder_int_int" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendln_String" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendln_String" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendln_StringBuffer" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendln_StringBuffer" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendln_StringBuffer_int_int" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendln_StringBuffer_int_int" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendln_StringBuilder" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendln_StringBuilder" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendln_StringBuilder_int_int" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendln_StringBuilder_int_int" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testAppendln_String_int_int" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendln_String_int_int" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testInsert" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testInsert" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testInsertWithNullText" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testInsertWithNullText" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderAppendInsertTest#testLang299" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testLang299" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testGetSetNewLineText", "testGetSetNullText", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLang412Left", "testLang412Right", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim", "test_LANG_1131_EqualsWithNullStrBuilder" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testAppendCharBuffer" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAppendCharBuffer" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testAppendToCharBuffer" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAppendToCharBuffer" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testAppendToStringBuffer" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAppendToStringBuffer" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testAppendToStringBuilder" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAppendToStringBuilder" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testAppendToWriter" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAppendToWriter" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testAsBuilder" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsBuilder" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testAsReader" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testAsTokenizer" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testAsWriter" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsWriter" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testCapacity" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testCapacity" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testCapacityAndLength" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testCapacityAndLength" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testChaining" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testChaining" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testCharAt" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testCharAt" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testClear" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testClear" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testConstructors" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testConstructors" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testContains_StrMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testContains_StrMatcher" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testContains_String" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testContains_String" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testContains_char" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testContains_char" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testDeleteAll_StrMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testDeleteAll_StrMatcher" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testDeleteAll_String" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testDeleteAll_String" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testDeleteAll_char" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testDeleteAll_char" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testDeleteCharAt" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testDeleteCharAt" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testDeleteFirst_StrMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testDeleteFirst_StrMatcher" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testDeleteFirst_String" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testDeleteFirst_String" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testDeleteFirst_char" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testDeleteFirst_char" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testDeleteIntInt" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testDeleteIntInt" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testEndsWith" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testEndsWith" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testEnsureCapacity" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testEnsureCapacity" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testEquals" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testEquals" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testEqualsIgnoreCase" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testEqualsIgnoreCase" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testGetChars" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testGetChars" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testGetCharsIntIntCharArrayInt" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testGetCharsIntIntCharArrayInt" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testGetSetNewLineText" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testGetSetNewLineText" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testGetSetNullText" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testGetSetNullText" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testHashCode" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testHashCode" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testIndexOfLang294" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testIndexOfLang294" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testIndexOf_StrMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testIndexOf_StrMatcher" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testIndexOf_StrMatcher_int" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testIndexOf_StrMatcher_int" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testIndexOf_String" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testIndexOf_String" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testIndexOf_String_int" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testIndexOf_String_int" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testIndexOf_char" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testIndexOf_char" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testIndexOf_char_int" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testIndexOf_char_int" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testIsEmpty" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testIsEmpty" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testLang294" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testLang294" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testLang295" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testLang295" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testLang412Left" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testLang412Left" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testLang412Right" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testLang412Right" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testLastIndexOf_StrMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testLastIndexOf_StrMatcher" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testLastIndexOf_StrMatcher_int" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testLastIndexOf_StrMatcher_int" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testLastIndexOf_String" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testLastIndexOf_String" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testLastIndexOf_String_int" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testLastIndexOf_String_int" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testLastIndexOf_char" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testLastIndexOf_char" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testLastIndexOf_char_int" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testLastIndexOf_char_int" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testLeftString" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testLeftString" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testLength" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testLength" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testMidString" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testMidString" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testMinimizeCapacity" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testMinimizeCapacity" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testReadFromCharBuffer" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testReadFromCharBuffer" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testReadFromCharBufferAppendsToEnd" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testReadFromCharBufferAppendsToEnd" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testReadFromReadable" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testReadFromReadable" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testReadFromReadableAppendsToEnd" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testReadFromReadableAppendsToEnd" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testReadFromReader" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testReadFromReader" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testReadFromReaderAppendsToEnd" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testReadFromReaderAppendsToEnd" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testReplaceAll_StrMatcher_String" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testReplaceAll_StrMatcher_String" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testReplaceAll_String_String" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testReplaceAll_String_String" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testReplaceAll_char_char" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testReplaceAll_char_char" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testReplaceFirst_StrMatcher_String" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testReplaceFirst_StrMatcher_String" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testReplaceFirst_String_String" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testReplaceFirst_String_String" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testReplaceFirst_char_char" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testReplaceFirst_char_char" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testReplace_StrMatcher_String_int_int_int_VaryCount" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testReplace_StrMatcher_String_int_int_int_VaryCount" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testReplace_StrMatcher_String_int_int_int_VaryEndIndex" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testReplace_StrMatcher_String_int_int_int_VaryEndIndex" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testReplace_StrMatcher_String_int_int_int_VaryMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testReplace_StrMatcher_String_int_int_int_VaryMatcher" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testReplace_StrMatcher_String_int_int_int_VaryReplace" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testReplace_StrMatcher_String_int_int_int_VaryReplace" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testReplace_StrMatcher_String_int_int_int_VaryStartIndex" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testReplace_StrMatcher_String_int_int_int_VaryStartIndex" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testReplace_int_int_String" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testReplace_int_int_String" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testReverse" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testReverse" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testRightString" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testRightString" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testSetCharAt" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testSetCharAt" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testSetLength" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testSetLength" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testSize" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testSize" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testStartsWith" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testStartsWith" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testSubSequenceIntInt" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testSubSequenceIntInt" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testSubstringInt" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testSubstringInt" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testSubstringIntInt" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testSubstringIntInt" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testToCharArray" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testToCharArray" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testToCharArrayIntInt" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testToCharArrayIntInt" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testToString" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testToString" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testToStringBuffer" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testToStringBuffer" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testToStringBuilder" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testToStringBuilder" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#testTrim" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testTrim" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest#test_LANG_1131_EqualsWithNullStrBuilder" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "test_LANG_1131_EqualsWithNullStrBuilder" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest$MockReadable#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testReadFromReadable", "testReadFromReadableAppendsToEnd" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilderTest$MockReadable#read" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testReadFromReadable", "testReadFromReadableAppendsToEnd" ]
          }
        },
        "org.apache.commons.text.beta.StrLookup" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.StrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrLookup#mapLookup" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrLookup#noneLookup" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrLookupTest" : [ "testNoneLookup" ]
          }
        },
        "org.apache.commons.text.beta.StrLookup#systemPropertiesLookup" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrLookupTest" : [ "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.beta.StrLookup$MapStrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrLookup$MapStrLookup#lookup" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrLookup$SystemPropertiesStrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrLookup$SystemPropertiesStrLookup#lookup" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrLookupTest" : [ "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.beta.StrLookupTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ]
          }
        },
        "org.apache.commons.text.beta.StrLookupTest#testMapLookup" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrLookupTest" : [ "testMapLookup" ]
          }
        },
        "org.apache.commons.text.beta.StrLookupTest#testMapLookup_nullMap" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrLookupTest" : [ "testMapLookup_nullMap" ]
          }
        },
        "org.apache.commons.text.beta.StrLookupTest#testNoneLookup" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrLookupTest" : [ "testNoneLookup" ]
          }
        },
        "org.apache.commons.text.beta.StrLookupTest#testSystemProperiesLookup" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrLookupTest" : [ "testSystemProperiesLookup" ]
          }
        },
        "org.apache.commons.text.beta.StrLookupTest#testSystemPropertiesLookupReplacedProperties" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrLookupTest" : [ "testSystemPropertiesLookupReplacedProperties" ]
          }
        },
        "org.apache.commons.text.beta.StrLookupTest#testSystemPropertiesLookupUpdatedProperty" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrLookupTest" : [ "testSystemPropertiesLookupUpdatedProperty" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcher" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.StrMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testContains_StrMatcher", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex" ],
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcher#charMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testContains_StrMatcher", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryMatcher" ],
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testCharMatcher_char" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testChaining", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray_char", "testConstructor_charArray_char_char" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcher#charSetMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testCharSetMatcher_String", "testCharSetMatcher_charArray" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcher#commaMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testCommaMatcher" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcher#doubleQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testDoubleQuoteMatcher" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcher#noneMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String" ],
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testNoneMatcher", "testStringMatcher_String" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcher#quoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testQuoteMatcher" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasicQuoted6", "testBasicQuoted7" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcher#singleQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testSingleQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcher#spaceMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int" ],
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testSpaceMatcher" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test7", "test8" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcher#splitMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testSplitMatcher" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcher#stringMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testContains_StrMatcher", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex" ],
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testMatcherIndices", "testStringMatcher_String" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicTrimmed2", "testChaining", "testDelimString" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcher#tabMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testTabMatcher" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcher#trimMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testTrimMatcher" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcher$CharMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testContains_StrMatcher", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryMatcher" ],
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcher$CharMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testContains_StrMatcher", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryMatcher" ],
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testCharMatcher_char", "testCommaMatcher", "testDoubleQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testTabMatcher" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testTSV" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcher$CharSetMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcher$CharSetMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testQuoteMatcher", "testSplitMatcher" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasicEmpty1", "testBasicEmpty2", "testBasicQuoted6", "testBasicQuoted7", "testCloneReset", "testConstructor_String", "testConstructor_charArray", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcher$NoMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcher$NoMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String" ],
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testNoneMatcher" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcher$StringMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testContains_StrMatcher", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex" ],
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testMatcherIndices", "testStringMatcher_String" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicTrimmed2", "testChaining", "testDelimString" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcher$StringMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testContains_StrMatcher", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex" ],
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testMatcherIndices", "testStringMatcher_String" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicTrimmed2", "testDelimString" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcher$TrimMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcher$TrimMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testTrimMatcher" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test4", "test5", "test6", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed4", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcherTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcherTest#testCharMatcher_char" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testCharMatcher_char" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcherTest#testCharSetMatcher_String" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testCharSetMatcher_String" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcherTest#testCharSetMatcher_charArray" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testCharSetMatcher_charArray" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcherTest#testCommaMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testCommaMatcher" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcherTest#testDoubleQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testDoubleQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcherTest#testMatcherIndices" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testMatcherIndices" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcherTest#testNoneMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testNoneMatcher" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcherTest#testQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcherTest#testSingleQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testSingleQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcherTest#testSpaceMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testSpaceMatcher" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcherTest#testSplitMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testSplitMatcher" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcherTest#testStringMatcher_String" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testStringMatcher_String" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcherTest#testTabMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testTabMatcher" ]
          }
        },
        "org.apache.commons.text.beta.StrMatcherTest#testTrimMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrMatcherTest" : [ "testTrimMatcher" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutor" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.StrSubstitutor#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutor#checkCyclicSubstitution" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutor#getEscapeChar" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutor#getValueDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutor#getVariablePrefixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetPrefix", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutor#getVariableResolver" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutor#getVariableSuffixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetSuffix", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutor#isEnableSubstitutionInVariables" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutor#isPreserveEscapes" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutor#replace" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutor#replaceIn" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutor#replaceSystemProperties" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutor#resolveVariable" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutor#setEnableSubstitutionInVariables" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceInVariable", "testReplaceInVariableRecursive" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutor#setEscapeChar" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutor#setPreserveEscapes" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutor#setValueDelimiter" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testDefaultValueDelimiters", "testGetSetValueDelimiter" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutor#setValueDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutor#setVariablePrefix" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testDefaultValueDelimiters", "testGetSetPrefix", "testSamePrefixAndSuffix", "testStaticReplacePrefixSuffix", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutor#setVariablePrefixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutor#setVariableResolver" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutor#setVariableSuffix" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testDefaultValueDelimiters", "testGetSetSuffix", "testSamePrefixAndSuffix", "testStaticReplacePrefixSuffix", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutor#setVariableSuffixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutor#substitute" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#doTestNoReplace" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceEmpty", "testReplaceNoVariables", "testReplaceNull", "testReplaceWeirdPattens" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#doTestReplace" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#setUp" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#tearDown" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testConstructorMapFull" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testConstructorMapPrefixSuffix" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapPrefixSuffix" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testConstructorNoArgs" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorNoArgs" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testCyclicReplacement" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testCyclicReplacement" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testDefaultValueDelimiters" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testDefaultValueDelimiters" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testGetSetEscape" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testGetSetEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testGetSetPrefix" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testGetSetPrefix" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testGetSetSuffix" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testGetSetSuffix" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testGetSetValueDelimiter" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testGetSetValueDelimiter" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testLANG1055" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testLANG1055" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testReplaceAdjacentAtEnd" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceAdjacentAtEnd" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testReplaceAdjacentAtStart" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceAdjacentAtStart" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testReplaceChangedMap" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceChangedMap" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testReplaceComplexEscaping" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceComplexEscaping" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testReplaceEmpty" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceEmpty" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testReplaceEmptyKeys" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceEmptyKeys" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testReplaceEscaping" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceEscaping" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testReplaceInVariable" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceInVariable" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testReplaceInVariableDisabled" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceInVariableDisabled" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testReplaceInVariableRecursive" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceInVariableRecursive" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testReplaceIncompletePrefix" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceIncompletePrefix" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testReplaceNoPrefixNoSuffix" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceNoPrefixNoSuffix" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testReplaceNoPrefixSuffix" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceNoPrefixSuffix" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testReplaceNoVariables" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceNoVariables" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testReplaceNull" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceNull" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testReplacePartialString_noReplace" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplacePartialString_noReplace" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testReplacePrefixNoSuffix" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplacePrefixNoSuffix" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testReplaceRecursive" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceRecursive" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testReplaceSimple" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceSimple" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testReplaceSolo" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceSolo" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testReplaceSoloEscaping" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceSoloEscaping" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testReplaceToIdentical" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceToIdentical" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testReplaceUnknownKey" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceUnknownKey" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testReplaceWeirdPattens" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testReplaceWeirdPattens" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testResolveVariable" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testResolveVariable" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testSamePrefixAndSuffix" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testSamePrefixAndSuffix" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testStaticReplace" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testStaticReplace" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testStaticReplacePrefixSuffix" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testStaticReplacePrefixSuffix" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testStaticReplaceSystemProperties" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testSubstituteDefaultProperties" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testSubstituteDefaultProperties" ]
          }
        },
        "org.apache.commons.text.beta.StrSubstitutorTest#testSubstitutePreserveEscape" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.StrTokenizer#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#add" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testIteration" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#addToken" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#checkTokenized" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#clone" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#cloneReset" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneNull", "testCloneReset", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#getCSVClone" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#getCSVInstance" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#getContent" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testGetContent" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#getDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#getIgnoredMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#getQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#getTSVClone" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#getTSVInstance" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#getTokenArray" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testListArray" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#getTokenList" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testListArray", "testToString" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#getTrimmerMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#hasNext" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test6", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#hasPrevious" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test6", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testIteration", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#isEmptyTokenAsNull" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test5", "test6", "test7", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed4", "testBasicQuoted2", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#isIgnoreEmptyTokens" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed4", "testBasicQuoted2", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testListArray" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#isQuote" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#next" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test6", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testReset", "testReset_String", "testReset_charArray", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#nextIndex" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#nextToken" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneNull", "testCloneReset", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#previous" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test6", "testIteration" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#previousIndex" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#previousToken" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#readNextToken" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#readWithQuotes" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#remove" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testIteration" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#reset" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNull", "testCloneReset", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#set" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testIteration" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#setDelimiterChar" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testChaining", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray_char", "testConstructor_charArray_char_char" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#setDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#setDelimiterString" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testChaining", "testDelimString" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#setEmptyTokenAsNull" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#setIgnoreEmptyTokens" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#setIgnoredChar" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testChaining" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#setIgnoredMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#setQuoteChar" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "testBasic5", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuotedTrimmed1", "testChaining", "testConstructor_String_char_char", "testConstructor_charArray_char_char" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#setQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#setTrimmerMatcher" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#size" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#toString" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testToString" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizer#tokenize" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#checkClone" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#test1" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#test2" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test2" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#test3" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test3" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#test4" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test4" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#test5" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test5" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#test6" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test6" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#test7" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test7" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#test8" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test8" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testBasic1" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasic1" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testBasic2" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasic2" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testBasic3" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasic3" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testBasic4" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasic4" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testBasic5" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasic5" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testBasicDelim1" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasicDelim1" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testBasicDelim2" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasicDelim2" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testBasicEmpty1" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasicEmpty1" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testBasicEmpty2" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasicEmpty2" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testBasicIgnoreTrimmed1" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasicIgnoreTrimmed1" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testBasicIgnoreTrimmed2" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasicIgnoreTrimmed2" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testBasicIgnoreTrimmed3" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasicIgnoreTrimmed3" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testBasicIgnoreTrimmed4" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasicIgnoreTrimmed4" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testBasicQuoted1" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasicQuoted1" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testBasicQuoted2" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasicQuoted2" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testBasicQuoted3" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasicQuoted3" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testBasicQuoted4" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasicQuoted4" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testBasicQuoted5" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasicQuoted5" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testBasicQuoted6" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasicQuoted6" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testBasicQuoted7" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasicQuoted7" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testBasicQuotedTrimmed1" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasicQuotedTrimmed1" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testBasicTrimmed1" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasicTrimmed1" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testBasicTrimmed2" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testBasicTrimmed2" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testCSV" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testCSVSimple", "testCSVSimpleNeedsTrim" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testCSVEmpty" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testCSVEmpty" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testCSVSimple" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testCSVSimple" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testCSVSimpleNeedsTrim" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testCSVSimpleNeedsTrim" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testChaining" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testChaining" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testCloneNotSupportedException" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testCloneNotSupportedException" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testCloneNull" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testCloneNull" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testCloneReset" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testCloneReset" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testConstructor_String" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testConstructor_String" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testConstructor_String_char" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testConstructor_String_char" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testConstructor_String_char_char" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testConstructor_String_char_char" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testConstructor_charArray" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testConstructor_charArray" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testConstructor_charArray_char" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testConstructor_charArray_char" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testConstructor_charArray_char_char" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testConstructor_charArray_char_char" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testDelimString" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testEmpty" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testCSVEmpty", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testGetContent" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testGetContent" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testIteration" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testIteration" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testListArray" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testListArray" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testReset" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testReset" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testReset_String" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testReset_String" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testReset_charArray" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testReset_charArray" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testTSV" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testTSV" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testTSVEmpty" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testToString" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testToString" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testTokenizeSubclassInputChange" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testTokenizeSubclassInputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testTokenizeSubclassOutputChange" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.beta.StrTokenizerTest#testXSVAbc" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtils" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.StringEscapeUtils#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testConstructor" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtils#builder" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtils#escapeCsv" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeCsvString" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtils#escapeEcmaScript" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeEcmaScript", "testLang708" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtils#escapeHtml3Once" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtils#escapeHtml4" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtils#escapeHtml4Once" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtils#escapeJava" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeJava", "testEscapeJavaWithSlash", "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtils#escapeJson" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeJson" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtils#escapeXSI" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeXSI" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtils#escapeXml10" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeXml10" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtils#escapeXml11" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeXml11" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtils#unescapeCsv" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testUnescapeCsvString" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtils#unescapeHtml4" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeHiragana", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testLang313", "testStandaloneAmphersand", "testUnescapeHtml4", "testUnescapeUnknownEntity" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtils#unescapeJava" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtils#unescapeXSI" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtils#unescapeXml" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testStandaloneAmphersand", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtils$Builder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtils$Builder#append" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtils$Builder#escape" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtils$Builder#toString" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtils$XsiUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtils$XsiUnescaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#assertEscapeJava" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeJava" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#assertUnescapeJava" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#checkCsvEscapeWriter" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#checkCsvUnescapeWriter" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testUnescapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testBuilder" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testConstructor" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testConstructor" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testEscapeCsvString" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeCsvString" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testEscapeCsvWriter" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testEscapeEcmaScript" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeEcmaScript" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testEscapeHiragana" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeHiragana" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testEscapeHtml" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeHtml" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testEscapeHtml3Once" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testEscapeHtml4Once" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testEscapeHtmlHighUnicode" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeHtmlHighUnicode" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testEscapeHtmlVersions" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeHtmlVersions" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testEscapeJava" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeJava" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testEscapeJavaWithSlash" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeJavaWithSlash" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testEscapeJson" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeJson" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testEscapeXSI" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeXSI" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testEscapeXml10" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeXml10" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testEscapeXml11" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeXml11" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testLang313" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testLang313" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testLang708" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testLang911" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testLang911" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testStandaloneAmphersand" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testStandaloneAmphersand" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testUnescapeCsvString" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testUnescapeCsvString" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testUnescapeCsvWriter" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testUnescapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testUnescapeHtml4" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testUnescapeHtml4" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testUnescapeJava" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testUnescapeUnknownEntity" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testUnescapeUnknownEntity" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testUnescapeXmlSupplementaryCharacters" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtilsTest#testUnscapeXSI" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.beta.diff.CommandVisitor" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.diff.DeleteCommand" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.diff.DeleteCommand#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.beta.diff.DeleteCommand#accept" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.beta.diff.EditCommand" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.diff.EditCommand#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.beta.diff.EditCommand#getObject" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.beta.diff.EditScript" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.diff.EditScript#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.beta.diff.EditScript#append" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.beta.diff.EditScript#getLCSLength" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.beta.diff.EditScript#getModifications" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testLength" ]
          }
        },
        "org.apache.commons.text.beta.diff.EditScript#visit" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.beta.diff.InsertCommand" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.diff.InsertCommand#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.beta.diff.InsertCommand#accept" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.beta.diff.KeepCommand" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.diff.KeepCommand#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.beta.diff.KeepCommand#accept" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.beta.diff.ReplacementsFinder" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.diff.ReplacementsFinderTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.diff.ReplacementsHandler" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.diff.StringsComparator" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.diff.StringsComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.beta.diff.StringsComparator#buildScript" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.beta.diff.StringsComparator#buildSnake" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.beta.diff.StringsComparator#getMiddleSnake" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.beta.diff.StringsComparator#getScript" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.beta.diff.StringsComparator$Snake#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.beta.diff.StringsComparator$Snake#getDiag" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.beta.diff.StringsComparator$Snake#getEnd" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.beta.diff.StringsComparator$Snake#getStart" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.beta.diff.StringsComparatorTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.beta.diff.StringsComparatorTest#setUp" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.beta.diff.StringsComparatorTest#tearDown" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.beta.diff.StringsComparatorTest#testExecution" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.beta.diff.StringsComparatorTest#testLength" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testLength" ]
          }
        },
        "org.apache.commons.text.beta.diff.StringsComparatorTest#testLongestCommonSubsequence" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.beta.diff.StringsComparatorTest$ExecutionVisitor#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.beta.diff.StringsComparatorTest$ExecutionVisitor#getString" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.beta.diff.StringsComparatorTest$ExecutionVisitor#visitDeleteCommand" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.beta.diff.StringsComparatorTest$ExecutionVisitor#visitInsertCommand" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.beta.diff.StringsComparatorTest$ExecutionVisitor#visitKeepCommand" : {
          "testcases" : {
            "org.apache.commons.text.beta.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.beta.diff.package-info" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.package-info" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.similarity.CosineDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.similarity.CosineDistance#apply" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.beta.similarity.CosineDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.beta.similarity.CosineDistanceTest#roundValue" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.beta.similarity.CosineDistanceTest#testCosineDistance" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.beta.similarity.CosineSimilarity" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.similarity.CosineSimilarity#cosineSimilarity" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.beta.similarity.CosineSimilarity#dot" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.beta.similarity.CosineSimilarity#getIntersection" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.beta.similarity.Counter" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.similarity.Counter#of" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.beta.similarity.EditDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.similarity.EditDistanceFrom" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.similarity.EditDistanceFrom#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample", "testMissingMetric" ]
          }
        },
        "org.apache.commons.text.beta.similarity.EditDistanceFrom#apply" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample" ]
          }
        },
        "org.apache.commons.text.beta.similarity.FuzzyScore" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.similarity.FuzzyScore#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.FuzzyScoreTest" : [ "testMissingLocale" ]
          }
        },
        "org.apache.commons.text.beta.similarity.FuzzyScore#fuzzyScore" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore", "testGetFuzzyScore_NullNullLocale", "testGetFuzzyScore_NullStringLocale", "testGetFuzzyScore_StringNullLocale" ]
          }
        },
        "org.apache.commons.text.beta.similarity.FuzzyScoreTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore", "testGetFuzzyScore_NullNullLocale", "testGetFuzzyScore_NullStringLocale", "testGetFuzzyScore_StringNullLocale", "testMissingLocale" ]
          }
        },
        "org.apache.commons.text.beta.similarity.FuzzyScoreTest#testGetFuzzyScore" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore" ]
          }
        },
        "org.apache.commons.text.beta.similarity.FuzzyScoreTest#testGetFuzzyScore_NullNullLocale" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore_NullNullLocale" ]
          }
        },
        "org.apache.commons.text.beta.similarity.FuzzyScoreTest#testGetFuzzyScore_NullStringLocale" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore_NullStringLocale" ]
          }
        },
        "org.apache.commons.text.beta.similarity.FuzzyScoreTest#testGetFuzzyScore_StringNullLocale" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore_StringNullLocale" ]
          }
        },
        "org.apache.commons.text.beta.similarity.FuzzyScoreTest#testMissingLocale" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.FuzzyScoreTest" : [ "testMissingLocale" ]
          }
        },
        "org.apache.commons.text.beta.similarity.HammingDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.similarity.HammingDistance#apply" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.HammingDistanceTest" : [ "testHammingDistance", "testHammingDistance_nullLeftValue", "testHammingDistance_nullRightValue" ]
          }
        },
        "org.apache.commons.text.beta.similarity.HammingDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.HammingDistanceTest" : [ "testHammingDistance", "testHammingDistance_nullLeftValue", "testHammingDistance_nullRightValue" ]
          }
        },
        "org.apache.commons.text.beta.similarity.HammingDistanceTest#testHammingDistance" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.HammingDistanceTest" : [ "testHammingDistance" ]
          }
        },
        "org.apache.commons.text.beta.similarity.HammingDistanceTest#testHammingDistance_nullLeftValue" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.HammingDistanceTest" : [ "testHammingDistance_nullLeftValue" ]
          }
        },
        "org.apache.commons.text.beta.similarity.HammingDistanceTest#testHammingDistance_nullRightValue" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.HammingDistanceTest" : [ "testHammingDistance_nullRightValue" ]
          }
        },
        "org.apache.commons.text.beta.similarity.JaccardDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.similarity.JaccardDistance#apply" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistance", "testGettingJaccardDistanceNullNull", "testGettingJaccardDistanceNullString", "testGettingJaccardDistanceStringNull" ]
          }
        },
        "org.apache.commons.text.beta.similarity.JaccardDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistance", "testGettingJaccardDistanceNullNull", "testGettingJaccardDistanceNullString", "testGettingJaccardDistanceStringNull" ]
          }
        },
        "org.apache.commons.text.beta.similarity.JaccardDistanceTest#testGettingJaccardDistance" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistance" ]
          }
        },
        "org.apache.commons.text.beta.similarity.JaccardDistanceTest#testGettingJaccardDistanceNullNull" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistanceNullNull" ]
          }
        },
        "org.apache.commons.text.beta.similarity.JaccardDistanceTest#testGettingJaccardDistanceNullString" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistanceNullString" ]
          }
        },
        "org.apache.commons.text.beta.similarity.JaccardDistanceTest#testGettingJaccardDistanceStringNull" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistanceStringNull" ]
          }
        },
        "org.apache.commons.text.beta.similarity.JaccardSimilarity" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.similarity.JaccardSimilarity#apply" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistance" ],
            "org.apache.commons.text.beta.similarity.JaccardSimilarityTest" : [ "testGettingJaccardSimilarity", "testGettingJaccardSimilarityNullNull", "testGettingJaccardSimilarityNullString", "testGettingJaccardSimilarityStringNull" ]
          }
        },
        "org.apache.commons.text.beta.similarity.JaccardSimilarity#calculateJaccardSimilarity" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistance" ],
            "org.apache.commons.text.beta.similarity.JaccardSimilarityTest" : [ "testGettingJaccardSimilarity" ]
          }
        },
        "org.apache.commons.text.beta.similarity.JaccardSimilarityTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.JaccardSimilarityTest" : [ "testGettingJaccardSimilarity", "testGettingJaccardSimilarityNullNull", "testGettingJaccardSimilarityNullString", "testGettingJaccardSimilarityStringNull" ]
          }
        },
        "org.apache.commons.text.beta.similarity.JaccardSimilarityTest#testGettingJaccardSimilarity" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.JaccardSimilarityTest" : [ "testGettingJaccardSimilarity" ]
          }
        },
        "org.apache.commons.text.beta.similarity.JaccardSimilarityTest#testGettingJaccardSimilarityNullNull" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.JaccardSimilarityTest" : [ "testGettingJaccardSimilarityNullNull" ]
          }
        },
        "org.apache.commons.text.beta.similarity.JaccardSimilarityTest#testGettingJaccardSimilarityNullString" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.JaccardSimilarityTest" : [ "testGettingJaccardSimilarityNullString" ]
          }
        },
        "org.apache.commons.text.beta.similarity.JaccardSimilarityTest#testGettingJaccardSimilarityStringNull" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.JaccardSimilarityTest" : [ "testGettingJaccardSimilarityStringNull" ]
          }
        },
        "org.apache.commons.text.beta.similarity.JaroWinklerDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.similarity.JaroWinklerDistance#apply" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullNull", "testGetJaroWinklerDistance_NullString", "testGetJaroWinklerDistance_StringNull", "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.beta.similarity.JaroWinklerDistance#matches" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.beta.similarity.JaroWinklerDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullNull", "testGetJaroWinklerDistance_NullString", "testGetJaroWinklerDistance_StringNull", "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.beta.similarity.JaroWinklerDistanceTest#testGetJaroWinklerDistance_NullNull" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullNull" ]
          }
        },
        "org.apache.commons.text.beta.similarity.JaroWinklerDistanceTest#testGetJaroWinklerDistance_NullString" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullString" ]
          }
        },
        "org.apache.commons.text.beta.similarity.JaroWinklerDistanceTest#testGetJaroWinklerDistance_StringNull" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringNull" ]
          }
        },
        "org.apache.commons.text.beta.similarity.JaroWinklerDistanceTest#testGetJaroWinklerDistance_StringString" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistance#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest" : [ "testConstructorWithNegativeThreshold", "testEquals", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistance#apply" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals", "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistance#findDetailedResults" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistance#limitedCompare" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistance#unlimitedCompare" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals", "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest" : [ "testConstructorWithNegativeThreshold", "testEquals", "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest#testConstructorWithNegativeThreshold" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest" : [ "testConstructorWithNegativeThreshold" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest#testEquals" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_NullString" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_NullString" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_NullStringInt" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_NullStringInt" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_StringNull" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringNull" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_StringNullInt" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringNullInt" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_StringString" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringString" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_StringStringInt" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest#testHashCode" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest" : [ "testHashCode" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest#testToString" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest" : [ "testToString" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDistance#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDistanceTest" : [ "testConstructorWithNegativeThreshold", "testGetLevenshteinDistance_StringStringInt" ],
            "org.apache.commons.text.beta.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDistance#apply" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_NullString", "testGetLevenshteinDistance_NullStringInt", "testGetLevenshteinDistance_StringNull", "testGetLevenshteinDistance_StringNullInt", "testGetLevenshteinDistance_StringString", "testGetLevenshteinDistance_StringStringInt" ],
            "org.apache.commons.text.beta.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDistance#limitedCompare" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDistance#unlimitedCompare" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_NullString", "testGetLevenshteinDistance_NullStringInt", "testGetLevenshteinDistance_StringNull", "testGetLevenshteinDistance_StringNullInt", "testGetLevenshteinDistance_StringString" ],
            "org.apache.commons.text.beta.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDistanceTest" : [ "testConstructorWithNegativeThreshold", "testGetLevenshteinDistance_NullString", "testGetLevenshteinDistance_NullStringInt", "testGetLevenshteinDistance_StringNull", "testGetLevenshteinDistance_StringNullInt", "testGetLevenshteinDistance_StringString", "testGetLevenshteinDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDistanceTest#testConstructorWithNegativeThreshold" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDistanceTest" : [ "testConstructorWithNegativeThreshold" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDistanceTest#testGetLevenshteinDistance_NullString" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_NullString" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDistanceTest#testGetLevenshteinDistance_NullStringInt" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_NullStringInt" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDistanceTest#testGetLevenshteinDistance_StringNull" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_StringNull" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDistanceTest#testGetLevenshteinDistance_StringNullInt" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_StringNullInt" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDistanceTest#testGetLevenshteinDistance_StringString" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_StringString" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDistanceTest#testGetLevenshteinDistance_StringStringInt" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinResults" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinResults#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinResults#equals" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinResults#getDeleteCount" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinResults#getDistance" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinResults#getInsertCount" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinResults#getSubstituteCount" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinResults#hashCode" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest" : [ "testHashCode" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinResults#toString" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDetailedDistanceTest" : [ "testToString" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LongestCommonSubsequence" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.similarity.LongestCommonSubsequence#apply" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLogestCommonSubsequenceDistacne" ],
            "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceApplyNullNull", "testGettingLongestCommonSubsequenceApplyNullString", "testGettingLongestCommonSubsequenceApplyStringNull", "testLongestCommonSubsequenceApply" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LongestCommonSubsequence#logestCommonSubsequence" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLogestCommonSubsequenceDistacne" ],
            "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceNullNull", "testGettingLongestCommonSubsequenceNullString", "testGettingLongestCommonSubsequenceStringNull", "testLongestCommonSubsequence", "testLongestCommonSubsequenceApply" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LongestCommonSubsequence#longestCommonSubstringLengthArray" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLogestCommonSubsequenceDistacne" ],
            "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceTest" : [ "testLongestCommonSubsequence", "testLongestCommonSubsequenceApply" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceDistance#apply" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLogestCommonSubsequenceDistacne", "testGettingLongestCommonSubsequenceDistanceNullNull", "testGettingLongestCommonSubsequenceDistanceNullString", "testGettingLongestCommonSubsequenceDistanceStringNull" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLogestCommonSubsequenceDistacne", "testGettingLongestCommonSubsequenceDistanceNullNull", "testGettingLongestCommonSubsequenceDistanceNullString", "testGettingLongestCommonSubsequenceDistanceStringNull" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceDistanceTest#testGettingLogestCommonSubsequenceDistacne" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLogestCommonSubsequenceDistacne" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceDistanceTest#testGettingLongestCommonSubsequenceDistanceNullNull" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLongestCommonSubsequenceDistanceNullNull" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceDistanceTest#testGettingLongestCommonSubsequenceDistanceNullString" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLongestCommonSubsequenceDistanceNullString" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceDistanceTest#testGettingLongestCommonSubsequenceDistanceStringNull" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLongestCommonSubsequenceDistanceStringNull" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceApplyNullNull", "testGettingLongestCommonSubsequenceApplyNullString", "testGettingLongestCommonSubsequenceApplyStringNull", "testGettingLongestCommonSubsequenceNullNull", "testGettingLongestCommonSubsequenceNullString", "testGettingLongestCommonSubsequenceStringNull", "testLongestCommonSubsequence", "testLongestCommonSubsequenceApply" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceTest#testGettingLongestCommonSubsequenceApplyNullNull" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceApplyNullNull" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceTest#testGettingLongestCommonSubsequenceApplyNullString" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceApplyNullString" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceTest#testGettingLongestCommonSubsequenceApplyStringNull" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceApplyStringNull" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceTest#testGettingLongestCommonSubsequenceNullNull" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceNullNull" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceTest#testGettingLongestCommonSubsequenceNullString" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceNullString" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceTest#testGettingLongestCommonSubsequenceStringNull" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceStringNull" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceTest#testLongestCommonSubsequence" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceTest" : [ "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceTest#testLongestCommonSubsequenceApply" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LongestCommonSubsequenceTest" : [ "testLongestCommonSubsequenceApply" ]
          }
        },
        "org.apache.commons.text.beta.similarity.ParameterizedEditDistanceFromTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.similarity.ParameterizedLevenshteinDistanceTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.similarity.ParameterizedSimilarityScoreFromTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.similarity.RegexTokenizer" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.similarity.RegexTokenizer#tokenize" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.beta.similarity.SimilarityScore" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.similarity.SimilarityScoreFrom" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.similarity.StringMetricFromTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample", "testMissingMetric" ]
          }
        },
        "org.apache.commons.text.beta.similarity.StringMetricFromTest#testEquivalence" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.StringMetricFromTest" : [ "testEquivalence" ]
          }
        },
        "org.apache.commons.text.beta.similarity.StringMetricFromTest#testJavadocExample" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.StringMetricFromTest" : [ "testJavadocExample" ]
          }
        },
        "org.apache.commons.text.beta.similarity.StringMetricFromTest#testMissingMetric" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.StringMetricFromTest" : [ "testMissingMetric" ]
          }
        },
        "org.apache.commons.text.beta.similarity.Tokenizer" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.similarity.package-info" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.translate.AggregateTranslator" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.translate.AggregateTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.beta.translate.AggregateTranslatorTest" : [ "testNonNull", "testNullConstructor", "testNullVarargConstructor" ]
          }
        },
        "org.apache.commons.text.beta.translate.AggregateTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ],
            "org.apache.commons.text.beta.translate.AggregateTranslatorTest" : [ "testNonNull", "testNullConstructor", "testNullVarargConstructor" ]
          }
        },
        "org.apache.commons.text.beta.translate.AggregateTranslatorTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.AggregateTranslatorTest" : [ "testNonNull", "testNullConstructor", "testNullVarargConstructor" ]
          }
        },
        "org.apache.commons.text.beta.translate.AggregateTranslatorTest#testNonNull" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.AggregateTranslatorTest" : [ "testNonNull" ]
          }
        },
        "org.apache.commons.text.beta.translate.AggregateTranslatorTest#testNullConstructor" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.AggregateTranslatorTest" : [ "testNullConstructor" ]
          }
        },
        "org.apache.commons.text.beta.translate.AggregateTranslatorTest#testNullVarargConstructor" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.AggregateTranslatorTest" : [ "testNullVarargConstructor" ]
          }
        },
        "org.apache.commons.text.beta.translate.CharSequenceTranslator" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.translate.CharSequenceTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.beta.translate.AggregateTranslatorTest" : [ "testNonNull", "testNullConstructor", "testNullVarargConstructor" ],
            "org.apache.commons.text.beta.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ],
            "org.apache.commons.text.beta.translate.LookupTranslatorTest" : [ "testBasicLookup", "testLang882" ],
            "org.apache.commons.text.beta.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ],
            "org.apache.commons.text.beta.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ],
            "org.apache.commons.text.beta.translate.OctalUnescaperTest" : [ "testBetween" ],
            "org.apache.commons.text.beta.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ],
            "org.apache.commons.text.beta.translate.UnicodeUnescaperTest" : [ "testLessThanFour", "testUPlus", "testUuuuu" ]
          }
        },
        "org.apache.commons.text.beta.translate.CharSequenceTranslator#hex" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testLang708", "testLang911" ],
            "org.apache.commons.text.beta.translate.JavaUnicodeEscaperTest" : [ "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.beta.translate.CharSequenceTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.beta.translate.AggregateTranslatorTest" : [ "testNullConstructor", "testNullVarargConstructor" ],
            "org.apache.commons.text.beta.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ],
            "org.apache.commons.text.beta.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ],
            "org.apache.commons.text.beta.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ],
            "org.apache.commons.text.beta.translate.OctalUnescaperTest" : [ "testBetween" ],
            "org.apache.commons.text.beta.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ],
            "org.apache.commons.text.beta.translate.UnicodeUnescaperTest" : [ "testLessThanFour", "testUPlus", "testUuuuu" ]
          }
        },
        "org.apache.commons.text.beta.translate.CodePointTranslator" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.translate.CodePointTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.beta.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ],
            "org.apache.commons.text.beta.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ],
            "org.apache.commons.text.beta.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        },
        "org.apache.commons.text.beta.translate.CodePointTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeEcmaScript", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml10", "testEscapeXml11", "testLang708", "testLang911", "testUnescapeJava" ],
            "org.apache.commons.text.beta.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ],
            "org.apache.commons.text.beta.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ],
            "org.apache.commons.text.beta.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        },
        "org.apache.commons.text.beta.translate.CsvTranslators" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.translate.CsvTranslators#access$000" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeCsvString", "testEscapeCsvWriter", "testUnescapeCsvString", "testUnescapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.beta.translate.CsvTranslators#access$100" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeCsvString", "testEscapeCsvWriter", "testUnescapeCsvString", "testUnescapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.beta.translate.CsvTranslators#access$200" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeCsvString", "testEscapeCsvWriter", "testUnescapeCsvString", "testUnescapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.beta.translate.CsvTranslators$CsvEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.beta.translate.CsvTranslators$CsvEscaper#translateWhole" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeCsvString", "testEscapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.beta.translate.CsvTranslators$CsvUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.beta.translate.CsvTranslators$CsvUnescaper#translateWhole" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testUnescapeCsvString", "testUnescapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.beta.translate.EntityArrays" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.translate.EntityArrays#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.EntityArraysTest" : [ "testConstructorExists" ]
          }
        },
        "org.apache.commons.text.beta.translate.EntityArrays#invert" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.beta.translate.EntityArraysTest" : [ "testAposMap", "testBasicMap", "testConstructorExists", "testForDuplicateDeclaredMapValuesAposMap", "testForDuplicateDeclaredMapValuesBasicMap", "testForDuplicateDeclaredMapValuesHtml40ExtendedMap", "testForDuplicateDeclaredMapValuesISO8859Map", "testForDuplicateDeclaredMapValuesJavaCtrlCharsMap", "testForDuplicatedDeclaredMapKeys", "testHtml40ExtendedMap", "testISO8859Map", "testJavaCntrlCharsMap" ]
          }
        },
        "org.apache.commons.text.beta.translate.EntityArraysTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.EntityArraysTest" : [ "testAposMap", "testBasicMap", "testConstructorExists", "testForDuplicateDeclaredMapValuesAposMap", "testForDuplicateDeclaredMapValuesBasicMap", "testForDuplicateDeclaredMapValuesHtml40ExtendedMap", "testForDuplicateDeclaredMapValuesISO8859Map", "testForDuplicateDeclaredMapValuesJavaCtrlCharsMap", "testForDuplicatedDeclaredMapKeys", "testHtml40ExtendedMap", "testISO8859Map", "testJavaCntrlCharsMap" ]
          }
        },
        "org.apache.commons.text.beta.translate.EntityArraysTest#testAposMap" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.EntityArraysTest" : [ "testAposMap" ]
          }
        },
        "org.apache.commons.text.beta.translate.EntityArraysTest#testBasicMap" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.EntityArraysTest" : [ "testBasicMap" ]
          }
        },
        "org.apache.commons.text.beta.translate.EntityArraysTest#testConstructorExists" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.EntityArraysTest" : [ "testConstructorExists" ]
          }
        },
        "org.apache.commons.text.beta.translate.EntityArraysTest#testEscapeVsUnescapeMaps" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.EntityArraysTest" : [ "testAposMap", "testBasicMap", "testHtml40ExtendedMap", "testISO8859Map", "testJavaCntrlCharsMap" ]
          }
        },
        "org.apache.commons.text.beta.translate.EntityArraysTest#testForDuplicateDeclaredMapValuesAposMap" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.EntityArraysTest" : [ "testForDuplicateDeclaredMapValuesAposMap" ]
          }
        },
        "org.apache.commons.text.beta.translate.EntityArraysTest#testForDuplicateDeclaredMapValuesBasicMap" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.EntityArraysTest" : [ "testForDuplicateDeclaredMapValuesBasicMap" ]
          }
        },
        "org.apache.commons.text.beta.translate.EntityArraysTest#testForDuplicateDeclaredMapValuesHtml40ExtendedMap" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.EntityArraysTest" : [ "testForDuplicateDeclaredMapValuesHtml40ExtendedMap" ]
          }
        },
        "org.apache.commons.text.beta.translate.EntityArraysTest#testForDuplicateDeclaredMapValuesISO8859Map" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.EntityArraysTest" : [ "testForDuplicateDeclaredMapValuesISO8859Map" ]
          }
        },
        "org.apache.commons.text.beta.translate.EntityArraysTest#testForDuplicateDeclaredMapValuesJavaCtrlCharsMap" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.EntityArraysTest" : [ "testForDuplicateDeclaredMapValuesJavaCtrlCharsMap" ]
          }
        },
        "org.apache.commons.text.beta.translate.EntityArraysTest#testForDuplicatedDeclaredMapKeys" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.EntityArraysTest" : [ "testForDuplicatedDeclaredMapKeys" ]
          }
        },
        "org.apache.commons.text.beta.translate.EntityArraysTest#testHtml40ExtendedMap" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.EntityArraysTest" : [ "testHtml40ExtendedMap" ]
          }
        },
        "org.apache.commons.text.beta.translate.EntityArraysTest#testISO8859Map" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.EntityArraysTest" : [ "testISO8859Map" ]
          }
        },
        "org.apache.commons.text.beta.translate.EntityArraysTest#testJavaCntrlCharsMap" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.EntityArraysTest" : [ "testJavaCntrlCharsMap" ]
          }
        },
        "org.apache.commons.text.beta.translate.JavaUnicodeEscaper" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.translate.JavaUnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.beta.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.beta.translate.JavaUnicodeEscaper#above" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.JavaUnicodeEscaperTest" : [ "testAbove" ]
          }
        },
        "org.apache.commons.text.beta.translate.JavaUnicodeEscaper#below" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.JavaUnicodeEscaperTest" : [ "testBelow", "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.beta.translate.JavaUnicodeEscaper#between" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.JavaUnicodeEscaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.beta.translate.JavaUnicodeEscaper#outsideOf" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.beta.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.beta.translate.JavaUnicodeEscaper#toUtf16Escape" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testLang708", "testLang911" ],
            "org.apache.commons.text.beta.translate.JavaUnicodeEscaperTest" : [ "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.beta.translate.JavaUnicodeEscaperTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.beta.translate.JavaUnicodeEscaperTest#testAbove" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.JavaUnicodeEscaperTest" : [ "testAbove" ]
          }
        },
        "org.apache.commons.text.beta.translate.JavaUnicodeEscaperTest#testBelow" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.JavaUnicodeEscaperTest" : [ "testBelow" ]
          }
        },
        "org.apache.commons.text.beta.translate.JavaUnicodeEscaperTest#testBetween" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.JavaUnicodeEscaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.beta.translate.JavaUnicodeEscaperTest#testToUtf16Escape" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.JavaUnicodeEscaperTest" : [ "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.beta.translate.LookupTranslator" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.translate.LookupTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.beta.translate.AggregateTranslatorTest" : [ "testNonNull" ],
            "org.apache.commons.text.beta.translate.LookupTranslatorTest" : [ "testBasicLookup", "testLang882" ]
          }
        },
        "org.apache.commons.text.beta.translate.LookupTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ],
            "org.apache.commons.text.beta.translate.AggregateTranslatorTest" : [ "testNonNull" ],
            "org.apache.commons.text.beta.translate.LookupTranslatorTest" : [ "testBasicLookup", "testLang882" ]
          }
        },
        "org.apache.commons.text.beta.translate.LookupTranslatorTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.LookupTranslatorTest" : [ "testBasicLookup", "testLang882" ]
          }
        },
        "org.apache.commons.text.beta.translate.LookupTranslatorTest#testBasicLookup" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.LookupTranslatorTest" : [ "testBasicLookup" ]
          }
        },
        "org.apache.commons.text.beta.translate.LookupTranslatorTest#testLang882" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.LookupTranslatorTest" : [ "testLang882" ]
          }
        },
        "org.apache.commons.text.beta.translate.NumericEntityEscaper" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.translate.NumericEntityEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.beta.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ]
          }
        },
        "org.apache.commons.text.beta.translate.NumericEntityEscaper#above" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.NumericEntityEscaperTest" : [ "testAbove" ]
          }
        },
        "org.apache.commons.text.beta.translate.NumericEntityEscaper#below" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.NumericEntityEscaperTest" : [ "testBelow" ]
          }
        },
        "org.apache.commons.text.beta.translate.NumericEntityEscaper#between" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.beta.translate.NumericEntityEscaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.beta.translate.NumericEntityEscaper#outsideOf" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow" ]
          }
        },
        "org.apache.commons.text.beta.translate.NumericEntityEscaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeXml10", "testEscapeXml11" ],
            "org.apache.commons.text.beta.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ]
          }
        },
        "org.apache.commons.text.beta.translate.NumericEntityEscaperTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ]
          }
        },
        "org.apache.commons.text.beta.translate.NumericEntityEscaperTest#testAbove" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.NumericEntityEscaperTest" : [ "testAbove" ]
          }
        },
        "org.apache.commons.text.beta.translate.NumericEntityEscaperTest#testBelow" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.NumericEntityEscaperTest" : [ "testBelow" ]
          }
        },
        "org.apache.commons.text.beta.translate.NumericEntityEscaperTest#testBetween" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.NumericEntityEscaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.beta.translate.NumericEntityEscaperTest#testSupplementary" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.NumericEntityEscaperTest" : [ "testSupplementary" ]
          }
        },
        "org.apache.commons.text.beta.translate.NumericEntityUnescaper" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.translate.NumericEntityUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.beta.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ]
          }
        },
        "org.apache.commons.text.beta.translate.NumericEntityUnescaper#isSet" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testUnescapeHtml4" ],
            "org.apache.commons.text.beta.translate.NumericEntityUnescaperTest" : [ "testUnfinishedEntity" ]
          }
        },
        "org.apache.commons.text.beta.translate.NumericEntityUnescaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeHiragana", "testEscapeHtmlHighUnicode", "testLang313", "testStandaloneAmphersand", "testUnescapeHtml4", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ],
            "org.apache.commons.text.beta.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ]
          }
        },
        "org.apache.commons.text.beta.translate.NumericEntityUnescaperTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ]
          }
        },
        "org.apache.commons.text.beta.translate.NumericEntityUnescaperTest#testOutOfBounds" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds" ]
          }
        },
        "org.apache.commons.text.beta.translate.NumericEntityUnescaperTest#testSupplementaryUnescaping" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.NumericEntityUnescaperTest" : [ "testSupplementaryUnescaping" ]
          }
        },
        "org.apache.commons.text.beta.translate.NumericEntityUnescaperTest#testUnfinishedEntity" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.NumericEntityUnescaperTest" : [ "testUnfinishedEntity" ]
          }
        },
        "org.apache.commons.text.beta.translate.OctalUnescaper" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.translate.OctalUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.beta.translate.OctalUnescaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.beta.translate.OctalUnescaper#isOctalDigit" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ],
            "org.apache.commons.text.beta.translate.OctalUnescaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.beta.translate.OctalUnescaper#isZeroToThree" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.OctalUnescaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.beta.translate.OctalUnescaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ],
            "org.apache.commons.text.beta.translate.OctalUnescaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.beta.translate.OctalUnescaperTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.OctalUnescaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.beta.translate.OctalUnescaperTest#testBetween" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.OctalUnescaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.beta.translate.SingleLookupTranslator" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.translate.SingleLookupTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.beta.translate.SingleLookupTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeHtml3Once", "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.beta.translate.SinglePassTranslator" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.translate.SinglePassTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.beta.translate.SinglePassTranslator#getClassName" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.SinglePassTranslatorTest" : [ "indexIsValidated" ]
          }
        },
        "org.apache.commons.text.beta.translate.SinglePassTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeCsvString", "testEscapeCsvWriter", "testUnescapeCsvString", "testUnescapeCsvWriter" ],
            "org.apache.commons.text.beta.translate.SinglePassTranslatorTest" : [ "codePointsAreReturned", "indexIsValidated" ]
          }
        },
        "org.apache.commons.text.beta.translate.SinglePassTranslatorTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.SinglePassTranslatorTest" : [ "codePointsAreReturned", "indexIsValidated" ]
          }
        },
        "org.apache.commons.text.beta.translate.SinglePassTranslatorTest#before" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.SinglePassTranslatorTest" : [ "codePointsAreReturned", "indexIsValidated" ]
          }
        },
        "org.apache.commons.text.beta.translate.SinglePassTranslatorTest#codePointsAreReturned" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.SinglePassTranslatorTest" : [ "codePointsAreReturned" ]
          }
        },
        "org.apache.commons.text.beta.translate.SinglePassTranslatorTest#indexIsValidated" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.SinglePassTranslatorTest" : [ "indexIsValidated" ]
          }
        },
        "org.apache.commons.text.beta.translate.UnicodeEscaper" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.translate.UnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.beta.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ],
            "org.apache.commons.text.beta.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        },
        "org.apache.commons.text.beta.translate.UnicodeEscaper#above" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.UnicodeEscaperTest" : [ "testAbove" ]
          }
        },
        "org.apache.commons.text.beta.translate.UnicodeEscaper#below" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.UnicodeEscaperTest" : [ "testBelow" ]
          }
        },
        "org.apache.commons.text.beta.translate.UnicodeEscaper#between" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.UnicodeEscaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.beta.translate.UnicodeEscaper#outsideOf" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow" ]
          }
        },
        "org.apache.commons.text.beta.translate.UnicodeEscaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeEcmaScript", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testLang708", "testLang911", "testUnescapeJava" ],
            "org.apache.commons.text.beta.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ],
            "org.apache.commons.text.beta.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        },
        "org.apache.commons.text.beta.translate.UnicodeEscaperTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        },
        "org.apache.commons.text.beta.translate.UnicodeEscaperTest#testAbove" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.UnicodeEscaperTest" : [ "testAbove" ]
          }
        },
        "org.apache.commons.text.beta.translate.UnicodeEscaperTest#testBelow" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.UnicodeEscaperTest" : [ "testBelow" ]
          }
        },
        "org.apache.commons.text.beta.translate.UnicodeEscaperTest#testBetween" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.UnicodeEscaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.beta.translate.UnicodeUnescaper" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.translate.UnicodeUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.beta.translate.UnicodeUnescaperTest" : [ "testLessThanFour", "testUPlus", "testUuuuu" ]
          }
        },
        "org.apache.commons.text.beta.translate.UnicodeUnescaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ],
            "org.apache.commons.text.beta.translate.UnicodeUnescaperTest" : [ "testLessThanFour", "testUPlus", "testUuuuu" ]
          }
        },
        "org.apache.commons.text.beta.translate.UnicodeUnescaperTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.UnicodeUnescaperTest" : [ "testLessThanFour", "testUPlus", "testUuuuu" ]
          }
        },
        "org.apache.commons.text.beta.translate.UnicodeUnescaperTest#testLessThanFour" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.UnicodeUnescaperTest" : [ "testLessThanFour" ]
          }
        },
        "org.apache.commons.text.beta.translate.UnicodeUnescaperTest#testUPlus" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.UnicodeUnescaperTest" : [ "testUPlus" ]
          }
        },
        "org.apache.commons.text.beta.translate.UnicodeUnescaperTest#testUuuuu" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.UnicodeUnescaperTest" : [ "testUuuuu" ]
          }
        },
        "org.apache.commons.text.beta.translate.UnicodeUnpairedSurrogateRemover" : {
          "testcases" : { }
        },
        "org.apache.commons.text.beta.translate.UnicodeUnpairedSurrogateRemover#<init>" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.beta.translate.UnicodeUnpairedSurrogateRemover#translate" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeXml10", "testEscapeXml11" ],
            "org.apache.commons.text.beta.translate.UnicodeUnpairedSurrogateRemoverTest" : [ "testInvalidCharacters", "testValidCharacters" ]
          }
        },
        "org.apache.commons.text.beta.translate.UnicodeUnpairedSurrogateRemoverTest" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.UnicodeUnpairedSurrogateRemoverTest" : [ "testInvalidCharacters", "testValidCharacters" ]
          }
        },
        "org.apache.commons.text.beta.translate.UnicodeUnpairedSurrogateRemoverTest#testInvalidCharacters" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.UnicodeUnpairedSurrogateRemoverTest" : [ "testInvalidCharacters" ]
          }
        },
        "org.apache.commons.text.beta.translate.UnicodeUnpairedSurrogateRemoverTest#testValidCharacters" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.UnicodeUnpairedSurrogateRemoverTest" : [ "testValidCharacters" ]
          }
        },
        "org.apache.commons.text.beta.translate.package-info" : {
          "testcases" : { }
        }
      }
    },
    "629c0a7eea68f8b6d69f82df556a97b82a77ae89" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "629c0a7eea68f8b6d69f82df556a97b82a77ae89~1",
      "changedClazzes" : {
        "org.apache.commons.text.beta.StrTokenizer#reset(char[])" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNull", "testCloneReset", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.beta.translate.EntityArrays#invert(Map)" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.beta.translate.EntityArraysTest" : [ "testAposMap", "testBasicMap", "testConstructorExists", "testForDuplicateDeclaredMapValuesAposMap", "testForDuplicateDeclaredMapValuesBasicMap", "testForDuplicateDeclaredMapValuesHtml40ExtendedMap", "testForDuplicateDeclaredMapValuesISO8859Map", "testForDuplicateDeclaredMapValuesJavaCtrlCharsMap", "testForDuplicatedDeclaredMapKeys", "testHtml40ExtendedMap", "testISO8859Map", "testJavaCntrlCharsMap" ]
          }
        },
        "org.apache.commons.text.beta.translate.LookupTranslator#<init>(Map)" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.beta.translate.AggregateTranslatorTest" : [ "testNonNull" ],
            "org.apache.commons.text.beta.translate.LookupTranslatorTest" : [ "testBasicLookup", "testLang882" ]
          }
        },
        "org.apache.commons.text.beta.translate.SingleLookupTranslator#<init>(Map[])" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.beta.translate.SingleLookupTranslator#translate(CharSequence,int,Writer)" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testEscapeHtml3Once", "testEscapeHtml4Once" ]
          }
        }
      }
    },
    "fb65bb67e345ccaa479c1172ae3b94baac9cb691" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "fb65bb67e345ccaa479c1172ae3b94baac9cb691~1",
      "changedClazzes" : {
        "org.apache.commons.text.beta.AlphabetConverter#createConverter(Integer[],Integer[],Integer[])" : {
          "testcases" : {
            "org.apache.commons.text.beta.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.beta.AlphabetConverter#decode(String)" : {
          "testcases" : {
            "org.apache.commons.text.beta.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.beta.FormattableUtils#append(CharSequence,Formatter,int,int,int,char,CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.beta.FormattableUtilsTest" : [ "testAlternatePadCharAndEllipsis", "testAlternatePadCharacter", "testDefaultAppend", "testEllipsis", "testIllegalEllipsis" ]
          }
        }
      }
    },
    "cc4df476285fb580bcb98571663e07a4558e96e9" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "cc4df476285fb580bcb98571663e07a4558e96e9~1",
      "changedClazzes" : {
        "org.apache.commons.text.beta.FormattableUtils#append(CharSequence,Formatter,int,int,int,char,CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.beta.FormattableUtilsTest" : [ "testAlternatePadCharAndEllipsis", "testAlternatePadCharacter", "testDefaultAppend", "testEllipsis", "testIllegalEllipsis" ]
          }
        }
      }
    },
    "c8c189a87798e31df0baf1f2c1db45a4822f6328" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c8c189a87798e31df0baf1f2c1db45a4822f6328~1",
      "changedClazzes" : {
        "org.apache.commons.text.beta.StrBuilder#equals(StrBuilder)" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testEquals", "test_LANG_1131_EqualsWithNullStrBuilder" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#equalsIgnoreCase(StrBuilder)" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testEqualsIgnoreCase" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#hashCode" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testHashCode" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#toCharArray" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testToCharArray", "testToCharArrayIntInt" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder#toCharArray(int,int)" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testToCharArray", "testToCharArrayIntInt" ]
          }
        },
        "org.apache.commons.text.beta.StrBuilder$StrBuilderReader#read" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.beta.StringEscapeUtils$Builder" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.beta.similarity.LevenshteinDistance#unlimitedCompare(CharSequence,CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_NullString", "testGetLevenshteinDistance_NullStringInt", "testGetLevenshteinDistance_StringNull", "testGetLevenshteinDistance_StringNullInt", "testGetLevenshteinDistance_StringString" ],
            "org.apache.commons.text.beta.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample" ]
          }
        }
      }
    },
    "72733aea2fa536d98804ee09358fa50ca9ce41a8" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "72733aea2fa536d98804ee09358fa50ca9ce41a8~1",
      "changedClazzes" : {
        "org.apache.commons.text.beta.translate.EntityArrays" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.beta.translate.EntityArraysTest" : [ "testAposMap", "testBasicMap", "testConstructorExists", "testForDuplicateDeclaredMapValuesAposMap", "testForDuplicateDeclaredMapValuesBasicMap", "testForDuplicateDeclaredMapValuesHtml40ExtendedMap", "testForDuplicateDeclaredMapValuesISO8859Map", "testForDuplicateDeclaredMapValuesJavaCtrlCharsMap", "testForDuplicatedDeclaredMapKeys", "testHtml40ExtendedMap", "testISO8859Map", "testJavaCntrlCharsMap" ]
          }
        },
        "org.apache.commons.text.beta.translate.EntityArraysTest#testForDuplicatedDeclaredMapKeys" : {
          "testcases" : {
            "org.apache.commons.text.beta.translate.EntityArraysTest" : [ "testForDuplicatedDeclaredMapKeys" ]
          }
        },
        "org.apache.commons.text.beta.translate.LookupTranslator" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.beta.translate.AggregateTranslatorTest" : [ "testNonNull" ],
            "org.apache.commons.text.beta.translate.LookupTranslatorTest" : [ "testBasicLookup", "testLang882" ]
          }
        },
        "org.apache.commons.text.beta.translate.SingleLookupTranslator" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.beta.translate.SinglePassTranslator" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.beta.translate.SinglePassTranslatorTest" : [ "codePointsAreReturned", "indexIsValidated" ]
          }
        }
      }
    },
    "6c19c2cca0127ca9ed1323ccca8ece2240c28d11" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6c19c2cca0127ca9ed1323ccca8ece2240c28d11~1",
      "changedClazzes" : {
        "org.apache.commons.text.beta.translate.SingleLookupTranslator#<init>(Map[])" : {
          "testcases" : {
            "org.apache.commons.text.beta.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        }
      }
    },
    "13e5051de1db3c8bd1a82127be165bb8bf03d27f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "13e5051de1db3c8bd1a82127be165bb8bf03d27f~1",
      "changedClazzes" : {
        "org.apache.commons.text.beta.similarity.JaroWinklerDistance" : {
          "testcases" : {
            "org.apache.commons.text.beta.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullNull", "testGetJaroWinklerDistance_NullString", "testGetJaroWinklerDistance_StringNull", "testGetJaroWinklerDistance_StringString" ]
          }
        }
      }
    },
    "5066ac6f1ce5dfd729e8269d10680f23103e404a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5066ac6f1ce5dfd729e8269d10680f23103e404a~1",
      "changedClazzes" : {
        "org.apache.commons.text.beta.StrBuilder" : {
          "testcases" : {
            "org.apache.commons.text.beta.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText", "testLang299" ],
            "org.apache.commons.text.beta.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testGetSetNewLineText", "testGetSetNullText", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLang412Left", "testLang412Right", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim", "test_LANG_1131_EqualsWithNullStrBuilder" ],
            "org.apache.commons.text.beta.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.beta.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        }
      }
    },
    "c7cf533d2f1e22624d8210194ade266e97e6f7a0" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c7cf533d2f1e22624d8210194ade266e97e6f7a0~1",
      "changedClazzes" : {
        "org.apache.commons.text.AlphabetConverter" : {
          "testcases" : { }
        },
        "org.apache.commons.text.AlphabetConverter#<init>" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#addSingleEncoding" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#codePointToString" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#convertCharsToIntegers" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#createConverter" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#createConverterFromChars" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#createConverterFromMap" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#decode" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#encode" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#equals" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#getEncodedCharLength" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "unicodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#getOriginalToEncoded" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#hashCode" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#toString" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#binaryTest" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#createJavadocExample" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "javadocExampleTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#doNotEncodeTest" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "doNotEncodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#hebrewTest" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "hebrewTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#javadocExampleTest" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "javadocExampleTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#test" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#unicodeTest" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "unicodeTest" ]
          }
        },
        "org.apache.commons.text.Builder" : {
          "testcases" : { }
        },
        "org.apache.commons.text.CharacterPredicate" : {
          "testcases" : { }
        },
        "org.apache.commons.text.CharacterPredicates" : {
          "testcases" : { }
        },
        "org.apache.commons.text.CharacterPredicatesTest" : {
          "testcases" : {
            "org.apache.commons.text.CharacterPredicatesTest" : [ "testDigits", "testLetters" ]
          }
        },
        "org.apache.commons.text.CharacterPredicatesTest#testDigits" : {
          "testcases" : {
            "org.apache.commons.text.CharacterPredicatesTest" : [ "testDigits" ]
          }
        },
        "org.apache.commons.text.CharacterPredicatesTest#testLetters" : {
          "testcases" : {
            "org.apache.commons.text.CharacterPredicatesTest" : [ "testLetters" ]
          }
        },
        "org.apache.commons.text.CompositeFormat" : {
          "testcases" : { }
        },
        "org.apache.commons.text.CompositeFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.CompositeFormatTest" : [ "testCompositeFormat", "testUsage" ]
          }
        },
        "org.apache.commons.text.CompositeFormat#format" : {
          "testcases" : {
            "org.apache.commons.text.CompositeFormatTest" : [ "testCompositeFormat", "testUsage" ]
          }
        },
        "org.apache.commons.text.CompositeFormat#getFormatter" : {
          "testcases" : {
            "org.apache.commons.text.CompositeFormatTest" : [ "testCompositeFormat" ]
          }
        },
        "org.apache.commons.text.CompositeFormat#getParser" : {
          "testcases" : {
            "org.apache.commons.text.CompositeFormatTest" : [ "testCompositeFormat" ]
          }
        },
        "org.apache.commons.text.CompositeFormat#parseObject" : {
          "testcases" : {
            "org.apache.commons.text.CompositeFormatTest" : [ "testCompositeFormat", "testUsage" ]
          }
        },
        "org.apache.commons.text.CompositeFormat#reformat" : {
          "testcases" : {
            "org.apache.commons.text.CompositeFormatTest" : [ "testUsage" ]
          }
        },
        "org.apache.commons.text.CompositeFormatTest" : {
          "testcases" : {
            "org.apache.commons.text.CompositeFormatTest" : [ "testCompositeFormat", "testUsage" ]
          }
        },
        "org.apache.commons.text.CompositeFormatTest#testCompositeFormat" : {
          "testcases" : {
            "org.apache.commons.text.CompositeFormatTest" : [ "testCompositeFormat" ]
          }
        },
        "org.apache.commons.text.CompositeFormatTest#testUsage" : {
          "testcases" : {
            "org.apache.commons.text.CompositeFormatTest" : [ "testUsage" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat" : {
          "testcases" : { }
        },
        "org.apache.commons.text.ExtendedMessageFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat", "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#appendQuotedString" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#applyPattern" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat", "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#containsElements" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#equals" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEqualsHashcode" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#getFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#hashCode" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEqualsHashcode" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#insertFormats" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#next" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#parseFormatDescription" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#readArgumentIndex" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#seekNonWs" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#setFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testSetFormatIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#setFormatByArgumentIndex" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testSetFormatByArgumentIndexIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#setFormats" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#setFormatsByArgumentIndex" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testSetFormatsByArgumentIndex" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#toPattern" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat", "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#checkBuiltInFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#createMessageFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testExtendedAndBuiltInFormats", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#setUp" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat", "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testBuiltInChoiceFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testBuiltInDateTimeFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInDateTimeFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testBuiltInNumberFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInNumberFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testEmbeddedPatternInChoice" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testEqualsHashcode" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEqualsHashcode" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testEscapedBraces_LANG_948" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEscapedBraces_LANG_948" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testEscapedQuote_LANG_477" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEscapedQuote_LANG_477" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testExtendedAndBuiltInFormats" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testExtendedAndBuiltInFormats" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testExtendedFormats" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testExtendedFormats" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testOverriddenBuiltinFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testSetFormatByArgumentIndexIsUnsupported" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testSetFormatByArgumentIndexIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testSetFormatIsUnsupported" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testSetFormatIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testSetFormatsByArgumentIndex" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testSetFormatsByArgumentIndex" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testSetFormatsIsUnsupported" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$LowerCaseFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat", "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$LowerCaseFormat#format" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEscapedQuote_LANG_477", "testExtendedFormats" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$LowerCaseFormatFactory#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat", "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$LowerCaseFormatFactory#getFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedQuote_LANG_477", "testExtendedFormats" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$OtherExtendedMessageFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEqualsHashcode" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$OverrideShortDateFormatFactory#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$OverrideShortDateFormatFactory#getFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$UpperCaseFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat", "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$UpperCaseFormat#format" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testExtendedAndBuiltInFormats", "testExtendedFormats" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$UpperCaseFormatFactory#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat", "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$UpperCaseFormatFactory#getFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testExtendedAndBuiltInFormats", "testExtendedFormats" ]
          }
        },
        "org.apache.commons.text.FormatFactory" : {
          "testcases" : { }
        },
        "org.apache.commons.text.FormattableUtils" : {
          "testcases" : { }
        },
        "org.apache.commons.text.FormattableUtils#<init>" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testPublicConstructorExists" ]
          }
        },
        "org.apache.commons.text.FormattableUtils#append" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testAlternatePadCharAndEllipsis", "testAlternatePadCharacter", "testDefaultAppend", "testEllipsis", "testIllegalEllipsis" ]
          }
        },
        "org.apache.commons.text.FormattableUtils#toString" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testSimplestFormat" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testAlternatePadCharAndEllipsis", "testAlternatePadCharacter", "testDefaultAppend", "testEllipsis", "testIllegalEllipsis", "testPublicConstructorExists", "testSimplestFormat" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest#testAlternatePadCharAndEllipsis" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testAlternatePadCharAndEllipsis" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest#testAlternatePadCharacter" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testAlternatePadCharacter" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest#testDefaultAppend" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testDefaultAppend" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest#testEllipsis" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testEllipsis" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest#testIllegalEllipsis" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testIllegalEllipsis" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest#testPublicConstructorExists" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testPublicConstructorExists" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest#testSimplestFormat" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testSimplestFormat" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest$SimplestFormattable#<init>" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testSimplestFormat" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest$SimplestFormattable#formatTo" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testSimplestFormat" ]
          }
        },
        "org.apache.commons.text.StrBuilder" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrBuilder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText", "testLang299" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testGetSetNewLineText", "testGetSetNullText", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLang412Left", "testLang412Right", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim", "test_LANG_1131_EqualsWithNullStrBuilder" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrBuilder#append" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBufferAppendsToEnd", "testReadFromReadableAppendsToEnd", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrBuilder#appendAll" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAsBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilder#appendFixedWidthPadLeft" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testLang412Left" ]
          }
        },
        "org.apache.commons.text.StrBuilder#appendFixedWidthPadRight" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testLang299" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testLang412Right" ]
          }
        },
        "org.apache.commons.text.StrBuilder#appendNewLine" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendNewLine", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int" ]
          }
        },
        "org.apache.commons.text.StrBuilder#appendNull" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_Object", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Object" ]
          }
        },
        "org.apache.commons.text.StrBuilder#appendPadding" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendPadding" ]
          }
        },
        "org.apache.commons.text.StrBuilder#appendSeparator" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int" ]
          }
        },
        "org.apache.commons.text.StrBuilder#appendTo" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter" ]
          }
        },
        "org.apache.commons.text.StrBuilder#appendWithSeparators" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testCyclicReplacement" ]
          }
        },
        "org.apache.commons.text.StrBuilder#appendln" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int" ]
          }
        },
        "org.apache.commons.text.StrBuilder#asReader" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.StrBuilder#asTokenizer" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrBuilder#asWriter" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsWriter" ]
          }
        },
        "org.apache.commons.text.StrBuilder#build" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilder#capacity" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testCapacity", "testCapacityAndLength", "testConstructors", "testEnsureCapacity", "testMinimizeCapacity" ]
          }
        },
        "org.apache.commons.text.StrBuilder#charAt" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsReader", "testCharAt" ]
          }
        },
        "org.apache.commons.text.StrBuilder#clear" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppendln_Boolean", "testAppendln_PrimitiveNumber", "testInsert", "testInsertWithNullText" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer", "testCapacityAndLength", "testChaining", "testClear", "testEquals", "testEqualsIgnoreCase", "testIsEmpty", "testReverse", "testTrim" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrBuilder#contains" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testContains_StrMatcher", "testContains_String", "testContains_char", "testLang295" ]
          }
        },
        "org.apache.commons.text.StrBuilder#delete" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteIntInt", "testTrim" ]
          }
        },
        "org.apache.commons.text.StrBuilder#deleteAll" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testLang294" ]
          }
        },
        "org.apache.commons.text.StrBuilder#deleteCharAt" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteCharAt" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testReplaceComplexEscaping", "testReplaceEscaping", "testReplaceSoloEscaping", "testReplaceToIdentical", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrBuilder#deleteFirst" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testIndexOfLang294", "testLang295" ]
          }
        },
        "org.apache.commons.text.StrBuilder#deleteImpl" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testIndexOfLang294", "testLang294", "testLang295", "testTrim" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testReplaceComplexEscaping", "testReplaceEscaping", "testReplaceSoloEscaping", "testReplaceToIdentical", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrBuilder#endsWith" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testEndsWith" ]
          }
        },
        "org.apache.commons.text.StrBuilder#ensureCapacity" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText", "testLang299" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLang412Left", "testLang412Right", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrBuilder#equals" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testEquals", "test_LANG_1131_EqualsWithNullStrBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilder#equalsIgnoreCase" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testEqualsIgnoreCase" ]
          }
        },
        "org.apache.commons.text.StrBuilder#getChars" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_StrBuilder_int_int", "testAppendln_StrBuilder_int_int" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAsReader", "testGetChars", "testGetCharsIntIntCharArrayInt" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceToIdentical", "testReplaceUnknownKey" ]
          }
        },
        "org.apache.commons.text.StrBuilder#getNewLineText" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testGetSetNewLineText" ]
          }
        },
        "org.apache.commons.text.StrBuilder#getNullText" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadRight" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testGetSetNullText", "testLang412Left", "testLang412Right" ]
          }
        },
        "org.apache.commons.text.StrBuilder#hashCode" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testHashCode" ]
          }
        },
        "org.apache.commons.text.StrBuilder#indexOf" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testContains_StrMatcher", "testContains_String", "testDeleteAll_String", "testDeleteFirst_String", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testLang294", "testLang295", "testReplaceAll_String_String", "testReplaceFirst_String_String" ]
          }
        },
        "org.apache.commons.text.StrBuilder#insert" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testInsert", "testInsertWithNullText" ]
          }
        },
        "org.apache.commons.text.StrBuilder#isEmpty" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendSeparator_String", "testAppendSeparator_String_String" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testCapacityAndLength", "testIsEmpty" ]
          }
        },
        "org.apache.commons.text.StrBuilder#lastIndexOf" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int" ]
          }
        },
        "org.apache.commons.text.StrBuilder#leftString" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLeftString" ]
          }
        },
        "org.apache.commons.text.StrBuilder#length" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBufferAppendsToEnd", "testReadFromReadableAppendsToEnd", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrBuilder#midString" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testMidString" ]
          }
        },
        "org.apache.commons.text.StrBuilder#minimizeCapacity" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testCapacityAndLength", "testChaining", "testMinimizeCapacity" ]
          }
        },
        "org.apache.commons.text.StrBuilder#readFrom" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd" ]
          }
        },
        "org.apache.commons.text.StrBuilder#replace" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteAll_StrMatcher", "testDeleteFirst_StrMatcher", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrBuilder#replaceAll" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char" ]
          }
        },
        "org.apache.commons.text.StrBuilder#replaceFirst" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char" ]
          }
        },
        "org.apache.commons.text.StrBuilder#replaceImpl" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteAll_StrMatcher", "testDeleteFirst_StrMatcher", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrBuilder#reverse" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testChaining", "testReverse", "testTrim" ]
          }
        },
        "org.apache.commons.text.StrBuilder#rightString" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testRightString" ]
          }
        },
        "org.apache.commons.text.StrBuilder#setCharAt" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testChaining", "testSetCharAt" ]
          }
        },
        "org.apache.commons.text.StrBuilder#setLength" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsWriter", "testCapacityAndLength", "testChaining", "testSetLength" ]
          }
        },
        "org.apache.commons.text.StrBuilder#setNewLineText" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendNewLine" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testChaining", "testGetSetNewLineText" ]
          }
        },
        "org.apache.commons.text.StrBuilder#setNullText" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadRight", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testInsertWithNullText" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testChaining", "testGetSetNullText" ]
          }
        },
        "org.apache.commons.text.StrBuilder#size" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendSeparator_char", "testAppendSeparator_char_char" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendToCharBuffer", "testAsReader", "testAsTokenizer", "testCapacityAndLength", "testConstructors", "testSize" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrBuilder#startsWith" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testStartsWith" ]
          }
        },
        "org.apache.commons.text.StrBuilder#subSequence" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testSubSequenceIntInt" ]
          }
        },
        "org.apache.commons.text.StrBuilder#substring" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrBuilder#toCharArray" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testToCharArray", "testToCharArrayIntInt" ]
          }
        },
        "org.apache.commons.text.StrBuilder#toString" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText", "testLang299" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer", "testAsBuilder", "testAsTokenizer", "testAsWriter", "testCapacityAndLength", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testLang294", "testLang412Left", "testLang412Right", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testSetCharAt", "testSetLength", "testToString", "testTrim" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrBuilder#toStringBuffer" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testToStringBuffer" ]
          }
        },
        "org.apache.commons.text.StrBuilder#toStringBuilder" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testToStringBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilder#trim" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testChaining", "testTrim" ]
          }
        },
        "org.apache.commons.text.StrBuilder#validateIndex" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testInsert", "testInsertWithNullText" ]
          }
        },
        "org.apache.commons.text.StrBuilder#validateRange" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer", "testDeleteAll_StrMatcher", "testDeleteFirst_StrMatcher", "testDeleteIntInt", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArrayIntInt", "testTrim" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderReader#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderReader#close" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderReader#mark" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderReader#markSupported" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderReader#read" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderReader#ready" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderReader#reset" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderReader#skip" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderTokenizer#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderTokenizer#getContent" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderTokenizer#tokenize" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderWriter#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsWriter" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsWriter" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderWriter#flush" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsWriter" ]
          }
        },
        "org.apache.commons.text.StrBuilder$StrBuilderWriter#write" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsWriter" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText", "testLang299" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendAll_Array" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Array" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendAll_Collection" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Collection" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendAll_Iterator" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Iterator" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendFixedWidthPadLeft" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendFixedWidthPadLeft" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendFixedWidthPadLeft_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendFixedWidthPadLeft_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendFixedWidthPadRight" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendFixedWidthPadRight" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendFixedWidthPadRight_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendFixedWidthPadRight_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendNewLine" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendNewLine" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendPadding" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendPadding" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendSeparator_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendSeparator_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendSeparator_String_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendSeparator_String_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendSeparator_String_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendSeparator_String_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendSeparator_char" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendSeparator_char" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendSeparator_char_char" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendSeparator_char_char" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendSeparator_char_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendSeparator_char_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendWithNullText" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendWithNullText" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendWithSeparatorsWithNullText" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendWithSeparatorsWithNullText" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendWithSeparators_Array" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendWithSeparators_Array" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendWithSeparators_Collection" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendWithSeparators_Collection" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendWithSeparators_Iterator" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendWithSeparators_Iterator" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_Boolean" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_Boolean" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_CharArray" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_CharArray" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_CharArray_int_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_CharArray_int_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_FormattedString" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_FormattedString" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_Object" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_Object" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_PrimitiveNumber" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_PrimitiveNumber" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_StrBuilder" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_StrBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_StrBuilder_int_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_StrBuilder_int_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_StringBuffer" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_StringBuffer" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_StringBuffer_int_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_StringBuffer_int_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_StringBuilder" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_StringBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_StringBuilder_int_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_StringBuilder_int_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppend_String_int_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppend_String_int_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_Boolean" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_Boolean" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_CharArray" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_CharArray" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_CharArray_int_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_CharArray_int_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_FormattedString" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_FormattedString" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_Object" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_Object" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_PrimitiveNumber" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_PrimitiveNumber" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_StrBuilder" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_StrBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_StrBuilder_int_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_StrBuilder_int_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_StringBuffer" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_StringBuffer" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_StringBuffer_int_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_StringBuffer_int_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_StringBuilder" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_StringBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_StringBuilder_int_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_StringBuilder_int_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_String_int_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_String_int_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testInsert" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testInsert" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testInsertWithNullText" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testInsertWithNullText" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testLang299" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testLang299" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testGetSetNewLineText", "testGetSetNullText", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLang412Left", "testLang412Right", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim", "test_LANG_1131_EqualsWithNullStrBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAppendCharBuffer" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAppendToCharBuffer" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendToCharBuffer" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAppendToStringBuffer" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendToStringBuffer" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAppendToStringBuilder" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendToStringBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAppendToWriter" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendToWriter" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAsBuilder" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAsReader" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAsTokenizer" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAsWriter" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsWriter" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testCapacity" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testCapacity" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testCapacityAndLength" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testCapacityAndLength" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testChaining" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testChaining" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testCharAt" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testCharAt" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testClear" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testClear" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testConstructors" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testConstructors" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testContains_StrMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testContains_StrMatcher" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testContains_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testContains_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testContains_char" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testContains_char" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testDeleteAll_StrMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteAll_StrMatcher" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testDeleteAll_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteAll_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testDeleteAll_char" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteAll_char" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testDeleteCharAt" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteCharAt" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testDeleteFirst_StrMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteFirst_StrMatcher" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testDeleteFirst_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteFirst_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testDeleteFirst_char" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteFirst_char" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testDeleteIntInt" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteIntInt" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testEndsWith" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testEndsWith" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testEnsureCapacity" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testEnsureCapacity" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testEquals" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testEquals" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testEqualsIgnoreCase" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testEqualsIgnoreCase" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testGetChars" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testGetChars" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testGetCharsIntIntCharArrayInt" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testGetCharsIntIntCharArrayInt" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testGetSetNewLineText" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testGetSetNewLineText" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testGetSetNullText" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testGetSetNullText" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testHashCode" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testHashCode" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testIndexOfLang294" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testIndexOfLang294" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testIndexOf_StrMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testIndexOf_StrMatcher" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testIndexOf_StrMatcher_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testIndexOf_StrMatcher_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testIndexOf_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testIndexOf_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testIndexOf_String_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testIndexOf_String_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testIndexOf_char" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testIndexOf_char" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testIndexOf_char_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testIndexOf_char_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testIsEmpty" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testIsEmpty" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testLang294" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLang294" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testLang295" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLang295" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testLang412Left" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLang412Left" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testLang412Right" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLang412Right" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testLastIndexOf_StrMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLastIndexOf_StrMatcher" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testLastIndexOf_StrMatcher_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLastIndexOf_StrMatcher_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testLastIndexOf_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLastIndexOf_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testLastIndexOf_String_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLastIndexOf_String_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testLastIndexOf_char" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLastIndexOf_char" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testLastIndexOf_char_int" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLastIndexOf_char_int" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testLeftString" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLeftString" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testLength" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testLength" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testMidString" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testMidString" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testMinimizeCapacity" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testMinimizeCapacity" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReadFromCharBuffer" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReadFromCharBuffer" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReadFromCharBufferAppendsToEnd" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReadFromCharBufferAppendsToEnd" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReadFromReadable" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReadFromReadable" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReadFromReadableAppendsToEnd" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReadFromReadableAppendsToEnd" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReadFromReader" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReadFromReader" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReadFromReaderAppendsToEnd" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReadFromReaderAppendsToEnd" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReplaceAll_StrMatcher_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplaceAll_StrMatcher_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReplaceAll_String_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplaceAll_String_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReplaceAll_char_char" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplaceAll_char_char" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReplaceFirst_StrMatcher_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplaceFirst_StrMatcher_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReplaceFirst_String_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplaceFirst_String_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReplaceFirst_char_char" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplaceFirst_char_char" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReplace_StrMatcher_String_int_int_int_VaryCount" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplace_StrMatcher_String_int_int_int_VaryCount" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReplace_StrMatcher_String_int_int_int_VaryEndIndex" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplace_StrMatcher_String_int_int_int_VaryEndIndex" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReplace_StrMatcher_String_int_int_int_VaryMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplace_StrMatcher_String_int_int_int_VaryMatcher" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReplace_StrMatcher_String_int_int_int_VaryReplace" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplace_StrMatcher_String_int_int_int_VaryReplace" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReplace_StrMatcher_String_int_int_int_VaryStartIndex" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplace_StrMatcher_String_int_int_int_VaryStartIndex" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReplace_int_int_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReplace_int_int_String" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testReverse" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReverse" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testRightString" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testRightString" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testSetCharAt" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testSetCharAt" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testSetLength" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testSetLength" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testSize" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testSize" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testStartsWith" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testStartsWith" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testSubSequenceIntInt" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testSubSequenceIntInt" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testSubstringInt" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testSubstringInt" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testSubstringIntInt" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testSubstringIntInt" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testToCharArray" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testToCharArray" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testToCharArrayIntInt" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testToCharArrayIntInt" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testToString" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testToString" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testToStringBuffer" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testToStringBuffer" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testToStringBuilder" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testToStringBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testTrim" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testTrim" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#test_LANG_1131_EqualsWithNullStrBuilder" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "test_LANG_1131_EqualsWithNullStrBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest$MockReadable#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReadFromReadable", "testReadFromReadableAppendsToEnd" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest$MockReadable#read" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReadFromReadable", "testReadFromReadableAppendsToEnd" ]
          }
        },
        "org.apache.commons.text.StrLookup" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrLookup#mapLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrLookup#noneLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testNoneLookup" ]
          }
        },
        "org.apache.commons.text.StrLookup#systemPropertiesLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrLookup$MapStrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrLookup$MapStrLookup#lookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrLookup$SystemPropertiesStrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrLookup$SystemPropertiesStrLookup#lookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrLookupTest" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ]
          }
        },
        "org.apache.commons.text.StrLookupTest#testMapLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup" ]
          }
        },
        "org.apache.commons.text.StrLookupTest#testMapLookup_nullMap" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup_nullMap" ]
          }
        },
        "org.apache.commons.text.StrLookupTest#testNoneLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testNoneLookup" ]
          }
        },
        "org.apache.commons.text.StrLookupTest#testSystemProperiesLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testSystemProperiesLookup" ]
          }
        },
        "org.apache.commons.text.StrLookupTest#testSystemPropertiesLookupReplacedProperties" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testSystemPropertiesLookupReplacedProperties" ]
          }
        },
        "org.apache.commons.text.StrLookupTest#testSystemPropertiesLookupUpdatedProperty" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testSystemPropertiesLookupUpdatedProperty" ]
          }
        },
        "org.apache.commons.text.StrMatcher" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testContains_StrMatcher", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcher#charMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testContains_StrMatcher", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryMatcher" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testChaining", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray_char", "testConstructor_charArray_char_char" ]
          }
        },
        "org.apache.commons.text.StrMatcher#charSetMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testCharSetMatcher_String", "testCharSetMatcher_charArray" ]
          }
        },
        "org.apache.commons.text.StrMatcher#commaMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testCommaMatcher" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcher#doubleQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testDoubleQuoteMatcher" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrMatcher#noneMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testNoneMatcher", "testStringMatcher_String" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcher#quoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testQuoteMatcher" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicQuoted6", "testBasicQuoted7" ]
          }
        },
        "org.apache.commons.text.StrMatcher#singleQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testSingleQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcher#spaceMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testSpaceMatcher" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test7", "test8" ]
          }
        },
        "org.apache.commons.text.StrMatcher#splitMatcher" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testSplitMatcher" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcher#stringMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testContains_StrMatcher", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testMatcherIndices", "testStringMatcher_String" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicTrimmed2", "testChaining", "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrMatcher#tabMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testTabMatcher" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcher#trimMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testTrimMatcher" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testContains_StrMatcher", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryMatcher" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testContains_StrMatcher", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryMatcher" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char", "testCommaMatcher", "testDoubleQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testTabMatcher" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testTSV" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharSetMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharSetMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testQuoteMatcher", "testSplitMatcher" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasicEmpty1", "testBasicEmpty2", "testBasicQuoted6", "testBasicQuoted7", "testCloneReset", "testConstructor_String", "testConstructor_charArray", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcher$NoMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcher$NoMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testNoneMatcher" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcher$StringMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testContains_StrMatcher", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testMatcherIndices", "testStringMatcher_String" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicTrimmed2", "testChaining", "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrMatcher$StringMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testContains_StrMatcher", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testMatcherIndices", "testStringMatcher_String" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicTrimmed2", "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrMatcher$TrimMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrMatcher$TrimMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testTrimMatcher" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test4", "test5", "test6", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed4", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testCharMatcher_char" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testCharSetMatcher_String" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testCharSetMatcher_String" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testCharSetMatcher_charArray" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testCharSetMatcher_charArray" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testCommaMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testCommaMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testDoubleQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testDoubleQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testMatcherIndices" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testMatcherIndices" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testNoneMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testNoneMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testSingleQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testSingleQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testSpaceMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testSpaceMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testSplitMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testSplitMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testStringMatcher_String" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testStringMatcher_String" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testTabMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testTabMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest#testTrimMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testTrimMatcher" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrSubstitutor#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#checkCyclicSubstitution" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getEscapeChar" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getValueDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getVariablePrefixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetPrefix", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getVariableResolver" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getVariableSuffixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetSuffix", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#isEnableSubstitutionInVariables" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#isPreserveEscapes" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#replace" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#replaceIn" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#replaceSystemProperties" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#resolveVariable" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setEnableSubstitutionInVariables" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInVariable", "testReplaceInVariableRecursive" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setEscapeChar" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setPreserveEscapes" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setValueDelimiter" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testDefaultValueDelimiters", "testGetSetValueDelimiter" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setValueDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariablePrefix" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testDefaultValueDelimiters", "testGetSetPrefix", "testSamePrefixAndSuffix", "testStaticReplacePrefixSuffix", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariablePrefixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariableResolver" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariableSuffix" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testDefaultValueDelimiters", "testGetSetSuffix", "testSamePrefixAndSuffix", "testStaticReplacePrefixSuffix", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariableSuffixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#substitute" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#doTestNoReplace" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceEmpty", "testReplaceNoVariables", "testReplaceNull", "testReplaceWeirdPattens" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#doTestReplace" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#setUp" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#tearDown" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testConstructorMapFull" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testConstructorMapPrefixSuffix" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapPrefixSuffix" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testConstructorNoArgs" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorNoArgs" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testCyclicReplacement" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testCyclicReplacement" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testDefaultValueDelimiters" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDefaultValueDelimiters" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testGetSetEscape" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testGetSetEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testGetSetPrefix" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testGetSetPrefix" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testGetSetSuffix" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testGetSetSuffix" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testGetSetValueDelimiter" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testGetSetValueDelimiter" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testLANG1055" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceAdjacentAtEnd" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceAdjacentAtEnd" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceAdjacentAtStart" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceAdjacentAtStart" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceChangedMap" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceChangedMap" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceComplexEscaping" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceComplexEscaping" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceEmpty" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceEmpty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceEmptyKeys" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceEmptyKeys" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceEscaping" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceEscaping" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceInVariable" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInVariable" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceInVariableDisabled" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInVariableDisabled" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceInVariableRecursive" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInVariableRecursive" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceIncompletePrefix" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceIncompletePrefix" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceNoPrefixNoSuffix" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceNoPrefixNoSuffix" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceNoPrefixSuffix" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceNoPrefixSuffix" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceNoVariables" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceNoVariables" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceNull" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceNull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplacePartialString_noReplace" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplacePartialString_noReplace" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplacePrefixNoSuffix" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplacePrefixNoSuffix" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceRecursive" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceRecursive" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceSimple" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceSimple" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceSolo" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceSolo" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceSoloEscaping" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceSoloEscaping" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceToIdentical" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceToIdentical" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceUnknownKey" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceUnknownKey" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceWeirdPattens" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceWeirdPattens" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testResolveVariable" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testResolveVariable" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testSamePrefixAndSuffix" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testSamePrefixAndSuffix" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testStaticReplace" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testStaticReplace" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testStaticReplacePrefixSuffix" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testStaticReplacePrefixSuffix" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testStaticReplaceSystemProperties" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testSubstituteDefaultProperties" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testSubstituteDefaultProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testSubstitutePreserveEscape" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrTokenizer" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrTokenizer#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#add" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testIteration" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#addToken" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#checkTokenized" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#clone" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#cloneReset" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneNull", "testCloneReset", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getCSVClone" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getCSVInstance" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getContent" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "testGetContent" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getIgnoredMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getTSVClone" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getTSVInstance" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getTokenArray" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testListArray" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getTokenList" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testListArray", "testToString" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getTrimmerMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#hasNext" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test6", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#hasPrevious" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test6", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testIteration", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#isEmptyTokenAsNull" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test5", "test6", "test7", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed4", "testBasicQuoted2", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#isIgnoreEmptyTokens" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed4", "testBasicQuoted2", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testListArray" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#isQuote" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#next" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test6", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testReset", "testReset_String", "testReset_charArray", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#nextIndex" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#nextToken" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneNull", "testCloneReset", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#previous" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test6", "testIteration" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#previousIndex" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#previousToken" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#readNextToken" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#readWithQuotes" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#remove" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testIteration" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#reset" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNull", "testCloneReset", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#set" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testIteration" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setDelimiterChar" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testChaining", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray_char", "testConstructor_charArray_char_char" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setDelimiterString" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testChaining", "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setEmptyTokenAsNull" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setIgnoreEmptyTokens" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setIgnoredChar" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testChaining" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setIgnoredMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setQuoteChar" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "testBasic5", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuotedTrimmed1", "testChaining", "testConstructor_String_char_char", "testConstructor_charArray_char_char" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setTrimmerMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#size" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#toString" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testToString" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#tokenize" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#checkClone" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test1" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test1" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test2" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test2" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test3" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test3" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test4" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test4" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test5" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test5" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test6" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test6" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test7" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test7" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test8" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test8" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasic1" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasic1" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasic2" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasic2" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasic3" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasic3" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasic4" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasic4" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasic5" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasic5" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicDelim1" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicDelim1" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicDelim2" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicDelim2" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicEmpty1" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicEmpty1" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicEmpty2" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicEmpty2" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicIgnoreTrimmed1" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicIgnoreTrimmed1" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicIgnoreTrimmed2" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicIgnoreTrimmed2" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicIgnoreTrimmed3" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicIgnoreTrimmed3" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicIgnoreTrimmed4" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicIgnoreTrimmed4" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicQuoted1" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicQuoted1" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicQuoted2" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicQuoted2" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicQuoted3" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicQuoted3" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicQuoted4" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicQuoted4" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicQuoted5" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicQuoted5" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicQuoted6" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicQuoted6" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicQuoted7" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicQuoted7" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicQuotedTrimmed1" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicQuotedTrimmed1" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicTrimmed1" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicTrimmed1" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicTrimmed2" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicTrimmed2" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testCSV" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVSimple", "testCSVSimpleNeedsTrim" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testCSVEmpty" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testCSVSimple" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVSimple" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testCSVSimpleNeedsTrim" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVSimpleNeedsTrim" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testChaining" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testChaining" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testCloneNotSupportedException" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCloneNotSupportedException" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testCloneNull" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCloneNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testCloneReset" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCloneReset" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testConstructor_String" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testConstructor_String" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testConstructor_String_char" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testConstructor_String_char" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testConstructor_String_char_char" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testConstructor_String_char_char" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testConstructor_charArray" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testConstructor_charArray" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testConstructor_charArray_char" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testConstructor_charArray_char" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testConstructor_charArray_char_char" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testConstructor_charArray_char_char" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testDelimString" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testEmpty" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testGetContent" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testGetContent" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testIteration" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testIteration" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testListArray" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testListArray" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testReset" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testReset" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testReset_String" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testReset_String" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testReset_charArray" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testReset_charArray" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testTSV" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testTSV" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testTSVEmpty" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testToString" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testToString" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testTokenizeSubclassInputChange" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testTokenizeSubclassInputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testTokenizeSubclassOutputChange" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testXSVAbc" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StringEscapeUtils#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#builder" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#escapeCsv" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeCsvString" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#escapeEcmaScript" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeEcmaScript", "testLang708" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#escapeHtml3Once" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#escapeHtml4" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#escapeHtml4Once" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#escapeJava" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeJava", "testEscapeJavaWithSlash", "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#escapeJson" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeJson" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#escapeXSI" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#escapeXml10" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXml10" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#escapeXml11" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXml11" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#unescapeCsv" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeCsvString" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#unescapeHtml4" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHiragana", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testLang313", "testStandaloneAmphersand", "testUnescapeHtml4", "testUnescapeUnknownEntity" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#unescapeJava" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#unescapeXSI" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#unescapeXml" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testStandaloneAmphersand", "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$Builder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$Builder#append" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$Builder#escape" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$Builder#toString" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$XsiUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$XsiUnescaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#assertEscapeJava" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeJava" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#assertUnescapeJava" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#checkCsvEscapeWriter" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#checkCsvUnescapeWriter" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testBuilder" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testConstructor" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeCsvString" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeCsvString" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeCsvWriter" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeEcmaScript" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeEcmaScript" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeHiragana" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHiragana" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeHtml" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeHtml3Once" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeHtml4Once" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeHtmlHighUnicode" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlHighUnicode" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeHtmlVersions" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlVersions" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeJava" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeJava" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeJavaWithSlash" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeJavaWithSlash" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeJson" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeJson" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeXSI" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeXml10" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXml10" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeXml11" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXml11" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testLang313" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang313" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testLang708" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testLang911" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testStandaloneAmphersand" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testStandaloneAmphersand" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testUnescapeCsvString" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeCsvString" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testUnescapeCsvWriter" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testUnescapeHtml4" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeHtml4" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testUnescapeJava" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testUnescapeUnknownEntity" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeUnknownEntity" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testUnescapeXmlSupplementaryCharacters" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeXmlSupplementaryCharacters" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testUnscapeXSI" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.diff.CommandVisitor" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.DeleteCommand" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.DeleteCommand#<init>" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.DeleteCommand#accept" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.diff.EditCommand" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.EditCommand#<init>" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.EditCommand#getObject" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.diff.EditScript" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.EditScript#<init>" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.EditScript#append" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.EditScript#getLCSLength" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.EditScript#getModifications" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testLength" ]
          }
        },
        "org.apache.commons.text.diff.EditScript#visit" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.diff.InsertCommand" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.InsertCommand#<init>" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.InsertCommand#accept" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.diff.KeepCommand" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.KeepCommand#<init>" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.KeepCommand#accept" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.diff.ReplacementsFinder" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.ReplacementsFinderTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.ReplacementsHandler" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.StringsComparator" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.StringsComparator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparator#buildScript" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparator#buildSnake" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparator#getMiddleSnake" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparator#getScript" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparator$Snake#<init>" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparator$Snake#getDiag" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparator$Snake#getEnd" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparator$Snake#getStart" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest#setUp" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest#tearDown" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest#testExecution" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest#testLength" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testLength" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest#testLongestCommonSubsequence" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest$ExecutionVisitor#<init>" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest$ExecutionVisitor#getString" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest$ExecutionVisitor#visitDeleteCommand" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest$ExecutionVisitor#visitInsertCommand" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest$ExecutionVisitor#visitKeepCommand" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.diff.package-info" : {
          "testcases" : { }
        },
        "org.apache.commons.text.package-info" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.CosineDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.CosineDistance#apply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.CosineDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.CosineDistanceTest#roundValue" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.CosineDistanceTest#testCosineDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarity" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.CosineSimilarity#cosineSimilarity" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarity#dot" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarity#getIntersection" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.Counter" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.Counter#of" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.EditDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.EditDistanceFrom" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.EditDistanceFrom#<init>" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample", "testMissingMetric" ]
          }
        },
        "org.apache.commons.text.similarity.EditDistanceFrom#apply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScore" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.FuzzyScore#<init>" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testMissingLocale" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScore#fuzzyScore" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore", "testGetFuzzyScore_NullNullLocale", "testGetFuzzyScore_NullStringLocale", "testGetFuzzyScore_StringNullLocale" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore", "testGetFuzzyScore_NullNullLocale", "testGetFuzzyScore_NullStringLocale", "testGetFuzzyScore_StringNullLocale", "testMissingLocale" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testGetFuzzyScore" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testGetFuzzyScore_NullNullLocale" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore_NullNullLocale" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testGetFuzzyScore_NullStringLocale" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore_NullStringLocale" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testGetFuzzyScore_StringNullLocale" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore_StringNullLocale" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testMissingLocale" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testMissingLocale" ]
          }
        },
        "org.apache.commons.text.similarity.HammingDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.HammingDistance#apply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.HammingDistanceTest" : [ "testHammingDistance", "testHammingDistance_nullLeftValue", "testHammingDistance_nullRightValue" ]
          }
        },
        "org.apache.commons.text.similarity.HammingDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.HammingDistanceTest" : [ "testHammingDistance", "testHammingDistance_nullLeftValue", "testHammingDistance_nullRightValue" ]
          }
        },
        "org.apache.commons.text.similarity.HammingDistanceTest#testHammingDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.HammingDistanceTest" : [ "testHammingDistance" ]
          }
        },
        "org.apache.commons.text.similarity.HammingDistanceTest#testHammingDistance_nullLeftValue" : {
          "testcases" : {
            "org.apache.commons.text.similarity.HammingDistanceTest" : [ "testHammingDistance_nullLeftValue" ]
          }
        },
        "org.apache.commons.text.similarity.HammingDistanceTest#testHammingDistance_nullRightValue" : {
          "testcases" : {
            "org.apache.commons.text.similarity.HammingDistanceTest" : [ "testHammingDistance_nullRightValue" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.JaccardDistance#apply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistance", "testGettingJaccardDistanceNullNull", "testGettingJaccardDistanceNullString", "testGettingJaccardDistanceStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistance", "testGettingJaccardDistanceNullNull", "testGettingJaccardDistanceNullString", "testGettingJaccardDistanceStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardDistanceTest#testGettingJaccardDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistance" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardDistanceTest#testGettingJaccardDistanceNullNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistanceNullNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardDistanceTest#testGettingJaccardDistanceNullString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistanceNullString" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardDistanceTest#testGettingJaccardDistanceStringNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistanceStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardSimilarity" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.JaccardSimilarity#apply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistance" ],
            "org.apache.commons.text.similarity.JaccardSimilarityTest" : [ "testGettingJaccardSimilarity", "testGettingJaccardSimilarityNullNull", "testGettingJaccardSimilarityNullString", "testGettingJaccardSimilarityStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardSimilarity#calculateJaccardSimilarity" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistance" ],
            "org.apache.commons.text.similarity.JaccardSimilarityTest" : [ "testGettingJaccardSimilarity" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardSimilarityTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardSimilarityTest" : [ "testGettingJaccardSimilarity", "testGettingJaccardSimilarityNullNull", "testGettingJaccardSimilarityNullString", "testGettingJaccardSimilarityStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardSimilarityTest#testGettingJaccardSimilarity" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardSimilarityTest" : [ "testGettingJaccardSimilarity" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardSimilarityTest#testGettingJaccardSimilarityNullNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardSimilarityTest" : [ "testGettingJaccardSimilarityNullNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardSimilarityTest#testGettingJaccardSimilarityNullString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardSimilarityTest" : [ "testGettingJaccardSimilarityNullString" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardSimilarityTest#testGettingJaccardSimilarityStringNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardSimilarityTest" : [ "testGettingJaccardSimilarityStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistance#apply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullNull", "testGetJaroWinklerDistance_NullString", "testGetJaroWinklerDistance_StringNull", "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistance#matches" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullNull", "testGetJaroWinklerDistance_NullString", "testGetJaroWinklerDistance_StringNull", "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistanceTest#testGetJaroWinklerDistance_NullNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistanceTest#testGetJaroWinklerDistance_NullString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistanceTest#testGetJaroWinklerDistance_StringNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistanceTest#testGetJaroWinklerDistance_StringString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#<init>" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testConstructorWithNegativeThreshold", "testEquals", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#apply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals", "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#findDetailedResults" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#limitedCompare" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#unlimitedCompare" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals", "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testConstructorWithNegativeThreshold", "testEquals", "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testConstructorWithNegativeThreshold" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testConstructorWithNegativeThreshold" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testEquals" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_NullString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_NullString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_NullStringInt" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_NullStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_StringNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringNull" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_StringNullInt" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringNullInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_StringString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_StringStringInt" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testHashCode" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testHashCode" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testToString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance#<init>" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testConstructorWithNegativeThreshold", "testGetLevenshteinDistance_StringStringInt" ],
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance#apply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_NullString", "testGetLevenshteinDistance_NullStringInt", "testGetLevenshteinDistance_StringNull", "testGetLevenshteinDistance_StringNullInt", "testGetLevenshteinDistance_StringString", "testGetLevenshteinDistance_StringStringInt" ],
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance#limitedCompare" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance#unlimitedCompare" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_NullString", "testGetLevenshteinDistance_NullStringInt", "testGetLevenshteinDistance_StringNull", "testGetLevenshteinDistance_StringNullInt", "testGetLevenshteinDistance_StringString" ],
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testConstructorWithNegativeThreshold", "testGetLevenshteinDistance_NullString", "testGetLevenshteinDistance_NullStringInt", "testGetLevenshteinDistance_StringNull", "testGetLevenshteinDistance_StringNullInt", "testGetLevenshteinDistance_StringString", "testGetLevenshteinDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest#testConstructorWithNegativeThreshold" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testConstructorWithNegativeThreshold" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest#testGetLevenshteinDistance_NullString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_NullString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest#testGetLevenshteinDistance_NullStringInt" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_NullStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest#testGetLevenshteinDistance_StringNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_StringNull" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest#testGetLevenshteinDistance_StringNullInt" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_StringNullInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest#testGetLevenshteinDistance_StringString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest#testGetLevenshteinDistance_StringStringInt" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#<init>" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#equals" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#getDeleteCount" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#getDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#getInsertCount" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#getSubstituteCount" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#hashCode" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testHashCode" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#toString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequence" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequence#apply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLogestCommonSubsequenceDistacne" ],
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceApplyNullNull", "testGettingLongestCommonSubsequenceApplyNullString", "testGettingLongestCommonSubsequenceApplyStringNull", "testLongestCommonSubsequenceApply" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequence#logestCommonSubsequence" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLogestCommonSubsequenceDistacne" ],
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceNullNull", "testGettingLongestCommonSubsequenceNullString", "testGettingLongestCommonSubsequenceStringNull", "testLongestCommonSubsequence", "testLongestCommonSubsequenceApply" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequence#longestCommonSubstringLengthArray" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLogestCommonSubsequenceDistacne" ],
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testLongestCommonSubsequence", "testLongestCommonSubsequenceApply" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceDistance#apply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLogestCommonSubsequenceDistacne", "testGettingLongestCommonSubsequenceDistanceNullNull", "testGettingLongestCommonSubsequenceDistanceNullString", "testGettingLongestCommonSubsequenceDistanceStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLogestCommonSubsequenceDistacne", "testGettingLongestCommonSubsequenceDistanceNullNull", "testGettingLongestCommonSubsequenceDistanceNullString", "testGettingLongestCommonSubsequenceDistanceStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest#testGettingLogestCommonSubsequenceDistacne" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLogestCommonSubsequenceDistacne" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest#testGettingLongestCommonSubsequenceDistanceNullNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLongestCommonSubsequenceDistanceNullNull" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest#testGettingLongestCommonSubsequenceDistanceNullString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLongestCommonSubsequenceDistanceNullString" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest#testGettingLongestCommonSubsequenceDistanceStringNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLongestCommonSubsequenceDistanceStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceApplyNullNull", "testGettingLongestCommonSubsequenceApplyNullString", "testGettingLongestCommonSubsequenceApplyStringNull", "testGettingLongestCommonSubsequenceNullNull", "testGettingLongestCommonSubsequenceNullString", "testGettingLongestCommonSubsequenceStringNull", "testLongestCommonSubsequence", "testLongestCommonSubsequenceApply" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testGettingLongestCommonSubsequenceApplyNullNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceApplyNullNull" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testGettingLongestCommonSubsequenceApplyNullString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceApplyNullString" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testGettingLongestCommonSubsequenceApplyStringNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceApplyStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testGettingLongestCommonSubsequenceNullNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceNullNull" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testGettingLongestCommonSubsequenceNullString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceNullString" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testGettingLongestCommonSubsequenceStringNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testLongestCommonSubsequence" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testLongestCommonSubsequenceApply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testLongestCommonSubsequenceApply" ]
          }
        },
        "org.apache.commons.text.similarity.ParameterizedEditDistanceFromTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.ParameterizedLevenshteinDistanceTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.ParameterizedSimilarityScoreFromTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.RegexTokenizer" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.RegexTokenizer#tokenize" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.SimilarityScore" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.SimilarityScoreFrom" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.StringMetricFromTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample", "testMissingMetric" ]
          }
        },
        "org.apache.commons.text.similarity.StringMetricFromTest#testEquivalence" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence" ]
          }
        },
        "org.apache.commons.text.similarity.StringMetricFromTest#testJavadocExample" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testJavadocExample" ]
          }
        },
        "org.apache.commons.text.similarity.StringMetricFromTest#testMissingMetric" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testMissingMetric" ]
          }
        },
        "org.apache.commons.text.similarity.Tokenizer" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.package-info" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.AggregateTranslator" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.AggregateTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull", "testNullConstructor", "testNullVarargConstructor" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ],
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull", "testNullConstructor", "testNullVarargConstructor" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslatorTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull", "testNullConstructor", "testNullVarargConstructor" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslatorTest#testNonNull" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslatorTest#testNullConstructor" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNullConstructor" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslatorTest#testNullVarargConstructor" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNullVarargConstructor" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull", "testNullConstructor", "testNullVarargConstructor" ],
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ],
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup", "testLang882" ],
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ],
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ],
            "org.apache.commons.text.translate.OctalUnescaperTest" : [ "testBetween" ],
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ],
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testLessThanFour", "testUPlus", "testUuuuu" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#hex" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708", "testLang911" ],
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNullConstructor", "testNullVarargConstructor" ],
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ],
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ],
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ],
            "org.apache.commons.text.translate.OctalUnescaperTest" : [ "testBetween" ],
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ],
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testLessThanFour", "testUPlus", "testUuuuu" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslator" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.CodePointTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ],
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ],
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeEcmaScript", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXml10", "testEscapeXml11", "testLang708", "testLang911", "testUnescapeJava" ],
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ],
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ],
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslators" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.CsvTranslators#access$000" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeCsvString", "testEscapeCsvWriter", "testUnescapeCsvString", "testUnescapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslators#access$100" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeCsvString", "testEscapeCsvWriter", "testUnescapeCsvString", "testUnescapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslators#access$200" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeCsvString", "testEscapeCsvWriter", "testUnescapeCsvString", "testUnescapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslators$CsvEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslators$CsvEscaper#translateWhole" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeCsvString", "testEscapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslators$CsvUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslators$CsvUnescaper#translateWhole" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeCsvString", "testUnescapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.EntityArrays#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testConstructorExists" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#invert" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposMap", "testBasicMap", "testConstructorExists", "testForDuplicateDeclaredMapValuesAposMap", "testForDuplicateDeclaredMapValuesBasicMap", "testForDuplicateDeclaredMapValuesHtml40ExtendedMap", "testForDuplicateDeclaredMapValuesISO8859Map", "testForDuplicateDeclaredMapValuesJavaCtrlCharsMap", "testForDuplicatedDeclaredMapKeys", "testHtml40ExtendedMap", "testISO8859Map", "testJavaCntrlCharsMap" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposMap", "testBasicMap", "testConstructorExists", "testForDuplicateDeclaredMapValuesAposMap", "testForDuplicateDeclaredMapValuesBasicMap", "testForDuplicateDeclaredMapValuesHtml40ExtendedMap", "testForDuplicateDeclaredMapValuesISO8859Map", "testForDuplicateDeclaredMapValuesJavaCtrlCharsMap", "testForDuplicatedDeclaredMapKeys", "testHtml40ExtendedMap", "testISO8859Map", "testJavaCntrlCharsMap" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testAposMap" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposMap" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testBasicMap" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testBasicMap" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testConstructorExists" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testConstructorExists" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testEscapeVsUnescapeMaps" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposMap", "testBasicMap", "testHtml40ExtendedMap", "testISO8859Map", "testJavaCntrlCharsMap" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testForDuplicateDeclaredMapValuesAposMap" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testForDuplicateDeclaredMapValuesAposMap" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testForDuplicateDeclaredMapValuesBasicMap" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testForDuplicateDeclaredMapValuesBasicMap" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testForDuplicateDeclaredMapValuesHtml40ExtendedMap" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testForDuplicateDeclaredMapValuesHtml40ExtendedMap" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testForDuplicateDeclaredMapValuesISO8859Map" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testForDuplicateDeclaredMapValuesISO8859Map" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testForDuplicateDeclaredMapValuesJavaCtrlCharsMap" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testForDuplicateDeclaredMapValuesJavaCtrlCharsMap" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testForDuplicatedDeclaredMapKeys" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testForDuplicatedDeclaredMapKeys" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testHtml40ExtendedMap" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testHtml40ExtendedMap" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testISO8859Map" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testISO8859Map" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testJavaCntrlCharsMap" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testJavaCntrlCharsMap" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#above" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#below" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testBelow", "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#between" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#outsideOf" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#toUtf16Escape" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708", "testLang911" ],
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaperTest#testAbove" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaperTest#testBelow" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testBelow" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaperTest#testBetween" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaperTest#testToUtf16Escape" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.LookupTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull" ],
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup", "testLang882" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ],
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull" ],
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup", "testLang882" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslatorTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup", "testLang882" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslatorTest#testBasicLookup" : {
          "testcases" : {
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslatorTest#testLang882" : {
          "testcases" : {
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testLang882" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#above" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#below" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testBelow" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#between" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#outsideOf" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXml10", "testEscapeXml11" ],
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaperTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaperTest#testAbove" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaperTest#testBelow" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testBelow" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaperTest#testBetween" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaperTest#testSupplementary" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testSupplementary" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper#isSet" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeHtml4" ],
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testUnfinishedEntity" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHiragana", "testEscapeHtmlHighUnicode", "testLang313", "testStandaloneAmphersand", "testUnescapeHtml4", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ],
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaperTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaperTest#testOutOfBounds" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaperTest#testSupplementaryUnescaping" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testSupplementaryUnescaping" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaperTest#testUnfinishedEntity" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testUnfinishedEntity" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.OctalUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.OctalUnescaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper#isOctalDigit" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ],
            "org.apache.commons.text.translate.OctalUnescaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper#isZeroToThree" : {
          "testcases" : {
            "org.apache.commons.text.translate.OctalUnescaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ],
            "org.apache.commons.text.translate.OctalUnescaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaperTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.OctalUnescaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaperTest#testBetween" : {
          "testcases" : {
            "org.apache.commons.text.translate.OctalUnescaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.SingleLookupTranslator" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.SingleLookupTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.SingleLookupTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3Once", "testEscapeHtml4Once" ]
          }
        },
        "org.apache.commons.text.translate.SinglePassTranslator" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.SinglePassTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.SinglePassTranslator#getClassName" : {
          "testcases" : {
            "org.apache.commons.text.translate.SinglePassTranslatorTest" : [ "indexIsValidated" ]
          }
        },
        "org.apache.commons.text.translate.SinglePassTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeCsvString", "testEscapeCsvWriter", "testUnescapeCsvString", "testUnescapeCsvWriter" ],
            "org.apache.commons.text.translate.SinglePassTranslatorTest" : [ "codePointsAreReturned", "indexIsValidated" ]
          }
        },
        "org.apache.commons.text.translate.SinglePassTranslatorTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.SinglePassTranslatorTest" : [ "codePointsAreReturned", "indexIsValidated" ]
          }
        },
        "org.apache.commons.text.translate.SinglePassTranslatorTest#before" : {
          "testcases" : {
            "org.apache.commons.text.translate.SinglePassTranslatorTest" : [ "codePointsAreReturned", "indexIsValidated" ]
          }
        },
        "org.apache.commons.text.translate.SinglePassTranslatorTest#codePointsAreReturned" : {
          "testcases" : {
            "org.apache.commons.text.translate.SinglePassTranslatorTest" : [ "codePointsAreReturned" ]
          }
        },
        "org.apache.commons.text.translate.SinglePassTranslatorTest#indexIsValidated" : {
          "testcases" : {
            "org.apache.commons.text.translate.SinglePassTranslatorTest" : [ "indexIsValidated" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ],
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#above" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#below" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testBelow" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#between" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#outsideOf" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeEcmaScript", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testLang708", "testLang911", "testUnescapeJava" ],
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ],
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaperTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaperTest#testAbove" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaperTest#testBelow" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testBelow" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaperTest#testBetween" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaper" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.UnicodeUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testLessThanFour", "testUPlus", "testUuuuu" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang911", "testUnescapeJava" ],
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testLessThanFour", "testUPlus", "testUuuuu" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaperTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testLessThanFour", "testUPlus", "testUuuuu" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaperTest#testLessThanFour" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testLessThanFour" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaperTest#testUPlus" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testUPlus" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaperTest#testUuuuu" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testUuuuu" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemover" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemover#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtml3Once", "testEscapeHtml4Once", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemover#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeXml10", "testEscapeXml11" ],
            "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemoverTest" : [ "testInvalidCharacters", "testValidCharacters" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemoverTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemoverTest" : [ "testInvalidCharacters", "testValidCharacters" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemoverTest#testInvalidCharacters" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemoverTest" : [ "testInvalidCharacters" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemoverTest#testValidCharacters" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemoverTest" : [ "testValidCharacters" ]
          }
        },
        "org.apache.commons.text.translate.package-info" : {
          "testcases" : { }
        }
      }
    },
    "1035cd6de87ece49aa2fdd7faa23e004e5748daf" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1035cd6de87ece49aa2fdd7faa23e004e5748daf~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrSubstitutor#checkCyclicSubstitution(String,List)" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#replace(String)" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#replace(String,int,int)" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#replaceIn(StringBuffer,int,int)" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#replaceIn(StringBuilder,int,int)" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#substitute(StrBuilder,int,int,List)" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        }
      }
    },
    "3e07584624c170cc703a673b2ec6ee49c57fba08" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3e07584624c170cc703a673b2ec6ee49c57fba08~1",
      "changedClazzes" : {
        "org.apache.commons.text.translate.CsvTranslators" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeCsvString", "testEscapeCsvWriter", "testUnescapeCsvString", "testUnescapeCsvWriter" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper#translate(CharSequence,int,Writer)" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHiragana", "testEscapeHtmlHighUnicode", "testLang313", "testStandaloneAmphersand", "testUnescapeHtml4", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ],
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ]
          }
        }
      }
    },
    "e9273cd4bb3da622ed761c998a6fb6e731538e18" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e9273cd4bb3da622ed761c998a6fb6e731538e18~1",
      "changedClazzes" : {
        "org.apache.commons.text.StringEscapeUtils" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.translate.SingleLookupTranslator" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        }
      }
    },
    "a0077dd37dc112a83cb24eccab702202c2bc8a13" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a0077dd37dc112a83cb24eccab702202c2bc8a13~1",
      "changedClazzes" : {
        "org.apache.commons.text.StringEscapeUtils#escapeHtml4" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3", "testEscapeHtml4" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#unescapeHtml3" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeHtml3" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$XsiUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3", "testEscapeHtml4", "testUnescapeHtml3" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml3", "testEscapeHtml4", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml3", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeHtml3" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeHtml4" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml4" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testUnescapeHtml3" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeHtml3" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3", "testEscapeHtml4", "testUnescapeHtml3" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3", "testEscapeHtml4", "testUnescapeHtml3" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3", "testEscapeHtml4", "testUnescapeHtml3" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3", "testEscapeHtml4", "testUnescapeHtml3" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3", "testEscapeHtml4", "testUnescapeHtml3" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslators$CsvEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3", "testEscapeHtml4", "testUnescapeHtml3" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslators$CsvUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3", "testEscapeHtml4", "testUnescapeHtml3" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#invert" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3", "testEscapeHtml4", "testUnescapeHtml3" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3", "testEscapeHtml4", "testUnescapeHtml3" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#outsideOf" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3", "testEscapeHtml4", "testUnescapeHtml3" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3", "testEscapeHtml4", "testUnescapeHtml3" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3", "testEscapeHtml4", "testUnescapeHtml3" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3", "testEscapeHtml4", "testUnescapeHtml3" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#between" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3", "testEscapeHtml4", "testUnescapeHtml3" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3", "testEscapeHtml4", "testUnescapeHtml3" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper#isSet" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeHtml3" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeHtml3" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3", "testEscapeHtml4", "testUnescapeHtml3" ]
          }
        },
        "org.apache.commons.text.translate.SinglePassTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3", "testEscapeHtml4", "testUnescapeHtml3" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3", "testEscapeHtml4", "testUnescapeHtml3" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3", "testEscapeHtml4", "testUnescapeHtml3" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemover#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtml3", "testEscapeHtml4", "testUnescapeHtml3" ]
          }
        }
      }
    },
    "867c38f10665e78f5b2acfbb9d0dc8bfc1bd6fe6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "867c38f10665e78f5b2acfbb9d0dc8bfc1bd6fe6~1",
      "changedClazzes" : {
        "org.apache.commons.text.translate.LookupTranslator#<init>(Map)" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml3", "testEscapeHtml4", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml3", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull" ],
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup", "testLang882" ]
          }
        }
      }
    },
    "4bc51591fe9d482a7fdbb21373b51f3f70765bac" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4bc51591fe9d482a7fdbb21373b51f3f70765bac~1",
      "changedClazzes" : {
        "org.apache.commons.text.translate.NumericEntityUnescaper" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml3", "testEscapeHtml4", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml3", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper$OPTION" : {
          "testcases" : { }
        }
      }
    },
    "3a641403fc496591f60c68d68cc28784a617e2c9" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3a641403fc496591f60c68d68cc28784a617e2c9~1",
      "changedClazzes" : {
        "org.apache.commons.text.ExtendedMessageFormat#<init>(String)" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat", "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#<init>(String,Map)" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testOverriddenBuiltinFormat", "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        }
      }
    },
    "fe20a173e01a0d73e75d0907fed3a371d34d0f8b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "fe20a173e01a0d73e75d0907fed3a371d34d0f8b~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.JaroWinklerDistance#apply(CharSequence,CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullNull", "testGetJaroWinklerDistance_NullString", "testGetJaroWinklerDistance_StringNull", "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistanceTest#testGetJaroWinklerDistance_StringString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.ParameterizedSimilarityScoreFromTest#parameters" : {
          "testcases" : { }
        }
      }
    },
    "43b249b200b5bd901094207461b22144e2c1b56d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "43b249b200b5bd901094207461b22144e2c1b56d~1",
      "changedClazzes" : {
        "org.apache.commons.text.AlphabetConverter#createConverterFromMap(Map)" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest" ]
          }
        }
      }
    },
    "b0027e18d2e634e2a822962f6fbd3d296c82e722" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b0027e18d2e634e2a822962f6fbd3d296c82e722~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrTokenizer#clone" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testTSV", "testTSVEmpty" ]
          }
        }
      }
    },
    "0b8532b5bfcf8aedd303c2c0e97296a50d48fa1b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0b8532b5bfcf8aedd303c2c0e97296a50d48fa1b~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrTokenizer#clone" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testTSV", "testTSVEmpty" ]
          }
        }
      }
    },
    "66cf58776ccc495f7710896b74060c15378cfac3" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "66cf58776ccc495f7710896b74060c15378cfac3~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrLookup$SystemPropertiesStrLookup#lookup(String)" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#<init>(Map)" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml3", "testEscapeHtml4", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml3", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull" ],
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup", "testLang882" ]
          }
        }
      }
    },
    "edb0676a3e40ff414c9c0047e3829b28a219d08f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "edb0676a3e40ff414c9c0047e3829b28a219d08f~1",
      "changedClazzes" : {
        "org.apache.commons.text.RandomStringGenerator" : {
          "testcases" : { }
        },
        "org.apache.commons.text.RandomStringGenerator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testChangeOfFilter", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#generate" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testChangeOfFilter", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#generateRandomNumber" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testChangeOfFilter", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#build" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testChangeOfFilter", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#filteredBy" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testChangeOfFilter", "testMultipleFilters", "testRemoveFilters" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#usingRandom" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testUsingRandom" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#withinRange" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testMultipleFilters", "testNoPrivateCharacters", "testRemoveFilters", "testWithinRange" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#codePointLength" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSetLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testBadMaximumCodePoint" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testBadMinAndMax" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMinAndMax" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testBadMinimumCodePoint" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMinimumCodePoint" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testChangeOfFilter" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testChangeOfFilter" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testInvalidLength" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testInvalidLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testMultipleFilters" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testMultipleFilters" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testNoLoneSurrogates" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testNoLoneSurrogates" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testNoPrivateCharacters" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testNoPrivateCharacters" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testRemoveFilters" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testRemoveFilters" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testSetLength" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSetLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testUsingRandom" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testUsingRandom" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testWithinRange" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testWithinRange" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testZeroLength" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testZeroLength" ]
          }
        }
      }
    },
    "8d14206b94631e5c78a51e1a319c7e7ad06e890a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8d14206b94631e5c78a51e1a319c7e7ad06e890a~1",
      "changedClazzes" : {
        "org.apache.commons.text.RandomStringGeneratorTest#testUsingRandom" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testUsingRandom" ]
          }
        },
        "org.apache.commons.text.TextRandomProvider" : {
          "testcases" : { }
        }
      }
    },
    "c72a24bc24f2650a71bee0418b2ee3609f297cdc" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c72a24bc24f2650a71bee0418b2ee3609f297cdc~1",
      "changedClazzes" : {
        "org.apache.commons.text.RandomStringGenerator#generate(int)" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testChangeOfFilter", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange", "testZeroLength" ]
          }
        }
      }
    },
    "5b89b382021600d2dac0ee2d06265fd4d9e08264" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5b89b382021600d2dac0ee2d06265fd4d9e08264~1",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtils" : {
          "testcases" : { }
        },
        "org.apache.commons.text.WordUtils#<init>" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testConstructor" ]
          }
        },
        "org.apache.commons.text.WordUtils#capitalize" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeWithDelimiters_String", "testCapitalize_String" ]
          }
        },
        "org.apache.commons.text.WordUtils#capitalizeFully" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String" ]
          }
        },
        "org.apache.commons.text.WordUtils#containsAllWords" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testContainsAllWords_StringString" ]
          }
        },
        "org.apache.commons.text.WordUtils#initials" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testInitials_String", "testInitials_String_charArray" ]
          }
        },
        "org.apache.commons.text.WordUtils#isDelimiter" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testInitials_String", "testInitials_String_charArray", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String" ]
          }
        },
        "org.apache.commons.text.WordUtils#swapCase" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testSwapCase_String" ]
          }
        },
        "org.apache.commons.text.WordUtils#uncapitalize" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testUncapitalizeWithDelimiters_String", "testUncapitalize_String" ]
          }
        },
        "org.apache.commons.text.WordUtils#wrap" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testConstructor", "testContainsAllWords_StringString", "testInitials_String", "testInitials_String_charArray", "testSwapCase_String", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testCapitalizeFullyWithDelimiters_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testCapitalizeFully_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFully_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testCapitalizeWithDelimiters_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeWithDelimiters_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testCapitalize_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalize_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testConstructor" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testConstructor" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testContainsAllWords_StringString" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testContainsAllWords_StringString" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testInitials_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testInitials_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testInitials_String_charArray" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testInitials_String_charArray" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testSwapCase_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testSwapCase_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testUncapitalizeWithDelimiters_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testUncapitalizeWithDelimiters_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testUncapitalize_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testUncapitalize_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testWrap_StringInt" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testWrap_StringInt" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testWrap_StringIntStringBoolean" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testWrap_StringIntStringBoolean" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testWrap_StringIntStringBooleanString" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testWrap_StringIntStringBooleanString" ]
          }
        }
      }
    },
    "bd4cba26cff7d7d7fdb90727362e66f533f4b59f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "bd4cba26cff7d7d7fdb90727362e66f533f4b59f~1",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtils" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testConstructor", "testContainsAllWords_StringString", "testInitials_String", "testInitials_String_charArray", "testSwapCase_String", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        }
      }
    },
    "8b42549a1376ffa19b45fffbb6284c18d3cc3bc4" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8b42549a1376ffa19b45fffbb6284c18d3cc3bc4~1",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtils" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testConstructor", "testContainsAllWords_StringString", "testInitials_String", "testInitials_String_charArray", "testSwapCase_String", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        }
      }
    },
    "0d38c1bd4223a93be4e21edbb1ab94163ddac6f7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0d38c1bd4223a93be4e21edbb1ab94163ddac6f7~1",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtils#abbreviate" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerValue", "testAbbreviateForLowerValueAndAppendedString", "testAbbreviateForNullAndEmptyString", "testAbbreviateForUpperLimit", "testAbbreviateForUpperLimitAndAppendedString" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerValue", "testAbbreviateForLowerValueAndAppendedString", "testAbbreviateForNullAndEmptyString", "testAbbreviateForUpperLimit", "testAbbreviateForUpperLimitAndAppendedString", "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testConstructor", "testContainsAllWords_StringString", "testInitials_String", "testInitials_String_charArray", "testSwapCase_String", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testAbbreviateForLowerValue" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerValue" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testAbbreviateForLowerValueAndAppendedString" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerValueAndAppendedString" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testAbbreviateForNullAndEmptyString" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForNullAndEmptyString" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testAbbreviateForUpperLimit" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForUpperLimit" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testAbbreviateForUpperLimitAndAppendedString" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForUpperLimitAndAppendedString" ]
          }
        }
      }
    },
    "c0f7877b0e72b0b27fbd14c02da315e3247a2e95" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c0f7877b0e72b0b27fbd14c02da315e3247a2e95~1",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtils" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testConstructor", "testContainsAllWords_StringString", "testInitials_String", "testInitials_String_charArray", "testSwapCase_String", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        },
        "org.apache.commons.text.WordUtils#wrap" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testLANG1292" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testConstructor", "testContainsAllWords_StringString", "testInitials_String", "testInitials_String_charArray", "testLANG1292", "testSwapCase_String", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testLANG1292" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testLANG1292" ]
          }
        }
      }
    },
    "1dd427b46a6f13fdf92eab328aa79b77a0dbc0cb" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1dd427b46a6f13fdf92eab328aa79b77a0dbc0cb~1",
      "changedClazzes" : {
        "org.apache.commons.text.AlphabetConverter" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.StrBuilder#appendNewLine" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendNewLine", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int" ]
          }
        }
      }
    },
    "5eba72cbfc7e5a3d14da8ab08d1e55a322d6d232" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "b043de5bd69866d49a6880511b0e205bc3a0da68" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "aa91645260cdd6dd56adc2264bb16b99496ba627" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "d4890a893e53c9bae1a20c19462ffbfeb78b79b9",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtils" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testConstructor", "testContainsAllWords_StringString", "testInitials_String", "testInitials_String_charArray", "testLANG1292", "testSwapCase_String", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        },
        "org.apache.commons.text.WordUtils#abbreviate" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerValue", "testAbbreviateForLowerValueAndAppendedString", "testAbbreviateForNullAndEmptyString", "testAbbreviateForUpperLimit", "testAbbreviateForUpperLimitAndAppendedString" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerValue", "testAbbreviateForLowerValueAndAppendedString", "testAbbreviateForNullAndEmptyString", "testAbbreviateForUpperLimit", "testAbbreviateForUpperLimitAndAppendedString", "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testConstructor", "testContainsAllWords_StringString", "testInitials_String", "testInitials_String_charArray", "testLANG1292", "testSwapCase_String", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testAbbreviateForLowerValue" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerValue" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testAbbreviateForLowerValueAndAppendedString" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerValueAndAppendedString" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testAbbreviateForNullAndEmptyString" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForNullAndEmptyString" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testAbbreviateForUpperLimit" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForUpperLimit" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testAbbreviateForUpperLimitAndAppendedString" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForUpperLimitAndAppendedString" ]
          }
        }
      }
    },
    "a611df552758f50700c6faf868d97b8c6f749de6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a611df552758f50700c6faf868d97b8c6f749de6~1",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtils#abbreviate(String,int,int,String)" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerValue", "testAbbreviateForLowerValueAndAppendedString", "testAbbreviateForNullAndEmptyString", "testAbbreviateForUpperLimit", "testAbbreviateForUpperLimitAndAppendedString" ]
          }
        }
      }
    },
    "e3ea9dda89df37911876272f4ad0419c84f6fc50" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e3ea9dda89df37911876272f4ad0419c84f6fc50~1",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtils#abbreviate(String,int,int,String)" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerValue", "testAbbreviateForLowerValueAndAppendedString", "testAbbreviateForNullAndEmptyString", "testAbbreviateForUpperLimit", "testAbbreviateForUpperLimitAndAppendedString" ]
          }
        }
      }
    },
    "44847c52959d830c3fc941f9e3765d5e0facf786" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "44847c52959d830c3fc941f9e3765d5e0facf786~1",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtils#abbreviate" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerThanMinusOneValues", "testAbbreviateUpperLessThanLowerValues" ]
          }
        },
        "org.apache.commons.text.WordUtils#abbreviate(String,int,int,String)" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerValue", "testAbbreviateForLowerValueAndAppendedString", "testAbbreviateForNullAndEmptyString", "testAbbreviateForUpperLimit", "testAbbreviateForUpperLimitAndAppendedString" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerThanMinusOneValues", "testAbbreviateForLowerValue", "testAbbreviateForLowerValueAndAppendedString", "testAbbreviateForNullAndEmptyString", "testAbbreviateForUpperLimit", "testAbbreviateForUpperLimitAndAppendedString", "testAbbreviateUpperLessThanLowerValues", "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testConstructor", "testContainsAllWords_StringString", "testInitials_String", "testInitials_String_charArray", "testLANG1292", "testSwapCase_String", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testAbbreviateForLowerThanMinusOneValues" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerThanMinusOneValues" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testAbbreviateUpperLessThanLowerValues" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateUpperLessThanLowerValues" ]
          }
        }
      }
    },
    "c2a8f930da784a361a3533fa59457f2757441040" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c2a8f930da784a361a3533fa59457f2757441040~1",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtils#abbreviate" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testLANG673" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerThanMinusOneValues", "testAbbreviateForLowerValue", "testAbbreviateForLowerValueAndAppendedString", "testAbbreviateForNullAndEmptyString", "testAbbreviateForUpperLimit", "testAbbreviateForUpperLimitAndAppendedString", "testAbbreviateUpperLessThanLowerValues", "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testConstructor", "testContainsAllWords_StringString", "testInitials_String", "testInitials_String_charArray", "testLANG1292", "testLANG673", "testSwapCase_String", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testLANG673" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testLANG673" ]
          }
        }
      }
    },
    "e9cafb51e900aa6d5cc9eafc1171bc0d8d83dea5" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e9cafb51e900aa6d5cc9eafc1171bc0d8d83dea5~1",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtilsTest#testLANG673" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testLANG673" ]
          }
        }
      }
    },
    "83b366223209f2c8908ffadc888b2f45f181c827" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "83b366223209f2c8908ffadc888b2f45f181c827~1",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtils" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerThanMinusOneValues", "testAbbreviateForLowerValue", "testAbbreviateForLowerValueAndAppendedString", "testAbbreviateForNullAndEmptyString", "testAbbreviateForUpperLimit", "testAbbreviateForUpperLimitAndAppendedString", "testAbbreviateUpperLessThanLowerValues", "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testConstructor", "testContainsAllWords_StringString", "testInitials_String", "testInitials_String_charArray", "testLANG1292", "testLANG673", "testSwapCase_String", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        }
      }
    },
    "9615df734b6ee4633e45eb3d737a9f5f2dc07654" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9615df734b6ee4633e45eb3d737a9f5f2dc07654~1",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtils#abbreviate(String,int,int,String)" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerThanMinusOneValues", "testAbbreviateForLowerValue", "testAbbreviateForLowerValueAndAppendedString", "testAbbreviateForNullAndEmptyString", "testAbbreviateForUpperLimit", "testAbbreviateForUpperLimitAndAppendedString", "testAbbreviateUpperLessThanLowerValues", "testLANG673" ]
          }
        }
      }
    },
    "7324502096a1e7f02c510285aba087557dec0059" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7324502096a1e7f02c510285aba087557dec0059~1",
      "changedClazzes" : {
        "org.apache.commons.text.RandomStringGenerator#generate(int)" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testChangeOfFilter", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#withinRange(int,int)" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testMultipleFilters", "testNoPrivateCharacters", "testRemoveFilters", "testWithinRange" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariablePrefix(String)" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testDefaultValueDelimiters", "testGetSetPrefix", "testSamePrefixAndSuffix", "testStaticReplacePrefixSuffix", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariablePrefixMatcher(StrMatcher)" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariableSuffix(String)" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testDefaultValueDelimiters", "testGetSetSuffix", "testSamePrefixAndSuffix", "testStaticReplacePrefixSuffix", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariableSuffixMatcher(StrMatcher)" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.WordUtils#abbreviate(String,int,int,String)" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerThanMinusOneValues", "testAbbreviateForLowerValue", "testAbbreviateForLowerValueAndAppendedString", "testAbbreviateForNullAndEmptyString", "testAbbreviateForUpperLimit", "testAbbreviateForUpperLimitAndAppendedString", "testAbbreviateUpperLessThanLowerValues", "testLANG673" ]
          }
        },
        "org.apache.commons.text.similarity.EditDistanceFrom#<init>(EditDistance,CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample", "testMissingMetric" ]
          }
        },
        "org.apache.commons.text.similarity.RegexTokenizer#tokenize(CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.SimilarityScoreFrom#<init>(SimilarityScore,CharSequence)" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#translate(CharSequence,Writer)" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml3", "testEscapeHtml4", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml3", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNullConstructor", "testNullVarargConstructor" ],
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ],
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ],
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ],
            "org.apache.commons.text.translate.OctalUnescaperTest" : [ "testBetween" ],
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween" ],
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testLessThanFour", "testUPlus", "testUuuuu" ]
          }
        }
      }
    },
    "18969d7d862264e3b5267ba170cf60645863ad19" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "18969d7d862264e3b5267ba170cf60645863ad19~1",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtils" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerThanMinusOneValues", "testAbbreviateForLowerValue", "testAbbreviateForLowerValueAndAppendedString", "testAbbreviateForNullAndEmptyString", "testAbbreviateForUpperLimit", "testAbbreviateForUpperLimitAndAppendedString", "testAbbreviateUpperLessThanLowerValues", "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testConstructor", "testContainsAllWords_StringString", "testInitials_String", "testInitials_String_charArray", "testLANG1292", "testLANG673", "testSwapCase_String", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        }
      }
    },
    "ed55131f3679c12b53b45aae3000a7759dcfe4f0" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ed55131f3679c12b53b45aae3000a7759dcfe4f0~1",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtils#capitalize(String,char[])" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeWithDelimiters_String", "testCapitalize_String" ]
          }
        },
        "org.apache.commons.text.WordUtils#uncapitalize(String,char[])" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testUncapitalizeWithDelimiters_String", "testUncapitalize_String" ]
          }
        }
      }
    },
    "1e06bd5f7b3ba52b261f116d4ab6e45d0dc429cd" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1e06bd5f7b3ba52b261f116d4ab6e45d0dc429cd~1",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtils#abbreviate(String,int,int,String)" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerThanMinusOneValues", "testAbbreviateForLowerValue", "testAbbreviateForLowerValueAndAppendedString", "testAbbreviateForNullAndEmptyString", "testAbbreviateForUpperLimit", "testAbbreviateForUpperLimitAndAppendedString", "testAbbreviateUpperLessThanLowerValues", "testLANG673" ]
          }
        }
      }
    },
    "9493dfb271c140ba9bbc0ace0ae0e89f4a8b7d4a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "9493dfb271c140ba9bbc0ace0ae0e89f4a8b7d4a~1",
      "changedClazzes" : {
        "org.apache.commons.text.translate.NumericEntityEscaper" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml3", "testEscapeHtml4", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml3", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ]
          }
        }
      }
    },
    "c9cfd335f314e61a6c7f56cae4a4f818ffa5d75b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c9cfd335f314e61a6c7f56cae4a4f818ffa5d75b~1",
      "changedClazzes" : {
        "org.apache.commons.text.translate.CsvTranslators" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeCsvString", "testEscapeCsvWriter", "testUnescapeCsvString", "testUnescapeCsvWriter" ]
          }
        }
      }
    },
    "e85959f7a2caa98b942d4b8a3e1132da7024bda5" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e85959f7a2caa98b942d4b8a3e1132da7024bda5~1",
      "changedClazzes" : {
        "org.apache.commons.text.translate.CharSequenceTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvEscaperCRTest", "csvEscaperCommaTest", "csvEscaperLFTest", "csvEscaperPlaneTextTest", "csvEscaperQuoteTest", "csvUnEscaperPlaneTextTest", "csvUnEscaperTest1", "csvUnEscaperTest2", "csvUnEscaperTest3", "csvUnEscaperTest4" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslators#access$000" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvEscaperCRTest", "csvEscaperCommaTest", "csvEscaperLFTest", "csvEscaperPlaneTextTest", "csvEscaperQuoteTest", "csvUnEscaperTest1", "csvUnEscaperTest4" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslators#access$100" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvEscaperCRTest", "csvEscaperCommaTest", "csvEscaperLFTest", "csvEscaperQuoteTest", "csvUnEscaperTest1", "csvUnEscaperTest4" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslators#access$200" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvEscaperCRTest", "csvEscaperCommaTest", "csvEscaperLFTest", "csvEscaperQuoteTest", "csvUnEscaperTest1", "csvUnEscaperTest4" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslators$CsvEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvEscaperCRTest", "csvEscaperCommaTest", "csvEscaperLFTest", "csvEscaperPlaneTextTest", "csvEscaperQuoteTest" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslators$CsvEscaper#translateWhole" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvEscaperCRTest", "csvEscaperCommaTest", "csvEscaperLFTest", "csvEscaperPlaneTextTest", "csvEscaperQuoteTest" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslators$CsvUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvUnEscaperPlaneTextTest", "csvUnEscaperTest1", "csvUnEscaperTest2", "csvUnEscaperTest3", "csvUnEscaperTest4" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslators$CsvUnescaper#translateWhole" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvUnEscaperPlaneTextTest", "csvUnEscaperTest1", "csvUnEscaperTest2", "csvUnEscaperTest3", "csvUnEscaperTest4" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslatorsTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvEscaperCRTest", "csvEscaperCommaTest", "csvEscaperLFTest", "csvEscaperPlaneTextTest", "csvEscaperQuoteTest", "csvUnEscaperPlaneTextTest", "csvUnEscaperTest1", "csvUnEscaperTest2", "csvUnEscaperTest3", "csvUnEscaperTest4" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslatorsTest#csvEscaperCRTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvEscaperCRTest" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslatorsTest#csvEscaperCommaTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvEscaperCommaTest" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslatorsTest#csvEscaperLFTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvEscaperLFTest" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslatorsTest#csvEscaperPlaneTextTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvEscaperPlaneTextTest" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslatorsTest#csvEscaperQuoteTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvEscaperQuoteTest" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslatorsTest#csvUnEscaperPlaneTextTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvUnEscaperPlaneTextTest" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslatorsTest#csvUnEscaperTest1" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvUnEscaperTest1" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslatorsTest#csvUnEscaperTest2" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvUnEscaperTest2" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslatorsTest#csvUnEscaperTest3" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvUnEscaperTest3" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslatorsTest#csvUnEscaperTest4" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvUnEscaperTest4" ]
          }
        },
        "org.apache.commons.text.translate.SinglePassTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvEscaperCRTest", "csvEscaperCommaTest", "csvEscaperLFTest", "csvEscaperPlaneTextTest", "csvEscaperQuoteTest", "csvUnEscaperPlaneTextTest", "csvUnEscaperTest1", "csvUnEscaperTest2", "csvUnEscaperTest3", "csvUnEscaperTest4" ]
          }
        }
      }
    },
    "5f498c0f4783d035bfeb77517731c948f8567b1e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5f498c0f4783d035bfeb77517731c948f8567b1e~1",
      "changedClazzes" : {
        "org.apache.commons.text.translate.CsvTranslatorsTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvEscaperCRTest", "csvEscaperCommaTest", "csvEscaperLFTest", "csvEscaperPlaneTextTest", "csvEscaperQuoteTest", "csvUnEscaperPlaneTextTest", "csvUnEscaperTest1", "csvUnEscaperTest2", "csvUnEscaperTest3", "csvUnEscaperTest4" ]
          }
        }
      }
    },
    "8c94bb39451812304e79059a9274792edc98ddcb" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8c94bb39451812304e79059a9274792edc98ddcb~1",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtilsTest#testCapitalizeFullyWithDelimiters_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testCapitalizeFully_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFully_String" ]
          }
        }
      }
    },
    "65f5889f501f784264606f0e087fe8afb653c40d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "65f5889f501f784264606f0e087fe8afb653c40d~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrBuilder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrBuilder#append" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrBuilder#clear" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrBuilder#ensureCapacity" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrBuilder#length" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrBuilder#size" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrBuilder#substring" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrBuilder#validateRange" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcher#commaMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcher#doubleQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcher#noneMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcher#quoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcher#splitMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcher#stringMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcher#tabMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcher#trimMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharSetMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharSetMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcher$NoMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcher$NoMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcher$StringMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcher$StringMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrMatcher$TrimMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#addToken" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#checkTokenized" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getIgnoredMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getTrimmerMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#hasNext" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#isQuote" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#next" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#readNextToken" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#readWithQuotes" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setDelimiterString" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setEmptyTokenAsNull" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setIgnoreEmptyTokens" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setIgnoredMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setTrimmerMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#tokenize" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testStringTokenizerQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testStringTokenizerStrMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerStrMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testStringTokenizerStringMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerStringMatcher" ]
          }
        }
      }
    },
    "2a9d97036ca7d06a032888d1e2718d0db0c20b59" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2a9d97036ca7d06a032888d1e2718d0db0c20b59~1",
      "changedClazzes" : {
        "org.apache.commons.text.translate.NumericEntityEscaper" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml3", "testEscapeHtml4", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml3", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ]
          }
        }
      }
    },
    "597a8adcb69045a680884a8b9f99cae7b71efc86" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "597a8adcb69045a680884a8b9f99cae7b71efc86~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrTokenizerTest" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        }
      }
    },
    "f2626183fcf7d92fd51be24da92f033c8c22f957" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f2626183fcf7d92fd51be24da92f033c8c22f957~1",
      "changedClazzes" : {
        "org.apache.commons.text.CaseUtils" : {
          "testcases" : { }
        },
        "org.apache.commons.text.CaseUtils#<init>" : {
          "testcases" : {
            "org.apache.commons.text.CaseUtilsTest" : [ "testConstructor" ]
          }
        },
        "org.apache.commons.text.CaseUtils#generateDelimiterSet" : {
          "testcases" : {
            "org.apache.commons.text.CaseUtilsTest" : [ "testToCamelCase" ]
          }
        },
        "org.apache.commons.text.CaseUtils#toCamelCase" : {
          "testcases" : {
            "org.apache.commons.text.CaseUtilsTest" : [ "testToCamelCase" ]
          }
        },
        "org.apache.commons.text.CaseUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.CaseUtilsTest" : [ "testConstructor", "testToCamelCase" ]
          }
        },
        "org.apache.commons.text.CaseUtilsTest#testConstructor" : {
          "testcases" : {
            "org.apache.commons.text.CaseUtilsTest" : [ "testConstructor" ]
          }
        },
        "org.apache.commons.text.CaseUtilsTest#testToCamelCase" : {
          "testcases" : {
            "org.apache.commons.text.CaseUtilsTest" : [ "testToCamelCase" ]
          }
        }
      }
    },
    "2035ed14fc77342909a35c1b61b28e8be66f49e0" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2035ed14fc77342909a35c1b61b28e8be66f49e0~1",
      "changedClazzes" : {
        "org.apache.commons.text.RandomStringGenerator" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testChangeOfFilter", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#generate" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#generateRandomNumber" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#build" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#codePointLength" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testGenerateMinMaxLength" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testGenerateMinMaxLengthInvalidLength" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLengthInvalidLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testGenerateMinMaxLengthMinGreaterThanMax" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLengthMinGreaterThanMax" ]
          }
        }
      }
    },
    "72d54ae8be46867769f90b7cd86cf10f85f3b28c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "72d54ae8be46867769f90b7cd86cf10f85f3b28c~1",
      "changedClazzes" : {
        "org.apache.commons.text.CaseUtils" : {
          "testcases" : { }
        },
        "org.apache.commons.text.CaseUtils#<init>" : {
          "testcases" : {
            "org.apache.commons.text.CaseUtilsTest" : [ "testConstructor" ]
          }
        },
        "org.apache.commons.text.CaseUtils#generateDelimiterSet" : {
          "testcases" : {
            "org.apache.commons.text.CaseUtilsTest" : [ "testToCamelCase" ]
          }
        },
        "org.apache.commons.text.CaseUtils#toCamelCase" : {
          "testcases" : {
            "org.apache.commons.text.CaseUtilsTest" : [ "testToCamelCase" ]
          }
        },
        "org.apache.commons.text.CaseUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.CaseUtilsTest" : [ "testConstructor", "testToCamelCase" ]
          }
        },
        "org.apache.commons.text.CaseUtilsTest#testConstructor" : {
          "testcases" : {
            "org.apache.commons.text.CaseUtilsTest" : [ "testConstructor" ]
          }
        },
        "org.apache.commons.text.CaseUtilsTest#testToCamelCase" : {
          "testcases" : {
            "org.apache.commons.text.CaseUtilsTest" : [ "testToCamelCase" ]
          }
        }
      }
    },
    "3f49fe323581a50083ede0cc21e80b733b400ead" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3f49fe323581a50083ede0cc21e80b733b400ead~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrBuilder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBufferException", "testAppendCharBufferNull", "testAppendCharSequence", "testAppendStringBuilderNull", "testAppendln" ]
          }
        },
        "org.apache.commons.text.StrBuilder#append" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBufferException", "testAppendCharBufferNull", "testAppendCharSequence", "testAppendStringBuilderNull", "testAppendln" ]
          }
        },
        "org.apache.commons.text.StrBuilder#appendNewLine" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendln" ]
          }
        },
        "org.apache.commons.text.StrBuilder#appendNull" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBufferNull", "testAppendCharSequence", "testAppendStringBuilderNull" ]
          }
        },
        "org.apache.commons.text.StrBuilder#appendln" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendln" ]
          }
        },
        "org.apache.commons.text.StrBuilder#ensureCapacity" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBufferException", "testAppendCharBufferNull", "testAppendCharSequence", "testAppendln" ]
          }
        },
        "org.apache.commons.text.StrBuilder#length" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBufferException", "testAppendCharBufferNull", "testAppendCharSequence", "testAppendln" ]
          }
        },
        "org.apache.commons.text.StrBuilder#size" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBufferException" ]
          }
        },
        "org.apache.commons.text.StrBuilder#toString" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBufferException", "testAppendCharBufferNull", "testAppendCharSequence", "testAppendStringBuilderNull", "testAppendln" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendCharBufferException", "testAppendCharBufferNull", "testAppendCharSequence", "testAppendStringBuilderNull", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAppendln", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testGetSetNewLineText", "testGetSetNullText", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLang412Left", "testLang412Right", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim", "test_LANG_1131_EqualsWithNullStrBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAppendCharBufferException" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBufferException" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAppendCharBufferNull" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBufferNull" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAppendCharSequence" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharSequence" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAppendStringBuilderNull" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendStringBuilderNull" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAppendln" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendln" ]
          }
        }
      }
    },
    "3fcc4e8586807424fff21ee1f55fc2779ae78524" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3fcc4e8586807424fff21ee1f55fc2779ae78524~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrBuilderTest#testAppendln" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendln" ]
          }
        }
      }
    },
    "997a613477a170926f5e82d693cc5cf2f4d1e473" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "997a613477a170926f5e82d693cc5cf2f4d1e473~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrBuilderTest#testAppendStringBuilderNull" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendStringBuilderNull" ]
          }
        }
      }
    },
    "25ec8d186b37b8d0a85a9c42d10a107966ce955d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "25ec8d186b37b8d0a85a9c42d10a107966ce955d~1",
      "changedClazzes" : {
        "org.apache.commons.text.CaseUtils" : {
          "testcases" : {
            "org.apache.commons.text.CaseUtilsTest" : [ "testConstructor", "testToCamelCase" ]
          }
        }
      }
    },
    "569dbc09402a6f28334936567a597e3d0db9185c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "569dbc09402a6f28334936567a597e3d0db9185c~1",
      "changedClazzes" : {
        "org.apache.commons.text.CharacterPredicates" : {
          "testcases" : { }
        },
        "org.apache.commons.text.CharacterPredicatesTest" : {
          "testcases" : {
            "org.apache.commons.text.CharacterPredicatesTest" : [ "testArabicNumerals", "testAsciiAlphaNumerals", "testAsciiLetters", "testAsciiLowercaseLetters", "testAsciiUppercaseLetters", "testDigits", "testLetters" ]
          }
        },
        "org.apache.commons.text.CharacterPredicatesTest#testArabicNumerals" : {
          "testcases" : {
            "org.apache.commons.text.CharacterPredicatesTest" : [ "testArabicNumerals" ]
          }
        },
        "org.apache.commons.text.CharacterPredicatesTest#testAsciiAlphaNumerals" : {
          "testcases" : {
            "org.apache.commons.text.CharacterPredicatesTest" : [ "testAsciiAlphaNumerals" ]
          }
        },
        "org.apache.commons.text.CharacterPredicatesTest#testAsciiLetters" : {
          "testcases" : {
            "org.apache.commons.text.CharacterPredicatesTest" : [ "testAsciiLetters" ]
          }
        },
        "org.apache.commons.text.CharacterPredicatesTest#testAsciiLowercaseLetters" : {
          "testcases" : {
            "org.apache.commons.text.CharacterPredicatesTest" : [ "testAsciiLowercaseLetters" ]
          }
        },
        "org.apache.commons.text.CharacterPredicatesTest#testAsciiUppercaseLetters" : {
          "testcases" : {
            "org.apache.commons.text.CharacterPredicatesTest" : [ "testAsciiUppercaseLetters" ]
          }
        }
      }
    },
    "278f1e0fb553fc2d2d6f5563d9e61899776cd80d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "278f1e0fb553fc2d2d6f5563d9e61899776cd80d~1",
      "changedClazzes" : {
        "org.apache.commons.text.RandomStringGenerator" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testChangeOfFilter", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSelectFromCharArray", "testSelectFromList" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#generate" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSelectFromCharArray", "testSelectFromList" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#generateRandomNumber" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSelectFromCharArray", "testSelectFromList" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSetLength", "testUsingRandom", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSelectFromCharArray", "testSelectFromList" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#build" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSelectFromCharArray", "testSelectFromList" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#selectFromList" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSelectFromCharArray", "testSelectFromList" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSelectFromCharArray", "testSelectFromList", "testSetLength", "testUsingRandom", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testSelectFromCharArray" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSelectFromCharArray" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testSelectFromList" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSelectFromList" ]
          }
        }
      }
    },
    "2dfadf4f8b51ae65d1b1b1f17afa3387b908c31f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2dfadf4f8b51ae65d1b1b1f17afa3387b908c31f~1",
      "changedClazzes" : {
        "org.apache.commons.text.CaseUtils" : {
          "testcases" : {
            "org.apache.commons.text.CaseUtilsTest" : [ "testConstructor", "testToCamelCase" ]
          }
        },
        "org.apache.commons.text.CaseUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.CaseUtilsTest" : [ "testConstructor", "testToCamelCase" ]
          }
        },
        "org.apache.commons.text.CharacterPredicates" : {
          "testcases" : { }
        },
        "org.apache.commons.text.CharacterPredicatesTest" : {
          "testcases" : {
            "org.apache.commons.text.CharacterPredicatesTest" : [ "testArabicNumerals", "testAsciiAlphaNumerals", "testAsciiLetters", "testAsciiLowercaseLetters", "testAsciiUppercaseLetters", "testDigits", "testLetters" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testChangeOfFilter", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSelectFromCharArray", "testSelectFromList", "testSetLength", "testUsingRandom", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#generate" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#generateRandomNumber" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSelectFromCharArray", "testSelectFromList", "testSetLength", "testUsingRandom", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#build" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSelectFromCharArray", "testSelectFromList", "testSetLength", "testUsingRandom", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#codePointLength" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testGenerateMinMaxLength" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testGenerateMinMaxLengthInvalidLength" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLengthInvalidLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testGenerateMinMaxLengthMinGreaterThanMax" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLengthMinGreaterThanMax" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendCharBufferException", "testAppendCharBufferNull", "testAppendCharSequence", "testAppendStringBuilderNull", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAppendln", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testGetSetNewLineText", "testGetSetNullText", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLang412Left", "testLang412Right", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim", "test_LANG_1131_EqualsWithNullStrBuilder" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testCapitalizeFullyWithDelimiters_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testCapitalizeFully_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFully_String" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml3", "testEscapeHtml4", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml3", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ]
          }
        }
      }
    },
    "c1aabc0172e86f4f28a0444afebda335d144b039" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c1aabc0172e86f4f28a0444afebda335d144b039~1",
      "changedClazzes" : {
        "org.apache.commons.text.RandomStringGenerator" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testChangeOfFilter", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSelectFromCharArray", "testSetLength", "testUsingRandom", "testWithinRange", "testZeroLength" ]
          }
        }
      }
    },
    "b7ac42b27d0c0678a18c39b2929a21725aed6086" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b7ac42b27d0c0678a18c39b2929a21725aed6086~1",
      "changedClazzes" : {
        "org.apache.commons.text.CaseUtils" : {
          "testcases" : {
            "org.apache.commons.text.CaseUtilsTest" : [ "testConstructor", "testToCamelCase" ]
          }
        },
        "org.apache.commons.text.CaseUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.CaseUtilsTest" : [ "testConstructor", "testToCamelCase" ]
          }
        },
        "org.apache.commons.text.CharacterPredicates" : {
          "testcases" : { }
        },
        "org.apache.commons.text.CharacterPredicatesTest" : {
          "testcases" : {
            "org.apache.commons.text.CharacterPredicatesTest" : [ "testArabicNumerals", "testAsciiAlphaNumerals", "testAsciiLetters", "testAsciiLowercaseLetters", "testAsciiUppercaseLetters", "testDigits", "testLetters" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testChangeOfFilter", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSelectFromCharArray", "testSetLength", "testUsingRandom", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#generate" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#generateRandomNumber" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSelectFromCharArray", "testSetLength", "testUsingRandom", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#build" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSelectFromCharArray", "testSetLength", "testUsingRandom", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#codePointLength" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testGenerateMinMaxLength" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testGenerateMinMaxLengthInvalidLength" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLengthInvalidLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testGenerateMinMaxLengthMinGreaterThanMax" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateMinMaxLengthMinGreaterThanMax" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendCharBufferException", "testAppendCharBufferNull", "testAppendCharSequence", "testAppendStringBuilderNull", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAppendln", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testGetSetNewLineText", "testGetSetNullText", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLang412Left", "testLang412Right", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim", "test_LANG_1131_EqualsWithNullStrBuilder" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testCapitalizeFullyWithDelimiters_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testCapitalizeFully_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFully_String" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml3", "testEscapeHtml4", "testEscapeHtmlHighUnicode", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeHtml3", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testSupplementary" ]
          }
        }
      }
    },
    "f9177e204d608e7fa708d57fabf0029746f7774a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f9177e204d608e7fa708d57fabf0029746f7774a~1",
      "changedClazzes" : {
        "org.apache.commons.text.RandomStringGenerator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSelectFromList" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#generate" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSelectFromList" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#generateRandomNumber" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSelectFromList" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSelectFromList" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#build" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSelectFromList" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#selectFromList" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSelectFromList" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#selectFromList(List)" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSelectFromCharArray" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSelectFromList" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testSelectFromList" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSelectFromList" ]
          }
        }
      }
    },
    "df30bf96856287478f3a7dfa7f017ca175bdd352" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "df30bf96856287478f3a7dfa7f017ca175bdd352~1",
      "changedClazzes" : {
        "org.apache.commons.text.RandomStringGenerator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSelectFromCharVarargs" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#generate" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSelectFromCharVarargs" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#generateRandomNumber" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSelectFromCharVarargs" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSelectFromCharArray", "testSetLength", "testUsingRandom", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSelectFromCharVarargs" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#build" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSelectFromCharVarargs" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#selectFrom" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSelectFromCharVarargs" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSelectFromCharVarargs" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testSelectFromCharArray" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSelectFromCharArray" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testSelectFromCharVarargs" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testSelectFromCharVarargs" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testSelectFromList" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ ]
          }
        }
      }
    },
    "beb0b4615a94420cc86595c1f060711dd999af91" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "beb0b4615a94420cc86595c1f060711dd999af91~1",
      "changedClazzes" : {
        "org.apache.commons.text.RandomStringGenerator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testWithinMultipleRanges" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#generate" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testWithinMultipleRanges" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#generateRandomNumber" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testWithinMultipleRanges" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSelectFromCharArray", "testSelectFromCharVarargs", "testSetLength", "testUsingRandom", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testWithinMultipleRanges" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#build" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testWithinMultipleRanges" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#withinRange" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testWithinMultipleRanges" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSelectFromCharArray", "testSelectFromCharVarargs", "testSetLength", "testUsingRandom", "testWithinMultipleRanges", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testWithinMultipleRanges" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testWithinMultipleRanges" ]
          }
        }
      }
    },
    "3f5dfd4b1cc24fa31446a9ea5821cf267375e552" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3f5dfd4b1cc24fa31446a9ea5821cf267375e552~1",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtils#capitalize" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFully_Text88" ]
          }
        },
        "org.apache.commons.text.WordUtils#capitalize(String,char[])" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeWithDelimiters_String", "testCapitalize_String" ]
          }
        },
        "org.apache.commons.text.WordUtils#capitalizeFully" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFully_Text88" ]
          }
        },
        "org.apache.commons.text.WordUtils#capitalizeFully(String,char[])" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String" ]
          }
        },
        "org.apache.commons.text.WordUtils#isDelimiter" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFully_Text88", "testUnCapitalize_Text88" ]
          }
        },
        "org.apache.commons.text.WordUtils#uncapitalize" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testUnCapitalize_Text88" ]
          }
        },
        "org.apache.commons.text.WordUtils#uncapitalize(String,char[])" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testUncapitalizeWithDelimiters_String", "testUncapitalize_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerThanMinusOneValues", "testAbbreviateForLowerValue", "testAbbreviateForLowerValueAndAppendedString", "testAbbreviateForNullAndEmptyString", "testAbbreviateForUpperLimit", "testAbbreviateForUpperLimitAndAppendedString", "testAbbreviateUpperLessThanLowerValues", "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeFully_Text88", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testConstructor", "testContainsAllWords_StringString", "testInitials_String", "testInitials_String_charArray", "testLANG1292", "testLANG673", "testSwapCase_String", "testUnCapitalize_Text88", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testCapitalizeFully_Text88" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFully_Text88" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testUnCapitalize_Text88" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testUnCapitalize_Text88" ]
          }
        }
      }
    },
    "ecaaf9040561fbc410ad0375050af07bf20ca7fe" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ecaaf9040561fbc410ad0375050af07bf20ca7fe~1",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtilsTest#testCapitalizeFullyWithDelimiters_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testCapitalizeFully_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFully_String" ]
          }
        }
      }
    },
    "aaf4aba369ed0b97d17bc9343f763b0d099dbc2f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "aaf4aba369ed0b97d17bc9343f763b0d099dbc2f~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrBuilderTest#testAppendCharBufferNull" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBufferNull" ]
          }
        }
      }
    },
    "15c2e4b28686edf6f0807304367dba82ac3d359d" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "15c2e4b28686edf6f0807304367dba82ac3d359d~1",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtils#initials" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testInitialsSurrogatePairs" ]
          }
        },
        "org.apache.commons.text.WordUtils#initials(String,char[])" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testInitials_String", "testInitials_String_charArray" ]
          }
        },
        "org.apache.commons.text.WordUtils#isDelimiter" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testInitialsSurrogatePairs" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerThanMinusOneValues", "testAbbreviateForLowerValue", "testAbbreviateForLowerValueAndAppendedString", "testAbbreviateForNullAndEmptyString", "testAbbreviateForUpperLimit", "testAbbreviateForUpperLimitAndAppendedString", "testAbbreviateUpperLessThanLowerValues", "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeFully_Text88", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testConstructor", "testContainsAllWords_StringString", "testInitialsSurrogatePairs", "testInitials_String", "testInitials_String_charArray", "testLANG1292", "testLANG673", "testSwapCase_String", "testUnCapitalize_Text88", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testInitialsSurrogatePairs" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testInitialsSurrogatePairs" ]
          }
        }
      }
    },
    "79ef3cdf1a931531774da378209772dfc743d84a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "79ef3cdf1a931531774da378209772dfc743d84a~1",
      "changedClazzes" : {
        "org.apache.commons.text.AlphabetConverter#<init>" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testCreateConverterFromCharsAndEquals", "testCreateConverterFromCharsOne", "testCreateConverterFromMapAndEquals", "testDecodeReturningNull", "testEquals", "testEqualsWithNull" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#codePointToString" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testCreateConverterFromCharsAndEquals", "testCreateConverterFromCharsOne", "testCreateConverterFromMapAndEquals", "testEquals" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#convertCharsToIntegers" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testCreateConverterFromCharsAndEquals", "testCreateConverterFromCharsOne", "testCreateConverterFromCharsWithNullAndNull", "testEquals", "testEqualsWithNull" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#createConverter" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testCreateConverterFromCharsAndEquals", "testCreateConverterFromCharsOne", "testCreateConverterFromCharsWithNullAndNull", "testEquals", "testEqualsWithNull" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#createConverterFromChars" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testCreateConverterFromCharsAndEquals", "testCreateConverterFromCharsOne", "testCreateConverterFromCharsWithNullAndNull", "testEquals", "testEqualsWithNull" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#createConverterFromMap" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testCreateConverterFromMapAndEquals", "testDecodeReturningNull", "testEquals" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#decode" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testDecodeReturningNull" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#equals" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testCreateConverterFromCharsAndEquals", "testCreateConverterFromMapAndEquals", "testEquals", "testEqualsWithNull" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#getEncodedCharLength" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testCreateConverterFromCharsOne", "testCreateConverterFromMapAndEquals", "testDecodeReturningNull", "testEquals" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "testCreateConverterFromCharsAndEquals", "testCreateConverterFromCharsOne", "testCreateConverterFromCharsWithNullAndNull", "testCreateConverterFromMapAndEquals", "testDecodeReturningNull", "testEquals", "testEqualsWithNull", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#testCreateConverterFromCharsAndEquals" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testCreateConverterFromCharsAndEquals" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#testCreateConverterFromCharsOne" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testCreateConverterFromCharsOne" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#testCreateConverterFromCharsWithNullAndNull" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testCreateConverterFromCharsWithNullAndNull" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#testCreateConverterFromMapAndEquals" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testCreateConverterFromMapAndEquals" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#testDecodeReturningNull" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testDecodeReturningNull" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#testEquals" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testEquals" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#testEqualsWithNull" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testEqualsWithNull" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testCreatesExtendedMessageFormatTakingString", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#appendQuotedString" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#applyPattern" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testCreatesExtendedMessageFormatTakingString", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#containsElements" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testCreatesExtendedMessageFormatTakingString" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#equals" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testCreatesExtendedMessageFormatTakingString" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#getQuotedString" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#insertFormats" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testCreatesExtendedMessageFormatTakingString" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#next" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testCreatesExtendedMessageFormatTakingString", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#parseFormatDescription" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#readArgumentIndex" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#seekNonWs" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#toPattern" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testCreatesExtendedMessageFormatTakingString" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testCreatesExtendedMessageFormatTakingString", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo", "testOverriddenBuiltinFormat", "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#setUp" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testCreatesExtendedMessageFormatTakingString", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testCreatesExtendedMessageFormatTakingString" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testCreatesExtendedMessageFormatTakingString" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$LowerCaseFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testCreatesExtendedMessageFormatTakingString", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$LowerCaseFormatFactory#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testCreatesExtendedMessageFormatTakingString", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$UpperCaseFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testCreatesExtendedMessageFormatTakingString", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$UpperCaseFormatFactory#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testCreatesExtendedMessageFormatTakingString", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo" ]
          }
        },
        "org.apache.commons.text.StrBuilder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendTakingTwoAndThreeIntsThrowsStringIndexOutOfBoundsExceptionAndAppendTakingTwoAndThreeIntsThree", "testAppendTakingTwoAndThreeIntsWithZeroAndAppendTakingTwoAndThreeIntsThrowsStringIndexOutOfBoundsExceptionTwo", "testDeleteCharAtWithNegative" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull" ],
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testApplyThrowsIllegalArgumentExceptionAndCreatesLevenshteinDetailedDistanceTakingInteger" ]
          }
        },
        "org.apache.commons.text.StrBuilder#append" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendTakingTwoAndThreeIntsThrowsStringIndexOutOfBoundsExceptionAndAppendTakingTwoAndThreeIntsThree", "testAppendTakingTwoAndThreeIntsWithZeroAndAppendTakingTwoAndThreeIntsThrowsStringIndexOutOfBoundsExceptionTwo" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull" ]
          }
        },
        "org.apache.commons.text.StrBuilder#deleteCharAt" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteCharAtWithNegative" ]
          }
        },
        "org.apache.commons.text.StrBuilder#ensureCapacity" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull" ]
          }
        },
        "org.apache.commons.text.StrBuilder#length" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendCharBufferException", "testAppendCharBufferNull", "testAppendCharSequence", "testAppendStringBuilderNull", "testAppendTakingTwoAndThreeIntsThrowsStringIndexOutOfBoundsExceptionAndAppendTakingTwoAndThreeIntsThree", "testAppendTakingTwoAndThreeIntsWithZeroAndAppendTakingTwoAndThreeIntsThrowsStringIndexOutOfBoundsExceptionTwo", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAppendln", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteCharAtWithNegative", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testGetSetNewLineText", "testGetSetNullText", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLang412Left", "testLang412Right", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim", "test_LANG_1131_EqualsWithNullStrBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAppendTakingTwoAndThreeIntsThrowsStringIndexOutOfBoundsExceptionAndAppendTakingTwoAndThreeIntsThree" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendTakingTwoAndThreeIntsThrowsStringIndexOutOfBoundsExceptionAndAppendTakingTwoAndThreeIntsThree" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAppendTakingTwoAndThreeIntsWithZeroAndAppendTakingTwoAndThreeIntsThrowsStringIndexOutOfBoundsExceptionTwo" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendTakingTwoAndThreeIntsWithZeroAndAppendTakingTwoAndThreeIntsThrowsStringIndexOutOfBoundsExceptionTwo" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testDeleteCharAtWithNegative" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testDeleteCharAtWithNegative" ]
          }
        },
        "org.apache.commons.text.StrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull" ]
          }
        },
        "org.apache.commons.text.StrLookup#mapLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNull" ]
          }
        },
        "org.apache.commons.text.StrLookup#systemPropertiesLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNonNull" ]
          }
        },
        "org.apache.commons.text.StrLookup$MapStrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull" ]
          }
        },
        "org.apache.commons.text.StrLookup$SystemPropertiesStrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull" ]
          }
        },
        "org.apache.commons.text.StrMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException" ]
          }
        },
        "org.apache.commons.text.StrMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo" ]
          }
        },
        "org.apache.commons.text.StrMatcher#splitMatcher" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo" ]
          }
        },
        "org.apache.commons.text.StrMatcher#stringMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharSetMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharSetMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo" ]
          }
        },
        "org.apache.commons.text.StrMatcher$NoMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException" ]
          }
        },
        "org.apache.commons.text.StrMatcher$StringMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException" ]
          }
        },
        "org.apache.commons.text.StrMatcher$StringMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull" ]
          }
        },
        "org.apache.commons.text.StrMatcher$TrimMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceTakingCharSequenceReturningNull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getEscapeChar" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceTakingCharSequenceReturningNull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getValueDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getVariablePrefixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getVariableSuffixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#isEnableSubstitutionInVariables" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#isPreserveEscapes" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceTakingCharSequenceReturningNull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#replace" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#replaceIn" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setEscapeChar" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceTakingCharSequenceReturningNull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setValueDelimiter" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setValueDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceTakingCharSequenceReturningNull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariablePrefix" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariablePrefixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceTakingCharSequenceReturningNull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariableResolver" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceTakingCharSequenceReturningNull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariableSuffix" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariableSuffixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceTakingCharSequenceReturningNull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#substitute" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#setUp" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#tearDown" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceInTakingStringBufferWithNonNull" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceInTakingStringBuilderWithNonNull" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNonNull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceInTakingStringBuilderWithNull" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceTakingCharSequenceReturningNull" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceTakingCharSequenceReturningNull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceTakingThreeArgumentsThrowsNullPointerException" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceTakingThreeArgumentsThrowsNullPointerException" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#<init>" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testApplyThrowsIllegalArgumentExceptionAndCreatesLevenshteinDetailedDistanceTakingInteger", "testApplyWithNull", "testCreatesLevenshteinDetailedDistanceTakingInteger6", "testGetThreshold" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#apply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testApplyThrowsIllegalArgumentExceptionAndCreatesLevenshteinDetailedDistanceTakingInteger", "testApplyWithNull", "testCreatesLevenshteinDetailedDistanceTakingInteger6", "testGetDefaultInstanceOne", "testGetDefaultInstanceTwo" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#findDetailedResults" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetDefaultInstanceOne", "testGetDefaultInstanceTwo" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#getDefaultInstance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetDefaultInstanceOne", "testGetDefaultInstanceTwo" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#getThreshold" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetThreshold" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#limitedCompare" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testApplyThrowsIllegalArgumentExceptionAndCreatesLevenshteinDetailedDistanceTakingInteger", "testApplyWithNull", "testCreatesLevenshteinDetailedDistanceTakingInteger6" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#unlimitedCompare" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetDefaultInstanceOne", "testGetDefaultInstanceTwo" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testApplyThrowsIllegalArgumentExceptionAndCreatesLevenshteinDetailedDistanceTakingInteger", "testApplyWithNull", "testConstructorWithNegativeThreshold", "testCreatesLevenshteinDetailedDistanceTakingInteger6", "testEquals", "testGetDefaultInstanceOne", "testGetDefaultInstanceTwo", "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testGetThreshold", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testApplyThrowsIllegalArgumentExceptionAndCreatesLevenshteinDetailedDistanceTakingInteger" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testApplyThrowsIllegalArgumentExceptionAndCreatesLevenshteinDetailedDistanceTakingInteger" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testApplyWithNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testApplyWithNull" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testCreatesLevenshteinDetailedDistanceTakingInteger6" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testCreatesLevenshteinDetailedDistanceTakingInteger6" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetDefaultInstanceOne" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetDefaultInstanceOne" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetDefaultInstanceTwo" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetDefaultInstanceTwo" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetThreshold" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetThreshold" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance#<init>" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testApplyThrowsIllegalArgumentExceptionAndCreatesLevenshteinDistanceTakingInteger", "testGetThresholdDirectlyAfterObjectInstantiation" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance#apply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testApplyThrowsIllegalArgumentExceptionAndCreatesLevenshteinDistanceTakingInteger" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance#getThreshold" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetThresholdDirectlyAfterObjectInstantiation" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance#limitedCompare" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testApplyThrowsIllegalArgumentExceptionAndCreatesLevenshteinDistanceTakingInteger" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testApplyThrowsIllegalArgumentExceptionAndCreatesLevenshteinDistanceTakingInteger", "testConstructorWithNegativeThreshold", "testGetLevenshteinDistance_NullString", "testGetLevenshteinDistance_NullStringInt", "testGetLevenshteinDistance_StringNull", "testGetLevenshteinDistance_StringNullInt", "testGetLevenshteinDistance_StringString", "testGetLevenshteinDistance_StringStringInt", "testGetThresholdDirectlyAfterObjectInstantiation" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest#testApplyThrowsIllegalArgumentExceptionAndCreatesLevenshteinDistanceTakingInteger" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testApplyThrowsIllegalArgumentExceptionAndCreatesLevenshteinDistanceTakingInteger" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest#testGetThresholdDirectlyAfterObjectInstantiation" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetThresholdDirectlyAfterObjectInstantiation" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#<init>" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testCreatesLevenshteinDetailedDistanceTakingInteger6", "testGetDefaultInstanceOne", "testGetDefaultInstanceTwo" ],
            "org.apache.commons.text.similarity.LevenshteinResultsTest" : [ "testEqualsDifferenceInSubstitutionCount", "testEqualsReturningFalse", "testEqualsSameObject", "testEqualsWithNonNull", "testEqualsWithNull" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#equals" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinResultsTest" : [ "testEqualsDifferenceInSubstitutionCount", "testEqualsReturningFalse", "testEqualsSameObject", "testEqualsWithNonNull", "testEqualsWithNull" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#getDeleteCount" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testCreatesLevenshteinDetailedDistanceTakingInteger6" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#getDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testCreatesLevenshteinDetailedDistanceTakingInteger6", "testGetDefaultInstanceOne", "testGetDefaultInstanceTwo" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#getInsertCount" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testCreatesLevenshteinDetailedDistanceTakingInteger6" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResults#getSubstituteCount" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testCreatesLevenshteinDetailedDistanceTakingInteger6" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResultsTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinResultsTest" : [ "testEqualsDifferenceInSubstitutionCount", "testEqualsReturningFalse", "testEqualsSameObject", "testEqualsWithNonNull", "testEqualsWithNull" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResultsTest#testEqualsDifferenceInSubstitutionCount" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinResultsTest" : [ "testEqualsDifferenceInSubstitutionCount" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResultsTest#testEqualsReturningFalse" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinResultsTest" : [ "testEqualsReturningFalse" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResultsTest#testEqualsSameObject" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinResultsTest" : [ "testEqualsSameObject" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResultsTest#testEqualsWithNonNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinResultsTest" : [ "testEqualsWithNonNull" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResultsTest#testEqualsWithNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinResultsTest" : [ "testEqualsWithNull" ]
          }
        }
      }
    },
    "998764ebe38113eb51e6850058ca01936625dd92" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "998764ebe38113eb51e6850058ca01936625dd92~1",
      "changedClazzes" : {
        "org.apache.commons.text.RandomStringGenerator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateTakingIntThrowsNullPointerException" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#generate" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateTakingIntThrowsNullPointerException" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#generateRandomNumber" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateTakingIntThrowsNullPointerException" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateTakingIntThrowsNullPointerException" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#build" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateTakingIntThrowsNullPointerException" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#filteredBy" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateTakingIntThrowsNullPointerException" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax", "testGenerateTakingIntThrowsNullPointerException", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSelectFromCharArray", "testSelectFromCharVarargs", "testSetLength", "testUsingRandom", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testGenerateTakingIntThrowsNullPointerException" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testGenerateTakingIntThrowsNullPointerException" ]
          }
        },
        "org.apache.commons.text.StrBuilder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrMatcher#commaMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrMatcher#doubleQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrMatcher#noneMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrMatcher#splitMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrMatcher#tabMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrMatcher#trimMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharSetMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrMatcher$NoMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrMatcher$NoMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrMatcher$TrimMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrMatcher$TrimMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#addToken" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#checkTokenized" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#clone" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#cloneReset" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getIgnoredMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getTSVClone" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getTSVInstance" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getTrimmerMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#hasPrevious" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#isEmptyTokenAsNull" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#isIgnoreEmptyTokens" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#previousToken" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#readNextToken" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#reset" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setEmptyTokenAsNull" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setIgnoreEmptyTokens" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setIgnoredMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setTrimmerMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#tokenize" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testPreviousTokenAndSetEmptyTokenAsNull" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarity#<init>" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineSimilarityTest" : [ "testCosineSimilarityReturningDoubleWhereByteValueIsZero", "testCosineSimilarityThrowsIllegalArgumentException", "testCosineSimilarityWithNonEmptyMap", "testCosineSimilarityWithNull" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarity#cosineSimilarity" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineSimilarityTest" : [ "testCosineSimilarityReturningDoubleWhereByteValueIsZero", "testCosineSimilarityThrowsIllegalArgumentException", "testCosineSimilarityWithNonEmptyMap", "testCosineSimilarityWithNull" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarity#dot" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineSimilarityTest" : [ "testCosineSimilarityReturningDoubleWhereByteValueIsZero", "testCosineSimilarityWithNonEmptyMap" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarity#getIntersection" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineSimilarityTest" : [ "testCosineSimilarityReturningDoubleWhereByteValueIsZero", "testCosineSimilarityWithNonEmptyMap" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarityTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineSimilarityTest" : [ "testCosineSimilarityReturningDoubleWhereByteValueIsZero", "testCosineSimilarityThrowsIllegalArgumentException", "testCosineSimilarityWithNonEmptyMap", "testCosineSimilarityWithNull" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarityTest#testCosineSimilarityReturningDoubleWhereByteValueIsZero" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineSimilarityTest" : [ "testCosineSimilarityReturningDoubleWhereByteValueIsZero" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarityTest#testCosineSimilarityThrowsIllegalArgumentException" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineSimilarityTest" : [ "testCosineSimilarityThrowsIllegalArgumentException" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarityTest#testCosineSimilarityWithNonEmptyMap" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineSimilarityTest" : [ "testCosineSimilarityWithNonEmptyMap" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarityTest#testCosineSimilarityWithNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineSimilarityTest" : [ "testCosineSimilarityWithNull" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequence#<init>" : {
          "testcases" : {
            "org.apache.commons.text.similarity.SimilarityScoreFromTest" : [ "testApply" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequence#apply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.SimilarityScoreFromTest" : [ "testApply" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequence#logestCommonSubsequence" : {
          "testcases" : {
            "org.apache.commons.text.similarity.SimilarityScoreFromTest" : [ "testApply" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequence#longestCommonSubstringLengthArray" : {
          "testcases" : {
            "org.apache.commons.text.similarity.SimilarityScoreFromTest" : [ "testApply" ]
          }
        },
        "org.apache.commons.text.similarity.SimilarityScoreFrom#<init>" : {
          "testcases" : {
            "org.apache.commons.text.similarity.SimilarityScoreFromTest" : [ "testApply", "testFailsToCreateSimilarityScoreFromThrowsIllegalArgumentException" ]
          }
        },
        "org.apache.commons.text.similarity.SimilarityScoreFrom#apply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.SimilarityScoreFromTest" : [ "testApply" ]
          }
        },
        "org.apache.commons.text.similarity.SimilarityScoreFromTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.SimilarityScoreFromTest" : [ "testApply", "testFailsToCreateSimilarityScoreFromThrowsIllegalArgumentException" ]
          }
        },
        "org.apache.commons.text.similarity.SimilarityScoreFromTest#testApply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.SimilarityScoreFromTest" : [ "testApply" ]
          }
        },
        "org.apache.commons.text.similarity.SimilarityScoreFromTest#testFailsToCreateSimilarityScoreFromThrowsIllegalArgumentException" : {
          "testcases" : {
            "org.apache.commons.text.similarity.SimilarityScoreFromTest" : [ "testFailsToCreateSimilarityScoreFromThrowsIllegalArgumentException" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testCreatesNumericEntityUnescaperOne", "testCreatesNumericEntityUnescaperTwo" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testCreatesNumericEntityUnescaperOne", "testCreatesNumericEntityUnescaperTwo" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testCreatesNumericEntityUnescaperOne", "testCreatesNumericEntityUnescaperTwo" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper#isSet" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testCreatesNumericEntityUnescaperOne", "testCreatesNumericEntityUnescaperTwo" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testCreatesNumericEntityUnescaperOne", "testCreatesNumericEntityUnescaperTwo" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaperTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testCreatesNumericEntityUnescaperOne", "testCreatesNumericEntityUnescaperTwo", "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaperTest#testCreatesNumericEntityUnescaperOne" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testCreatesNumericEntityUnescaperOne" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaperTest#testCreatesNumericEntityUnescaperTwo" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testCreatesNumericEntityUnescaperTwo" ]
          }
        }
      }
    },
    "fb6d5935451397c561bd52cf1d483975f83b2c7b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "fb6d5935451397c561bd52cf1d483975f83b2c7b~1",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtils" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerThanMinusOneValues", "testAbbreviateForLowerValue", "testAbbreviateForLowerValueAndAppendedString", "testAbbreviateForNullAndEmptyString", "testAbbreviateForUpperLimit", "testAbbreviateForUpperLimitAndAppendedString", "testAbbreviateUpperLessThanLowerValues", "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeFully_Text88", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testConstructor", "testContainsAllWords_StringString", "testInitialsSurrogatePairs", "testInitials_String", "testInitials_String_charArray", "testLANG1292", "testLANG673", "testSwapCase_String", "testUnCapitalize_Text88", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        }
      }
    },
    "996b4beb4da188bf831079d31b24a5a36f149e73" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "996b4beb4da188bf831079d31b24a5a36f149e73~1",
      "changedClazzes" : {
        "org.apache.commons.text.AlphabetConverter#<init>" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testEqualsWithSameObject" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#codePointToString" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testEqualsWithSameObject" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#convertCharsToIntegers" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testEqualsWithSameObject" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#createConverter" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testEqualsWithSameObject" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#createConverterFromChars" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testEqualsWithSameObject" ]
          }
        },
        "org.apache.commons.text.AlphabetConverter#equals" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testEqualsWithSameObject" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "testCreateConverterFromCharsAndEquals", "testCreateConverterFromCharsOne", "testCreateConverterFromCharsWithNullAndNull", "testCreateConverterFromMapAndEquals", "testDecodeReturningNull", "testEquals", "testEqualsWithNull", "testEqualsWithSameObject", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#testEqualsWithSameObject" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testEqualsWithSameObject" ]
          }
        },
        "org.apache.commons.text.FormattableUtils#append" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testAppendWithNullFormatterAndIntsThrowsNullPointerException" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testAlternatePadCharAndEllipsis", "testAlternatePadCharacter", "testAppendWithNullFormatterAndIntsThrowsNullPointerException", "testDefaultAppend", "testEllipsis", "testIllegalEllipsis", "testPublicConstructorExists", "testSimplestFormat" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest#testAppendWithNullFormatterAndIntsThrowsNullPointerException" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testAppendWithNullFormatterAndIntsThrowsNullPointerException" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#escapeHtml3" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlThree" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#unescapeEcmaScript" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeEcmaScript" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#unescapeJson" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJson" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$XsiUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlThree", "testUnescapeEcmaScript", "testUnescapeJson" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml3", "testEscapeHtml4", "testEscapeHtmlHighUnicode", "testEscapeHtmlThree", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeEcmaScript", "testUnescapeHtml3", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeJson", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeHtmlThree" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlThree" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testUnescapeEcmaScript" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeEcmaScript" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testUnescapeJson" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJson" ]
          }
        },
        "org.apache.commons.text.WordUtils#containsAllWords" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testContainsAllWordsWithNull" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerThanMinusOneValues", "testAbbreviateForLowerValue", "testAbbreviateForLowerValueAndAppendedString", "testAbbreviateForNullAndEmptyString", "testAbbreviateForUpperLimit", "testAbbreviateForUpperLimitAndAppendedString", "testAbbreviateUpperLessThanLowerValues", "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeFully_Text88", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testConstructor", "testContainsAllWordsWithNull", "testContainsAllWords_StringString", "testInitialsSurrogatePairs", "testInitials_String", "testInitials_String_charArray", "testLANG1292", "testLANG673", "testSwapCase_String", "testUnCapitalize_Text88", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testContainsAllWordsWithNull" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testContainsAllWordsWithNull" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScore#<init>" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetLocale" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScore#getLocale" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetLocale" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore", "testGetFuzzyScore_NullNullLocale", "testGetFuzzyScore_NullStringLocale", "testGetFuzzyScore_StringNullLocale", "testGetLocale", "testMissingLocale" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testGetLocale" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetLocale" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlThree", "testUnescapeEcmaScript", "testUnescapeJson" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlThree", "testUnescapeEcmaScript", "testUnescapeJson" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlThree", "testUnescapeEcmaScript", "testUnescapeJson" ],
            "org.apache.commons.text.translate.CodePointTranslatorTest" : [ "testAboveReturningNonNull" ],
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testFailsToCreateLookupTranslatorThrowsInvalidParameterException" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#hex" : {
          "testcases" : {
            "org.apache.commons.text.translate.CodePointTranslatorTest" : [ "testAboveReturningNonNull" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlThree", "testUnescapeEcmaScript", "testUnescapeJson" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlThree", "testUnescapeEcmaScript", "testUnescapeJson" ],
            "org.apache.commons.text.translate.CodePointTranslatorTest" : [ "testAboveReturningNonNull" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.CodePointTranslatorTest" : [ "testAboveReturningNonNull" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslatorTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.CodePointTranslatorTest" : [ "testAboveReturningNonNull" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslatorTest#testAboveReturningNonNull" : {
          "testcases" : {
            "org.apache.commons.text.translate.CodePointTranslatorTest" : [ "testAboveReturningNonNull" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslators$CsvEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlThree", "testUnescapeEcmaScript", "testUnescapeJson" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslators$CsvUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlThree", "testUnescapeEcmaScript", "testUnescapeJson" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#invert" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlThree", "testUnescapeEcmaScript", "testUnescapeJson" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlThree", "testUnescapeEcmaScript", "testUnescapeJson" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#outsideOf" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlThree", "testUnescapeEcmaScript", "testUnescapeJson" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlThree", "testUnescapeEcmaScript", "testUnescapeJson" ],
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testFailsToCreateLookupTranslatorThrowsInvalidParameterException" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlThree", "testUnescapeEcmaScript", "testUnescapeJson" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslatorTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup", "testFailsToCreateLookupTranslatorThrowsInvalidParameterException", "testLang882" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslatorTest#testFailsToCreateLookupTranslatorThrowsInvalidParameterException" : {
          "testcases" : {
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testFailsToCreateLookupTranslatorThrowsInvalidParameterException" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlThree", "testUnescapeEcmaScript", "testUnescapeJson" ],
            "org.apache.commons.text.translate.CodePointTranslatorTest" : [ "testAboveReturningNonNull" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#above" : {
          "testcases" : {
            "org.apache.commons.text.translate.CodePointTranslatorTest" : [ "testAboveReturningNonNull" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#between" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlThree", "testUnescapeEcmaScript", "testUnescapeJson" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#outsideOf" : {
          "testcases" : {
            "org.apache.commons.text.translate.CodePointTranslatorTest" : [ "testAboveReturningNonNull" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.CodePointTranslatorTest" : [ "testAboveReturningNonNull" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlThree", "testUnescapeEcmaScript", "testUnescapeJson" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlThree", "testUnescapeEcmaScript", "testUnescapeJson" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeEcmaScript", "testUnescapeJson" ]
          }
        },
        "org.apache.commons.text.translate.SinglePassTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlThree", "testUnescapeEcmaScript", "testUnescapeJson" ]
          }
        },
        "org.apache.commons.text.translate.SinglePassTranslator#getClassName" : {
          "testcases" : {
            "org.apache.commons.text.translate.SinglePassTranslatorTest" : [ "testTranslateThrowsIllegalArgumentException" ]
          }
        },
        "org.apache.commons.text.translate.SinglePassTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.translate.SinglePassTranslatorTest" : [ "testTranslateThrowsIllegalArgumentException" ]
          }
        },
        "org.apache.commons.text.translate.SinglePassTranslatorTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.SinglePassTranslatorTest" : [ "codePointsAreReturned", "indexIsValidated", "testTranslateThrowsIllegalArgumentException" ]
          }
        },
        "org.apache.commons.text.translate.SinglePassTranslatorTest#before" : {
          "testcases" : {
            "org.apache.commons.text.translate.SinglePassTranslatorTest" : [ "testTranslateThrowsIllegalArgumentException" ]
          }
        },
        "org.apache.commons.text.translate.SinglePassTranslatorTest#testTranslateThrowsIllegalArgumentException" : {
          "testcases" : {
            "org.apache.commons.text.translate.SinglePassTranslatorTest" : [ "testTranslateThrowsIllegalArgumentException" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlThree", "testUnescapeEcmaScript", "testUnescapeJson" ],
            "org.apache.commons.text.translate.CodePointTranslatorTest" : [ "testAboveReturningNonNull" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#toUtf16Escape" : {
          "testcases" : {
            "org.apache.commons.text.translate.CodePointTranslatorTest" : [ "testAboveReturningNonNull" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlThree", "testUnescapeEcmaScript", "testUnescapeJson" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeEcmaScript", "testUnescapeJson" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemover#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlThree", "testUnescapeEcmaScript", "testUnescapeJson" ]
          }
        }
      }
    },
    "b578cb402adcc69c8c5079f80614203371925c7c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b578cb402adcc69c8c5079f80614203371925c7c~1",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtils" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerThanMinusOneValues", "testAbbreviateForLowerValue", "testAbbreviateForLowerValueAndAppendedString", "testAbbreviateForNullAndEmptyString", "testAbbreviateForUpperLimit", "testAbbreviateForUpperLimitAndAppendedString", "testAbbreviateUpperLessThanLowerValues", "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeFully_Text88", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testConstructor", "testContainsAllWordsWithNull", "testContainsAllWords_StringString", "testInitialsSurrogatePairs", "testInitials_String", "testInitials_String_charArray", "testLANG1292", "testLANG673", "testSwapCase_String", "testUnCapitalize_Text88", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        }
      }
    },
    "96e0bc16b827f23d4e0db67921ca4632f921986a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "96e0bc16b827f23d4e0db67921ca4632f921986a~1",
      "changedClazzes" : {
        "org.apache.commons.text.RandomStringGenerator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testWithinMultipleRanges" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#generate" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testWithinMultipleRanges" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator#generateRandomNumber" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testWithinMultipleRanges" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax", "testGenerateTakingIntThrowsNullPointerException", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSelectFromCharArray", "testSelectFromCharVarargs", "testSetLength", "testUsingRandom", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testWithinMultipleRanges" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#build" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testWithinMultipleRanges" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder#withinRange" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testWithinMultipleRanges" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax", "testGenerateTakingIntThrowsNullPointerException", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSelectFromCharArray", "testSelectFromCharVarargs", "testSetLength", "testUsingRandom", "testWithinMultipleRanges", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testWithinMultipleRanges" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testWithinMultipleRanges" ]
          }
        }
      }
    },
    "28e26b2b68f0fe999bc3d036e77ff2eed6a09c0b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "28e26b2b68f0fe999bc3d036e77ff2eed6a09c0b~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testResourceBundleLookup", "testResourceBundleLookup_nullMap" ]
          }
        },
        "org.apache.commons.text.StrLookup#resourceBundleLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testResourceBundleLookup", "testResourceBundleLookup_nullMap" ]
          }
        },
        "org.apache.commons.text.StrLookup$MapStrLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrLookup$MapStrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testResourceBundleLookup", "testResourceBundleLookup_nullMap" ]
          }
        },
        "org.apache.commons.text.StrLookup$ResourceBundleLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testResourceBundleLookup", "testResourceBundleLookup_nullMap" ]
          }
        },
        "org.apache.commons.text.StrLookup$ResourceBundleLookup#lookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testResourceBundleLookup", "testResourceBundleLookup_nullMap" ]
          }
        },
        "org.apache.commons.text.StrLookup$SystemPropertiesStrLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrLookup$SystemPropertiesStrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testResourceBundleLookup", "testResourceBundleLookup_nullMap" ]
          }
        },
        "org.apache.commons.text.StrLookupTest" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testResourceBundleLookup", "testResourceBundleLookup_nullMap", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ]
          }
        },
        "org.apache.commons.text.StrLookupTest#testResourceBundleLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testResourceBundleLookup" ]
          }
        },
        "org.apache.commons.text.StrLookupTest#testResourceBundleLookup_nullMap" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testResourceBundleLookup_nullMap" ]
          }
        }
      }
    },
    "bd81c46e0c4ad5b85892f0a7b474bd93b8c10c02" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "bd81c46e0c4ad5b85892f0a7b474bd93b8c10c02~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrLookup$MapStrLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testResourceBundleLookup", "testResourceBundleLookup_nullMap", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrLookup$ResourceBundleLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testResourceBundleLookup", "testResourceBundleLookup_nullMap" ]
          }
        }
      }
    },
    "0b061698f7b8dc0665804fadcfb6f9f37048efee" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0b061698f7b8dc0665804fadcfb6f9f37048efee~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrLookup$ResourceBundleLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testResourceBundleLookup", "testResourceBundleLookup_nullMap" ]
          }
        }
      }
    },
    "6f6b6365fb8265362bd16eaf795dac27f9c4864b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6f6b6365fb8265362bd16eaf795dac27f9c4864b~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrLookup$ResourceBundleLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testResourceBundleLookup", "testResourceBundleLookup_nullMap" ]
          }
        }
      }
    },
    "8e4ff3f1d72baae5f18f799da77b92facbcd1edc" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8e4ff3f1d72baae5f18f799da77b92facbcd1edc~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrLookup$ResourceBundleLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testResourceBundleLookup", "testResourceBundleLookup_nullMap" ]
          }
        },
        "org.apache.commons.text.StrLookup$SystemPropertiesStrLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testResourceBundleLookup", "testResourceBundleLookup_nullMap", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        }
      }
    },
    "0be254ad1483e67d452a74330b78f5896888c2df" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "0be254ad1483e67d452a74330b78f5896888c2df~1",
      "changedClazzes" : {
        "org.apache.commons.text.AlphabetConverterTest#testCreateConverterFromCharsAndEquals" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testCreateConverterFromCharsAndEquals" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#testCreateConverterFromCharsOne" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testCreateConverterFromCharsOne" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#testCreateConverterFromCharsWithNullAndNull" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testCreateConverterFromCharsWithNullAndNull" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#testCreateConverterFromMapAndEquals" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testCreateConverterFromMapAndEquals" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#testDecodeReturningNull" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testDecodeReturningNull" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#testEquals" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testEquals" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#testEqualsWithNull" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testEqualsWithNull" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#testEqualsWithSameObject" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testEqualsWithSameObject" ]
          }
        },
        "org.apache.commons.text.CaseUtils#generateDelimiterSet(char[])" : {
          "testcases" : {
            "org.apache.commons.text.CaseUtilsTest" : [ "testToCamelCase" ]
          }
        },
        "org.apache.commons.text.CaseUtils#toCamelCase(String,boolean,char[])" : {
          "testcases" : {
            "org.apache.commons.text.CaseUtilsTest" : [ "testToCamelCase" ]
          }
        },
        "org.apache.commons.text.CaseUtilsTest#testToCamelCase" : {
          "testcases" : {
            "org.apache.commons.text.CaseUtilsTest" : [ "testToCamelCase" ]
          }
        },
        "org.apache.commons.text.CharacterPredicates" : {
          "testcases" : { }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testCreatesExtendedMessageFormatTakingString" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testCreatesExtendedMessageFormatTakingString" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest$SimplestFormattable" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testSimplestFormat" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testChangeOfFilter", "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax", "testGenerateTakingIntThrowsNullPointerException", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSelectFromCharArray", "testSelectFromCharVarargs", "testSetLength", "testUsingRandom", "testWithinMultipleRanges", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax", "testGenerateTakingIntThrowsNullPointerException", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSelectFromCharArray", "testSelectFromCharVarargs", "testSetLength", "testUsingRandom", "testWithinMultipleRanges", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax", "testGenerateTakingIntThrowsNullPointerException", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSelectFromCharArray", "testSelectFromCharVarargs", "testSetLength", "testUsingRandom", "testWithinMultipleRanges", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendCharBufferException", "testAppendCharBufferNull", "testAppendCharSequence", "testAppendStringBuilderNull", "testAppendTakingTwoAndThreeIntsThrowsStringIndexOutOfBoundsExceptionAndAppendTakingTwoAndThreeIntsThree", "testAppendTakingTwoAndThreeIntsWithZeroAndAppendTakingTwoAndThreeIntsThrowsStringIndexOutOfBoundsExceptionTwo", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAppendln", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteCharAtWithNegative", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testGetSetNewLineText", "testGetSetNullText", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLang412Left", "testLang412Right", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim", "test_LANG_1131_EqualsWithNullStrBuilder" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceInTakingStringBufferWithNonNull" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceInTakingStringBuilderWithNonNull" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNonNull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceInTakingStringBuilderWithNull" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNull" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceInTakingTwoAndThreeIntsReturningFalse" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceTakingCharSequenceReturningNull" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceTakingCharSequenceReturningNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testPreviousTokenAndSetEmptyTokenAsNull" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testStringTokenizerQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testStringTokenizerStrMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerStrMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testStringTokenizerStringMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testConstructor" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$XsiUnescaper#translate(CharSequence,int,Writer)" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testBuilder" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testLang708" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testLang708" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testUnescapeJson" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJson" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testUnescapeJsonFoundBug_Issue_Text_100" : {
          "testcases" : { }
        },
        "org.apache.commons.text.WordUtils" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerThanMinusOneValues", "testAbbreviateForLowerValue", "testAbbreviateForLowerValueAndAppendedString", "testAbbreviateForNullAndEmptyString", "testAbbreviateForUpperLimit", "testAbbreviateForUpperLimitAndAppendedString", "testAbbreviateUpperLessThanLowerValues", "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeFully_Text88", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testConstructor", "testContainsAllWordsWithNull", "testContainsAllWords_StringString", "testInitialsSurrogatePairs", "testInitials_String", "testInitials_String_charArray", "testLANG1292", "testLANG673", "testSwapCase_String", "testUnCapitalize_Text88", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarityTest#testCosineSimilarityReturningDoubleWhereByteValueIsZero" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineSimilarityTest" : [ "testCosineSimilarityReturningDoubleWhereByteValueIsZero" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarityTest#testCosineSimilarityThrowsIllegalArgumentException" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineSimilarityTest" : [ "testCosineSimilarityThrowsIllegalArgumentException" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarityTest#testCosineSimilarityWithNonEmptyMap" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineSimilarityTest" : [ "testCosineSimilarityWithNonEmptyMap" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarityTest#testCosineSimilarityWithNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineSimilarityTest" : [ "testCosineSimilarityWithNull" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testGetLocale" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetLocale" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardDistance" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistance", "testGettingJaccardDistanceNullNull", "testGettingJaccardDistanceNullString", "testGettingJaccardDistanceStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardSimilarity" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistance" ],
            "org.apache.commons.text.similarity.JaccardSimilarityTest" : [ "testGettingJaccardSimilarity", "testGettingJaccardSimilarityNullNull", "testGettingJaccardSimilarityNullString", "testGettingJaccardSimilarityStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistance#apply(CharSequence,CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullNull", "testGetJaroWinklerDistance_NullString", "testGetJaroWinklerDistance_StringNull", "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistance#matches(CharSequence,CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testApplyThrowsIllegalArgumentExceptionAndCreatesLevenshteinDetailedDistanceTakingInteger" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testApplyThrowsIllegalArgumentExceptionAndCreatesLevenshteinDetailedDistanceTakingInteger" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testCreatesLevenshteinDetailedDistanceTakingInteger6" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testCreatesLevenshteinDetailedDistanceTakingInteger6" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetDefaultInstanceOne" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetDefaultInstanceOne" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetDefaultInstanceTwo" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetDefaultInstanceTwo" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetThreshold" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testGetThreshold" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance#unlimitedCompare(CharSequence,CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_NullString", "testGetLevenshteinDistance_NullStringInt", "testGetLevenshteinDistance_StringNull", "testGetLevenshteinDistance_StringNullInt", "testGetLevenshteinDistance_StringString" ],
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResultsTest#testEqualsDifferenceInSubstitutionCount" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinResultsTest" : [ "testEqualsDifferenceInSubstitutionCount" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResultsTest#testEqualsReturningFalse" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinResultsTest" : [ "testEqualsReturningFalse" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResultsTest#testEqualsSameObject" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinResultsTest" : [ "testEqualsSameObject" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResultsTest#testEqualsWithNonNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinResultsTest" : [ "testEqualsWithNonNull" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResultsTest#testEqualsWithNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinResultsTest" : [ "testEqualsWithNull" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequence#logestCommonSubsequence(CharSequence,CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLogestCommonSubsequenceDistacne" ],
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceNullNull", "testGettingLongestCommonSubsequenceNullString", "testGettingLongestCommonSubsequenceStringNull", "testLongestCommonSubsequence", "testLongestCommonSubsequenceApply" ],
            "org.apache.commons.text.similarity.SimilarityScoreFromTest" : [ "testApply" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequence#longestCommonSubstringLengthArray(CharSequence,CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLogestCommonSubsequenceDistacne" ],
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testLongestCommonSubsequence", "testLongestCommonSubsequenceApply" ],
            "org.apache.commons.text.similarity.SimilarityScoreFromTest" : [ "testApply" ]
          }
        },
        "org.apache.commons.text.similarity.SimilarityScoreFromTest#testApply" : {
          "testcases" : {
            "org.apache.commons.text.similarity.SimilarityScoreFromTest" : [ "testApply" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator#<init>(CharSequenceTranslator[])" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml3", "testEscapeHtml4", "testEscapeHtmlHighUnicode", "testEscapeHtmlThree", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeEcmaScript", "testUnescapeHtml3", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeJson", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull", "testNullConstructor", "testNullVarargConstructor" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslatorTest#testAboveReturningNonNull" : {
          "testcases" : {
            "org.apache.commons.text.translate.CodePointTranslatorTest" : [ "testAboveReturningNonNull" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslatorsTest#csvEscaperCRTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvEscaperCRTest" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslatorsTest#csvEscaperCommaTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvEscaperCommaTest" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslatorsTest#csvEscaperLFTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvEscaperLFTest" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslatorsTest#csvEscaperPlaneTextTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvEscaperPlaneTextTest" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslatorsTest#csvEscaperQuoteTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvEscaperQuoteTest" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslatorsTest#csvUnEscaperPlaneTextTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvUnEscaperPlaneTextTest" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslatorsTest#csvUnEscaperTest1" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvUnEscaperTest1" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslatorsTest#csvUnEscaperTest2" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvUnEscaperTest2" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslatorsTest#csvUnEscaperTest3" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvUnEscaperTest3" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslatorsTest#csvUnEscaperTest4" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvUnEscaperTest4" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#<init>" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testConstructorExists" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#invert(Map)" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml3", "testEscapeHtml4", "testEscapeHtmlHighUnicode", "testEscapeHtmlThree", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeEcmaScript", "testUnescapeHtml3", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeJson", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposMap", "testBasicMap", "testConstructorExists", "testForDuplicateDeclaredMapValuesAposMap", "testForDuplicateDeclaredMapValuesBasicMap", "testForDuplicateDeclaredMapValuesHtml40ExtendedMap", "testForDuplicateDeclaredMapValuesISO8859Map", "testForDuplicateDeclaredMapValuesJavaCtrlCharsMap", "testForDuplicatedDeclaredMapKeys", "testHtml40ExtendedMap", "testISO8859Map", "testJavaCntrlCharsMap" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest#testForDuplicatedDeclaredMapKeys" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testForDuplicatedDeclaredMapKeys" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#<init>(Map)" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml3", "testEscapeHtml4", "testEscapeHtmlHighUnicode", "testEscapeHtmlThree", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeEcmaScript", "testUnescapeHtml3", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeJson", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull" ],
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup", "testFailsToCreateLookupTranslatorThrowsInvalidParameterException", "testLang882" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaperTest#testCreatesNumericEntityUnescaperOne" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testCreatesNumericEntityUnescaperOne" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaperTest#testCreatesNumericEntityUnescaperTwo" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testCreatesNumericEntityUnescaperTwo" ]
          }
        }
      }
    },
    "50e0bec363468af6d35acad155f5a98f24d5a12c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "50e0bec363468af6d35acad155f5a98f24d5a12c~1",
      "changedClazzes" : {
        "org.apache.commons.text.diff.StringsComparator$Snake" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        }
      }
    },
    "5598109efb2365384b9a9110323ed9a7004cc905" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "5598109efb2365384b9a9110323ed9a7004cc905~1",
      "changedClazzes" : {
        "org.apache.commons.text.RandomStringGenerator#generate(int)" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testChangeOfFilter", "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax", "testGenerateTakingIntThrowsNullPointerException", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSelectFromCharArray", "testSelectFromCharVarargs", "testSetLength", "testUsingRandom", "testWithinMultipleRanges", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.WordUtils#swapCase(String)" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testSwapCase_String" ]
          }
        }
      }
    },
    "72304996d47b607090a0ec9be8c136b3a575b5ae" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "72304996d47b607090a0ec9be8c136b3a575b5ae~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.CosineDistanceTest#roundValue(Double)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarity#cosineSimilarity(Map,Map)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ],
            "org.apache.commons.text.similarity.CosineSimilarityTest" : [ "testCosineSimilarityReturningDoubleWhereByteValueIsZero", "testCosineSimilarityThrowsIllegalArgumentException", "testCosineSimilarityWithNonEmptyMap", "testCosineSimilarityWithNull" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarityTest#testCosineSimilarityReturningDoubleWhereByteValueIsZero" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineSimilarityTest" : [ "testCosineSimilarityReturningDoubleWhereByteValueIsZero" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarityTest#testCosineSimilarityWithNonEmptyMap" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineSimilarityTest" : [ "testCosineSimilarityWithNonEmptyMap" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistanceTest#testGetJaroWinklerDistance_StringString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#invert(Map)" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml3", "testEscapeHtml4", "testEscapeHtmlHighUnicode", "testEscapeHtmlThree", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeEcmaScript", "testUnescapeHtml3", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeJson", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposMap", "testBasicMap", "testConstructorExists", "testForDuplicateDeclaredMapValuesAposMap", "testForDuplicateDeclaredMapValuesBasicMap", "testForDuplicateDeclaredMapValuesHtml40ExtendedMap", "testForDuplicateDeclaredMapValuesISO8859Map", "testForDuplicateDeclaredMapValuesJavaCtrlCharsMap", "testForDuplicatedDeclaredMapKeys", "testHtml40ExtendedMap", "testISO8859Map", "testJavaCntrlCharsMap" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaperTest#testCreatesNumericEntityUnescaperOne" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testCreatesNumericEntityUnescaperOne" ]
          }
        }
      }
    },
    "2078a639561f8294b85ed187a28acd3b8f4348f2" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "2078a639561f8294b85ed187a28acd3b8f4348f2~1",
      "changedClazzes" : {
        "org.apache.commons.text.RandomStringGenerator$Builder" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax", "testGenerateTakingIntThrowsNullPointerException", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSelectFromCharArray", "testSelectFromCharVarargs", "testSetLength", "testUsingRandom", "testWithinMultipleRanges", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardSimilarity" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistance" ],
            "org.apache.commons.text.similarity.JaccardSimilarityTest" : [ "testGettingJaccardSimilarity", "testGettingJaccardSimilarityNullNull", "testGettingJaccardSimilarityNullString", "testGettingJaccardSimilarityStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.SimilarityScoreFromTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.SimilarityScoreFromTest" : [ "testApply", "testFailsToCreateSimilarityScoreFromThrowsIllegalArgumentException" ]
          }
        }
      }
    },
    "339566bbc2e7f45fad9cffb52e8049241e63ac45" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "339566bbc2e7f45fad9cffb52e8049241e63ac45~1",
      "changedClazzes" : {
        "org.apache.commons.text.RandomStringGenerator$Builder" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax", "testGenerateTakingIntThrowsNullPointerException", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSelectFromCharArray", "testSelectFromCharVarargs", "testSetLength", "testUsingRandom", "testWithinMultipleRanges", "testWithinRange", "testZeroLength" ]
          }
        }
      }
    },
    "a25aa337f08e8cd0baad1d70565552c7dad91d5b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a25aa337f08e8cd0baad1d70565552c7dad91d5b~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrBuilder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrBuilder#append" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrBuilder#ensureCapacity" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrBuilder#getChars" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrBuilder#length" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrBuilder#replace" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrBuilder#replaceImpl" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrBuilder#toString" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrBuilder#validateRange" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrLookup#mapLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrLookup$MapStrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrLookup$MapStrLookup#lookup" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrLookup$SystemPropertiesStrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrMatcher#stringMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharSetMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrMatcher$NoMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrMatcher$StringMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrMatcher$StringMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrMatcher$TrimMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#checkCyclicSubstitution" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getEscapeChar" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getValueDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getVariablePrefixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getVariableResolver" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getVariableSuffixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#isDisableSubstitutionInValues" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#isEnableSubstitutionInVariables" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#replace" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#replaceIn" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#resolveVariable" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setDisableSubstitutionInValues" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setEscapeChar" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setValueDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariablePrefixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariableResolver" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariableSuffixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#substitute" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testDisableSubstitutionInValues", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#doTestReplace" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#setUp" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#tearDown" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testDisableSubstitutionInValues" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testDisableSubstitutionInValues" ]
          }
        }
      }
    },
    "8613c3437d84d3cf19e4cf310c8d9ff89b4ceb73" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8613c3437d84d3cf19e4cf310c8d9ff89b4ceb73~1",
      "changedClazzes" : {
        "org.apache.commons.text.ExtendedMessageFormatTest#testExtendedAndBuiltInFormats" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testExtendedAndBuiltInFormats" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$LowerCaseFormat#format(Object,StringBuffer,FieldPosition)" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEscapedQuote_LANG_477", "testExtendedFormats" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$UpperCaseFormat#format(Object,StringBuffer,FieldPosition)" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testExtendedAndBuiltInFormats", "testExtendedFormats" ]
          }
        }
      }
    },
    "635cb80d1cb0d32fddfe86be75b0a30eb3d3fab7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "635cb80d1cb0d32fddfe86be75b0a30eb3d3fab7~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrSubstitutor" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testDisableSubstitutionInValues", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        }
      }
    },
    "61cbf0afe04d86a546e7094513328c9f7a7363ae" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "61cbf0afe04d86a546e7094513328c9f7a7363ae~1",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtils#abbreviate(String,int,int,String)" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerThanMinusOneValues", "testAbbreviateForLowerValue", "testAbbreviateForLowerValueAndAppendedString", "testAbbreviateForNullAndEmptyString", "testAbbreviateForUpperLimit", "testAbbreviateForUpperLimitAndAppendedString", "testAbbreviateUpperLessThanLowerValues", "testLANG673" ]
          }
        },
        "org.apache.commons.text.WordUtils#wrap(String,int,String,boolean,String)" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testLANG1292", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        }
      }
    },
    "dabd0846d0b14d7520e8659969a3ecf2db5b6997" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "dabd0846d0b14d7520e8659969a3ecf2db5b6997~1",
      "changedClazzes" : {
        "org.apache.commons.text.ExtendedMessageFormat#equals(Object)" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testCreatesExtendedMessageFormatTakingString", "testEqualsHashcode" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testCapacityAndLength" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testCapacityAndLength" ]
          }
        }
      }
    },
    "17e5ee725a0e1478abf870ae9536fb69d085059b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "17e5ee725a0e1478abf870ae9536fb69d085059b~1",
      "changedClazzes" : {
        "org.apache.commons.text.AlphabetConverterTest#test(Character[],Character[],Character[],String[])" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest" ]
          }
        },
        "org.apache.commons.text.CaseUtilsTest#testToCamelCase" : {
          "testcases" : {
            "org.apache.commons.text.CaseUtilsTest" : [ "testToCamelCase" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testGetSetNewLineText" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testGetSetNewLineText" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testGetSetNullText" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testGetSetNullText" ]
          }
        },
        "org.apache.commons.text.StrLookupTest#testMapLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup" ]
          }
        },
        "org.apache.commons.text.StrLookupTest#testMapLookup_nullMap" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup_nullMap" ]
          }
        },
        "org.apache.commons.text.StrLookupTest#testNoneLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testNoneLookup" ]
          }
        },
        "org.apache.commons.text.StrLookupTest#testResourceBundleLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testResourceBundleLookup" ]
          }
        },
        "org.apache.commons.text.StrLookupTest#testResourceBundleLookup_nullMap" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testResourceBundleLookup_nullMap" ]
          }
        },
        "org.apache.commons.text.StrLookupTest#testSystemProperiesLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testSystemProperiesLookup" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#doTestNoReplace(String)" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceEmpty", "testReplaceNoVariables", "testReplaceNull", "testReplaceWeirdPattens" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicEmpty2" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicEmpty2" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicIgnoreTrimmed1" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicIgnoreTrimmed1" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicIgnoreTrimmed2" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicIgnoreTrimmed2" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicIgnoreTrimmed4" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicIgnoreTrimmed4" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicQuoted2" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicQuoted2" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicQuotedTrimmed1" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicQuotedTrimmed1" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicTrimmed1" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicTrimmed1" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testBasicTrimmed2" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testBasicTrimmed2" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testCloneNull" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCloneNull" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testEmpty(StrTokenizer)" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVEmpty", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testGetContent" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testGetContent" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testXSVAbc(StrTokenizer)" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeCsvString" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeCsvString" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeEcmaScript" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeEcmaScript" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeJava" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeJava" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeJson" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeJson" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testUnescapeCsvString" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeCsvString" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testUnescapeJava" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJava" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testAbbreviateForNullAndEmptyString" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForNullAndEmptyString" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testCapitalizeFullyWithDelimiters_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFullyWithDelimiters_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testCapitalizeFully_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeFully_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testCapitalizeWithDelimiters_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalizeWithDelimiters_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testCapitalize_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testCapitalize_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testInitials_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testInitials_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testInitials_String_charArray" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testInitials_String_charArray" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testSwapCase_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testSwapCase_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testUncapitalizeWithDelimiters_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testUncapitalizeWithDelimiters_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testUncapitalize_String" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testUncapitalize_String" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testWrap_StringInt" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testWrap_StringInt" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest#testWrap_StringIntStringBoolean" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testWrap_StringIntStringBoolean" ]
          }
        }
      }
    },
    "51645b4f0653c2ceae59eba0b2ea09fd5f4b8c0f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "51645b4f0653c2ceae59eba0b2ea09fd5f4b8c0f~1",
      "changedClazzes" : {
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemoverTest#testInvalidCharacters" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemoverTest" : [ "testInvalidCharacters" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemoverTest#testValidCharacters" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemoverTest" : [ "testValidCharacters" ]
          }
        }
      }
    },
    "8f7d0494d19a54b1606d0d7779ff4754c3d66b23" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "8f7d0494d19a54b1606d0d7779ff4754c3d66b23~1",
      "changedClazzes" : {
        "org.apache.commons.text.AlphabetConverterTest#javadocExampleTest" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "javadocExampleTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#test(Character[],Character[],Character[],String[])" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#unicodeTest" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "unicodeTest" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest#testExecution" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest#testLength" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testLength" ]
          }
        },
        "org.apache.commons.text.diff.StringsComparatorTest#testLongestCommonSubsequence" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslatorTest#testAboveReturningNonNull" : {
          "testcases" : {
            "org.apache.commons.text.translate.CodePointTranslatorTest" : [ "testAboveReturningNonNull" ]
          }
        }
      }
    },
    "b8ab576f3609af0ba9079dbd6755e901724f1165" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b8ab576f3609af0ba9079dbd6755e901724f1165~1",
      "changedClazzes" : {
        "org.apache.commons.text.ExtendedMessageFormat#equals(Object)" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testCreatesExtendedMessageFormatTakingString", "testEqualsHashcode" ]
          }
        }
      }
    },
    "804e4599bd63e4bb14c905613711eac8829e54fb" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "804e4599bd63e4bb14c905613711eac8829e54fb~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.LongestCommonSubsequence" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLogestCommonSubsequenceDistacne" ],
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceApplyNullNull", "testGettingLongestCommonSubsequenceApplyNullString", "testGettingLongestCommonSubsequenceApplyStringNull", "testGettingLongestCommonSubsequenceNullNull", "testGettingLongestCommonSubsequenceNullString", "testGettingLongestCommonSubsequenceStringNull", "testLongestCommonSubsequence", "testLongestCommonSubsequenceApply" ],
            "org.apache.commons.text.similarity.SimilarityScoreFromTest" : [ "testApply" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequence#logestCommonSubsequence" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLogestCommonSubsequenceNullNull", "testGettingLogestCommonSubsequenceNullString", "testGettingLogestCommonSubsequenceStringNull", "testLogestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequence#longestCommonSubsequence" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLogestCommonSubsequenceNullNull", "testGettingLogestCommonSubsequenceNullString", "testGettingLogestCommonSubsequenceStringNull", "testLogestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequence#longestCommonSubstringLengthArray" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testLogestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLogestCommonSubsequenceNullNull", "testGettingLogestCommonSubsequenceNullString", "testGettingLogestCommonSubsequenceStringNull", "testGettingLongestCommonSubsequenceApplyNullNull", "testGettingLongestCommonSubsequenceApplyNullString", "testGettingLongestCommonSubsequenceApplyStringNull", "testGettingLongestCommonSubsequenceNullNull", "testGettingLongestCommonSubsequenceNullString", "testGettingLongestCommonSubsequenceStringNull", "testLogestCommonSubsequence", "testLongestCommonSubsequence", "testLongestCommonSubsequenceApply" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testGettingLogestCommonSubsequenceNullNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLogestCommonSubsequenceNullNull" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testGettingLogestCommonSubsequenceNullString" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLogestCommonSubsequenceNullString" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testGettingLogestCommonSubsequenceStringNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLogestCommonSubsequenceStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testLogestCommonSubsequence" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testLogestCommonSubsequence" ]
          }
        }
      }
    },
    "c9f92a02f8c0ddfc8e8f30fadf2ac932072ae284" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c9f92a02f8c0ddfc8e8f30fadf2ac932072ae284~1",
      "changedClazzes" : {
        "org.apache.commons.text.StringEscapeUtils" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml3", "testEscapeHtml4", "testEscapeHtmlHighUnicode", "testEscapeHtmlThree", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeEcmaScript", "testUnescapeHtml3", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeJson", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils#unescapeJson" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtils$XsiUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml3", "testEscapeHtml4", "testEscapeHtmlHighUnicode", "testEscapeHtmlThree", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeEcmaScript", "testUnescapeHtml3", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeJson", "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testUnescapeJsonFoundBug_Issue_Text_100" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testUnescapeJsonFoundBug_Issue_Text_100_Fix" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100_Fix" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix" ]
          }
        },
        "org.apache.commons.text.translate.CharSequenceTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslators$CsvEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslators$CsvUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#invert" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaper#outsideOf" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaper#between" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper#isOctalDigit" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix" ]
          }
        },
        "org.apache.commons.text.translate.SinglePassTranslator#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaper#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaper#translate" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemover#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix" ]
          }
        }
      }
    },
    "6665a02096fc56ad5a60943f65d6f75aea389cf7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6665a02096fc56ad5a60943f65d6f75aea389cf7~1",
      "changedClazzes" : {
        "org.apache.commons.text.AlphabetConverterTest#binaryTest" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#doNotEncodeTest" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "doNotEncodeTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#hebrewTest" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "hebrewTest" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#missingDoNotEncodeLettersFromEncodingTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.AlphabetConverterTest#missingDoNotEncodeLettersFromOriginalTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.AlphabetConverterTest#noEncodingLettersTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.AlphabetConverterTest#onlyOneEncodingLettersTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.AlphabetConverterTest#unicodeTest" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "unicodeTest" ]
          }
        },
        "org.apache.commons.text.CaseUtilsTest#testToCamelCase" : {
          "testcases" : {
            "org.apache.commons.text.CaseUtilsTest" : [ "testToCamelCase" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$OtherExtendedMessageFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEqualsHashcode" ]
          }
        },
        "org.apache.commons.text.StrBuilder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendTakingTwoIntsWithIndexOutOfBoundsThrowsStringIndexOutOfBoundsExceptionTwo", "testAppendTakingTwoIntsWithZeroThrowsStringIndexOutOfBoundsException" ]
          }
        },
        "org.apache.commons.text.StrBuilder#append" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendTakingTwoIntsWithIndexOutOfBoundsThrowsStringIndexOutOfBoundsExceptionTwo", "testAppendTakingTwoIntsWithZeroThrowsStringIndexOutOfBoundsException" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendCharBufferException", "testAppendCharBufferNull", "testAppendCharSequence", "testAppendStringBuilderNull", "testAppendTakingTwoIntsWithIndexOutOfBoundsThrowsStringIndexOutOfBoundsExceptionTwo", "testAppendTakingTwoIntsWithZeroThrowsStringIndexOutOfBoundsException", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAppendln", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteCharAtWithNegative", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testGetSetNewLineText", "testGetSetNullText", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLang412Left", "testLang412Right", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim", "test_LANG_1131_EqualsWithNullStrBuilder" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAppendTakingTwoIntsWithIndexOutOfBoundsThrowsStringIndexOutOfBoundsExceptionTwo" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendTakingTwoIntsWithIndexOutOfBoundsThrowsStringIndexOutOfBoundsExceptionTwo" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest#testAppendTakingTwoIntsWithZeroThrowsStringIndexOutOfBoundsException" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendTakingTwoIntsWithZeroThrowsStringIndexOutOfBoundsException" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest$MockReadable" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testReadFromReadable", "testReadFromReadableAppendsToEnd" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceInTakingTwoAndThreeIntsReturningFalse" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceInVariable" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInVariable" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test1" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test1" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test2" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test2" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test3" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test3" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test4" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test4" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test5" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test5" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test6" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test6" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test7" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test7" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#test8" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test8" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testStringTokenizerQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testStringTokenizerStrMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerStrMatcher" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest#testStringTokenizerStringMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testEscapeHtmlHighUnicode" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHtmlHighUnicode" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testUnescapeHexCharsHtml" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.ReplacementsFinderTest$SimpleHandler" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.StringsComparatorTest$ExecutionVisitor" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaperTest#testToUtf16Escape" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaperTest#testCreatesNumericEntityUnescaperOne" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testCreatesNumericEntityUnescaperOne" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaperTest#testCreatesNumericEntityUnescaperTwo" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testCreatesNumericEntityUnescaperTwo" ]
          }
        }
      }
    },
    "e55d0ac1c17a7fd71dbb4f65034c7b739be6a35a" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "e55d0ac1c17a7fd71dbb4f65034c7b739be6a35a~1",
      "changedClazzes" : {
        "org.apache.commons.text.AlphabetConverterTest" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "binaryTest", "doNotEncodeTest", "hebrewTest", "javadocExampleTest", "testCreateConverterFromCharsAndEquals", "testCreateConverterFromCharsOne", "testCreateConverterFromCharsWithNullAndNull", "testCreateConverterFromMapAndEquals", "testDecodeReturningNull", "testEquals", "testEqualsWithNull", "testEqualsWithSameObject", "unicodeTest" ]
          }
        },
        "org.apache.commons.text.CaseUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.CaseUtilsTest" : [ "testConstructor", "testToCamelCase" ]
          }
        },
        "org.apache.commons.text.CharacterPredicatesTest" : {
          "testcases" : {
            "org.apache.commons.text.CharacterPredicatesTest" : [ "testArabicNumerals", "testAsciiAlphaNumerals", "testAsciiLetters", "testAsciiLowercaseLetters", "testAsciiUppercaseLetters", "testDigits", "testLetters" ]
          }
        },
        "org.apache.commons.text.FormattableUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testAlternatePadCharAndEllipsis", "testAlternatePadCharacter", "testAppendWithNullFormatterAndIntsThrowsNullPointerException", "testDefaultAppend", "testEllipsis", "testIllegalEllipsis", "testPublicConstructorExists", "testSimplestFormat" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax", "testGenerateTakingIntThrowsNullPointerException", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSelectFromCharArray", "testSelectFromCharVarargs", "testSetLength", "testUsingRandom", "testWithinMultipleRanges", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText", "testLang299" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerThanMinusOneValues", "testAbbreviateForLowerValue", "testAbbreviateForLowerValueAndAppendedString", "testAbbreviateForNullAndEmptyString", "testAbbreviateForUpperLimit", "testAbbreviateForUpperLimitAndAppendedString", "testAbbreviateUpperLessThanLowerValues", "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeFully_Text88", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testConstructor", "testContainsAllWordsWithNull", "testContainsAllWords_StringString", "testInitialsSurrogatePairs", "testInitials_String", "testInitials_String_charArray", "testLANG1292", "testLANG673", "testSwapCase_String", "testUnCapitalize_Text88", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        },
        "org.apache.commons.text.diff.ReplacementsFinderTest#testReplacementsHandler" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.StringsComparatorTest" : {
          "testcases" : {
            "org.apache.commons.text.diff.StringsComparatorTest" : [ "testExecution", "testLength", "testLongestCommonSubsequence" ]
          }
        },
        "org.apache.commons.text.similarity.CosineDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineDistanceTest" : [ "testCosineDistance" ]
          }
        },
        "org.apache.commons.text.similarity.CosineSimilarityTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineSimilarityTest" : [ "testCosineSimilarityReturningDoubleWhereByteValueIsZero", "testCosineSimilarityThrowsIllegalArgumentException", "testCosineSimilarityWithNonEmptyMap", "testCosineSimilarityWithNull" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore", "testGetFuzzyScore_NullNullLocale", "testGetFuzzyScore_NullStringLocale", "testGetFuzzyScore_StringNullLocale", "testGetLocale", "testMissingLocale" ]
          }
        },
        "org.apache.commons.text.similarity.HammingDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.HammingDistanceTest" : [ "testHammingDistance", "testHammingDistance_nullLeftValue", "testHammingDistance_nullRightValue" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testApplyThrowsIllegalArgumentExceptionAndCreatesLevenshteinDetailedDistanceTakingInteger", "testApplyWithNull", "testConstructorWithNegativeThreshold", "testCreatesLevenshteinDetailedDistanceTakingInteger6", "testEquals", "testGetDefaultInstanceOne", "testGetDefaultInstanceTwo", "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testGetThreshold", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testApplyThrowsIllegalArgumentExceptionAndCreatesLevenshteinDistanceTakingInteger", "testConstructorWithNegativeThreshold", "testGetLevenshteinDistance_NullString", "testGetLevenshteinDistance_NullStringInt", "testGetLevenshteinDistance_StringNull", "testGetLevenshteinDistance_StringNullInt", "testGetLevenshteinDistance_StringString", "testGetLevenshteinDistance_StringStringInt", "testGetThresholdDirectlyAfterObjectInstantiation" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResultsTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinResultsTest" : [ "testEqualsDifferenceInSubstitutionCount", "testEqualsReturningFalse", "testEqualsSameObject", "testEqualsWithNonNull", "testEqualsWithNull" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLogestCommonSubsequenceDistacne", "testGettingLongestCommonSubsequenceDistanceNullNull", "testGettingLongestCommonSubsequenceDistanceNullString", "testGettingLongestCommonSubsequenceDistanceStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLogestCommonSubsequenceNullNull", "testGettingLogestCommonSubsequenceNullString", "testGettingLogestCommonSubsequenceStringNull", "testGettingLongestCommonSubsequenceApplyNullNull", "testGettingLongestCommonSubsequenceApplyNullString", "testGettingLongestCommonSubsequenceApplyStringNull", "testGettingLongestCommonSubsequenceNullNull", "testGettingLongestCommonSubsequenceNullString", "testGettingLongestCommonSubsequenceStringNull", "testLogestCommonSubsequence", "testLongestCommonSubsequence", "testLongestCommonSubsequenceApply" ]
          }
        },
        "org.apache.commons.text.similarity.SimilarityScoreFromTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.SimilarityScoreFromTest" : [ "testApply", "testFailsToCreateSimilarityScoreFromThrowsIllegalArgumentException" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslatorTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull", "testNullConstructor", "testNullVarargConstructor" ]
          }
        },
        "org.apache.commons.text.translate.CodePointTranslatorTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.CodePointTranslatorTest" : [ "testAboveReturningNonNull" ]
          }
        },
        "org.apache.commons.text.translate.CsvTranslatorsTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvEscaperCRTest", "csvEscaperCommaTest", "csvEscaperLFTest", "csvEscaperPlaneTextTest", "csvEscaperQuoteTest", "csvUnEscaperPlaneTextTest", "csvUnEscaperTest1", "csvUnEscaperTest2", "csvUnEscaperTest3", "csvUnEscaperTest4" ]
          }
        },
        "org.apache.commons.text.translate.EntityArraysTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposMap", "testBasicMap", "testConstructorExists", "testForDuplicateDeclaredMapValuesAposMap", "testForDuplicateDeclaredMapValuesBasicMap", "testForDuplicateDeclaredMapValuesHtml40ExtendedMap", "testForDuplicateDeclaredMapValuesISO8859Map", "testForDuplicateDeclaredMapValuesJavaCtrlCharsMap", "testForDuplicatedDeclaredMapKeys", "testHtml40ExtendedMap", "testISO8859Map", "testJavaCntrlCharsMap" ]
          }
        },
        "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.JavaUnicodeEscaperTest" : [ "testAbove", "testBelow", "testBetween", "testToUtf16Escape" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslatorTest#testBasicLookup" : {
          "testcases" : {
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslatorTest#testLang882" : {
          "testcases" : {
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testLang882" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaperTest#testAbove" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testAbove" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaperTest#testBelow" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testBelow" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaperTest#testBetween" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityEscaperTest#testSupplementary" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityEscaperTest" : [ "testSupplementary" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaperTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testCreatesNumericEntityUnescaperOne", "testCreatesNumericEntityUnescaperTwo", "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ]
          }
        },
        "org.apache.commons.text.translate.OctalUnescaperTest#testBetween" : {
          "testcases" : {
            "org.apache.commons.text.translate.OctalUnescaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.SinglePassTranslatorTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.SinglePassTranslatorTest" : [ "codePointsAreReturned", "indexIsValidated", "testTranslateThrowsIllegalArgumentException" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaperTest#testAbove" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testAbove" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaperTest#testBelow" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testBelow" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeEscaperTest#testBetween" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeEscaperTest" : [ "testBetween" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaperTest#testUPlus" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testUPlus" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnescaperTest#testUuuuu" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeUnescaperTest" : [ "testUuuuu" ]
          }
        },
        "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemoverTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.UnicodeUnpairedSurrogateRemoverTest" : [ "testInvalidCharacters", "testValidCharacters" ]
          }
        }
      }
    },
    "1596501e610bca7955969bb94fe6c6bad397e361" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1596501e610bca7955969bb94fe6c6bad397e361~1",
      "changedClazzes" : {
        "org.apache.commons.text.ExtendedMessageFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#appendQuotedString" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#applyPattern" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#containsElements" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#getFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#getQuotedString" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#insertFormats" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#next" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#parseFormatDescription" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#parseFormatDescription(String,ParsePosition)" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#readArgumentIndex" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#seekNonWs" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testChoiceQuoteJustBeforeBraceEnd_TEXT_106", "testCreatesExtendedMessageFormatTakingString", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo", "testOverriddenBuiltinFormat", "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#setUp" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testChoiceQuoteJustBeforeBraceEnd_TEXT_106" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$LowerCaseFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$LowerCaseFormatFactory#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$UpperCaseFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$UpperCaseFormatFactory#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.StrMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.StrMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.StrMatcher#splitMatcher" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharSetMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharSetMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.StrMatcher$NoMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.StrMatcher$TrimMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        }
      }
    },
    "aa789914536355f863c7a756684959e4eac67f91" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "aa789914536355f863c7a756684959e4eac67f91~1",
      "changedClazzes" : {
        "org.apache.commons.text.ExtendedMessageFormatTest#testChoiceQuoteJustBeforeBraceEnd_TEXT_106" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        }
      }
    },
    "6313d401d1631884b6a4ae31f2714b066b62f629" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6313d401d1631884b6a4ae31f2714b066b62f629~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.LongestCommonSubsequence#apply(CharSequence,CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLogestCommonSubsequenceDistacne" ],
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLongestCommonSubsequenceApplyNullNull", "testGettingLongestCommonSubsequenceApplyNullString", "testGettingLongestCommonSubsequenceApplyStringNull", "testLongestCommonSubsequenceApply" ],
            "org.apache.commons.text.similarity.SimilarityScoreFromTest" : [ "testApply" ]
          }
        }
      }
    },
    "3554c40a09288ba85313219c58e8084f3dcd885f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3554c40a09288ba85313219c58e8084f3dcd885f~1",
      "changedClazzes" : {
        "org.apache.commons.text.ExtendedMessageFormatTest" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testChoiceQuoteJustBeforeBraceEnd_TEXT_106", "testCreatesExtendedMessageFormatTakingString", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo", "testOverriddenBuiltinFormat", "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        }
      }
    },
    "50c38d6c0eedc8f8a6530a7f19b3ca940bd25927" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "50c38d6c0eedc8f8a6530a7f19b3ca940bd25927~1",
      "changedClazzes" : {
        "org.apache.commons.text.AlphabetConverterTest#testCreateConverterFromCharsAndEquals" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testCreateConverterFromCharsAndEquals" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#testCreateConverterFromCharsOne" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testCreateConverterFromCharsOne" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#testCreateConverterFromCharsWithNullAndNull" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testCreateConverterFromCharsWithNullAndNull" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#testEquals" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testEquals" ]
          }
        },
        "org.apache.commons.text.AlphabetConverterTest#testEqualsWithSameObject" : {
          "testcases" : {
            "org.apache.commons.text.AlphabetConverterTest" : [ "testEqualsWithSameObject" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testCreatesExtendedMessageFormatTakingString", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo", "testOverriddenBuiltinFormat", "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.FormattableUtils#append(CharSequence,Formatter,int,int,int,char,CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testAlternatePadCharAndEllipsis", "testAlternatePadCharacter", "testAppendWithNullFormatterAndIntsThrowsNullPointerException", "testDefaultAppend", "testEllipsis", "testIllegalEllipsis" ]
          }
        },
        "org.apache.commons.text.RandomStringGenerator$Builder" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax", "testGenerateTakingIntThrowsNullPointerException", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSelectFromCharArray", "testSelectFromCharVarargs", "testSetLength", "testUsingRandom", "testWithinMultipleRanges", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.StrLookupTest#testMapLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getTokenList" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "testListArray", "testToString" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest#testUnescapeHexCharsHtml" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.CosineSimilarityTest#testCosineSimilarityWithNonEmptyMap" : {
          "testcases" : {
            "org.apache.commons.text.similarity.CosineSimilarityTest" : [ "testCosineSimilarityWithNonEmptyMap" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResultsTest#testEqualsDifferenceInSubstitutionCount" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinResultsTest" : [ "testEqualsDifferenceInSubstitutionCount" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResultsTest#testEqualsReturningFalse" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinResultsTest" : [ "testEqualsReturningFalse" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResultsTest#testEqualsSameObject" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinResultsTest" : [ "testEqualsSameObject" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResultsTest#testEqualsWithNonNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinResultsTest" : [ "testEqualsWithNonNull" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinResultsTest#testEqualsWithNull" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinResultsTest" : [ "testEqualsWithNull" ]
          }
        },
        "org.apache.commons.text.translate.EntityArrays#invert(Map)" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml3", "testEscapeHtml4", "testEscapeHtmlHighUnicode", "testEscapeHtmlThree", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeEcmaScript", "testUnescapeHtml3", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeJson", "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposMap", "testBasicMap", "testConstructorExists", "testForDuplicateDeclaredMapValuesAposMap", "testForDuplicateDeclaredMapValuesBasicMap", "testForDuplicateDeclaredMapValuesHtml40ExtendedMap", "testForDuplicateDeclaredMapValuesISO8859Map", "testForDuplicateDeclaredMapValuesJavaCtrlCharsMap", "testForDuplicatedDeclaredMapKeys", "testHtml40ExtendedMap", "testISO8859Map", "testJavaCntrlCharsMap" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#<init>(Map)" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml3", "testEscapeHtml4", "testEscapeHtmlHighUnicode", "testEscapeHtmlThree", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeEcmaScript", "testUnescapeHtml3", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeJson", "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull" ],
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup", "testFailsToCreateLookupTranslatorThrowsInvalidParameterException", "testLang882" ]
          }
        }
      }
    },
    "bbd9800a2d611700e1260ff82936c2fa3ec771bc" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "bbd9800a2d611700e1260ff82936c2fa3ec771bc~1",
      "changedClazzes" : {
        "org.apache.commons.text.FormattableUtils#append(CharSequence,Formatter,int,int,int,char,CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.FormattableUtilsTest" : [ "testAlternatePadCharAndEllipsis", "testAlternatePadCharacter", "testAppendWithNullFormatterAndIntsThrowsNullPointerException", "testDefaultAppend", "testEllipsis", "testIllegalEllipsis" ]
          }
        }
      }
    },
    "ccfb4562b71c5abf4ddf5f761b56acc90bdc4af2" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ccfb4562b71c5abf4ddf5f761b56acc90bdc4af2~1",
      "changedClazzes" : {
        "org.apache.commons.text.CaseUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.CaseUtilsTest" : [ "testConstructor", "testToCamelCase" ]
          }
        },
        "org.apache.commons.text.CharacterPredicatesTest" : {
          "testcases" : {
            "org.apache.commons.text.CharacterPredicatesTest" : [ "testArabicNumerals", "testAsciiAlphaNumerals", "testAsciiLetters", "testAsciiLowercaseLetters", "testAsciiUppercaseLetters", "testDigits", "testLetters" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testCreatesExtendedMessageFormatTakingString", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo", "testOverriddenBuiltinFormat", "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.RandomStringGeneratorTest" : {
          "testcases" : {
            "org.apache.commons.text.RandomStringGeneratorTest" : [ "testBadMaximumCodePoint", "testBadMinAndMax", "testBadMinimumCodePoint", "testChangeOfFilter", "testGenerateMinMaxLength", "testGenerateMinMaxLengthInvalidLength", "testGenerateMinMaxLengthMinGreaterThanMax", "testGenerateTakingIntThrowsNullPointerException", "testInvalidLength", "testMultipleFilters", "testNoLoneSurrogates", "testNoPrivateCharacters", "testRemoveFilters", "testSelectFromCharArray", "testSelectFromCharVarargs", "testSetLength", "testUsingRandom", "testWithinMultipleRanges", "testWithinRange", "testZeroLength" ]
          }
        },
        "org.apache.commons.text.StringEscapeUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml3", "testEscapeHtml4", "testEscapeHtmlHighUnicode", "testEscapeHtmlThree", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeEcmaScript", "testUnescapeHtml3", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeJson", "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ]
          }
        },
        "org.apache.commons.text.WordUtilsTest" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testAbbreviateForLowerThanMinusOneValues", "testAbbreviateForLowerValue", "testAbbreviateForLowerValueAndAppendedString", "testAbbreviateForNullAndEmptyString", "testAbbreviateForUpperLimit", "testAbbreviateForUpperLimitAndAppendedString", "testAbbreviateUpperLessThanLowerValues", "testCapitalizeFullyWithDelimiters_String", "testCapitalizeFully_String", "testCapitalizeFully_Text88", "testCapitalizeWithDelimiters_String", "testCapitalize_String", "testConstructor", "testContainsAllWordsWithNull", "testContainsAllWords_StringString", "testInitialsSurrogatePairs", "testInitials_String", "testInitials_String_charArray", "testLANG1292", "testLANG673", "testSwapCase_String", "testUnCapitalize_Text88", "testUncapitalizeWithDelimiters_String", "testUncapitalize_String", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore", "testGetFuzzyScore_NullNullLocale", "testGetFuzzyScore_NullStringLocale", "testGetFuzzyScore_StringNullLocale", "testGetLocale", "testMissingLocale" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardDistanceTest" : [ "testGettingJaccardDistance", "testGettingJaccardDistanceNullNull", "testGettingJaccardDistanceNullString", "testGettingJaccardDistanceStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaccardSimilarityTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaccardSimilarityTest" : [ "testGettingJaccardSimilarity", "testGettingJaccardSimilarityNullNull", "testGettingJaccardSimilarityNullString", "testGettingJaccardSimilarityStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullNull", "testGetJaroWinklerDistance_NullString", "testGetJaroWinklerDistance_StringNull", "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testApplyThrowsIllegalArgumentExceptionAndCreatesLevenshteinDetailedDistanceTakingInteger", "testApplyWithNull", "testConstructorWithNegativeThreshold", "testCreatesLevenshteinDetailedDistanceTakingInteger6", "testEquals", "testGetDefaultInstanceOne", "testGetDefaultInstanceTwo", "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testGetThreshold", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testApplyThrowsIllegalArgumentExceptionAndCreatesLevenshteinDistanceTakingInteger", "testConstructorWithNegativeThreshold", "testGetLevenshteinDistance_NullString", "testGetLevenshteinDistance_NullStringInt", "testGetLevenshteinDistance_StringNull", "testGetLevenshteinDistance_StringNullInt", "testGetLevenshteinDistance_StringString", "testGetLevenshteinDistance_StringStringInt", "testGetThresholdDirectlyAfterObjectInstantiation" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest" : [ "testGettingLogestCommonSubsequenceDistacne", "testGettingLongestCommonSubsequenceDistanceNullNull", "testGettingLongestCommonSubsequenceDistanceNullString", "testGettingLongestCommonSubsequenceDistanceStringNull" ]
          }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LongestCommonSubsequenceTest" : [ "testGettingLogestCommonSubsequenceNullNull", "testGettingLogestCommonSubsequenceNullString", "testGettingLogestCommonSubsequenceStringNull", "testGettingLongestCommonSubsequenceApplyNullNull", "testGettingLongestCommonSubsequenceApplyNullString", "testGettingLongestCommonSubsequenceApplyStringNull", "testGettingLongestCommonSubsequenceNullNull", "testGettingLongestCommonSubsequenceNullString", "testGettingLongestCommonSubsequenceStringNull", "testLogestCommonSubsequence", "testLongestCommonSubsequence", "testLongestCommonSubsequenceApply" ]
          }
        },
        "org.apache.commons.text.translate.AggregateTranslatorTest" : {
          "testcases" : {
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull", "testNullConstructor", "testNullVarargConstructor" ]
          }
        }
      }
    },
    "b647f0496d0548b8ce817e6504fc0e72af618bad" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "b647f0496d0548b8ce817e6504fc0e72af618bad~1",
      "changedClazzes" : {
        "org.apache.commons.text.ExtendedMessageFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#appendQuotedString" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#applyPattern" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#containsElements" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#getFormat" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#getQuotedString" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#insertFormats" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#next" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#parseFormatDescription" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#parseFormatDescription(String,ParsePosition)" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#readArgumentIndex" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormat#seekNonWs" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testBuiltInChoiceFormat", "testBuiltInDateTimeFormat", "testBuiltInNumberFormat", "testChoiceQuoteJustBeforeBraceEnd_TEXT_106", "testCreatesExtendedMessageFormatTakingString", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo", "testOverriddenBuiltinFormat", "testSetFormatByArgumentIndexIsUnsupported", "testSetFormatIsUnsupported", "testSetFormatsByArgumentIndex", "testSetFormatsIsUnsupported" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#setUp" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testChoiceQuoteJustBeforeBraceEnd_TEXT_106" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$LowerCaseFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$LowerCaseFormatFactory#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$UpperCaseFormat#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest$UpperCaseFormatFactory#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.StrMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.StrMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.StrMatcher#splitMatcher" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharSetMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharSetMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.StrMatcher$NoMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        },
        "org.apache.commons.text.StrMatcher$TrimMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106" ]
          }
        }
      }
    },
    "59984cafab8d600627e4358186e145defa26d141" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "59984cafab8d600627e4358186e145defa26d141~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrBuilder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrBuilder#append" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrBuilder#ensureCapacity" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrBuilder#length" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrBuilder#replace" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrBuilder#replaceImpl" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrBuilder#toString" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrBuilder#validateRange" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testResourceBundleLookup", "testResourceBundleLookup_nullMap", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testDisableSubstitutionInValues", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.lookup.DateStringLookupTest" : [ "testDefault", "testFormat" ],
            "org.apache.commons.text.lookup.EnvironmentVariableStringLookupTest" : [ "testOne" ],
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookup", "testLookupWithDefaultInterpolator" ],
            "org.apache.commons.text.lookup.JavaPlatformStringLookupTest" : [ "testVm" ],
            "org.apache.commons.text.lookup.NullStringLookupTest" : [ "test" ],
            "org.apache.commons.text.lookup.ResourceBundleStringLookupTest" : [ "testOne" ],
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ],
            "org.apache.commons.text.lookup.SystemPropertyStringLookupTest" : [ "testUserName" ]
          }
        },
        "org.apache.commons.text.StrLookup$MapStrLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testResourceBundleLookup", "testResourceBundleLookup_nullMap", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testDisableSubstitutionInValues", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrLookup$MapStrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.lookup.DateStringLookupTest" : [ "testDefault", "testFormat" ],
            "org.apache.commons.text.lookup.EnvironmentVariableStringLookupTest" : [ "testOne" ],
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookup", "testLookupWithDefaultInterpolator" ],
            "org.apache.commons.text.lookup.JavaPlatformStringLookupTest" : [ "testVm" ],
            "org.apache.commons.text.lookup.NullStringLookupTest" : [ "test" ],
            "org.apache.commons.text.lookup.ResourceBundleStringLookupTest" : [ "testOne" ],
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ],
            "org.apache.commons.text.lookup.SystemPropertyStringLookupTest" : [ "testUserName" ]
          }
        },
        "org.apache.commons.text.StrLookup$ResourceBundleLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testResourceBundleLookup", "testResourceBundleLookup_nullMap" ]
          }
        },
        "org.apache.commons.text.StrLookup$SystemPropertiesStrLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testResourceBundleLookup", "testResourceBundleLookup_nullMap", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testDisableSubstitutionInValues", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrLookup$SystemPropertiesStrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.lookup.DateStringLookupTest" : [ "testDefault", "testFormat" ],
            "org.apache.commons.text.lookup.EnvironmentVariableStringLookupTest" : [ "testOne" ],
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookup", "testLookupWithDefaultInterpolator" ],
            "org.apache.commons.text.lookup.JavaPlatformStringLookupTest" : [ "testVm" ],
            "org.apache.commons.text.lookup.NullStringLookupTest" : [ "test" ],
            "org.apache.commons.text.lookup.ResourceBundleStringLookupTest" : [ "testOne" ],
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ],
            "org.apache.commons.text.lookup.SystemPropertyStringLookupTest" : [ "testUserName" ]
          }
        },
        "org.apache.commons.text.StrMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrMatcher#stringMatcher" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharSetMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrMatcher$NoMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrMatcher$StringMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrMatcher$StringMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrMatcher$TrimMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#<init>" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#checkCyclicSubstitution" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getEscapeChar" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getValueDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getVariablePrefixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getVariableResolver" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getVariableSuffixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#isDisableSubstitutionInValues" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#isEnableSubstitutionInVariables" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#replace" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#resolveVariable" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setEscapeChar" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setValueDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariablePrefixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariableResolver" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariableSuffixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#substitute" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.AbstractStringLookup" : {
          "testcases" : { }
        },
        "org.apache.commons.text.lookup.AbstractStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.lookup.DateStringLookupTest" : [ "testDefault", "testFormat" ],
            "org.apache.commons.text.lookup.EnvironmentVariableStringLookupTest" : [ "testOne" ],
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookup", "testLookupWithDefaultInterpolator" ],
            "org.apache.commons.text.lookup.JavaPlatformStringLookupTest" : [ "testVm" ],
            "org.apache.commons.text.lookup.NullStringLookupTest" : [ "test" ],
            "org.apache.commons.text.lookup.ResourceBundleStringLookupTest" : [ "testOne" ],
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ],
            "org.apache.commons.text.lookup.SystemPropertyStringLookupTest" : [ "testUserName" ]
          }
        },
        "org.apache.commons.text.lookup.AbstractStringLookup#isEmpty" : {
          "testcases" : {
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ]
          }
        },
        "org.apache.commons.text.lookup.DateStringLookup" : {
          "testcases" : { }
        },
        "org.apache.commons.text.lookup.DateStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.lookup.DateStringLookupTest" : [ "testDefault", "testFormat" ],
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ],
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.DateStringLookup#formatDate" : {
          "testcases" : {
            "org.apache.commons.text.lookup.DateStringLookupTest" : [ "testDefault", "testFormat" ],
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ]
          }
        },
        "org.apache.commons.text.lookup.DateStringLookup#lookup" : {
          "testcases" : {
            "org.apache.commons.text.lookup.DateStringLookupTest" : [ "testDefault", "testFormat" ],
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ]
          }
        },
        "org.apache.commons.text.lookup.DateStringLookupTest" : {
          "testcases" : {
            "org.apache.commons.text.lookup.DateStringLookupTest" : [ "testDefault", "testFormat" ]
          }
        },
        "org.apache.commons.text.lookup.DateStringLookupTest#testDefault" : {
          "testcases" : {
            "org.apache.commons.text.lookup.DateStringLookupTest" : [ "testDefault" ]
          }
        },
        "org.apache.commons.text.lookup.DateStringLookupTest#testFormat" : {
          "testcases" : {
            "org.apache.commons.text.lookup.DateStringLookupTest" : [ "testFormat" ]
          }
        },
        "org.apache.commons.text.lookup.EnvironmentVariableStringLookup" : {
          "testcases" : { }
        },
        "org.apache.commons.text.lookup.EnvironmentVariableStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.lookup.EnvironmentVariableStringLookupTest" : [ "testOne" ],
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ],
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.EnvironmentVariableStringLookup#lookup" : {
          "testcases" : {
            "org.apache.commons.text.lookup.EnvironmentVariableStringLookupTest" : [ "testOne" ],
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ]
          }
        },
        "org.apache.commons.text.lookup.EnvironmentVariableStringLookupTest" : {
          "testcases" : {
            "org.apache.commons.text.lookup.EnvironmentVariableStringLookupTest" : [ "testOne" ]
          }
        },
        "org.apache.commons.text.lookup.EnvironmentVariableStringLookupTest#testOne" : {
          "testcases" : {
            "org.apache.commons.text.lookup.EnvironmentVariableStringLookupTest" : [ "testOne" ]
          }
        },
        "org.apache.commons.text.lookup.IllegalArgumentExceptions" : {
          "testcases" : { }
        },
        "org.apache.commons.text.lookup.InterpolatorStringLookup" : {
          "testcases" : { }
        },
        "org.apache.commons.text.lookup.InterpolatorStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookup", "testLookupWithDefaultInterpolator" ],
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.InterpolatorStringLookup#lookup" : {
          "testcases" : {
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookup", "testLookupWithDefaultInterpolator" ],
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : {
          "testcases" : {
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookup", "testLookupWithDefaultInterpolator" ]
          }
        },
        "org.apache.commons.text.lookup.InterpolatorStringLookupTest#assertLookupNotEmpty" : {
          "testcases" : {
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ]
          }
        },
        "org.apache.commons.text.lookup.InterpolatorStringLookupTest#testLookup" : {
          "testcases" : {
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookup" ]
          }
        },
        "org.apache.commons.text.lookup.InterpolatorStringLookupTest#testLookupWithDefaultInterpolator" : {
          "testcases" : {
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ]
          }
        },
        "org.apache.commons.text.lookup.JavaPlatformStringLookup" : {
          "testcases" : { }
        },
        "org.apache.commons.text.lookup.JavaPlatformStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ],
            "org.apache.commons.text.lookup.JavaPlatformStringLookupTest" : [ "testVm" ],
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.JavaPlatformStringLookup#getHardware" : {
          "testcases" : {
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ]
          }
        },
        "org.apache.commons.text.lookup.JavaPlatformStringLookup#getLocale" : {
          "testcases" : {
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ]
          }
        },
        "org.apache.commons.text.lookup.JavaPlatformStringLookup#getOperatingSystem" : {
          "testcases" : {
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ]
          }
        },
        "org.apache.commons.text.lookup.JavaPlatformStringLookup#getRuntime" : {
          "testcases" : {
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ]
          }
        },
        "org.apache.commons.text.lookup.JavaPlatformStringLookup#getSystemProperty" : {
          "testcases" : {
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ],
            "org.apache.commons.text.lookup.JavaPlatformStringLookupTest" : [ "testVm" ]
          }
        },
        "org.apache.commons.text.lookup.JavaPlatformStringLookup#getVirtualMachine" : {
          "testcases" : {
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ],
            "org.apache.commons.text.lookup.JavaPlatformStringLookupTest" : [ "testVm" ]
          }
        },
        "org.apache.commons.text.lookup.JavaPlatformStringLookup#lookup" : {
          "testcases" : {
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ],
            "org.apache.commons.text.lookup.JavaPlatformStringLookupTest" : [ "testVm" ]
          }
        },
        "org.apache.commons.text.lookup.JavaPlatformStringLookupTest" : {
          "testcases" : {
            "org.apache.commons.text.lookup.JavaPlatformStringLookupTest" : [ "testVm" ]
          }
        },
        "org.apache.commons.text.lookup.JavaPlatformStringLookupTest#testVm" : {
          "testcases" : {
            "org.apache.commons.text.lookup.JavaPlatformStringLookupTest" : [ "testVm" ]
          }
        },
        "org.apache.commons.text.lookup.MapStringLookup" : {
          "testcases" : { }
        },
        "org.apache.commons.text.lookup.MapStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookup", "testLookupWithDefaultInterpolator" ],
            "org.apache.commons.text.lookup.MapStringLookupTest" : [ "testOne" ],
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.MapStringLookup#lookup" : {
          "testcases" : {
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookup" ],
            "org.apache.commons.text.lookup.MapStringLookupTest" : [ "testOne" ],
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.MapStringLookupTest" : {
          "testcases" : {
            "org.apache.commons.text.lookup.MapStringLookupTest" : [ "testOne" ]
          }
        },
        "org.apache.commons.text.lookup.MapStringLookupTest#testOne" : {
          "testcases" : {
            "org.apache.commons.text.lookup.MapStringLookupTest" : [ "testOne" ]
          }
        },
        "org.apache.commons.text.lookup.NullStringLookup" : {
          "testcases" : { }
        },
        "org.apache.commons.text.lookup.NullStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.lookup.NullStringLookupTest" : [ "test" ]
          }
        },
        "org.apache.commons.text.lookup.NullStringLookup#lookup" : {
          "testcases" : {
            "org.apache.commons.text.lookup.NullStringLookupTest" : [ "test" ]
          }
        },
        "org.apache.commons.text.lookup.NullStringLookupTest" : {
          "testcases" : {
            "org.apache.commons.text.lookup.NullStringLookupTest" : [ "test" ]
          }
        },
        "org.apache.commons.text.lookup.NullStringLookupTest#test" : {
          "testcases" : {
            "org.apache.commons.text.lookup.NullStringLookupTest" : [ "test" ]
          }
        },
        "org.apache.commons.text.lookup.ResourceBundleStringLookup" : {
          "testcases" : { }
        },
        "org.apache.commons.text.lookup.ResourceBundleStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.lookup.ResourceBundleStringLookupTest" : [ "testOne" ]
          }
        },
        "org.apache.commons.text.lookup.ResourceBundleStringLookup#lookup" : {
          "testcases" : {
            "org.apache.commons.text.lookup.ResourceBundleStringLookupTest" : [ "testOne" ]
          }
        },
        "org.apache.commons.text.lookup.ResourceBundleStringLookupTest" : {
          "testcases" : {
            "org.apache.commons.text.lookup.ResourceBundleStringLookupTest" : [ "testOne" ]
          }
        },
        "org.apache.commons.text.lookup.ResourceBundleStringLookupTest#testOne" : {
          "testcases" : {
            "org.apache.commons.text.lookup.ResourceBundleStringLookupTest" : [ "testOne" ]
          }
        },
        "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest#testMapAndSystemProperty" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest#testSystemProperty" : {
          "testcases" : {
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.StringLookup" : {
          "testcases" : { }
        },
        "org.apache.commons.text.lookup.SystemPropertyStringLookup" : {
          "testcases" : { }
        },
        "org.apache.commons.text.lookup.SystemPropertyStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ],
            "org.apache.commons.text.lookup.JavaPlatformStringLookupTest" : [ "testVm" ],
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ],
            "org.apache.commons.text.lookup.SystemPropertyStringLookupTest" : [ "testUserName" ]
          }
        },
        "org.apache.commons.text.lookup.SystemPropertyStringLookup#lookup" : {
          "testcases" : {
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ],
            "org.apache.commons.text.lookup.JavaPlatformStringLookupTest" : [ "testVm" ],
            "org.apache.commons.text.lookup.StrSubstitutorWithInterpolatorTest" : [ "testMapAndSystemProperty", "testSystemProperty" ],
            "org.apache.commons.text.lookup.SystemPropertyStringLookupTest" : [ "testUserName" ]
          }
        },
        "org.apache.commons.text.lookup.SystemPropertyStringLookupTest" : {
          "testcases" : {
            "org.apache.commons.text.lookup.SystemPropertyStringLookupTest" : [ "testUserName" ]
          }
        },
        "org.apache.commons.text.lookup.SystemPropertyStringLookupTest#testUserName" : {
          "testcases" : {
            "org.apache.commons.text.lookup.SystemPropertyStringLookupTest" : [ "testUserName" ]
          }
        }
      }
    },
    "a8824266fa5f37d9f0f9da0780af32be67d12910" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a8824266fa5f37d9f0f9da0780af32be67d12910~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrBuilder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNonNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrBuilder#append" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNonNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrBuilder#ensureCapacity" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNonNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrBuilder#length" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNonNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrBuilder#replace" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrBuilder#replaceImpl" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrBuilder#toString" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrBuilder#validateRange" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNonNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrLookup#systemPropertiesLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNonNull_deprecated" ]
          }
        },
        "org.apache.commons.text.StrLookup$MapStrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNonNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrLookup$SystemPropertiesStrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNonNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts", "testReplaceInTakingStringBuilderWithNonNull_deprecated", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceTakingCharSequenceReturningNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrMatcher#stringMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts", "testReplaceInTakingStringBuilderWithNonNull_deprecated", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceTakingCharSequenceReturningNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrMatcher#tabMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingTwoAndThreeIntsReturningFalse" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts", "testReplaceInTakingStringBuilderWithNonNull_deprecated", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceTakingCharSequenceReturningNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharSetMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts", "testReplaceInTakingStringBuilderWithNonNull_deprecated", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceTakingCharSequenceReturningNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrMatcher$NoMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts", "testReplaceInTakingStringBuilderWithNonNull_deprecated", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceTakingCharSequenceReturningNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrMatcher$StringMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts", "testReplaceInTakingStringBuilderWithNonNull_deprecated", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceTakingCharSequenceReturningNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrMatcher$StringMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNonNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrMatcher$TrimMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts", "testReplaceInTakingStringBuilderWithNonNull_deprecated", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceTakingCharSequenceReturningNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testDisableSubstitutionInValues", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts", "testReplaceInTakingStringBuilderWithNonNull_deprecated", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceTakingCharSequenceReturningNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#checkCyclicSubstitution" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getEscapeChar" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts", "testReplaceInTakingStringBuilderWithNonNull_deprecated", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceTakingCharSequenceReturningNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getValueDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNonNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getVariablePrefixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNonNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getVariableResolver" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getVariableSuffixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNonNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#isDisableSubstitutionInValues" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNonNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#isEnableSubstitutionInVariables" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNonNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#isPreserveEscapes" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceTakingCharSequenceReturningNull_deprecated" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#replace" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts", "testReplaceTakingCharSequenceReturningNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#replaceIn" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNonNull_deprecated", "testReplaceInTakingTwoAndThreeIntsReturningFalse" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#resolveVariable" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setEscapeChar" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts", "testReplaceInTakingStringBuilderWithNonNull_deprecated", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceTakingCharSequenceReturningNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setValueDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts", "testReplaceInTakingStringBuilderWithNonNull_deprecated", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceTakingCharSequenceReturningNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariablePrefix" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNonNull_deprecated" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariablePrefixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts", "testReplaceInTakingStringBuilderWithNonNull_deprecated", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceTakingCharSequenceReturningNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariableResolver" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts", "testReplaceInTakingStringBuilderWithNonNull_deprecated", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceTakingCharSequenceReturningNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariableSuffix" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNonNull_deprecated" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariableSuffixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts", "testReplaceInTakingStringBuilderWithNonNull_deprecated", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceTakingCharSequenceReturningNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#substitute" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNonNull_deprecated" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts", "testCyclicReplacement", "testDefaultValueDelimiters", "testDisableSubstitutionInValues", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNonNull_deprecated", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingCharSequenceReturningNull_deprecated", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#setUp" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts", "testReplaceInTakingStringBuilderWithNonNull_deprecated", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceTakingCharSequenceReturningNull_deprecated" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#tearDown" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts", "testReplaceInTakingStringBuilderWithNonNull_deprecated", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceTakingCharSequenceReturningNull_deprecated" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceInTakingStringBuilderWithNonNull_deprecated" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNonNull_deprecated" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceInTakingTwoAndThreeIntsReturningFalse" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingTwoAndThreeIntsReturningFalse" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceTakingCharSequenceReturningNull_deprecated" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceTakingCharSequenceReturningNull_deprecated" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest#testMapAndSystemProperty" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest#testSystemProperty" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.AbstractStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.DateStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.lookup.DateStringLookupTest" : [ "testDefault", "testFormat" ],
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ]
          }
        },
        "org.apache.commons.text.lookup.DateStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.EnvironmentVariableStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.lookup.EnvironmentVariableStringLookupTest" : [ "testOne" ],
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ]
          }
        },
        "org.apache.commons.text.lookup.EnvironmentVariableStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.InterpolatorStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookup", "testLookupWithDefaultInterpolator" ]
          }
        },
        "org.apache.commons.text.lookup.InterpolatorStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.InterpolatorStringLookup#lookup" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.InterpolatorStringLookupTest#testLookup" : {
          "testcases" : {
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookup" ]
          }
        },
        "org.apache.commons.text.lookup.JavaPlatformStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ],
            "org.apache.commons.text.lookup.JavaPlatformStringLookupTest" : [ "testVm" ]
          }
        },
        "org.apache.commons.text.lookup.JavaPlatformStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.MapStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookup", "testLookupWithDefaultInterpolator" ],
            "org.apache.commons.text.lookup.MapStringLookupTest" : [ "testOne" ]
          }
        },
        "org.apache.commons.text.lookup.MapStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts", "testReplaceInTakingTwoAndThreeIntsReturningFalse" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.MapStringLookup#lookup" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.MapStringLookup#on" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts", "testReplaceInTakingTwoAndThreeIntsReturningFalse" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.MapStringLookupTest#testOne" : {
          "testcases" : {
            "org.apache.commons.text.lookup.MapStringLookupTest" : [ "testOne" ]
          }
        },
        "org.apache.commons.text.lookup.NullStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.lookup.NullStringLookupTest" : [ "test" ]
          }
        },
        "org.apache.commons.text.lookup.ResourceBundleStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.lookup.ResourceBundleStringLookupTest" : [ "testOne" ]
          }
        },
        "org.apache.commons.text.lookup.StringLookupFactory" : {
          "testcases" : { }
        },
        "org.apache.commons.text.lookup.StringLookupFactory#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.StringLookupFactory#interpolatorStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.SystemPropertyStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ],
            "org.apache.commons.text.lookup.JavaPlatformStringLookupTest" : [ "testVm" ],
            "org.apache.commons.text.lookup.SystemPropertyStringLookupTest" : [ "testUserName" ]
          }
        },
        "org.apache.commons.text.lookup.SystemPropertyStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.SystemPropertyStringLookup#lookup" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        }
      }
    },
    "7017ea97f5aab09a28a3ab0db44be29c207c9ce6" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7017ea97f5aab09a28a3ab0db44be29c207c9ce6~1",
      "changedClazzes" : {
        "org.apache.commons.text.lookup.AbstractStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNonNull" ],
            "org.apache.commons.text.StrSubstitutorWithInterpolatorStringLookupTest" : [ ],
            "org.apache.commons.text.lookup.DateStringLookupTest" : [ "testDefault", "testFormat" ],
            "org.apache.commons.text.lookup.EnvironmentVariableStringLookupTest" : [ "testOne" ],
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookup", "testLookupWithDefaultInterpolator" ],
            "org.apache.commons.text.lookup.JavaPlatformStringLookupTest" : [ "testVm" ],
            "org.apache.commons.text.lookup.NullStringLookupTest" : [ "test" ],
            "org.apache.commons.text.lookup.ResourceBundleStringLookupTest" : [ "testOne" ],
            "org.apache.commons.text.lookup.SystemPropertyStringLookupTest" : [ "testUserName" ]
          }
        }
      }
    },
    "6afbdc8a494047bac49080a26d1b60984c72f745" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6afbdc8a494047bac49080a26d1b60984c72f745~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrBuilder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrBuilder#append" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrBuilder#ensureCapacity" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrBuilder#length" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrBuilder#replace" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrBuilder#replaceImpl" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrBuilder#toString" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrBuilder#validateRange" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055" ]
          }
        },
        "org.apache.commons.text.StrLookup#mapLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055" ]
          }
        },
        "org.apache.commons.text.StrLookup$MapStrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055" ]
          }
        },
        "org.apache.commons.text.StrLookup$MapStrLookup#lookup" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055" ]
          }
        },
        "org.apache.commons.text.StrLookup$SystemPropertiesStrLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055" ]
          }
        },
        "org.apache.commons.text.StrMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrMatcher#stringMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharSetMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrMatcher$NoMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrMatcher$StringMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrMatcher$StringMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrMatcher$TrimMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts", "testCyclicReplacement", "testDefaultValueDelimiters", "testDisableSubstitutionInValues", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNonNull_deprecated", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingCharSequenceReturningNull_deprecated", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#checkCyclicSubstitution" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getEscapeChar" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getValueDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getVariablePrefixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#getVariableSuffixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#isDisableSubstitutionInValues" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#isEnableSubstitutionInVariables" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#replace" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#replaceSystemProperties" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#resolveVariable" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setEscapeChar" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setValueDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariablePrefixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariableResolver" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#setVariableSuffixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor#substitute" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#setUp" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#tearDown" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testLANG1055" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest#testStaticReplaceSystemProperties" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.lookup.AbstractStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.lookup.InterpolatorStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookup", "testLookupWithDefaultInterpolator" ]
          }
        },
        "org.apache.commons.text.lookup.StringLookupFactory#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.lookup.StringLookupFactory#systemPropertyStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.lookup.SystemPropertyStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.lookup.SystemPropertyStringLookup#lookup" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        }
      }
    },
    "388fa72c18f12771aeb7621046fa4f5462d9af60" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "388fa72c18f12771aeb7621046fa4f5462d9af60~1",
      "changedClazzes" : {
        "org.apache.commons.text.lookup.AbstractStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testReplaceInTakingStringBuilderWithNonNull", "testStaticReplaceSystemProperties" ],
            "org.apache.commons.text.lookup.DateStringLookupTest" : [ "testDefault", "testFormat" ],
            "org.apache.commons.text.lookup.EnvironmentVariableStringLookupTest" : [ "testOne" ],
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookup", "testLookupWithDefaultInterpolator" ],
            "org.apache.commons.text.lookup.JavaPlatformStringLookupTest" : [ "testVm" ],
            "org.apache.commons.text.lookup.NullStringLookupTest" : [ "test" ],
            "org.apache.commons.text.lookup.ResourceBundleStringLookupTest" : [ "testOne" ],
            "org.apache.commons.text.lookup.SystemPropertyStringLookupTest" : [ "testUserName" ]
          }
        },
        "org.apache.commons.text.lookup.DateStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.lookup.DateStringLookupTest" : [ "testDefault", "testFormat" ],
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ]
          }
        },
        "org.apache.commons.text.lookup.EnvironmentVariableStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.lookup.EnvironmentVariableStringLookupTest" : [ "testOne" ],
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ]
          }
        },
        "org.apache.commons.text.lookup.JavaPlatformStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ],
            "org.apache.commons.text.lookup.JavaPlatformStringLookupTest" : [ "testVm" ]
          }
        },
        "org.apache.commons.text.lookup.MapStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts", "testReplaceInTakingTwoAndThreeIntsReturningFalse" ],
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookup", "testLookupWithDefaultInterpolator" ],
            "org.apache.commons.text.lookup.MapStringLookupTest" : [ "testOne" ]
          }
        },
        "org.apache.commons.text.lookup.NullStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.lookup.NullStringLookupTest" : [ "test" ]
          }
        },
        "org.apache.commons.text.lookup.ResourceBundleStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.lookup.ResourceBundleStringLookupTest" : [ "testOne" ]
          }
        },
        "org.apache.commons.text.lookup.StringLookupFactory" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testReplaceInTakingStringBuilderWithNonNull", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.lookup.SystemPropertyStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testReplaceInTakingStringBuilderWithNonNull", "testStaticReplaceSystemProperties" ],
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ],
            "org.apache.commons.text.lookup.JavaPlatformStringLookupTest" : [ "testVm" ],
            "org.apache.commons.text.lookup.SystemPropertyStringLookupTest" : [ "testUserName" ]
          }
        },
        "org.apache.commons.text.lookup.package-info" : {
          "testcases" : { }
        }
      }
    },
    "1de362f43968de500c4ef5a80672b4efbb27ae49" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "1de362f43968de500c4ef5a80672b4efbb27ae49~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrSubstitutorTest" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts", "testCyclicReplacement", "testDefaultValueDelimiters", "testDisableSubstitutionInValues", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNonNull_deprecated", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingCharSequenceReturningNull_deprecated", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.lookup.AbstractStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testLANG1055", "testReplaceInTakingStringBuilderWithNonNull", "testStaticReplaceSystemProperties" ],
            "org.apache.commons.text.lookup.DateStringLookupTest" : [ "testDefault", "testFormat" ],
            "org.apache.commons.text.lookup.EnvironmentVariableStringLookupTest" : [ "testOne" ],
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookup", "testLookupWithDefaultInterpolator" ],
            "org.apache.commons.text.lookup.JavaPlatformStringLookupTest" : [ "testVm" ],
            "org.apache.commons.text.lookup.NullStringLookupTest" : [ "test" ],
            "org.apache.commons.text.lookup.ResourceBundleStringLookupTest" : [ "testOne" ],
            "org.apache.commons.text.lookup.SystemPropertyStringLookupTest" : [ "testUserName" ]
          }
        },
        "org.apache.commons.text.lookup.MapStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts", "testReplaceInTakingTwoAndThreeIntsReturningFalse" ],
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookup", "testLookupWithDefaultInterpolator" ],
            "org.apache.commons.text.lookup.MapStringLookupTest" : [ "testOne" ]
          }
        }
      }
    },
    "a99fbb826653be20f3c1629989bdad413916f53e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "a99fbb826653be20f3c1629989bdad413916f53e~1",
      "changedClazzes" : {
        "org.apache.commons.text.CaseUtils#toCamelCase(String,boolean,char[])" : {
          "testcases" : {
            "org.apache.commons.text.CaseUtilsTest" : [ "testToCamelCase" ]
          }
        },
        "org.apache.commons.text.WordUtils#wrap(String,int,String,boolean,String)" : {
          "testcases" : {
            "org.apache.commons.text.WordUtilsTest" : [ "testLANG1292", "testWrap_StringInt", "testWrap_StringIntStringBoolean", "testWrap_StringIntStringBooleanString" ]
          }
        },
        "org.apache.commons.text.translate.NumericEntityUnescaper#translate(CharSequence,int,Writer)" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testEscapeHiragana", "testEscapeHtmlHighUnicode", "testLang313", "testStandaloneAmphersand", "testUnescapeHtml3", "testUnescapeHtml4", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters" ],
            "org.apache.commons.text.translate.NumericEntityUnescaperTest" : [ "testCreatesNumericEntityUnescaperOne", "testCreatesNumericEntityUnescaperTwo", "testOutOfBounds", "testSupplementaryUnescaping", "testUnfinishedEntity" ]
          }
        }
      }
    },
    "788e7ef9c34dfbbcaf9bec074590e7e7d8a6024f" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "788e7ef9c34dfbbcaf9bec074590e7e7d8a6024f~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrLookup" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testResourceBundleLookup", "testResourceBundleLookup_nullMap", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testCyclicReplacement", "testDefaultValueDelimiters", "testDisableSubstitutionInValues", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull_deprecated", "testReplaceInTakingStringBuilderWithNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCreatesStrSubstitutorTakingStrLookupAndCallsReplaceTakingTwoAndThreeInts", "testCyclicReplacement", "testDefaultValueDelimiters", "testDisableSubstitutionInValues", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNonNull_deprecated", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingCharSequenceReturningNull_deprecated", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        }
      }
    },
    "fc0dd578ccd92af9a0fee1908f1f05f1fe74d602" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "fc0dd578ccd92af9a0fee1908f1f05f1fe74d602~1",
      "changedClazzes" : {
        "org.apache.commons.text.lookup.DateStringLookup#formatDate(long,String)" : {
          "testcases" : {
            "org.apache.commons.text.lookup.DateStringLookupTest" : [ "testDefault", "testFormat" ],
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ]
          }
        }
      }
    },
    "3e649a798f59cd07a6eb56de3f204ffddbab46dd" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "3e649a798f59cd07a6eb56de3f204ffddbab46dd~1",
      "changedClazzes" : {
        "org.apache.commons.text.translate.EntityArrays#invert(Map)" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml3", "testEscapeHtml4", "testEscapeHtmlHighUnicode", "testEscapeHtmlThree", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeEcmaScript", "testUnescapeHtml3", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeJson", "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.EntityArraysTest" : [ "testAposMap", "testBasicMap", "testConstructorExists", "testForDuplicateDeclaredMapValuesAposMap", "testForDuplicateDeclaredMapValuesBasicMap", "testForDuplicateDeclaredMapValuesHtml40ExtendedMap", "testForDuplicateDeclaredMapValuesISO8859Map", "testForDuplicateDeclaredMapValuesJavaCtrlCharsMap", "testForDuplicatedDeclaredMapKeys", "testHtml40ExtendedMap", "testISO8859Map", "testJavaCntrlCharsMap" ]
          }
        },
        "org.apache.commons.text.translate.LookupTranslator#<init>(Map)" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml3", "testEscapeHtml4", "testEscapeHtmlHighUnicode", "testEscapeHtmlThree", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeEcmaScript", "testUnescapeHtml3", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeJson", "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.AggregateTranslatorTest" : [ "testNonNull" ],
            "org.apache.commons.text.translate.LookupTranslatorTest" : [ "testBasicLookup", "testFailsToCreateLookupTranslatorThrowsInvalidParameterException", "testLang882" ]
          }
        }
      }
    },
    "4b67dd516dbb23b31d4b35d3f737f31de86a1cda" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "4b67dd516dbb23b31d4b35d3f737f31de86a1cda~1",
      "changedClazzes" : {
        "org.apache.commons.text.ExtendedMessageFormat#seekNonWs(String,ParsePosition)" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo", "testOverriddenBuiltinFormat" ]
          }
        },
        "org.apache.commons.text.StrBuilder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrBuilder#append" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrBuilder#deleteCharAt" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceComplexEscaping", "testReplaceEscaping", "testReplaceSoloEscaping", "testReplaceToIdentical", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrBuilder#deleteImpl" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceComplexEscaping", "testReplaceEscaping", "testReplaceSoloEscaping", "testReplaceToIdentical", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrBuilder#ensureCapacity" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrBuilder#getChars" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceToIdentical", "testReplaceUnknownKey" ]
          }
        },
        "org.apache.commons.text.StrBuilder#length" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrBuilder#replace" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrBuilder#replaceImpl" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrBuilder#toString" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrBuilder#validateRange" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StrMatcher" : {
          "testcases" : {
            "org.apache.commons.text.ExtendedMessageFormatTest" : [ "testChoiceQuoteJustBeforeBraceEnd_TEXT_106", "testEmbeddedPatternInChoice", "testEqualsHashcode", "testEscapedBraces_LANG_948", "testEscapedQuote_LANG_477", "testExtendedAndBuiltInFormats", "testExtendedFormats", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree", "testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo", "testOverriddenBuiltinFormat" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer", "testContains_StrMatcher", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testReplaceAll_StrMatcher_String", "testReplaceFirst_StrMatcher_String", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex" ],
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testDisableSubstitutionInValues", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StrSubstitutor" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testDisableSubstitutionInValues", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testDisableSubstitutionInValues", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StringSubstitutor#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testGetSetEscape", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ],
            "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : [ "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#checkCyclicSubstitution" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#getEscapeChar" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testGetSetEscape", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#getStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#getValueDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ],
            "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : [ "testGetSetValueDelimiter" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#getVariablePrefixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ],
            "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : [ "testGetSetPrefix" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#getVariableSuffixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ],
            "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : [ "testGetSetSuffix" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#isDisableSubstitutionInValues" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#isEnableSubstitutionInVariables" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#isPreserveEscapes" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceTakingCharSequenceReturningNull", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#replace" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#replaceIn" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#replaceSystemProperties" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#resolveVariable" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#setEnableSubstitutionInVariables" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceInVariable", "testReplaceInVariableRecursive" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#setEscapeChar" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testGetSetEscape", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ],
            "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : [ "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#setPreserveEscapes" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#setValueDelimiter" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNull" ],
            "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : [ "testGetSetValueDelimiter" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#setValueDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testGetSetEscape", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ],
            "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : [ "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#setVariablePrefix" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testSamePrefixAndSuffix", "testStaticReplacePrefixSuffix", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : [ "testGetSetPrefix" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#setVariablePrefixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testGetSetEscape", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ],
            "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : [ "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#setVariableResolver" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testGetSetEscape", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ],
            "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : [ "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#setVariableSuffix" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testSamePrefixAndSuffix", "testStaticReplacePrefixSuffix", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : [ "testGetSetSuffix" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#setVariableSuffixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testGetSetEscape", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ],
            "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : [ "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#substitute" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testGetSetEscape", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#doTestNoReplace" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceEmpty", "testReplaceNoVariables", "testReplaceNull", "testReplaceWeirdPattens" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#doTestReplace" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#setUp" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testGetSetEscape", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#tearDown" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testGetSetEscape", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testGetSetEscape" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testGetSetEscape" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testLANG1055" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceAdjacentAtEnd" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceAdjacentAtEnd" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceAdjacentAtStart" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceAdjacentAtStart" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceChangedMap" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceChangedMap" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceComplexEscaping" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceComplexEscaping" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceEmpty" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceEmpty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceEmptyKeys" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceEmptyKeys" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceEscaping" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceEscaping" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceInTakingStringBufferWithNonNull" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceInTakingStringBufferWithNonNull" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceInTakingStringBuilderWithNonNull" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNonNull" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceInTakingStringBuilderWithNull" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceInTakingStringBuilderWithNull" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceInTakingTwoAndThreeIntsReturningFalse" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceInTakingTwoAndThreeIntsReturningFalse" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceInVariable" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceInVariable" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceInVariableDisabled" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceInVariableDisabled" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceInVariableRecursive" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceInVariableRecursive" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceIncompletePrefix" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceIncompletePrefix" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceNoPrefixNoSuffix" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceNoPrefixNoSuffix" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceNoPrefixSuffix" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceNoPrefixSuffix" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceNoVariables" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceNoVariables" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceNull" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceNull" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplacePartialString_noReplace" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplacePartialString_noReplace" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplacePrefixNoSuffix" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplacePrefixNoSuffix" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceRecursive" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceRecursive" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceSimple" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceSimple" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceSolo" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceSolo" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceSoloEscaping" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceSoloEscaping" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceTakingCharSequenceReturningNull" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceTakingCharSequenceReturningNull" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceTakingThreeArgumentsThrowsNullPointerException" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceTakingThreeArgumentsThrowsNullPointerException" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceToIdentical" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceToIdentical" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceUnknownKey" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceUnknownKey" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceWeirdPattens" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceWeirdPattens" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testResolveVariable" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testResolveVariable" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testSamePrefixAndSuffix" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testSamePrefixAndSuffix" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testStaticReplace" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testStaticReplace" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testStaticReplacePrefixSuffix" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testStaticReplacePrefixSuffix" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testStaticReplaceSystemProperties" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testSubstituteDefaultProperties" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testSubstituteDefaultProperties" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest#testSubstitutePreserveEscape" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest#testMapAndSystemProperty" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest#testSystemProperty" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.AbstractStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceInTakingStringBuilderWithNonNull", "testStaticReplaceSystemProperties" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.DateStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.EnvironmentVariableStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.InterpolatorStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.InterpolatorStringLookup#lookup" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.JavaPlatformStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.MapStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.MapStringLookup#lookup" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.MapStringLookup#on" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.StringLookupFactory#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.StringLookupFactory#interpolatorStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.StringLookupFactory#mapStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.lookup.StringLookupFactory#systemPropertyStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceInTakingStringBuilderWithNonNull", "testStaticReplaceSystemProperties" ]
          }
        },
        "org.apache.commons.text.lookup.SystemPropertyStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceInTakingStringBuilderWithNonNull", "testStaticReplaceSystemProperties" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.SystemPropertyStringLookup#lookup" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testStaticReplaceSystemProperties" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher" : {
          "testcases" : { }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testGetSetEscape", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ],
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : [ "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$CharMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testGetSetEscape", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ],
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : [ "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$CharMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testCharMatcher_char", "testCommaMatcher", "testDoubleQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testTabMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$CharSetMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testGetSetEscape", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ],
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : [ "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$CharSetMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testQuoteMatcher", "testSplitMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$NoMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testGetSetEscape", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ],
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : [ "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$NoMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testNoneMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$StringMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testGetSetEscape", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ],
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testMatcherIndices", "testStringMatcher_String" ],
            "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : [ "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$StringMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ],
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testMatcherIndices", "testStringMatcher_String" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$TrimMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testGetSetEscape", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ],
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : [ "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$TrimMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testTrimMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcher" : {
          "testcases" : { }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory" : {
          "testcases" : { }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testGetSetEscape", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ],
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ],
            "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : [ "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#charMatcher" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testCharMatcher_char" ],
            "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : [ "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#charSetMatcher" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testCharSetMatcher_String", "testCharSetMatcher_charArray" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#commaMatcher" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testCommaMatcher" ],
            "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : [ "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#doubleQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testDoubleQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#noneMatcher" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testNoneMatcher", "testStringMatcher_String" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#quoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#singleQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testSingleQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#spaceMatcher" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testSpaceMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#splitMatcher" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testSplitMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#stringMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testGetSetEscape", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ],
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testMatcherIndices", "testStringMatcher_String" ],
            "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : [ "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#tabMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceInTakingTwoAndThreeIntsReturningFalse" ],
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testTabMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#trimMatcher" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testTrimMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherTest" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherTest#testCharMatcher_char" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testCharMatcher_char" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherTest#testCharSetMatcher_String" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testCharSetMatcher_String" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherTest#testCharSetMatcher_charArray" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testCharSetMatcher_charArray" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherTest#testCommaMatcher" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testCommaMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherTest#testDoubleQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testDoubleQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherTest#testMatcherIndices" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testMatcherIndices" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherTest#testNoneMatcher" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testNoneMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherTest#testQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherTest#testSingleQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testSingleQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherTest#testSpaceMatcher" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testSpaceMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherTest#testSplitMatcher" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testSplitMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherTest#testStringMatcher_String" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testStringMatcher_String" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherTest#testTabMatcher" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testTabMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherTest#testTrimMatcher" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringMatcherTest" : [ "testTrimMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : [ "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter" ]
          }
        },
        "org.apache.commons.text.matcher.StringSubstitutorGetSetTest#testGetSetPrefix" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : [ "testGetSetPrefix" ]
          }
        },
        "org.apache.commons.text.matcher.StringSubstitutorGetSetTest#testGetSetSuffix" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : [ "testGetSetSuffix" ]
          }
        },
        "org.apache.commons.text.matcher.StringSubstitutorGetSetTest#testGetSetValueDelimiter" : {
          "testcases" : {
            "org.apache.commons.text.matcher.StringSubstitutorGetSetTest" : [ "testGetSetValueDelimiter" ]
          }
        },
        "org.apache.commons.text.matcher.package-info" : {
          "testcases" : { }
        }
      }
    },
    "978e2896dbaeeb24eaed566972a09b0653b39f2b" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "978e2896dbaeeb24eaed566972a09b0653b39f2b~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrBuilder" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText", "testLang299" ],
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendCharBufferException", "testAppendCharBufferNull", "testAppendCharSequence", "testAppendStringBuilderNull", "testAppendTakingTwoIntsWithIndexOutOfBoundsThrowsStringIndexOutOfBoundsExceptionTwo", "testAppendTakingTwoIntsWithZeroThrowsStringIndexOutOfBoundsException", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAppendln", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteCharAtWithNegative", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testGetSetNewLineText", "testGetSetNullText", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLang412Left", "testLang412Right", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim", "test_LANG_1131_EqualsWithNullStrBuilder" ],
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testDisableSubstitutionInValues", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ],
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ],
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testApplyThrowsIllegalArgumentExceptionAndCreatesLevenshteinDetailedDistanceTakingInteger" ]
          }
        },
        "org.apache.commons.text.StrBuilder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrBuilder#append" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrBuilder#clear" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrBuilder#ensureCapacity" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrBuilder#length" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrBuilder#size" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrBuilder#substring" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrBuilder#validateRange" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrMatcher#commaMatcher" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrMatcher#doubleQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrMatcher#noneMatcher" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrMatcher#splitMatcher" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrMatcher#tabMatcher" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrMatcher#trimMatcher" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharSetMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrMatcher$CharSetMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrMatcher$NoMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrMatcher$NoMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrMatcher$TrimMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#<init>" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#addToken" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#checkTokenized" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getContent" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getIgnoredMatcher" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getTokenArray" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#getTrimmerMatcher" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#hasNext" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#isIgnoreEmptyTokens" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#next" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#readNextToken" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#readWithQuotes" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#reset" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setEmptyTokenAsNull" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setIgnoreEmptyTokens" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setIgnoredMatcher" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#setTrimmerMatcher" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#size" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrTokenizer#tokenize" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#checkCyclicSubstitution(String,List)" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#replace(CharSequence,int,int)" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#replace(Object)" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#replace(StrBuilder)" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#replace(StrBuilder,int,int)" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#replace(String)" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#replace(String,int,int)" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#replace(StringBuffer)" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#replace(StringBuffer,int,int)" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#replace(TextStringBuilder)" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#replace(TextStringBuilder,int,int)" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#replace(char[])" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#replace(char[],int,int)" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#replaceIn(StringBuffer,int,int)" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#replaceIn(StringBuilder,int,int)" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#substitute(StrBuilder,int,int,List)" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#substitute(TextStringBuilder,int,int,List)" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorTest" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testGetSetEscape", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder" : {
          "testcases" : { }
        },
        "org.apache.commons.text.TextStringBuilder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppend_TextStringBuilder", "testAppend_TextStringBuilder_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testAppendln_TextStringBuilder", "testAppendln_TextStringBuilder_int_int", "testInsert", "testInsertWithNullText", "testLang299" ],
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAppendCharBuffer", "testAppendCharBufferException", "testAppendCharBufferNull", "testAppendCharSequence", "testAppendStringBuilderNull", "testAppendTakingTwoIntsWithIndexOutOfBoundsThrowsStringIndexOutOfBoundsExceptionTwo", "testAppendTakingTwoIntsWithZeroThrowsStringIndexOutOfBoundsException", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAppendln", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_String", "testContains_StringMatcher", "testContains_char", "testDeleteAll_String", "testDeleteAll_StringMatcher", "testDeleteAll_char", "testDeleteCharAt", "testDeleteCharAtWithNegative", "testDeleteFirst_String", "testDeleteFirst_StringMatcher", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testGetSetNewLineText", "testGetSetNullText", "testHashCode", "testIndexOfLang294", "testIndexOf_String", "testIndexOf_StringMatcher", "testIndexOf_StringMatcher_int", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLang412Left", "testLang412Right", "testLastIndexOf_String", "testLastIndexOf_StringMatcher", "testLastIndexOf_StringMatcher_int", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StringMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StringMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StringMatcher_String_int_int_int_VaryCount", "testReplace_StringMatcher_String_int_int_int_VaryEndIndex", "testReplace_StringMatcher_String_int_int_int_VaryMatcher", "testReplace_StringMatcher_String_int_int_int_VaryReplace", "testReplace_StringMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim", "test_LANG_1131_EqualsWithNullTextStringBuilder" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#append" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppend_TextStringBuilder", "testAppend_TextStringBuilder_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testAppendln_TextStringBuilder", "testAppendln_TextStringBuilder_int_int", "testInsert", "testInsertWithNullText" ],
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAppendCharBuffer", "testAppendCharBufferException", "testAppendCharBufferNull", "testAppendCharSequence", "testAppendStringBuilderNull", "testAppendTakingTwoIntsWithIndexOutOfBoundsThrowsStringIndexOutOfBoundsExceptionTwo", "testAppendTakingTwoIntsWithZeroThrowsStringIndexOutOfBoundsException", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAppendln", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testCharAt", "testClear", "testConstructors", "testContains_String", "testContains_StringMatcher", "testContains_char", "testDeleteAll_String", "testDeleteAll_StringMatcher", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_String", "testDeleteFirst_StringMatcher", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testHashCode", "testIndexOfLang294", "testIndexOf_String", "testIndexOf_StringMatcher", "testIndexOf_StringMatcher_int", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLastIndexOf_String", "testLastIndexOf_StringMatcher", "testLastIndexOf_StringMatcher_int", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBufferAppendsToEnd", "testReadFromReadableAppendsToEnd", "testReadFromReaderAppendsToEnd", "testReplaceAll_StringMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StringMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StringMatcher_String_int_int_int_VaryCount", "testReplace_StringMatcher_String_int_int_int_VaryEndIndex", "testReplace_StringMatcher_String_int_int_int_VaryMatcher", "testReplace_StringMatcher_String_int_int_int_VaryReplace", "testReplace_StringMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#appendAll" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator" ],
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsBuilder" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#appendFixedWidthPadLeft" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int" ],
            "org.apache.commons.text.TextStringBuilderTest" : [ "testLang412Left" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#appendFixedWidthPadRight" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testLang299" ],
            "org.apache.commons.text.TextStringBuilderTest" : [ "testLang412Right" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#appendNewLine" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendNewLine", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testAppendln_TextStringBuilder", "testAppendln_TextStringBuilder_int_int" ],
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAppendln" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#appendNull" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_Object", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppend_TextStringBuilder", "testAppend_TextStringBuilder_int_int", "testAppendln_Object" ],
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAppendCharBufferNull", "testAppendCharSequence", "testAppendStringBuilderNull" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#appendPadding" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendPadding" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#appendSeparator" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#appendTo" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#appendWithSeparators" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#appendln" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testAppendln_TextStringBuilder", "testAppendln_TextStringBuilder_int_int" ],
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAppendln" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#asReader" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#asTokenizer" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#asWriter" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsWriter" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#build" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsBuilder" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#capacity" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testCapacity", "testCapacityAndLength", "testConstructors", "testEnsureCapacity", "testMinimizeCapacity" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#charAt" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsReader", "testCharAt" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#clear" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppendln_Boolean", "testAppendln_PrimitiveNumber", "testInsert", "testInsertWithNullText" ],
            "org.apache.commons.text.TextStringBuilderTest" : [ "testCapacityAndLength", "testChaining", "testClear", "testEquals", "testEqualsIgnoreCase", "testIsEmpty", "testReverse", "testTrim" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#contains" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testContains_String", "testContains_StringMatcher", "testContains_char", "testLang295" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#delete" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testDeleteIntInt", "testTrim" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#deleteAll" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testDeleteAll_String", "testDeleteAll_StringMatcher", "testDeleteAll_char", "testLang294" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#deleteCharAt" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testDeleteCharAt", "testDeleteCharAtWithNegative" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#deleteFirst" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testDeleteFirst_String", "testDeleteFirst_StringMatcher", "testDeleteFirst_char", "testIndexOfLang294", "testLang295" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#deleteImpl" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testIndexOfLang294", "testLang294", "testLang295", "testTrim" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#endsWith" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testEndsWith" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#ensureCapacity" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppend_TextStringBuilder", "testAppend_TextStringBuilder_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testAppendln_TextStringBuilder", "testAppendln_TextStringBuilder_int_int", "testInsert", "testInsertWithNullText", "testLang299" ],
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAppendCharBuffer", "testAppendCharBufferException", "testAppendCharBufferNull", "testAppendCharSequence", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAppendln", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_String", "testContains_StringMatcher", "testContains_char", "testDeleteAll_String", "testDeleteAll_StringMatcher", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_String", "testDeleteFirst_StringMatcher", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testHashCode", "testIndexOfLang294", "testIndexOf_String", "testIndexOf_StringMatcher", "testIndexOf_StringMatcher_int", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLang412Left", "testLang412Right", "testLastIndexOf_String", "testLastIndexOf_StringMatcher", "testLastIndexOf_StringMatcher_int", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StringMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StringMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StringMatcher_String_int_int_int_VaryCount", "testReplace_StringMatcher_String_int_int_int_VaryEndIndex", "testReplace_StringMatcher_String_int_int_int_VaryMatcher", "testReplace_StringMatcher_String_int_int_int_VaryReplace", "testReplace_StringMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#equals" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testEquals", "test_LANG_1131_EqualsWithNullTextStringBuilder" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#equalsIgnoreCase" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testEqualsIgnoreCase" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#getChars" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppend_TextStringBuilder_int_int", "testAppendln_TextStringBuilder_int_int" ],
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsReader", "testGetChars", "testGetCharsIntIntCharArrayInt" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#getNewLineText" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testGetSetNewLineText" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#getNullText" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadRight" ],
            "org.apache.commons.text.TextStringBuilderTest" : [ "testGetSetNullText", "testLang412Left", "testLang412Right" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#hashCode" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testHashCode" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#indexOf" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testContains_String", "testContains_StringMatcher", "testDeleteAll_String", "testDeleteFirst_String", "testIndexOfLang294", "testIndexOf_String", "testIndexOf_StringMatcher", "testIndexOf_StringMatcher_int", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testLang294", "testLang295", "testReplaceAll_String_String", "testReplaceFirst_String_String" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#insert" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testInsert", "testInsertWithNullText" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#isEmpty" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendSeparator_String", "testAppendSeparator_String_String" ],
            "org.apache.commons.text.TextStringBuilderTest" : [ "testCapacityAndLength", "testIsEmpty" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#lastIndexOf" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testLastIndexOf_String", "testLastIndexOf_StringMatcher", "testLastIndexOf_StringMatcher_int", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#leftString" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testLeftString" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#length" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppend_TextStringBuilder", "testAppend_TextStringBuilder_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testAppendln_TextStringBuilder", "testAppendln_TextStringBuilder_int_int", "testInsert", "testInsertWithNullText" ],
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAppendCharBuffer", "testAppendCharBufferException", "testAppendCharBufferNull", "testAppendCharSequence", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAppendln", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_String", "testContains_StringMatcher", "testContains_char", "testDeleteAll_String", "testDeleteAll_StringMatcher", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_String", "testDeleteFirst_StringMatcher", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testHashCode", "testIndexOfLang294", "testIndexOf_String", "testIndexOf_StringMatcher", "testIndexOf_StringMatcher_int", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLastIndexOf_String", "testLastIndexOf_StringMatcher", "testLastIndexOf_StringMatcher_int", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBufferAppendsToEnd", "testReadFromReadableAppendsToEnd", "testReadFromReaderAppendsToEnd", "testReplaceAll_StringMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StringMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StringMatcher_String_int_int_int_VaryCount", "testReplace_StringMatcher_String_int_int_int_VaryEndIndex", "testReplace_StringMatcher_String_int_int_int_VaryMatcher", "testReplace_StringMatcher_String_int_int_int_VaryReplace", "testReplace_StringMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#midString" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testMidString" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#minimizeCapacity" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testCapacityAndLength", "testChaining", "testMinimizeCapacity" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#readFrom" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#replace" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testDeleteAll_StringMatcher", "testDeleteFirst_StringMatcher", "testReplaceAll_StringMatcher_String", "testReplaceFirst_StringMatcher_String", "testReplace_StringMatcher_String_int_int_int_VaryCount", "testReplace_StringMatcher_String_int_int_int_VaryEndIndex", "testReplace_StringMatcher_String_int_int_int_VaryMatcher", "testReplace_StringMatcher_String_int_int_int_VaryReplace", "testReplace_StringMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#replaceAll" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testReplaceAll_StringMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#replaceFirst" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testReplaceFirst_StringMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#replaceImpl" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testDeleteAll_StringMatcher", "testDeleteFirst_StringMatcher", "testReplaceAll_StringMatcher_String", "testReplaceAll_String_String", "testReplaceFirst_StringMatcher_String", "testReplaceFirst_String_String", "testReplace_StringMatcher_String_int_int_int_VaryCount", "testReplace_StringMatcher_String_int_int_int_VaryEndIndex", "testReplace_StringMatcher_String_int_int_int_VaryMatcher", "testReplace_StringMatcher_String_int_int_int_VaryReplace", "testReplace_StringMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#reverse" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testChaining", "testReverse", "testTrim" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#rightString" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testRightString" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#setCharAt" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testChaining", "testSetCharAt" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#setLength" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsWriter", "testCapacityAndLength", "testChaining", "testSetLength" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#setNewLineText" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendNewLine" ],
            "org.apache.commons.text.TextStringBuilderTest" : [ "testChaining", "testGetSetNewLineText" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#setNullText" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadRight", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppend_TextStringBuilder", "testAppend_TextStringBuilder_int_int", "testInsertWithNullText" ],
            "org.apache.commons.text.TextStringBuilderTest" : [ "testChaining", "testGetSetNullText" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#size" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendSeparator_char", "testAppendSeparator_char_char" ],
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAppendCharBufferException", "testAppendToCharBuffer", "testAsReader", "testAsTokenizer", "testCapacityAndLength", "testConstructors", "testSize" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#startsWith" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testStartsWith" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#subSequence" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testSubSequenceIntInt" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#substring" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#toCharArray" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testToCharArray", "testToCharArrayIntInt" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#toString" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppend_TextStringBuilder", "testAppend_TextStringBuilder_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testAppendln_TextStringBuilder", "testAppendln_TextStringBuilder_int_int", "testInsert", "testInsertWithNullText", "testLang299" ],
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAppendCharBuffer", "testAppendCharBufferException", "testAppendCharBufferNull", "testAppendCharSequence", "testAppendStringBuilderNull", "testAppendln", "testAsBuilder", "testAsTokenizer", "testAsWriter", "testCapacityAndLength", "testDeleteAll_String", "testDeleteAll_StringMatcher", "testDeleteAll_char", "testDeleteCharAt", "testDeleteFirst_String", "testDeleteFirst_StringMatcher", "testDeleteFirst_char", "testDeleteIntInt", "testLang294", "testLang412Left", "testLang412Right", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StringMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StringMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StringMatcher_String_int_int_int_VaryCount", "testReplace_StringMatcher_String_int_int_int_VaryEndIndex", "testReplace_StringMatcher_String_int_int_int_VaryMatcher", "testReplace_StringMatcher_String_int_int_int_VaryReplace", "testReplace_StringMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testSetCharAt", "testSetLength", "testToString", "testTrim" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#toStringBuffer" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testToStringBuffer" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#toStringBuilder" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testToStringBuilder" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#trim" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testChaining", "testTrim" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#validateIndex" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testInsert", "testInsertWithNullText" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#validateRange" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testDeleteAll_StringMatcher", "testDeleteFirst_StringMatcher", "testDeleteIntInt", "testReplaceAll_StringMatcher_String", "testReplaceFirst_StringMatcher_String", "testReplace_StringMatcher_String_int_int_int_VaryCount", "testReplace_StringMatcher_String_int_int_int_VaryEndIndex", "testReplace_StringMatcher_String_int_int_int_VaryMatcher", "testReplace_StringMatcher_String_int_int_int_VaryReplace", "testReplace_StringMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArrayIntInt", "testTrim" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder$StrBuilderReader#<init>" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder$StrBuilderReader#close" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder$StrBuilderReader#mark" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder$StrBuilderReader#markSupported" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder$StrBuilderReader#read" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder$StrBuilderReader#ready" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder$StrBuilderReader#reset" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder$StrBuilderReader#skip" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder$StrBuilderTokenizer#<init>" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder$StrBuilderTokenizer#getContent" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder$StrBuilderTokenizer#tokenize" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder$StrBuilderWriter#<init>" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsWriter" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder$StrBuilderWriter#close" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsWriter" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder$StrBuilderWriter#flush" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsWriter" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder$StrBuilderWriter#write" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsWriter" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppend_TextStringBuilder", "testAppend_TextStringBuilder_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testAppendln_TextStringBuilder", "testAppendln_TextStringBuilder_int_int", "testInsert", "testInsertWithNullText", "testLang299" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendAll_Array" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendAll_Array" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendAll_Collection" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendAll_Collection" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendAll_Iterator" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendAll_Iterator" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendFixedWidthPadLeft" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendFixedWidthPadLeft" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendFixedWidthPadLeft_int" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendFixedWidthPadLeft_int" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendFixedWidthPadRight" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendFixedWidthPadRight" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendFixedWidthPadRight_int" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendFixedWidthPadRight_int" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendNewLine" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendNewLine" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendPadding" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendPadding" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendSeparator_String" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendSeparator_String" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendSeparator_String_String" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendSeparator_String_String" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendSeparator_String_int" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendSeparator_String_int" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendSeparator_char" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendSeparator_char" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendSeparator_char_char" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendSeparator_char_char" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendSeparator_char_int" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendSeparator_char_int" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendWithNullText" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendWithNullText" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendWithSeparatorsWithNullText" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendWithSeparatorsWithNullText" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendWithSeparators_Array" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendWithSeparators_Array" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendWithSeparators_Collection" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendWithSeparators_Collection" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendWithSeparators_Iterator" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendWithSeparators_Iterator" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppend_Boolean" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppend_Boolean" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppend_CharArray" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppend_CharArray" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppend_CharArray_int_int" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppend_CharArray_int_int" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppend_FormattedString" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppend_FormattedString" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppend_Object" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppend_Object" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppend_PrimitiveNumber" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppend_PrimitiveNumber" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppend_String" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppend_String" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppend_StringBuffer" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppend_StringBuffer" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppend_StringBuffer_int_int" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppend_StringBuffer_int_int" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppend_StringBuilder" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppend_StringBuilder" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppend_StringBuilder_int_int" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppend_StringBuilder_int_int" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppend_String_int_int" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppend_String_int_int" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppend_TextStringBuilder" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppend_TextStringBuilder" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppend_TextStringBuilder_int_int" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppend_TextStringBuilder_int_int" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendln_Boolean" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendln_Boolean" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendln_CharArray" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendln_CharArray" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendln_CharArray_int_int" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendln_CharArray_int_int" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendln_FormattedString" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendln_FormattedString" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendln_Object" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendln_Object" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendln_PrimitiveNumber" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendln_PrimitiveNumber" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendln_String" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendln_String" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendln_StringBuffer" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendln_StringBuffer" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendln_StringBuffer_int_int" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendln_StringBuffer_int_int" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendln_StringBuilder" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendln_StringBuilder" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendln_StringBuilder_int_int" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendln_StringBuilder_int_int" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendln_String_int_int" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendln_String_int_int" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendln_TextStringBuilder" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendln_TextStringBuilder" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendln_TextStringBuilder_int_int" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendln_TextStringBuilder_int_int" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testInsert" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testInsert" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testInsertWithNullText" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testInsertWithNullText" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testLang299" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testLang299" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAppendCharBuffer", "testAppendCharBufferException", "testAppendCharBufferNull", "testAppendCharSequence", "testAppendStringBuilderNull", "testAppendTakingTwoIntsWithIndexOutOfBoundsThrowsStringIndexOutOfBoundsExceptionTwo", "testAppendTakingTwoIntsWithZeroThrowsStringIndexOutOfBoundsException", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAppendln", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_String", "testContains_StringMatcher", "testContains_char", "testDeleteAll_String", "testDeleteAll_StringMatcher", "testDeleteAll_char", "testDeleteCharAt", "testDeleteCharAtWithNegative", "testDeleteFirst_String", "testDeleteFirst_StringMatcher", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testGetSetNewLineText", "testGetSetNullText", "testHashCode", "testIndexOfLang294", "testIndexOf_String", "testIndexOf_StringMatcher", "testIndexOf_StringMatcher_int", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLang412Left", "testLang412Right", "testLastIndexOf_String", "testLastIndexOf_StringMatcher", "testLastIndexOf_StringMatcher_int", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StringMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StringMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StringMatcher_String_int_int_int_VaryCount", "testReplace_StringMatcher_String_int_int_int_VaryEndIndex", "testReplace_StringMatcher_String_int_int_int_VaryMatcher", "testReplace_StringMatcher_String_int_int_int_VaryReplace", "testReplace_StringMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim", "test_LANG_1131_EqualsWithNullTextStringBuilder" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testAppendCharBuffer" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAppendCharBuffer" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testAppendCharBufferException" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAppendCharBufferException" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testAppendCharBufferNull" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAppendCharBufferNull" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testAppendCharSequence" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAppendCharSequence" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testAppendStringBuilderNull" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAppendStringBuilderNull" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testAppendTakingTwoIntsWithIndexOutOfBoundsThrowsStringIndexOutOfBoundsExceptionTwo" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAppendTakingTwoIntsWithIndexOutOfBoundsThrowsStringIndexOutOfBoundsExceptionTwo" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testAppendTakingTwoIntsWithZeroThrowsStringIndexOutOfBoundsException" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAppendTakingTwoIntsWithZeroThrowsStringIndexOutOfBoundsException" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testAppendToCharBuffer" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAppendToCharBuffer" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testAppendToStringBuffer" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAppendToStringBuffer" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testAppendToStringBuilder" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAppendToStringBuilder" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testAppendToWriter" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAppendToWriter" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testAppendln" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAppendln" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testAsBuilder" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsBuilder" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testAsReader" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsReader" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testAsTokenizer" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testAsWriter" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsWriter" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testCapacity" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testCapacity" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testCapacityAndLength" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testCapacityAndLength" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testChaining" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testChaining" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testCharAt" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testCharAt" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testClear" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testClear" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testConstructors" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testConstructors" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testContains_String" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testContains_String" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testContains_StringMatcher" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testContains_StringMatcher" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testContains_char" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testContains_char" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testDeleteAll_String" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testDeleteAll_String" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testDeleteAll_StringMatcher" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testDeleteAll_StringMatcher" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testDeleteAll_char" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testDeleteAll_char" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testDeleteCharAt" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testDeleteCharAt" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testDeleteCharAtWithNegative" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testDeleteCharAtWithNegative" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testDeleteFirst_String" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testDeleteFirst_String" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testDeleteFirst_StringMatcher" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testDeleteFirst_StringMatcher" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testDeleteFirst_char" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testDeleteFirst_char" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testDeleteIntInt" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testDeleteIntInt" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testEndsWith" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testEndsWith" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testEnsureCapacity" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testEnsureCapacity" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testEquals" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testEquals" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testEqualsIgnoreCase" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testEqualsIgnoreCase" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testGetChars" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testGetChars" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testGetCharsIntIntCharArrayInt" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testGetCharsIntIntCharArrayInt" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testGetSetNewLineText" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testGetSetNewLineText" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testGetSetNullText" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testGetSetNullText" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testHashCode" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testHashCode" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testIndexOfLang294" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testIndexOfLang294" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testIndexOf_String" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testIndexOf_String" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testIndexOf_StringMatcher" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testIndexOf_StringMatcher" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testIndexOf_StringMatcher_int" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testIndexOf_StringMatcher_int" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testIndexOf_String_int" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testIndexOf_String_int" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testIndexOf_char" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testIndexOf_char" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testIndexOf_char_int" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testIndexOf_char_int" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testIsEmpty" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testIsEmpty" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testLang294" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testLang294" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testLang295" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testLang295" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testLang412Left" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testLang412Left" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testLang412Right" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testLang412Right" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testLastIndexOf_String" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testLastIndexOf_String" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testLastIndexOf_StringMatcher" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testLastIndexOf_StringMatcher" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testLastIndexOf_StringMatcher_int" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testLastIndexOf_StringMatcher_int" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testLastIndexOf_String_int" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testLastIndexOf_String_int" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testLastIndexOf_char" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testLastIndexOf_char" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testLastIndexOf_char_int" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testLastIndexOf_char_int" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testLeftString" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testLeftString" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testLength" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testLength" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testMidString" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testMidString" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testMinimizeCapacity" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testMinimizeCapacity" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testReadFromCharBuffer" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testReadFromCharBuffer" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testReadFromCharBufferAppendsToEnd" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testReadFromCharBufferAppendsToEnd" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testReadFromReadable" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testReadFromReadable" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testReadFromReadableAppendsToEnd" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testReadFromReadableAppendsToEnd" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testReadFromReader" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testReadFromReader" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testReadFromReaderAppendsToEnd" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testReadFromReaderAppendsToEnd" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testReplaceAll_StringMatcher_String" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testReplaceAll_StringMatcher_String" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testReplaceAll_String_String" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testReplaceAll_String_String" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testReplaceAll_char_char" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testReplaceAll_char_char" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testReplaceFirst_StringMatcher_String" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testReplaceFirst_StringMatcher_String" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testReplaceFirst_String_String" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testReplaceFirst_String_String" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testReplaceFirst_char_char" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testReplaceFirst_char_char" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testReplace_StringMatcher_String_int_int_int_VaryCount" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testReplace_StringMatcher_String_int_int_int_VaryCount" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testReplace_StringMatcher_String_int_int_int_VaryEndIndex" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testReplace_StringMatcher_String_int_int_int_VaryEndIndex" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testReplace_StringMatcher_String_int_int_int_VaryMatcher" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testReplace_StringMatcher_String_int_int_int_VaryMatcher" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testReplace_StringMatcher_String_int_int_int_VaryReplace" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testReplace_StringMatcher_String_int_int_int_VaryReplace" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testReplace_StringMatcher_String_int_int_int_VaryStartIndex" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testReplace_StringMatcher_String_int_int_int_VaryStartIndex" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testReplace_int_int_String" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testReplace_int_int_String" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testReverse" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testReverse" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testRightString" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testRightString" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testSetCharAt" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testSetCharAt" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testSetLength" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testSetLength" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testSize" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testSize" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testStartsWith" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testStartsWith" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testSubSequenceIntInt" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testSubSequenceIntInt" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testSubstringInt" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testSubstringInt" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testSubstringIntInt" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testSubstringIntInt" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testToCharArray" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testToCharArray" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testToCharArrayIntInt" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testToCharArrayIntInt" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testToString" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testToString" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testToStringBuffer" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testToStringBuffer" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testToStringBuilder" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testToStringBuilder" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testTrim" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testTrim" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#test_LANG_1131_EqualsWithNullTextStringBuilder" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "test_LANG_1131_EqualsWithNullTextStringBuilder" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest$MockReadable#<init>" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testReadFromReadable", "testReadFromReadableAppendsToEnd" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest$MockReadable#read" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testReadFromReadable", "testReadFromReadableAppendsToEnd" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testContains_StringMatcher", "testIndexOf_StringMatcher", "testIndexOf_StringMatcher_int", "testLastIndexOf_StringMatcher", "testLastIndexOf_StringMatcher_int", "testReplaceAll_StringMatcher_String", "testReplaceFirst_StringMatcher_String", "testReplace_StringMatcher_String_int_int_int_VaryCount", "testReplace_StringMatcher_String_int_int_int_VaryEndIndex", "testReplace_StringMatcher_String_int_int_int_VaryMatcher", "testReplace_StringMatcher_String_int_int_int_VaryReplace", "testReplace_StringMatcher_String_int_int_int_VaryStartIndex" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$CharMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testContains_StringMatcher", "testIndexOf_StringMatcher", "testIndexOf_StringMatcher_int", "testLastIndexOf_StringMatcher", "testLastIndexOf_StringMatcher_int", "testReplaceAll_StringMatcher_String", "testReplaceFirst_StringMatcher_String", "testReplace_StringMatcher_String_int_int_int_VaryCount", "testReplace_StringMatcher_String_int_int_int_VaryEndIndex", "testReplace_StringMatcher_String_int_int_int_VaryMatcher", "testReplace_StringMatcher_String_int_int_int_VaryReplace", "testReplace_StringMatcher_String_int_int_int_VaryStartIndex" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$CharMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testContains_StringMatcher", "testIndexOf_StringMatcher", "testIndexOf_StringMatcher_int", "testLastIndexOf_StringMatcher", "testLastIndexOf_StringMatcher_int", "testReplaceAll_StringMatcher_String", "testReplaceFirst_StringMatcher_String", "testReplace_StringMatcher_String_int_int_int_VaryMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$CharSetMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testContains_StringMatcher", "testIndexOf_StringMatcher", "testIndexOf_StringMatcher_int", "testLastIndexOf_StringMatcher", "testLastIndexOf_StringMatcher_int", "testReplaceAll_StringMatcher_String", "testReplaceFirst_StringMatcher_String", "testReplace_StringMatcher_String_int_int_int_VaryCount", "testReplace_StringMatcher_String_int_int_int_VaryEndIndex", "testReplace_StringMatcher_String_int_int_int_VaryMatcher", "testReplace_StringMatcher_String_int_int_int_VaryReplace", "testReplace_StringMatcher_String_int_int_int_VaryStartIndex" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$NoMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testContains_StringMatcher", "testIndexOf_StringMatcher", "testIndexOf_StringMatcher_int", "testLastIndexOf_StringMatcher", "testLastIndexOf_StringMatcher_int", "testReplaceAll_StringMatcher_String", "testReplaceFirst_StringMatcher_String", "testReplace_StringMatcher_String_int_int_int_VaryCount", "testReplace_StringMatcher_String_int_int_int_VaryEndIndex", "testReplace_StringMatcher_String_int_int_int_VaryMatcher", "testReplace_StringMatcher_String_int_int_int_VaryReplace", "testReplace_StringMatcher_String_int_int_int_VaryStartIndex" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$NoMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testIndexOf_StringMatcher", "testIndexOf_StringMatcher_int", "testLastIndexOf_StringMatcher", "testLastIndexOf_StringMatcher_int", "testReplaceAll_StringMatcher_String", "testReplaceFirst_StringMatcher_String" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$StringMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testContains_StringMatcher", "testReplaceAll_StringMatcher_String", "testReplaceFirst_StringMatcher_String", "testReplace_StringMatcher_String_int_int_int_VaryCount", "testReplace_StringMatcher_String_int_int_int_VaryEndIndex", "testReplace_StringMatcher_String_int_int_int_VaryMatcher", "testReplace_StringMatcher_String_int_int_int_VaryReplace", "testReplace_StringMatcher_String_int_int_int_VaryStartIndex" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$StringMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testContains_StringMatcher", "testReplaceAll_StringMatcher_String", "testReplaceFirst_StringMatcher_String", "testReplace_StringMatcher_String_int_int_int_VaryCount", "testReplace_StringMatcher_String_int_int_int_VaryEndIndex", "testReplace_StringMatcher_String_int_int_int_VaryMatcher", "testReplace_StringMatcher_String_int_int_int_VaryReplace", "testReplace_StringMatcher_String_int_int_int_VaryStartIndex" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$TrimMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testContains_StringMatcher", "testIndexOf_StringMatcher", "testIndexOf_StringMatcher_int", "testLastIndexOf_StringMatcher", "testLastIndexOf_StringMatcher_int", "testReplaceAll_StringMatcher_String", "testReplaceFirst_StringMatcher_String", "testReplace_StringMatcher_String_int_int_int_VaryCount", "testReplace_StringMatcher_String_int_int_int_VaryEndIndex", "testReplace_StringMatcher_String_int_int_int_VaryMatcher", "testReplace_StringMatcher_String_int_int_int_VaryReplace", "testReplace_StringMatcher_String_int_int_int_VaryStartIndex" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#<init>" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testContains_StringMatcher", "testIndexOf_StringMatcher", "testIndexOf_StringMatcher_int", "testLastIndexOf_StringMatcher", "testLastIndexOf_StringMatcher_int", "testReplaceAll_StringMatcher_String", "testReplaceFirst_StringMatcher_String", "testReplace_StringMatcher_String_int_int_int_VaryCount", "testReplace_StringMatcher_String_int_int_int_VaryEndIndex", "testReplace_StringMatcher_String_int_int_int_VaryMatcher", "testReplace_StringMatcher_String_int_int_int_VaryReplace", "testReplace_StringMatcher_String_int_int_int_VaryStartIndex" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#charMatcher" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testContains_StringMatcher", "testIndexOf_StringMatcher", "testIndexOf_StringMatcher_int", "testLastIndexOf_StringMatcher", "testLastIndexOf_StringMatcher_int", "testReplaceAll_StringMatcher_String", "testReplaceFirst_StringMatcher_String", "testReplace_StringMatcher_String_int_int_int_VaryMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#noneMatcher" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testIndexOf_StringMatcher", "testIndexOf_StringMatcher_int", "testLastIndexOf_StringMatcher", "testLastIndexOf_StringMatcher_int", "testReplaceAll_StringMatcher_String", "testReplaceFirst_StringMatcher_String" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#spaceMatcher" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testIndexOf_StringMatcher", "testIndexOf_StringMatcher_int", "testLastIndexOf_StringMatcher", "testLastIndexOf_StringMatcher_int" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#stringMatcher" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testContains_StringMatcher", "testReplaceAll_StringMatcher_String", "testReplaceFirst_StringMatcher_String", "testReplace_StringMatcher_String_int_int_int_VaryCount", "testReplace_StringMatcher_String_int_int_int_VaryEndIndex", "testReplace_StringMatcher_String_int_int_int_VaryMatcher", "testReplace_StringMatcher_String_int_int_int_VaryReplace", "testReplace_StringMatcher_String_int_int_int_VaryStartIndex" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testApplyThrowsIllegalArgumentExceptionAndCreatesLevenshteinDetailedDistanceTakingInteger", "testApplyWithNull", "testConstructorWithNegativeThreshold", "testCreatesLevenshteinDetailedDistanceTakingInteger6", "testEquals", "testGetDefaultInstanceOne", "testGetDefaultInstanceTwo", "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testGetLevenshteinDetailedDistance_StringStringInt", "testGetThreshold", "testHashCode", "testToString" ]
          }
        }
      }
    },
    "6d8b511f2081117a3c07a5e54392b1948df79248" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6d8b511f2081117a3c07a5e54392b1948df79248~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrBuilderAppendInsertTest" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendAll_Array", "testAppendAll_Collection", "testAppendAll_Iterator", "testAppendFixedWidthPadLeft", "testAppendFixedWidthPadLeft_int", "testAppendFixedWidthPadRight", "testAppendFixedWidthPadRight_int", "testAppendNewLine", "testAppendPadding", "testAppendSeparator_String", "testAppendSeparator_String_String", "testAppendSeparator_String_int", "testAppendSeparator_char", "testAppendSeparator_char_char", "testAppendSeparator_char_int", "testAppendWithNullText", "testAppendWithSeparatorsWithNullText", "testAppendWithSeparators_Array", "testAppendWithSeparators_Collection", "testAppendWithSeparators_Iterator", "testAppend_Boolean", "testAppend_CharArray", "testAppend_CharArray_int_int", "testAppend_FormattedString", "testAppend_Object", "testAppend_PrimitiveNumber", "testAppend_StrBuilder", "testAppend_StrBuilder_int_int", "testAppend_String", "testAppend_StringBuffer", "testAppend_StringBuffer_int_int", "testAppend_StringBuilder", "testAppend_StringBuilder_int_int", "testAppend_String_int_int", "testAppendln_Boolean", "testAppendln_CharArray", "testAppendln_CharArray_int_int", "testAppendln_FormattedString", "testAppendln_Object", "testAppendln_PrimitiveNumber", "testAppendln_StrBuilder", "testAppendln_StrBuilder_int_int", "testAppendln_String", "testAppendln_StringBuffer", "testAppendln_StringBuffer_int_int", "testAppendln_StringBuilder", "testAppendln_StringBuilder_int_int", "testAppendln_String_int_int", "testInsert", "testInsertWithNullText", "testLang299" ]
          }
        },
        "org.apache.commons.text.StrBuilderTest" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAppendCharBuffer", "testAppendCharBufferException", "testAppendCharBufferNull", "testAppendCharSequence", "testAppendStringBuilderNull", "testAppendTakingTwoIntsWithIndexOutOfBoundsThrowsStringIndexOutOfBoundsExceptionTwo", "testAppendTakingTwoIntsWithZeroThrowsStringIndexOutOfBoundsException", "testAppendToCharBuffer", "testAppendToStringBuffer", "testAppendToStringBuilder", "testAppendToWriter", "testAppendln", "testAsBuilder", "testAsReader", "testAsTokenizer", "testAsWriter", "testCapacity", "testCapacityAndLength", "testChaining", "testCharAt", "testClear", "testConstructors", "testContains_StrMatcher", "testContains_String", "testContains_char", "testDeleteAll_StrMatcher", "testDeleteAll_String", "testDeleteAll_char", "testDeleteCharAt", "testDeleteCharAtWithNegative", "testDeleteFirst_StrMatcher", "testDeleteFirst_String", "testDeleteFirst_char", "testDeleteIntInt", "testEndsWith", "testEnsureCapacity", "testEquals", "testEqualsIgnoreCase", "testGetChars", "testGetCharsIntIntCharArrayInt", "testGetSetNewLineText", "testGetSetNullText", "testHashCode", "testIndexOfLang294", "testIndexOf_StrMatcher", "testIndexOf_StrMatcher_int", "testIndexOf_String", "testIndexOf_String_int", "testIndexOf_char", "testIndexOf_char_int", "testIsEmpty", "testLang294", "testLang295", "testLang412Left", "testLang412Right", "testLastIndexOf_StrMatcher", "testLastIndexOf_StrMatcher_int", "testLastIndexOf_String", "testLastIndexOf_String_int", "testLastIndexOf_char", "testLastIndexOf_char_int", "testLeftString", "testLength", "testMidString", "testMinimizeCapacity", "testReadFromCharBuffer", "testReadFromCharBufferAppendsToEnd", "testReadFromReadable", "testReadFromReadableAppendsToEnd", "testReadFromReader", "testReadFromReaderAppendsToEnd", "testReplaceAll_StrMatcher_String", "testReplaceAll_String_String", "testReplaceAll_char_char", "testReplaceFirst_StrMatcher_String", "testReplaceFirst_String_String", "testReplaceFirst_char_char", "testReplace_StrMatcher_String_int_int_int_VaryCount", "testReplace_StrMatcher_String_int_int_int_VaryEndIndex", "testReplace_StrMatcher_String_int_int_int_VaryMatcher", "testReplace_StrMatcher_String_int_int_int_VaryReplace", "testReplace_StrMatcher_String_int_int_int_VaryStartIndex", "testReplace_int_int_String", "testReverse", "testRightString", "testSetCharAt", "testSetLength", "testSize", "testStartsWith", "testSubSequenceIntInt", "testSubstringInt", "testSubstringIntInt", "testToCharArray", "testToCharArrayIntInt", "testToString", "testToStringBuffer", "testToStringBuilder", "testTrim", "test_LANG_1131_EqualsWithNullStrBuilder" ]
          }
        },
        "org.apache.commons.text.StrLookupTest" : {
          "testcases" : {
            "org.apache.commons.text.StrLookupTest" : [ "testMapLookup", "testMapLookup_nullMap", "testNoneLookup", "testResourceBundleLookup", "testResourceBundleLookup_nullMap", "testSystemProperiesLookup", "testSystemPropertiesLookupReplacedProperties", "testSystemPropertiesLookupUpdatedProperty" ]
          }
        },
        "org.apache.commons.text.StrMatcherTest" : {
          "testcases" : {
            "org.apache.commons.text.StrMatcherTest" : [ "testCharMatcher_char", "testCharSetMatcher_String", "testCharSetMatcher_charArray", "testCommaMatcher", "testDoubleQuoteMatcher", "testMatcherIndices", "testNoneMatcher", "testQuoteMatcher", "testSingleQuoteMatcher", "testSpaceMatcher", "testSplitMatcher", "testStringMatcher_String", "testTabMatcher", "testTrimMatcher" ]
          }
        },
        "org.apache.commons.text.StrSubstitutorTest" : {
          "testcases" : {
            "org.apache.commons.text.StrSubstitutorTest" : [ "testConstructorMapFull", "testConstructorMapPrefixSuffix", "testConstructorNoArgs", "testCyclicReplacement", "testDefaultValueDelimiters", "testDisableSubstitutionInValues", "testGetSetEscape", "testGetSetPrefix", "testGetSetSuffix", "testGetSetValueDelimiter", "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePartialString_noReplace", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceTakingCharSequenceReturningNull", "testReplaceTakingThreeArgumentsThrowsNullPointerException", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ]
          }
        },
        "org.apache.commons.text.StrTokenizer" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderTest" : [ "testAsTokenizer" ],
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ],
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.StrTokenizerTest" : {
          "testcases" : {
            "org.apache.commons.text.StrTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimString", "testGetContent", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StringTokenizer" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StringTokenizer#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testGetContent", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#add" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testIteration" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#addToken" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#checkTokenized" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#clone" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testPreviousTokenAndSetEmptyTokenAsNull", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#cloneReset" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneNull", "testCloneReset", "testPreviousTokenAndSetEmptyTokenAsNull", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#getCSVClone" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#getCSVInstance" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#getContent" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testGetContent" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#getDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#getIgnoredMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#getQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#getTSVClone" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testPreviousTokenAndSetEmptyTokenAsNull", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#getTSVInstance" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testPreviousTokenAndSetEmptyTokenAsNull", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#getTokenArray" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testListArray" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#getTokenList" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testListArray", "testToString" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#getTrimmerMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#hasNext" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test6", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testIteration", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#hasPrevious" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test6", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testIteration", "testPreviousTokenAndSetEmptyTokenAsNull", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#isEmptyTokenAsNull" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test5", "test6", "test7", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed4", "testBasicQuoted2", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#isIgnoreEmptyTokens" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed4", "testBasicQuoted2", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#isQuote" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testDelimMatcherQuoteMatcher", "testStringTokenizerQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#next" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test6", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testIteration", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#nextIndex" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#nextToken" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneNull", "testCloneReset", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#previous" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test6", "testIteration" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#previousIndex" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#previousToken" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testCSVSimple", "testCSVSimpleNeedsTrim", "testPreviousTokenAndSetEmptyTokenAsNull", "testTSV" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#readNextToken" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#readWithQuotes" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#remove" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testIteration" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#reset" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNull", "testCloneReset", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#set" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testIteration" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#setDelimiterChar" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testChaining", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray_char", "testConstructor_charArray_char_char" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#setDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testGetContent", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#setDelimiterString" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testChaining", "testDelimString", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#setEmptyTokenAsNull" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testGetContent", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#setIgnoreEmptyTokens" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testGetContent", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#setIgnoredChar" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testChaining" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#setIgnoredMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testGetContent", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#setQuoteChar" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "testBasic5", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuotedTrimmed1", "testChaining", "testConstructor_String_char_char", "testConstructor_charArray_char_char" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#setQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testGetContent", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#setTrimmerMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testGetContent", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#size" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#toString" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testToString" ]
          }
        },
        "org.apache.commons.text.StringTokenizer#tokenize" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testGetContent", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#checkClone" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#test1" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#test2" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test2" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#test3" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test3" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#test4" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test4" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#test5" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test5" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#test6" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test6" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#test7" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test7" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#test8" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test8" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testBasic1" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasic1" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testBasic2" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasic2" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testBasic3" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasic3" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testBasic4" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasic4" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testBasic5" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasic5" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testBasicDelim1" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasicDelim1" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testBasicDelim2" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasicDelim2" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testBasicEmpty1" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasicEmpty1" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testBasicEmpty2" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasicEmpty2" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testBasicIgnoreTrimmed1" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasicIgnoreTrimmed1" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testBasicIgnoreTrimmed2" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasicIgnoreTrimmed2" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testBasicIgnoreTrimmed3" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasicIgnoreTrimmed3" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testBasicIgnoreTrimmed4" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasicIgnoreTrimmed4" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testBasicQuoted1" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasicQuoted1" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testBasicQuoted2" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasicQuoted2" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testBasicQuoted3" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasicQuoted3" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testBasicQuoted4" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasicQuoted4" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testBasicQuoted5" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasicQuoted5" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testBasicQuoted6" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasicQuoted6" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testBasicQuoted7" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasicQuoted7" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testBasicQuotedTrimmed1" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasicQuotedTrimmed1" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testBasicTrimmed1" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasicTrimmed1" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testBasicTrimmed2" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasicTrimmed2" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testCSV" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testCSVSimple", "testCSVSimpleNeedsTrim" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testCSVEmpty" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testCSVEmpty" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testCSVSimple" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testCSVSimple" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testCSVSimpleNeedsTrim" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testCSVSimpleNeedsTrim" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testChaining" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testChaining" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testCloneNotSupportedException" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testCloneNotSupportedException" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testCloneNull" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testCloneNull" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testCloneReset" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testCloneReset" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testConstructor_String" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testConstructor_String" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testConstructor_String_char" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testConstructor_String_char" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testConstructor_String_char_char" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testConstructor_String_char_char" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testConstructor_charArray" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testConstructor_charArray" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testConstructor_charArray_char" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testConstructor_charArray_char" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testConstructor_charArray_char_char" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testConstructor_charArray_char_char" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testDelimMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testDelimMatcher" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testDelimMatcherQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testDelimMatcherQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testDelimString" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testDelimString" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testEmpty" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testCSVEmpty", "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testGetContent" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testGetContent" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testIteration" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testIteration" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testListArray" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testListArray" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testPreviousTokenAndSetEmptyTokenAsNull" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testPreviousTokenAndSetEmptyTokenAsNull" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testReset" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testReset" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testReset_String" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testReset_String" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testReset_charArray" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testReset_charArray" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testStringTokenizerQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testStringTokenizerQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testStringTokenizerStrMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testStringTokenizerStrMatcher" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testStringTokenizerStringMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testTSV" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testTSV" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testTSVEmpty" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testTSVEmpty" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testToString" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testToString" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testTokenizeSubclassInputChange" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testTokenizeSubclassInputChange" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testTokenizeSubclassOutputChange" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.StringTokenizerTest#testXSVAbc" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testCSVSimple", "testCSVSimpleNeedsTrim", "testTSV" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#append" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#asTokenizer" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#clear" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#ensureCapacity" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#length" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#size" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#substring" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#validateRange" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderTest#testAsTokenizer" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderTest" : [ "testAsTokenizer" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testGetContent", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$CharMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testGetContent", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$CharMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcherQuoteMatcher", "testPreviousTokenAndSetEmptyTokenAsNull", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testTSV" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$CharSetMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testGetContent", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$CharSetMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasicEmpty1", "testBasicEmpty2", "testBasicQuoted6", "testBasicQuoted7", "testCloneReset", "testConstructor_String", "testConstructor_charArray", "testDelimMatcher", "testIteration", "testListArray", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$NoMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testGetContent", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$NoMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVSimple", "testCSVSimpleNeedsTrim", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$StringMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicTrimmed2", "testChaining", "testDelimString", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$StringMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicTrimmed2", "testDelimString", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$TrimMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testGetContent", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$TrimMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test4", "test5", "test6", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed4", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testCSVSimple", "testCSVSimpleNeedsTrim", "testPreviousTokenAndSetEmptyTokenAsNull", "testTSV" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testGetContent", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#charMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testChaining", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray_char", "testConstructor_charArray_char_char" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#charSetMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testDelimMatcher", "testDelimMatcherQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#commaMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testGetContent", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#doubleQuoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testGetContent", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#noneMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testGetContent", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#quoteMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasicQuoted6", "testBasicQuoted7", "testStringTokenizerQuoteMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#spaceMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test7", "test8" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#splitMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testGetContent", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#stringMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicTrimmed2", "testChaining", "testDelimString", "testStringTokenizerStringMatcher" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#tabMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testGetContent", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#trimMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringTokenizerTest" : [ "test1", "test2", "test3", "test4", "test5", "test6", "test7", "test8", "testBasic1", "testBasic2", "testBasic3", "testBasic4", "testBasic5", "testBasicDelim1", "testBasicDelim2", "testBasicEmpty1", "testBasicEmpty2", "testBasicIgnoreTrimmed1", "testBasicIgnoreTrimmed2", "testBasicIgnoreTrimmed3", "testBasicIgnoreTrimmed4", "testBasicQuoted1", "testBasicQuoted2", "testBasicQuoted3", "testBasicQuoted4", "testBasicQuoted5", "testBasicQuoted6", "testBasicQuoted7", "testBasicQuotedTrimmed1", "testBasicTrimmed1", "testBasicTrimmed2", "testCSVEmpty", "testCSVSimple", "testCSVSimpleNeedsTrim", "testChaining", "testCloneNotSupportedException", "testCloneNull", "testCloneReset", "testConstructor_String", "testConstructor_String_char", "testConstructor_String_char_char", "testConstructor_charArray", "testConstructor_charArray_char", "testConstructor_charArray_char_char", "testDelimMatcher", "testDelimMatcherQuoteMatcher", "testDelimString", "testGetContent", "testIteration", "testListArray", "testPreviousTokenAndSetEmptyTokenAsNull", "testReset", "testReset_String", "testReset_charArray", "testStringTokenizerQuoteMatcher", "testStringTokenizerStrMatcher", "testStringTokenizerStringMatcher", "testTSV", "testTSVEmpty", "testToString", "testTokenizeSubclassInputChange", "testTokenizeSubclassOutputChange" ]
          }
        }
      }
    },
    "46cc64c14e7a38b0fa9bd08cf6c142e975982f72" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "46cc64c14e7a38b0fa9bd08cf6c142e975982f72~1",
      "changedClazzes" : {
        "org.apache.commons.text.translate.SinglePassTranslator" : {
          "testcases" : {
            "org.apache.commons.text.StringEscapeUtilsTest" : [ "testBuilder", "testConstructor", "testEscapeCsvString", "testEscapeCsvWriter", "testEscapeEcmaScript", "testEscapeHiragana", "testEscapeHtml3", "testEscapeHtml4", "testEscapeHtmlHighUnicode", "testEscapeHtmlThree", "testEscapeHtmlVersions", "testEscapeJava", "testEscapeJavaWithSlash", "testEscapeJson", "testEscapeXSI", "testEscapeXml10", "testEscapeXml11", "testLang313", "testLang708", "testLang911", "testStandaloneAmphersand", "testUnescapeCsvString", "testUnescapeCsvWriter", "testUnescapeEcmaScript", "testUnescapeHtml3", "testUnescapeHtml4", "testUnescapeJava", "testUnescapeJson", "testUnescapeJsonFoundBug_Issue_Text_100", "testUnescapeJsonFoundBug_Issue_Text_100_Fix", "testUnescapeUnknownEntity", "testUnescapeXmlSupplementaryCharacters", "testUnscapeXSI" ],
            "org.apache.commons.text.translate.CsvTranslatorsTest" : [ "csvEscaperCRTest", "csvEscaperCommaTest", "csvEscaperLFTest", "csvEscaperPlaneTextTest", "csvEscaperQuoteTest", "csvUnEscaperPlaneTextTest", "csvUnEscaperTest1", "csvUnEscaperTest2", "csvUnEscaperTest3", "csvUnEscaperTest4" ],
            "org.apache.commons.text.translate.SinglePassTranslatorTest" : [ "codePointsAreReturned", "indexIsValidated", "testTranslateThrowsIllegalArgumentException" ]
          }
        }
      }
    },
    "7b783fd1fe04347769ec7c1402992941c9076bea" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "7b783fd1fe04347769ec7c1402992941c9076bea~1",
      "changedClazzes" : {
        "org.apache.commons.text.StringSubstitutor#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#checkCyclicSubstitution" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#getEscapeChar" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#getStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#getValueDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#getVariablePrefixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#getVariableSuffixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#isDisableSubstitutionInValues" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#isEnableSubstitutionInVariables" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#replace" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#resolveVariable" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#setEscapeChar" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#setValueDelimiterMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#setVariablePrefixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#setVariableResolver" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#setVariableSuffixMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.StringSubstitutor#substitute" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name", "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest#testLocalHostLookup_Address" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest#testLocalHostLookup_CanonicalName" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_CanonicalName" ]
          }
        },
        "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest#testLocalHostLookup_Name" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#append" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#ensureCapacity" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#length" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#replace" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#replaceImpl" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#toString" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.TextStringBuilder#validateRange" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.lookup.AbstractStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ],
            "org.apache.commons.text.lookup.LocalHostStringLookupTest" : [ "testAddress", "testCanonicalName", "testName" ]
          }
        },
        "org.apache.commons.text.lookup.DateStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.lookup.EnvironmentVariableStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.lookup.InterpolatorStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.lookup.InterpolatorStringLookup#<init>(Map)" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ],
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookup", "testLookupWithDefaultInterpolator" ]
          }
        },
        "org.apache.commons.text.lookup.InterpolatorStringLookup#lookup" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.lookup.JavaPlatformStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.lookup.LocalHostStringLookup" : {
          "testcases" : { }
        },
        "org.apache.commons.text.lookup.LocalHostStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ],
            "org.apache.commons.text.lookup.LocalHostStringLookupTest" : [ "testAddress", "testCanonicalName", "testName" ]
          }
        },
        "org.apache.commons.text.lookup.LocalHostStringLookup#lookup" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ],
            "org.apache.commons.text.lookup.LocalHostStringLookupTest" : [ "testAddress", "testCanonicalName", "testName" ]
          }
        },
        "org.apache.commons.text.lookup.LocalHostStringLookupTest" : {
          "testcases" : {
            "org.apache.commons.text.lookup.LocalHostStringLookupTest" : [ "testAddress", "testCanonicalName", "testName" ]
          }
        },
        "org.apache.commons.text.lookup.LocalHostStringLookupTest#testAddress" : {
          "testcases" : {
            "org.apache.commons.text.lookup.LocalHostStringLookupTest" : [ "testAddress" ]
          }
        },
        "org.apache.commons.text.lookup.LocalHostStringLookupTest#testCanonicalName" : {
          "testcases" : {
            "org.apache.commons.text.lookup.LocalHostStringLookupTest" : [ "testCanonicalName" ]
          }
        },
        "org.apache.commons.text.lookup.LocalHostStringLookupTest#testName" : {
          "testcases" : {
            "org.apache.commons.text.lookup.LocalHostStringLookupTest" : [ "testName" ]
          }
        },
        "org.apache.commons.text.lookup.MapStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.lookup.MapStringLookup#on" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.lookup.StringLookupFactory" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorTest" : [ "testLANG1055", "testReplaceAdjacentAtEnd", "testReplaceAdjacentAtStart", "testReplaceChangedMap", "testReplaceComplexEscaping", "testReplaceEmpty", "testReplaceEmptyKeys", "testReplaceEscaping", "testReplaceInTakingStringBufferWithNonNull", "testReplaceInTakingStringBuilderWithNonNull", "testReplaceInTakingStringBuilderWithNull", "testReplaceInTakingTwoAndThreeIntsReturningFalse", "testReplaceInVariable", "testReplaceInVariableDisabled", "testReplaceInVariableRecursive", "testReplaceIncompletePrefix", "testReplaceNoPrefixNoSuffix", "testReplaceNoPrefixSuffix", "testReplaceNoVariables", "testReplaceNull", "testReplacePrefixNoSuffix", "testReplaceRecursive", "testReplaceSimple", "testReplaceSolo", "testReplaceSoloEscaping", "testReplaceToIdentical", "testReplaceUnknownKey", "testReplaceWeirdPattens", "testResolveVariable", "testSamePrefixAndSuffix", "testStaticReplace", "testStaticReplacePrefixSuffix", "testStaticReplaceSystemProperties", "testSubstituteDefaultProperties", "testSubstitutePreserveEscape" ],
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testMapAndSystemProperty", "testSystemProperty" ]
          }
        },
        "org.apache.commons.text.lookup.StringLookupFactory#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.lookup.StringLookupFactory#interpolatorStringLookup" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.lookup.SystemPropertyStringLookup#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$CharMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$CharSetMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$NoMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$StringMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$StringMatcher#isMatch" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.matcher.AbstractStringMatcher$TrimMatcher#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#<init>" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        },
        "org.apache.commons.text.matcher.StringMatcherFactory#stringMatcher" : {
          "testcases" : {
            "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : [ "testLocalHostLookup_Address", "testLocalHostLookup_CanonicalName", "testLocalHostLookup_Name" ]
          }
        }
      }
    },
    "145aa52ff2c928780e7adf33221d37bcce697e74" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "145aa52ff2c928780e7adf33221d37bcce697e74~1",
      "changedClazzes" : {
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_FormattedString" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_FormattedString" ]
          }
        },
        "org.apache.commons.text.StrBuilderAppendInsertTest#testAppendln_String" : {
          "testcases" : {
            "org.apache.commons.text.StrBuilderAppendInsertTest" : [ "testAppendln_String" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendln_FormattedString" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendln_FormattedString" ]
          }
        },
        "org.apache.commons.text.TextStringBuilderAppendInsertTest#testAppendln_String" : {
          "testcases" : {
            "org.apache.commons.text.TextStringBuilderAppendInsertTest" : [ "testAppendln_String" ]
          }
        }
      }
    },
    "6e9107dc826cee43629af6a3857c98c90da18eba" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "6e9107dc826cee43629af6a3857c98c90da18eba~1",
      "changedClazzes" : {
        "org.apache.commons.text.lookup.LocalHostStringLookupTest#testAddress" : {
          "testcases" : {
            "org.apache.commons.text.lookup.LocalHostStringLookupTest" : [ "testAddress" ]
          }
        },
        "org.apache.commons.text.lookup.LocalHostStringLookupTest#testCanonicalName" : {
          "testcases" : {
            "org.apache.commons.text.lookup.LocalHostStringLookupTest" : [ "testCanonicalName" ]
          }
        },
        "org.apache.commons.text.lookup.LocalHostStringLookupTest#testName" : {
          "testcases" : {
            "org.apache.commons.text.lookup.LocalHostStringLookupTest" : [ "testName" ]
          }
        }
      }
    },
    "26a308f40f9026fb1f5cffb0f359270a5a3b345c" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "26a308f40f9026fb1f5cffb0f359270a5a3b345c~1",
      "changedClazzes" : {
        "org.apache.commons.text.lookup.DateStringLookup#formatDate(long,String)" : {
          "testcases" : {
            "org.apache.commons.text.lookup.DateStringLookupTest" : [ "testDefault", "testFormat" ],
            "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : [ "testLookupWithDefaultInterpolator" ]
          }
        }
      }
    },
    "ea1765e01ed3b269572b8ca6f1743c6b5ac71b37" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "ea1765e01ed3b269572b8ca6f1743c6b5ac71b37~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.HammingDistance#apply(CharSequence,CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.HammingDistanceTest" : [ "testHammingDistance", "testHammingDistance_nullLeftValue", "testHammingDistance_nullRightValue" ]
          }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistance#apply(CharSequence,CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.JaroWinklerDistanceTest" : [ "testGetJaroWinklerDistance_NullNull", "testGetJaroWinklerDistance_NullString", "testGetJaroWinklerDistance_StringNull", "testGetJaroWinklerDistance_StringString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#limitedCompare(CharSequence,CharSequence,int)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testApplyThrowsIllegalArgumentExceptionAndCreatesLevenshteinDetailedDistanceTakingInteger", "testApplyWithNull", "testCreatesLevenshteinDetailedDistanceTakingInteger6", "testGetLevenshteinDetailedDistance_StringStringInt" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistance#unlimitedCompare(CharSequence,CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest" : [ "testEquals", "testGetDefaultInstanceOne", "testGetDefaultInstanceTwo", "testGetLevenshteinDetailedDistance_NullString", "testGetLevenshteinDetailedDistance_NullStringInt", "testGetLevenshteinDetailedDistance_StringNull", "testGetLevenshteinDetailedDistance_StringNullInt", "testGetLevenshteinDetailedDistance_StringString", "testHashCode", "testToString" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance#limitedCompare(CharSequence,CharSequence,int)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testApplyThrowsIllegalArgumentExceptionAndCreatesLevenshteinDistanceTakingInteger", "testGetLevenshteinDistance_StringStringInt" ]
          }
        }
      }
    },
    "51e22754a685519b80fd16d5c24c43f1b73863e7" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "51e22754a685519b80fd16d5c24c43f1b73863e7~1",
      "changedClazzes" : {
        "org.apache.commons.text.similarity.FuzzyScore#fuzzyScore(CharSequence,CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.FuzzyScoreTest" : [ "testGetFuzzyScore", "testGetFuzzyScore_NullNullLocale", "testGetFuzzyScore_NullStringLocale", "testGetFuzzyScore_StringNullLocale" ]
          }
        },
        "org.apache.commons.text.similarity.LevenshteinDistance#unlimitedCompare(CharSequence,CharSequence)" : {
          "testcases" : {
            "org.apache.commons.text.similarity.LevenshteinDistanceTest" : [ "testGetLevenshteinDistance_NullString", "testGetLevenshteinDistance_NullStringInt", "testGetLevenshteinDistance_StringNull", "testGetLevenshteinDistance_StringNullInt", "testGetLevenshteinDistance_StringString" ],
            "org.apache.commons.text.similarity.StringMetricFromTest" : [ "testEquivalence", "testJavadocExample" ]
          }
        }
      }
    },
    "49db4cb38baa24348023258924e63e9dac786f00" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "49db4cb38baa24348023258924e63e9dac786f00~1",
      "changedClazzes" : {
        "org.apache.commons.text.AlphabetConverterTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.CompositeFormatTest#testCompositeFormat" : {
          "testcases" : { }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#checkBuiltInFormat(String,Map,Object[],Locale)" : {
          "testcases" : { }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testEqualsHashcode" : {
          "testcases" : { }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testExtendedAndBuiltInFormats" : {
          "testcases" : { }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testExtendedFormats" : {
          "testcases" : { }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFive" : {
          "testcases" : { }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionFour" : {
          "testcases" : { }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionOne" : {
          "testcases" : { }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionThree" : {
          "testcases" : { }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testFailsToCreateExtendedMessageFormatTakingTwoArgumentsThrowsIllegalArgumentExceptionTwo" : {
          "testcases" : { }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testOverriddenBuiltinFormat" : {
          "testcases" : { }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testSetFormatByArgumentIndexIsUnsupported" : {
          "testcases" : { }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testSetFormatIsUnsupported" : {
          "testcases" : { }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testSetFormatsByArgumentIndex" : {
          "testcases" : { }
        },
        "org.apache.commons.text.ExtendedMessageFormatTest#testSetFormatsIsUnsupported" : {
          "testcases" : { }
        },
        "org.apache.commons.text.FormattableUtilsTest#testAppendWithNullFormatterAndIntsThrowsNullPointerException" : {
          "testcases" : { }
        },
        "org.apache.commons.text.FormattableUtilsTest#testIllegalEllipsis" : {
          "testcases" : { }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testBadMaximumCodePoint" : {
          "testcases" : { }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testBadMinAndMax" : {
          "testcases" : { }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testBadMinimumCodePoint" : {
          "testcases" : { }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testGenerateMinMaxLength" : {
          "testcases" : { }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testGenerateMinMaxLengthInvalidLength" : {
          "testcases" : { }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testGenerateMinMaxLengthMinGreaterThanMax" : {
          "testcases" : { }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testGenerateTakingIntThrowsNullPointerException" : {
          "testcases" : { }
        },
        "org.apache.commons.text.RandomStringGeneratorTest#testInvalidLength" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrBuilderTest#testAppendTakingTwoIntsWithIndexOutOfBoundsThrowsStringIndexOutOfBoundsExceptionTwo" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrBuilderTest#testAppendTakingTwoIntsWithZeroThrowsStringIndexOutOfBoundsException" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrBuilderTest#testAsReader" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrBuilderTest#testDeleteCharAtWithNegative" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrBuilderTest#testLang295" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrBuilderTest#testLang412Left" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrBuilderTest#testLang412Right" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrBuilderTest#testReplace_StrMatcher_String_int_int_int_VaryEndIndex" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrBuilderTest#testReplace_StrMatcher_String_int_int_int_VaryStartIndex" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrBuilderTest#testSubSequenceIntInt" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrBuilderTest#testSubstringInt" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrBuilderTest#testSubstringIntInt" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrBuilderTest#testToCharArray" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrBuilderTest#testToCharArrayIntInt" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrLookupTest#testSystemProperiesLookup" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrLookupTest#testSystemPropertiesLookupReplacedProperties" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrLookupTest#testSystemPropertiesLookupUpdatedProperty" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrSubstitutorTest#testGetSetPrefix" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrSubstitutorTest#testGetSetSuffix" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceInVariable" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceInVariableDisabled" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceInVariableRecursive" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrSubstitutorTest#testReplaceTakingThreeArgumentsThrowsNullPointerException" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrTokenizerTest#test1" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrTokenizerTest#test2" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrTokenizerTest#test3" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrTokenizerTest#test4" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrTokenizerTest#test5" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrTokenizerTest#test6" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrTokenizerTest#test7" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrTokenizerTest#test8" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrTokenizerTest#testEmpty(StrTokenizer)" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StrTokenizerTest#testIteration" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StringEscapeUtilsTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceInVariable" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceInVariableDisabled" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceInVariableRecursive" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StringSubstitutorTest#testReplaceTakingThreeArgumentsThrowsNullPointerException" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest#testLocalHostLookup_Address" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest#testLocalHostLookup_CanonicalName" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest#testLocalHostLookup_Name" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest#testMapAndSystemProperty" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest#testSystemProperty" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StringTokenizerTest#test1" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StringTokenizerTest#test2" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StringTokenizerTest#test3" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StringTokenizerTest#test4" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StringTokenizerTest#test5" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StringTokenizerTest#test6" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StringTokenizerTest#test7" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StringTokenizerTest#test8" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StringTokenizerTest#testEmpty(StringTokenizer)" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StringTokenizerTest#testIteration" : {
          "testcases" : { }
        },
        "org.apache.commons.text.TextStringBuilderTest#testAppendTakingTwoIntsWithIndexOutOfBoundsThrowsStringIndexOutOfBoundsExceptionTwo" : {
          "testcases" : { }
        },
        "org.apache.commons.text.TextStringBuilderTest#testAppendTakingTwoIntsWithZeroThrowsStringIndexOutOfBoundsException" : {
          "testcases" : { }
        },
        "org.apache.commons.text.TextStringBuilderTest#testAsReader" : {
          "testcases" : { }
        },
        "org.apache.commons.text.TextStringBuilderTest#testDeleteCharAtWithNegative" : {
          "testcases" : { }
        },
        "org.apache.commons.text.TextStringBuilderTest#testLang295" : {
          "testcases" : { }
        },
        "org.apache.commons.text.TextStringBuilderTest#testLang412Left" : {
          "testcases" : { }
        },
        "org.apache.commons.text.TextStringBuilderTest#testLang412Right" : {
          "testcases" : { }
        },
        "org.apache.commons.text.TextStringBuilderTest#testReplace_StringMatcher_String_int_int_int_VaryEndIndex" : {
          "testcases" : { }
        },
        "org.apache.commons.text.TextStringBuilderTest#testReplace_StringMatcher_String_int_int_int_VaryStartIndex" : {
          "testcases" : { }
        },
        "org.apache.commons.text.TextStringBuilderTest#testSubSequenceIntInt" : {
          "testcases" : { }
        },
        "org.apache.commons.text.TextStringBuilderTest#testSubstringInt" : {
          "testcases" : { }
        },
        "org.apache.commons.text.TextStringBuilderTest#testSubstringIntInt" : {
          "testcases" : { }
        },
        "org.apache.commons.text.TextStringBuilderTest#testToCharArray" : {
          "testcases" : { }
        },
        "org.apache.commons.text.TextStringBuilderTest#testToCharArrayIntInt" : {
          "testcases" : { }
        },
        "org.apache.commons.text.WordUtilsTest#testAbbreviateForLowerThanMinusOneValues" : {
          "testcases" : { }
        },
        "org.apache.commons.text.WordUtilsTest#testAbbreviateUpperLessThanLowerValues" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.ReplacementsFinderTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.lookup.EnvironmentVariableStringLookupTest#testOne" : {
          "testcases" : { }
        },
        "org.apache.commons.text.lookup.InterpolatorStringLookupTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.lookup.JavaPlatformStringLookupTest#testVm" : {
          "testcases" : { }
        },
        "org.apache.commons.text.lookup.LocalHostStringLookupTest#testAddress" : {
          "testcases" : { }
        },
        "org.apache.commons.text.lookup.LocalHostStringLookupTest#testCanonicalName" : {
          "testcases" : { }
        },
        "org.apache.commons.text.lookup.LocalHostStringLookupTest#testName" : {
          "testcases" : { }
        },
        "org.apache.commons.text.lookup.MapStringLookupTest#testOne" : {
          "testcases" : { }
        },
        "org.apache.commons.text.lookup.NullStringLookupTest#test" : {
          "testcases" : { }
        },
        "org.apache.commons.text.lookup.ResourceBundleStringLookupTest#testOne" : {
          "testcases" : { }
        },
        "org.apache.commons.text.lookup.SystemPropertyStringLookupTest#testUserName" : {
          "testcases" : { }
        },
        "org.apache.commons.text.matcher.StringSubstitutorGetSetTest#testGetSetPrefix" : {
          "testcases" : { }
        },
        "org.apache.commons.text.matcher.StringSubstitutorGetSetTest#testGetSetSuffix" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.CosineSimilarityTest#testCosineSimilarityThrowsIllegalArgumentException" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.CosineSimilarityTest#testCosineSimilarityWithNull" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testGetFuzzyScore_NullNullLocale" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testGetFuzzyScore_NullStringLocale" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testGetFuzzyScore_StringNullLocale" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.FuzzyScoreTest#testMissingLocale" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.HammingDistanceTest#testHammingDistance_nullLeftValue" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.HammingDistanceTest#testHammingDistance_nullRightValue" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.JaccardDistanceTest#testGettingJaccardDistance" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.JaccardDistanceTest#testGettingJaccardDistanceNullNull" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.JaccardDistanceTest#testGettingJaccardDistanceNullString" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.JaccardDistanceTest#testGettingJaccardDistanceStringNull" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.JaccardSimilarityTest#testGettingJaccardSimilarity" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.JaccardSimilarityTest#testGettingJaccardSimilarityNullNull" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.JaccardSimilarityTest#testGettingJaccardSimilarityNullString" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.JaccardSimilarityTest#testGettingJaccardSimilarityStringNull" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistanceTest#testGetJaroWinklerDistance_NullNull" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistanceTest#testGetJaroWinklerDistance_NullString" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistanceTest#testGetJaroWinklerDistance_StringNull" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.JaroWinklerDistanceTest#testGetJaroWinklerDistance_StringString" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testApplyThrowsIllegalArgumentExceptionAndCreatesLevenshteinDetailedDistanceTakingInteger" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testApplyWithNull" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testConstructorWithNegativeThreshold" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_NullString" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_NullStringInt" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_StringNull" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LevenshteinDetailedDistanceTest#testGetLevenshteinDetailedDistance_StringNullInt" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest#testApplyThrowsIllegalArgumentExceptionAndCreatesLevenshteinDistanceTakingInteger" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest#testConstructorWithNegativeThreshold" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest#testGetLevenshteinDistance_NullString" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest#testGetLevenshteinDistance_NullStringInt" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest#testGetLevenshteinDistance_StringNull" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LevenshteinDistanceTest#testGetLevenshteinDistance_StringNullInt" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest#testGettingLongestCommonSubsequenceDistanceNullNull" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest#testGettingLongestCommonSubsequenceDistanceNullString" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceDistanceTest#testGettingLongestCommonSubsequenceDistanceStringNull" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testGettingLogestCommonSubsequenceNullNull" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testGettingLogestCommonSubsequenceNullString" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testGettingLogestCommonSubsequenceStringNull" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testGettingLongestCommonSubsequenceApplyNullNull" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testGettingLongestCommonSubsequenceApplyNullString" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testGettingLongestCommonSubsequenceApplyStringNull" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testGettingLongestCommonSubsequenceNullNull" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testGettingLongestCommonSubsequenceNullString" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.LongestCommonSubsequenceTest#testGettingLongestCommonSubsequenceStringNull" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.ParameterizedEditDistanceFromTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.ParameterizedLevenshteinDistanceTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.ParameterizedSimilarityScoreFromTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.SimilarityScoreFromTest#testFailsToCreateSimilarityScoreFromThrowsIllegalArgumentException" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.StringMetricFromTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.LookupTranslatorTest#testFailsToCreateLookupTranslatorThrowsInvalidParameterException" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.SinglePassTranslatorTest#indexIsValidated" : {
          "testcases" : { }
        },
        "org.apache.commons.text.translate.SinglePassTranslatorTest#testTranslateThrowsIllegalArgumentException" : {
          "testcases" : { }
        }
      }
    },
    "faa9a23e89f3a7f30f9c7503319b439b93ac64ee" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "faa9a23e89f3a7f30f9c7503319b439b93ac64ee~1",
      "changedClazzes" : {
        "org.apache.commons.text.StringSubstitutorWithInterpolatorStringLookupTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.lookup.InterpolatorStringLookup" : {
          "testcases" : { }
        },
        "org.apache.commons.text.lookup.StringLookupFactory" : {
          "testcases" : { }
        }
      }
    },
    "f370438c6ffa032a84d072d1d63eff8d08c5ae24" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "f370438c6ffa032a84d072d1d63eff8d08c5ae24~1",
      "changedClazzes" : {
        "org.apache.commons.text.RandomStringGeneratorTest#testWithinMultipleRanges" : {
          "testcases" : { }
        }
      }
    },
    "280bccb53a5297c588a73f55d77b0938e5d86d9e" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "280bccb53a5297c588a73f55d77b0938e5d86d9e~1",
      "changedClazzes" : {
        "org.apache.commons.text.StringEscapeUtils" : {
          "testcases" : { }
        },
        "org.apache.commons.text.StringEscapeUtilsTest" : {
          "testcases" : { }
        }
      }
    },
    "c86c6e4458d5fa2872f851e972fea70cba302dc4" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "c86c6e4458d5fa2872f851e972fea70cba302dc4~1",
      "changedClazzes" : {
        "org.apache.commons.text.WordUtils#wrap(String,int,String,boolean,String)" : {
          "testcases" : { }
        },
        "org.apache.commons.text.WordUtilsTest" : {
          "testcases" : { }
        }
      }
    },
    "3d613bab3a42944d6407026630e71805d1e84ae2" : {
      "running" : false,
      "jdk" : 8,
      "changedClazzes" : { }
    },
    "937d9dac2b43f839d2414c2074c90032ec1f6fbc" : {
      "running" : true,
      "jdk" : 8,
      "predecessor" : "937d9dac2b43f839d2414c2074c90032ec1f6fbc~1",
      "changedClazzes" : {
        "org.apache.commons.text.StringEscapeUtilsTest#testUnescapeJsonDoubleQuoteAndForwardSlash" : {
          "testcases" : { }
        },
        "org.apache.commons.text.diff.ReplacementsFinderTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.lookup.StringLookupFactory" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.ParameterizedEditDistanceFromTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.ParameterizedLevenshteinDistanceTest" : {
          "testcases" : { }
        },
        "org.apache.commons.text.similarity.ParameterizedSimilarityScoreFromTest" : {
          "testcases" : { }
        }
      }
    }
  },
  "android" : false
}