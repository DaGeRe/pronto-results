{
  "url" : "https://github.com/k9mail/k-9.git",
  "versions" : {
    "0cd52bc26b1c1f34d569d7370216b81b9369bbb4" : {
      "testcases" : {
        "k9mail§com.fsck.k9.message.MessageBuilderTest" : [ "build__detachAndReattach__shouldSucceed" ]
      },
      "predecessor" : "dd1040f54677676c5de3aaa6db3f76ff30010bc7"
    },
    "302b668d585fba903b38ca3486394ff45668c8cc" : {
      "testcases" : {
        "k9mail§com.fsck.k9.notification.NotificationDataTest" : [ "testAddNotificationContentWithReplacingNotification", "testRemoveNotificationForMessage", "testRemoveNotificationForMessageWithRecreatingNotification" ]
      },
      "predecessor" : "53f3d549f7f96e1ceb8f55e82d413a9cf1c3d0eb"
    },
    "a88ccfd9e8d81a64e7c9909a0567921f3c8499ea" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "initFromReplyToMessage_shouldCallComposePgpInlineDecider" ]
      },
      "predecessor" : "0fff2ffd08b1a2b672e44aab722f4496560e0dcb"
    },
    "0dfa6345b3ca5c43c147768ce4786f30f44b9b31" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "initFromReplyToMessage_shouldCallComposePgpInlineDecider" ]
      },
      "predecessor" : "ad7adf03e818aa9a68db9326c70ee7ef8c87a124"
    },
    "0a7de4b645dec9f5f7ec20fb0d70c4d1f30c0b2c" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withClosedFolder_shouldThrow", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "copyMessages_withClosedFolder_shouldThrow", "copyMessages_withEmptyMessageList_shouldReturnNull", "copyMessages_withoutDestinationFolderOfWrongType_shouldThrow", "create_withClosedFolder_shouldOpenConnectionAndIssueCreateCommand", "create_withNegativeImapResponse_shouldReturnFalse", "create_withoutNegativeImapResponse_shouldReturnTrue", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_notImplemented", "delete_shouldMoveMessagesToTrashFolder", "delete_withEmptyMessageList_shouldNotInteractWithImapConnection", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "exists_withClosedFolder_shouldOpenConnectionAndIssueStatusCommand", "exists_withNegativeImapResponse_shouldReturnFalse", "exists_withoutNegativeImapResponse_shouldReturnTrue", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEmptyMessageListArgument_shouldDoNothing", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withNullMessageListArgument_shouldDoNothing", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getFlaggedMessageCount_withClosedFolder_shouldThrow", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinus1", "getMessageByUid_returnsNewImapMessage", "getMessagesFromUids", "getMessagesFromUids_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withClosedFolder_shouldThrow", "getMessages_withDateConstraint", "getMessages_withEndArgumentSmallerThanStartArgument_shouldThrow", "getMessages_withInvalidEndArgument_shouldThrow", "getMessages_withInvalidStartArgument_shouldThrow", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getNewPushState_withNewerUid_shouldReturnNewPushState", "getNewPushState_withoutNewerUid_shouldReturnNull", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUidFromMessageId_withoutMessageIdHeader_shouldReturnNull", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "getUnreadMessageCount_withClosedFolder_shouldThrow", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "moveMessages_withEmptyMessageList_shouldReturnNull", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "search_withRemoteSearchDisabled_shouldThrow", "setFlags_shouldIssueUidStoreCommand" ]
      },
      "predecessor" : "0a7de4b645dec9f5f7ec20fb0d70c4d1f30c0b2c~1"
    },
    "10b46e2f49066d28a105e36dfeae56f7fb4dfd02" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "fetchPart_withTextSection_shouldProcessImapResponses" ]
      },
      "predecessor" : "10b46e2f49066d28a105e36dfeae56f7fb4dfd02~1"
    },
    "ffd051b0ec5c76e5bdafedbaa907e5ade4b0f55f" : {
      "testcases" : {
        "k9mail§com.fsck.k9.notification.BaseNotificationsTest" : [ "testCreateAndInitializeNotificationBuilder", "testCreateBigTextStyleNotification" ],
        "k9mail§com.fsck.k9.notification.DeviceNotificationsTest" : [ "buildSummaryNotification_withAdditionalMessages", "buildSummaryNotification_withMultiMessageNotification", "buildSummaryNotification_withSingleMessageNotification", "buildSummaryNotification_withoutDeleteAction", "buildSummaryNotification_withoutDeleteAllAction" ],
        "k9mail§com.fsck.k9.notification.WearNotificationsTest" : [ "testBuildStackedNotification", "testBuildStackedNotificationWithArchiveActionEnabled", "testBuildStackedNotificationWithDeleteActionEnabled", "testBuildStackedNotificationWithMarkAsSpamActionEnabled" ]
      },
      "predecessor" : "10b46e2f49066d28a105e36dfeae56f7fb4dfd02"
    },
    "6b76a727e257a3e0c92c7a427bc7731052242b29" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "open_withConnectionError_shouldThrow" ]
      },
      "predecessor" : "6b76a727e257a3e0c92c7a427bc7731052242b29~1"
    },
    "06e16478cbb33bca8ad44ae82cde752c2088a5dc" : {
      "testcases" : {
        "k9mail§com.fsck.k9.notification.BaseNotificationsTest" : [ "testCreateAndInitializeNotificationBuilder", "testCreateBigTextStyleNotification" ],
        "k9mail§com.fsck.k9.notification.DeviceNotificationsTest" : [ "buildSummaryNotification_withAdditionalMessages", "buildSummaryNotification_withMultiMessageNotification", "buildSummaryNotification_withSingleMessageNotification", "buildSummaryNotification_withoutDeleteAction", "buildSummaryNotification_withoutDeleteAllAction" ],
        "k9mail§com.fsck.k9.notification.WearNotificationsTest" : [ "testBuildStackedNotification", "testBuildStackedNotificationWithArchiveActionEnabled", "testBuildStackedNotificationWithDeleteActionEnabled", "testBuildStackedNotificationWithMarkAsSpamActionEnabled" ]
      },
      "predecessor" : "6b76a727e257a3e0c92c7a427bc7731052242b29"
    },
    "2feb367de1a5ad2950a13542f1d86977f2ae903c" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withClosedFolder_shouldThrow", "areMoreMessagesAvailable_withIndexOf1_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "copyMessages_withClosedFolder_shouldThrow", "copyMessages_withEmptyMessageList_shouldReturnNull", "copyMessages_withoutDestinationFolderOfWrongType_shouldThrow", "create_withClosedFolder_shouldOpenConnectionAndIssueCreateCommand", "create_withNegativeImapResponse_shouldReturnFalse", "create_withoutNegativeImapResponse_shouldReturnTrue", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_notImplemented", "delete_shouldMoveMessagesToTrashFolder", "delete_withEmptyMessageList_shouldNotInteractWithImapConnection", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "exists_withClosedFolder_shouldOpenConnectionAndIssueStatusCommand", "exists_withNegativeImapResponse_shouldReturnFalse", "exists_withoutNegativeImapResponse_shouldReturnTrue", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEmptyMessageListArgument_shouldDoNothing", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withNullMessageListArgument_shouldDoNothing", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getFlaggedMessageCount_withClosedFolder_shouldThrow", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinus1", "getMessageByUid_returnsNewImapMessageWithUidInFolder", "getMessagesFromUids", "getMessagesFromUids_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withClosedFolder_shouldThrow", "getMessages_withDateConstraint", "getMessages_withEndArgumentSmallerThanStartArgument_shouldThrow", "getMessages_withInvalidEndArgument_shouldThrow", "getMessages_withInvalidStartArgument_shouldThrow", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getNewPushState_withNewerUid_shouldReturnNewPushState", "getNewPushState_withoutNewerUid_shouldReturnNull", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUidFromMessageId_withoutMessageIdHeader_shouldReturnNull", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "getUnreadMessageCount_withClosedFolder_shouldThrow", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "moveMessages_withEmptyMessageList_shouldReturnNull", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "search_withRemoteSearchDisabled_shouldThrow", "setFlags_shouldIssueUidStoreCommand" ]
      },
      "predecessor" : "2feb367de1a5ad2950a13542f1d86977f2ae903c~1"
    },
    "f9853dce083343a9d6e9b0165fc44b2444f96a46" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "areMoreMessagesAvailable_withIndexOf1_shouldReturnFalseWithoutPerformingSearch", "fetchPart_withTextSection_shouldProcessImapResponses", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinus1", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException" ]
      },
      "predecessor" : "2feb367de1a5ad2950a13542f1d86977f2ae903c"
    },
    "6caada1b48d6cfe8046013a27ff3afd64142af38" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinus1" ]
      },
      "predecessor" : "6caada1b48d6cfe8046013a27ff3afd64142af38~1"
    },
    "1a60a91ddfee5b9fb48a3ad9e5294ee3b9738a71" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "copyMessages", "copyMessages_withEmptyMessageList_shouldReturnNull", "create_withNegativeImapResponse_shouldReturnFalse", "create_withoutNegativeImapResponse_shouldReturnTrue", "exists_withNegativeImapResponse_shouldReturnFalse", "exists_withoutNegativeImapResponse_shouldReturnTrue", "getFlaggedMessageCount", "getHighestUid", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withListener_shouldCallListener", "getNewPushState_withNewerUid_shouldReturnNewPushState", "getNewPushState_withoutNewerUid_shouldReturnNull", "getUidFromMessageId", "getUidFromMessageId_withoutMessageIdHeader_shouldReturnNull", "getUnreadMessageCount", "moveMessages_shouldCopyMessages", "moveMessages_withEmptyMessageList_shouldReturnNull" ]
      },
      "predecessor" : "1a60a91ddfee5b9fb48a3ad9e5294ee3b9738a71~1"
    },
    "89212cd10cfc5a9f97143ff032a477687520f7e8" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "fetchPart_withTextSection_shouldProcessImapResponses" ]
      },
      "predecessor" : "89212cd10cfc5a9f97143ff032a477687520f7e8~1"
    },
    "215cbb6d9a3f39d513e64bcd647c4ab80fdc35f5" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "close_withoutOpen_shouldNotThrow", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isConnected_withoutPreviousOpen_shouldReturnFalse", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_withCapabilitiesInInitialResponse_shouldNotIssueCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withConnectionError_shouldThrow", "open_withInvalidHostname_shouldThrow", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withNegativeResponseToStartTlsCommand_shouldThrow", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "sendContinuation" ]
      },
      "predecessor" : "89212cd10cfc5a9f97143ff032a477687520f7e8"
    },
    "d1904900c83478ce5c8279757b2e60edccf1c086" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.SmtpTransportTest" : [ "SmtpTransport_withInvalidUri_throwsMessagingException", "SmtpTransport_withValidUri_canBeCreated", "open_withNoSecurityCramMd5Auth_connectsToServer", "open_withNoSecurityExternalAuth_connectsToServer", "open_withNoSecurityPlainAuth_connectsToServer", "sendMessage_withNoAddressToSendTo_doesntOpenConnection", "sendMessage_withToAddressToSendTo_opensConnection" ]
      },
      "predecessor" : "d1904900c83478ce5c8279757b2e60edccf1c086~1"
    },
    "a2b545fc39fb80128b3353ef0308732496f7fed4" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.SmtpTransportTest" : [ "open_withNoSecurityCramMd5Auth_connectsToServer", "open_withNoSecurityExternalAuth_connectsToServer", "open_withNoSecurityPlainAuth_connectsToServer", "sendMessage_with8BitEncoding_usesEncoding", "sendMessage_withNoAddressToSendTo_doesntOpenConnection", "sendMessage_withToAddressToSendTo_opensConnection" ]
      },
      "predecessor" : "a2b545fc39fb80128b3353ef0308732496f7fed4~1"
    },
    "82bc18673caef6d91e2595f4c001f72ba5111717" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.SmtpTransportTest" : [ "SmtpTransport_withInvalidUri_throwsMessagingException", "SmtpTransport_withValidUri_canBeCreated", "open_triesHELO_whenServerDoesntSupportEHLO", "open_withNoSecurityAutomatic_connectsToServerWithCramMD5IfSupported", "open_withNoSecurityAutomatic_withCramMD5Unsupported_throwsException", "open_withNoSecurityCramMd5Auth_connectsToServer", "open_withNoSecurityCramMd5Auth_withNoSupport_throwsException", "open_withNoSecurityExternalAuth_connectsToServer", "open_withNoSecurityExternal_withNoSupport_throwsException", "open_withNoSecurityOrPasswordPlainAuth_connectsToServer_withoutLogin", "open_withNoSecurityPlainAuth_connectsToServer", "open_withNoSecurityPlainAuth_usesLoginIfPlainUnavailable", "open_withNoSecurityPlainAuth_withNeither_throwsException", "sendMessage_with8BitEncoding_usesEncoding", "sendMessage_withMessageTooLarge_throwsException", "sendMessage_withNegativeReply_throwsException", "sendMessage_withNoAddressToSendTo_doesntOpenConnection", "sendMessage_withToAddressToSendTo_opensConnection" ]
      },
      "predecessor" : "82bc18673caef6d91e2595f4c001f72ba5111717~1"
    },
    "2ecd7f0e4ef9efeada7f2fb3be773c1339a9ac79" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.SmtpTransportTest" : [ "sendMessage_with8BitEncoding_usesEncoding", "sendMessage_withMessageTooLarge_throwsException", "sendMessage_withNegativeReply_throwsException", "sendMessage_withToAddressToSendTo_opensConnection" ]
      },
      "predecessor" : "2ecd7f0e4ef9efeada7f2fb3be773c1339a9ac79~1"
    },
    "5ab9de5f5513a6f9ae143d5892e7906df155d29a" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.SmtpTransportTest" : [ "SmtpTransport_withInvalidUri_throwsMessagingException", "SmtpTransport_withValidUri_canBeCreated", "open_triesHELO_whenServerDoesntSupportEHLO", "open_withNoSecurityAutomatic_connectsToServerWithCramMD5IfSupported", "open_withNoSecurityAutomatic_withCramMD5Unsupported_throwsException", "open_withNoSecurityCramMd5Auth_connectsToServer", "open_withNoSecurityCramMd5Auth_withNoSupport_throwsException", "open_withNoSecurityExternalAuth_connectsToServer", "open_withNoSecurityExternal_withNoSupport_throwsException", "open_withNoSecurityOrPasswordPlainAuth_connectsToServer_withoutLogin", "open_withNoSecurityPlainAuth_connectsToServer", "open_withNoSecurityPlainAuth_usesLoginIfPlainUnavailable", "open_withNoSecurityPlainAuth_withNeither_throwsException", "sendMessage_with8BitEncoding_usesEncoding", "sendMessage_withMessageTooLarge_throwsException", "sendMessage_withNegativeReply_throwsException", "sendMessage_withNoAddressToSendTo_doesntOpenConnection", "sendMessage_withToAddressToSendTo_opensConnection" ]
      },
      "predecessor" : "5ab9de5f5513a6f9ae143d5892e7906df155d29a~1"
    },
    "457f69a94e27d148e90ee55cf2d0940f1e5694d5" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.SmtpTransportTest" : [ "sendMessage_with8BitEncoding_usesEncoding", "sendMessage_withMessageTooLarge_throwsException", "sendMessage_withNegativeReply_throwsException", "sendMessage_withToAddressToSendTo_opensConnection" ]
      },
      "predecessor" : "457f69a94e27d148e90ee55cf2d0940f1e5694d5~1"
    },
    "7bd0f52c6d24ba1696620c4109c30d1f06aa770f" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "close_withoutOpen_shouldNotThrow", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isConnected_withoutPreviousOpen_shouldReturnFalse", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_withCapabilitiesInInitialResponse_shouldNotIssueCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withConnectionError_shouldThrow", "open_withInvalidHostname_shouldThrow", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withNegativeResponseToStartTlsCommand_shouldThrow", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "sendContinuation" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapResponseParserTest" : [ "readStatusResponse_withNoResponseAndAlertText_shouldThrowWithAlertText", "readStatusResponse_withNoResponse_shouldThrow", "testReadStatusResponseSkippingWrongTag", "testReadStatusResponseWithErrorResponse", "testReadStatusResponseWithOKResponse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "autoconfigureFolders_withoutSpecialUseCapability_shouldNotIssueImapCommand", "checkSettings_shouldCreateImapConnectionAndCallOpen", "checkSettings_withOpenThrowing_shouldThrowMessagingException", "getConnection_calledAfterReleaseWithAClosedConnection_shouldReturnNewImapConnectionInstance", "getConnection_calledAfterRelease_shouldReturnCachedImapConnection", "getConnection_calledTwiceWithoutRelease_shouldCreateTwoImapConnection", "getConnection_shouldCreateImapConnection", "getConnection_withDeadConnectionInPool_shouldReturnNewImapConnectionInstance", "getFolder_calledTwice_shouldReturnFirstInstance", "getFolder_shouldReturnImapFolderInstance", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withIoException_shouldCloseImapConnection", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreUriTest" : [ "testCreateDecodeStoreUriWithSpecialCharactersInUsernameAndPassword", "testDecodeStoreUriImapAllExtras", "testDecodeStoreUriImapAutodetectAndPrefix", "testDecodeStoreUriImapEmptyPrefix", "testDecodeStoreUriImapNoExtras", "testDecodeStoreUriImapPrefixOnly" ],
        "k9mail-library§com.fsck.k9.mail.transport.SmtpTransportUriTest" : [ "decodeUri_canDecodeAuthType", "decodeUri_canDecodeAuthType_withEmptyPassword", "decodeUri_canDecodeClientCert", "decodeUri_canDecodeHost", "decodeUri_canDecodePassword", "decodeUri_canDecodePort", "decodeUri_canDecodeSSL", "decodeUri_canDecodeTLS", "decodeUri_canDecodeUsername", "decodeUri_canDecodeUsername_withNoAuthType", "decodeUri_canDecodeUsername_withNoPasswordOrAuthType", "decodeUri_forUnknownSchema_throwsIllegalArgumentException" ]
      },
      "predecessor" : "0342648568838f70220c207e77e0ee489930928c"
    },
    "25cba114a63a49fc37eff5a242fc0ff5a9b2e4bd" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_authXoauthWithSaslIr", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOn400Response", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnInvalidJsonResponse", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnMissingStatusJsonResponse", "open_authXoauthWithSaslIrParsesCapabilities", "open_authXoauthWithSaslIrThrowsExeptionOn401Response", "open_authXoauthWithSaslIrWithOldTokenThrowsExceptionIfRetryFails", "open_withCapabilitiesInInitialResponse_shouldNotIssueCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "sendContinuation" ],
        "k9mail-library§com.fsck.k9.mail.transport.SmtpTransportTest" : [ "open_withAuthExternalExtension", "open_withAuthLoginExtension", "open_withAuthPlainExtension", "open_withAutomaticAuthAndNoTransportSecurityAndAuthCramMd5Extension_shouldUseAuthCramMd5", "open_withAutomaticAuthAndNoTransportSecurityAndAuthPlainExtension_shouldThrow", "open_withCramMd5AuthExtension", "open_withEhloFailing_shouldTryHelo", "open_withXoauth2Extension", "open_withXoauth2Extension_shouldInvalidateAndRetryOn400Response", "open_withXoauth2Extension_shouldInvalidateAndRetryOnInvalidJsonResponse", "open_withXoauth2Extension_shouldInvalidateAndRetryOnMissingStatusJsonResponse", "open_withXoauth2Extension_shouldThrowOn401Response", "open_withXoauth2Extension_shouldThrowOnFailure_fetchingToken", "open_withXoauth2Extension_shouldThrowOnMultipleFailure", "open_withoutAuthExternalExtension_shouldThrow", "open_withoutAuthLoginExtension_shouldConnectWithoutAuthentication", "open_withoutCramMd5AuthExtension_shouldThrow", "open_withoutLoginAndPlainAuthExtensions_shouldThrow", "open_withoutXoauth2Extension_shouldThrow", "sendMessage_with8BitEncoding", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withSingleRecipient" ]
      },
      "predecessor" : "25cba114a63a49fc37eff5a242fc0ff5a9b2e4bd~1"
    },
    "a434f37320c7cc8ff1ae92ac47951e934c5b4057" : {
      "testcases" : {
        "k9mail§com.fsck.k9.notification.WearNotificationsTest" : [ "testBuildStackedNotification", "testBuildStackedNotificationWithArchiveActionEnabled", "testBuildStackedNotificationWithDeleteActionEnabled", "testBuildStackedNotificationWithMarkAsSpamActionEnabled" ]
      },
      "predecessor" : "a434f37320c7cc8ff1ae92ac47951e934c5b4057~1"
    },
    "79c1f921f99bf7c9f0b94c17487fc958f66f079f" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "close_withoutOpen_shouldNotThrow", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isConnected_withoutPreviousOpen_shouldReturnFalse", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_withCapabilitiesInInitialResponse_shouldNotIssueCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withConnectionError_shouldThrow", "open_withInvalidHostname_shouldThrow", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withNegativeResponseToStartTlsCommand_shouldThrow", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "sendContinuation" ],
        "k9mail-library§com.fsck.k9.mail.transport.SmtpTransportTest" : [ "SmtpTransport_withInvalidTransportUri_shouldThrow", "SmtpTransport_withValidTransportUri", "open_withAuthExternalExtension", "open_withAuthLoginExtension", "open_withAuthPlainExtension", "open_withAutomaticAuthAndNoTransportSecurityAndAuthCramMd5Extension_shouldUseAuthCramMd5", "open_withAutomaticAuthAndNoTransportSecurityAndAuthPlainExtension_shouldThrow", "open_withCramMd5AuthExtension", "open_withEhloFailing_shouldTryHelo", "open_withoutAuthExternalExtension_shouldThrow", "open_withoutAuthLoginExtension_shouldConnectWithoutAuthentication", "open_withoutCramMd5AuthExtension_shouldThrow", "open_withoutLoginAndPlainAuthExtensions_shouldThrow", "sendMessage_with8BitEncoding", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withSingleRecipient", "sendMessage_withoutAddressToSendTo_shouldNotOpenConnection" ],
        "k9mail-library§com.fsck.k9.mail.transport.SmtpTransportUriTest" : [ "decodeUri_canDecodeAuthType", "decodeUri_canDecodeAuthType_withEmptyPassword", "decodeUri_canDecodeClientCert", "decodeUri_canDecodeHost", "decodeUri_canDecodePassword", "decodeUri_canDecodePort", "decodeUri_canDecodeSSL", "decodeUri_canDecodeTLS", "decodeUri_canDecodeUsername", "decodeUri_canDecodeUsername_withNoAuthType", "decodeUri_canDecodeUsername_withNoPasswordOrAuthType", "decodeUri_forUnknownSchema_throwsIllegalArgumentException" ]
      },
      "predecessor" : "a434f37320c7cc8ff1ae92ac47951e934c5b4057"
    },
    "7fe6a9039611c9e243711c53e77e08837fdd8c5a" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "7fe6a9039611c9e243711c53e77e08837fdd8c5a~1"
    },
    "395f37ea1c4a955d253b0f78aa1c9f7f20dff693" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "395f37ea1c4a955d253b0f78aa1c9f7f20dff693~1"
    },
    "d0b3caf9768bc6710d9e0702de260a6b73b72995" : {
      "testcases" : {
        "k9mail§com.fsck.k9.notification.WearNotificationsTest" : [ "testBuildStackedNotification", "testBuildStackedNotificationWithArchiveActionEnabled", "testBuildStackedNotificationWithDeleteActionEnabled", "testBuildStackedNotificationWithMarkAsSpamActionEnabled" ]
      },
      "predecessor" : "d0b3caf9768bc6710d9e0702de260a6b73b72995~1"
    },
    "c7a637f21b60ca2644f4d8b49b8da716a6cacaa7" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "initFromReplyToMessage_shouldCallComposePgpInlineDecider" ]
      },
      "predecessor" : "c7a637f21b60ca2644f4d8b49b8da716a6cacaa7~1"
    },
    "be45380415f5d8ea24b785fccd61bc99ff9a3e71" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.AttachmentResolverTest" : [ "buildCidMap__onMultipartWithEmptyBodyPart__shouldReturnEmptyMap", "buildCidMap__onMultipartWithNoParts__shouldReturnEmptyMap", "buildCidMap__onPartWithNoBody__shouldReturnEmptyMap", "buildCidMap__onTwoPart__shouldReturnBothUris" ],
        "k9mail§com.fsck.k9.message.extractors.AttachmentInfoExtractorTest" : [ "extractInfoForDb__withContentTypeAndEncodedWordName__shouldReturnDecodedName", "extractInfoForDb__withContentTypeAndName__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionAttach__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionInlineAndContentId__shouldReturnInlineAttachment", "extractInfoForDb__withDispositionInvalidSizeParam__shouldReturnUnknownSize", "extractInfoForDb__withDispositionSizeParam__shouldReturnThatSize", "extractInfoForDb__withNoBody__shouldReturnContentAvailable", "extractInfoForDb__withNoBody__shouldReturnContentNotAvailable", "extractInfoForDb__withNoHeaders__shouldReturnEmptyValues", "extractInfoForDb__withTextMimeType__shouldReturnTxtExtension", "extractInfo__fromLocalBodyPart__shouldReturnProvidedValues", "extractInfo__withDeferredFileBody" ]
      },
      "predecessor" : "58eb9b52ca6236f36119d04f225d053d2e486160"
    },
    "76536ce5c99651ba171971f8739793d3b0060341" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavStoreTest" : [ "getPersonalNamespaces_shouldProvideListOfAllFoldersSentFromResponses", "getPersonalNamespaces_shouldRequestFolderList", "getPersonalNamespaces_shouldRequestSpecialFolders", "getPersonalNamespaces_shouldSetSpecialFolderNames" ]
      },
      "predecessor" : "76536ce5c99651ba171971f8739793d3b0060341~1"
    },
    "5b0544cbab50dcdd5857d98497e235f01fc9d863" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.MessageReferenceTest" : [ "checkMessageReferenceWithChangedFlag", "checkMessageReferenceWithChangedUid" ]
      },
      "predecessor" : "5b0544cbab50dcdd5857d98497e235f01fc9d863~1"
    },
    "cedaecb38e6a539f8b44964b99d1ab3b597f6763" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.AttachmentResolverTest" : [ "buildCidMap__onMultipartWithEmptyBodyPart__shouldReturnEmptyMap", "buildCidMap__onMultipartWithNoParts__shouldReturnEmptyMap", "buildCidMap__onPartWithNoBody__shouldReturnEmptyMap", "buildCidMap__onTwoPart__shouldReturnBothUris" ],
        "k9mail§com.fsck.k9.message.extractors.AttachmentInfoExtractorTest" : [ "extractInfoForDb__withContentTypeAndEncodedWordName__shouldReturnDecodedName", "extractInfoForDb__withContentTypeAndName__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionAttach__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionInlineAndContentId__shouldReturnInlineAttachment", "extractInfoForDb__withDispositionInvalidSizeParam__shouldReturnUnknownSize", "extractInfoForDb__withDispositionSizeParam__shouldReturnThatSize", "extractInfoForDb__withNoBody__shouldReturnContentAvailable", "extractInfoForDb__withNoBody__shouldReturnContentNotAvailable", "extractInfoForDb__withNoHeaders__shouldReturnEmptyValues", "extractInfoForDb__withTextMimeType__shouldReturnTxtExtension", "extractInfo__fromLocalBodyPart__shouldReturnProvidedValues", "extractInfo__withDeferredFileBody" ]
      },
      "predecessor" : "5b0544cbab50dcdd5857d98497e235f01fc9d863"
    },
    "d40a046bf6c08ebd476c4c0d678782d1d7284ff4" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "initFromReplyToMessage_shouldCallComposePgpInlineDecider" ]
      },
      "predecessor" : "d40a046bf6c08ebd476c4c0d678782d1d7284ff4~1"
    },
    "4e17fdf1a6e192d4302d0717f103f0e4e8b3dd9e" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "initFromReplyToMessage_shouldCallComposePgpInlineDecider" ]
      },
      "predecessor" : "d40a046bf6c08ebd476c4c0d678782d1d7284ff4"
    },
    "b72a3ce8a0227bb5f4dc39913ddee43a66d8aba0" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "initFromReplyToMessage_shouldCallComposePgpInlineDecider" ]
      },
      "predecessor" : "48581bd53c34ac307690a89e9e384b5357df0d5f"
    },
    "d220b29a2b5aabd857c2b4d852ed63516afeb58c" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.internet.MessageExtractorTest" : [ "getTextFromPart_withExceptionThrownGettingInputStream_shouldReturnNull", "getTextFromPart_withHtmlWithCharsetInContentTypeRawDataBody_shouldReturnHtmlText", "getTextFromPart_withHtmlWithCharsetInHtmlRawDataBody_shouldReturnHtmlText", "getTextFromPart_withNoBody_shouldReturnNull", "getTextFromPart_withPlainTextWithCharsetInContentTypeRawDataBody_shouldReturnText", "getTextFromPart_withRawDataBodyWithNonText_shouldReturnNull", "getTextFromPart_withTextBody_shouldReturnText" ],
        "k9mail-library§com.fsck.k9.mail.internet.MimeMessageParseTest" : [ "testMultipartSingleLayerNoRecurse", "testMultipartSingleLayerRecurse", "testMultipartTwoLayersRecurse", "testSinglePart7BitNoRecurse", "testSinglePart8BitRecurse", "testSinglePartBase64NoRecurse" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.message.extractors.EncryptionDetectorTest" : [ "isEncrypted_withInlinePgp_shouldReturnTrue", "isEncrypted_withPlainTextAndPreambleWithInlinePgp_shouldReturnFalse", "isEncrypted_withQuotedInlinePgp_shouldReturnFalse" ],
        "k9mail§com.fsck.k9.message.extractors.PreviewTextExtractorTest" : [ "extractPreview_shouldCollapseAndTrimWhitespace", "extractPreview_shouldReplaceUrl", "extractPreview_shouldStripGenericQuoteHeader", "extractPreview_shouldStripHorizontalLine", "extractPreview_shouldStripHorizontalRules", "extractPreview_shouldStripQuoteHeaderAndQuotedText", "extractPreview_shouldStripSignature", "extractPreview_withEmptyBody_shouldThrow", "extractPreview_withLongTextPlain", "extractPreview_withSimpleTextHtml", "extractPreview_withSimpleTextPlain" ]
      },
      "predecessor" : "ef3cda97e29f6ae8193aef0291c8468e422dc81d"
    },
    "3e6625dd245a44e0e1231e1c8f0b2eba8c21b282" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.internet.MessageExtractorTest" : [ "getTextFromPart_withExceptionThrownGettingInputStream_shouldReturnNull", "getTextFromPart_withHtmlWithCharsetInContentTypeRawDataBody_shouldReturnHtmlText", "getTextFromPart_withHtmlWithCharsetInHtmlRawDataBody_shouldReturnHtmlText", "getTextFromPart_withNoBody_shouldReturnNull", "getTextFromPart_withPlainTextWithCharsetInContentTypeRawDataBody_shouldReturnText", "getTextFromPart_withRawDataBodyWithNonText_shouldReturnNull", "getTextFromPart_withTextBody_shouldReturnText" ],
        "k9mail-library§com.fsck.k9.mail.internet.MimeMessageParseTest" : [ "testMultipartSingleLayerNoRecurse", "testMultipartSingleLayerRecurse", "testMultipartTwoLayersRecurse", "testSinglePart7BitNoRecurse", "testSinglePart8BitRecurse", "testSinglePartBase64NoRecurse", "testSinglePartUnknownEncoding_throwsUnsupportedEncodingException" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.message.extractors.EncryptionDetectorTest" : [ "isEncrypted_withInlinePgp_shouldReturnTrue", "isEncrypted_withPlainTextAndPreambleWithInlinePgp_shouldReturnFalse", "isEncrypted_withQuotedInlinePgp_shouldReturnFalse" ],
        "k9mail§com.fsck.k9.message.extractors.PreviewTextExtractorTest" : [ "extractPreview_shouldCollapseAndTrimWhitespace", "extractPreview_shouldReplaceUrl", "extractPreview_shouldStripGenericQuoteHeader", "extractPreview_shouldStripHorizontalLine", "extractPreview_shouldStripHorizontalRules", "extractPreview_shouldStripQuoteHeaderAndQuotedText", "extractPreview_shouldStripSignature", "extractPreview_withEmptyBody_shouldThrow", "extractPreview_withLongTextPlain", "extractPreview_withSimpleTextHtml", "extractPreview_withSimpleTextPlain" ]
      },
      "predecessor" : "3e6625dd245a44e0e1231e1c8f0b2eba8c21b282~1"
    },
    "1497b5f7810343a3fc833b6045dcc5e7559ed80c" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.internet.MessageExtractorTest" : [ "getTextFromPart_withExceptionThrownGettingInputStream_shouldReturnNull", "getTextFromPart_withHtmlWithCharsetInContentTypeRawDataBody_shouldReturnHtmlText", "getTextFromPart_withHtmlWithCharsetInHtmlRawDataBody_shouldReturnHtmlText", "getTextFromPart_withPlainTextWithCharsetInContentTypeRawDataBody_shouldReturnText", "getTextFromPart_withTextBody_shouldReturnText" ],
        "k9mail-library§com.fsck.k9.mail.internet.MimeMessageParseTest" : [ "testMultipartSingleLayerNoRecurse", "testMultipartSingleLayerRecurse", "testMultipartTwoLayersRecurse", "testSinglePart7BitNoRecurse", "testSinglePart8BitRecurse", "testSinglePartBase64NoRecurse" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "6f82dea31541cae957cc5bc72539811c1839275a"
    },
    "422806f622af9e7ce221f13287ffc88774b3e0a2" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.message.extractors.EncryptionDetectorTest" : [ "isEncrypted_withInlinePgp_shouldReturnTrue", "isEncrypted_withPlainTextAndPreambleWithInlinePgp_shouldReturnFalse", "isEncrypted_withQuotedInlinePgp_shouldReturnFalse", "isEncrypted_withTextPlain_shouldReturnFalse" ]
      },
      "predecessor" : "422806f622af9e7ce221f13287ffc88774b3e0a2~1"
    },
    "4855d48ba331fc0b0f3d4b8daaada146fd1f7adf" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.internet.MessageExtractorTest" : [ "getTextFromPart_withExceptionThrownGettingInputStream_shouldReturnNull", "getTextFromPart_withHtmlWithCharsetInContentTypeRawDataBody_shouldReturnHtmlText", "getTextFromPart_withHtmlWithCharsetInHtmlRawDataBody_shouldReturnHtmlText", "getTextFromPart_withPlainTextWithCharsetInContentTypeRawDataBody_shouldReturnText", "getTextFromPart_withTextBody_shouldReturnText" ],
        "k9mail-library§com.fsck.k9.mail.internet.MimeMessageParseTest" : [ "testMultipartSingleLayerNoRecurse", "testMultipartSingleLayerRecurse", "testMultipartTwoLayersRecurse", "testSinglePart7BitNoRecurse", "testSinglePart8BitRecurse", "testSinglePartBase64NoRecurse" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "4855d48ba331fc0b0f3d4b8daaada146fd1f7adf~1"
    },
    "0beff4cdb8f51e1a53911a95b70d3a12823713aa" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.MessageTest" : [ "testMessage", "testSetSendDateFormatsHeaderCorrectlyWithCurrentTimeZone", "testSetSendDateFormatsHeaderCorrectlyWithoutTimeZone", "testSetSendDateSetsSentDate", "testToBodyPart" ],
        "k9mail-library§com.fsck.k9.mail.internet.MessageExtractorTest" : [ "getTextFromPart_withExceptionThrownGettingInputStream_shouldReturnNull", "getTextFromPart_withHtmlWithCharsetInContentTypeRawDataBody_shouldReturnHtmlText", "getTextFromPart_withHtmlWithCharsetInHtmlRawDataBody_shouldReturnHtmlText", "getTextFromPart_withPlainTextWithCharsetInContentTypeRawDataBody_shouldReturnText", "getTextFromPart_withRawDataBodyWithNonText_shouldReturnNull", "getTextFromPart_withTextBody_shouldReturnText" ],
        "k9mail§com.fsck.k9.crypto.MessageDecryptVerifierTest" : [ "findEncryptedPartsShouldReturnMultipleEncryptedParts", "findEncrypted__withMultipartMixedSubEncryptedAndEncrypted__shouldReturnBoth", "findEncrypted__withMultipartMixedSubEncryptedAndText__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubSignedAndText__shouldReturnSigned", "findEncrypted__withMultipartMixedSubSigned__shouldReturnSigned", "findEncrypted__withMultipartMixedSubTextAndEncrypted__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubTextAndSigned__shouldReturnSigned" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartPlainTextMessage", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml" ],
        "k9mail§com.fsck.k9.message.extractors.AttachmentInfoExtractorTest" : [ "extractInfoForDb__withContentTypeAndEncodedWordName__shouldReturnDecodedName", "extractInfoForDb__withContentTypeAndName__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionAttach__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionInlineAndContentId__shouldReturnInlineAttachment", "extractInfoForDb__withDispositionInvalidSizeParam__shouldReturnUnknownSize", "extractInfoForDb__withDispositionSizeParam__shouldReturnThatSize", "extractInfoForDb__withNoBody__shouldReturnContentAvailable", "extractInfoForDb__withNoBody__shouldReturnContentNotAvailable", "extractInfoForDb__withNoHeaders__shouldReturnEmptyValues", "extractInfoForDb__withTextMimeType__shouldReturnTxtExtension", "extractInfo__fromLocalBodyPart__shouldReturnProvidedValues", "extractInfo__withDeferredFileBody" ],
        "k9mail§com.fsck.k9.message.extractors.EncryptionDetectorTest" : [ "isEncrypted_withMultipartMixedContainingSMimePart_shouldReturnTrue" ],
        "k9mail§com.fsck.k9.message.extractors.MessagePreviewCreatorTest" : [ "createPreview_withPreviewTextExtractorThrowing", "createPreview_withTextPart" ],
        "k9mail§com.fsck.k9.message.extractors.PreviewTextExtractorTest" : [ "extractPreview_shouldCollapseAndTrimWhitespace", "extractPreview_shouldReplaceUrl", "extractPreview_shouldStripGenericQuoteHeader", "extractPreview_shouldStripHorizontalLine", "extractPreview_shouldStripHorizontalRules", "extractPreview_shouldStripQuoteHeaderAndQuotedText", "extractPreview_shouldStripSignature", "extractPreview_withLongTextPlain", "extractPreview_withSimpleTextHtml", "extractPreview_withSimpleTextPlain" ],
        "k9mail§com.fsck.k9.message.extractors.TextPartFinderTest" : [ "findFirstTextPart_withMultipartAlternative", "findFirstTextPart_withMultipartAlternativeContainingEmptyTextPlainPart", "findFirstTextPart_withMultipartAlternativeContainingMultipartRelatedContainingTextHtmlFirst", "findFirstTextPart_withMultipartAlternativeContainingMultipartRelatedContainingTextPlain", "findFirstTextPart_withMultipartAlternativeContainingOnlyTextHtmlPart", "findFirstTextPart_withMultipartAlternativeHtmlPartFirst", "findFirstTextPart_withMultipartAlternativeNotContainingTextPart", "findFirstTextPart_withMultipartMixedContainingEmptyTextHtmlPart", "findFirstTextPart_withMultipartMixedContainingMultipartAlternative", "findFirstTextPart_withMultipartMixedContainingMultipartAlternativeWithTextPlainPartLast", "findFirstTextPart_withMultipartMixedContainingTextHtmlFirst", "findFirstTextPart_withMultipartMixedContainingTextPlain", "findFirstTextPart_withMultipartMixedNotContainingTextPart", "findFirstTextPart_withTextHtmlPart", "findFirstTextPart_withTextPlainPart", "findFirstTextPart_withoutTextPart" ]
      },
      "predecessor" : "4855d48ba331fc0b0f3d4b8daaada146fd1f7adf"
    },
    "87e13ef80018a7abbcaf57978ca39380b730ead7" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.internet.MessageExtractorTest" : [ "getTextFromPart_withExceptionThrownGettingInputStream_shouldReturnNull", "getTextFromPart_withHtmlWithCharsetInContentTypeRawDataBody_shouldReturnHtmlText", "getTextFromPart_withHtmlWithCharsetInHtmlRawDataBody_shouldReturnHtmlText", "getTextFromPart_withPlainTextWithCharsetInContentTypeRawDataBody_shouldReturnText", "getTextFromPart_withTextBody_shouldReturnText" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpMimeSignedMessage", "migrateTextHtml" ]
      },
      "predecessor" : "7bd85189ce65683fe3b99b2e79a07f91394e61c7"
    },
    "68e3c2a431f54832d1f34f7c72a58fac8ae3296c" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.internet.MessageExtractorTest" : [ "getTextFromPart_withExceptionThrownGettingInputStream_shouldReturnNull", "getTextFromPart_withHtmlWithCharsetInContentTypeRawDataBody_shouldReturnHtmlText", "getTextFromPart_withHtmlWithCharsetInHtmlRawDataBody_shouldReturnHtmlText", "getTextFromPart_withNoBody_shouldReturnNull", "getTextFromPart_withPlainTextWithCharsetInContentTypeRawDataBody_shouldReturnText", "getTextFromPart_withRawDataBodyWithNonText_shouldReturnNull", "getTextFromPart_withTextBody_shouldReturnText", "getTextFromPart_withUnknownEncoding_shouldReturnNull" ],
        "k9mail§com.fsck.k9.crypto.MessageDecryptVerifierTest" : [ "isPartPgpInlineEncryptedOrSigned__withSignedData__shouldReturnTrue", "isPartPgpInlineEncrypted__withSignedData__shouldReturnFalse", "isPgpInlineMethods__withEncryptedDataAndLeadingGarbage__shouldReturnFalse", "isPgpInlineMethods__withEncryptedDataAndLeadingWhitespace__shouldReturnTrue", "isPgpInlineMethods__withPgpInlineData__shouldReturnTrue" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.message.extractors.EncryptionDetectorTest" : [ "isEncrypted_withInlinePgp_shouldReturnTrue", "isEncrypted_withPlainTextAndPreambleWithInlinePgp_shouldReturnFalse", "isEncrypted_withQuotedInlinePgp_shouldReturnFalse" ],
        "k9mail§com.fsck.k9.message.extractors.PreviewTextExtractorTest" : [ "extractPreview_shouldCollapseAndTrimWhitespace", "extractPreview_shouldReplaceUrl", "extractPreview_shouldStripGenericQuoteHeader", "extractPreview_shouldStripHorizontalLine", "extractPreview_shouldStripHorizontalRules", "extractPreview_shouldStripQuoteHeaderAndQuotedText", "extractPreview_shouldStripSignature", "extractPreview_withEmptyBody_shouldThrow", "extractPreview_withLongTextPlain", "extractPreview_withSimpleTextHtml", "extractPreview_withSimpleTextPlain" ]
      },
      "predecessor" : "87e13ef80018a7abbcaf57978ca39380b730ead7"
    },
    "92356e3cee93c4e3a0d249a3a703fe6c3ae39cf6" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.internet.MessageExtractorTest" : [ "getTextFromPart_withExceptionThrownGettingInputStream_shouldReturnNull", "getTextFromPart_withHtmlWithCharsetInContentTypeRawDataBody_shouldReturnHtmlText", "getTextFromPart_withHtmlWithCharsetInHtmlRawDataBody_shouldReturnHtmlText", "getTextFromPart_withNoBody_shouldReturnNull", "getTextFromPart_withPlainTextWithCharsetInContentTypeRawDataBody_shouldReturnText", "getTextFromPart_withRawDataBodyWithNonText_shouldReturnNull", "getTextFromPart_withTextBody_shouldReturnText", "getTextFromPart_withUnknownEncoding_shouldReturnNull" ],
        "k9mail§com.fsck.k9.crypto.MessageDecryptVerifierTest" : [ "isPartPgpInlineEncryptedOrSigned__withSignedData__shouldReturnTrue", "isPartPgpInlineEncrypted__withSignedData__shouldReturnFalse", "isPgpInlineMethods__withEncryptedDataAndLeadingGarbage__shouldReturnFalse", "isPgpInlineMethods__withEncryptedDataAndLeadingWhitespace__shouldReturnTrue", "isPgpInlineMethods__withPgpInlineData__shouldReturnTrue" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.message.extractors.EncryptionDetectorTest" : [ "isEncrypted_withInlinePgp_shouldReturnTrue", "isEncrypted_withPlainTextAndPreambleWithInlinePgp_shouldReturnFalse", "isEncrypted_withQuotedInlinePgp_shouldReturnFalse" ],
        "k9mail§com.fsck.k9.message.extractors.PreviewTextExtractorTest" : [ "extractPreview_shouldCollapseAndTrimWhitespace", "extractPreview_shouldReplaceUrl", "extractPreview_shouldStripGenericQuoteHeader", "extractPreview_shouldStripHorizontalLine", "extractPreview_shouldStripHorizontalRules", "extractPreview_shouldStripQuoteHeaderAndQuotedText", "extractPreview_shouldStripSignature", "extractPreview_withEmptyBody_shouldThrow", "extractPreview_withLongTextPlain", "extractPreview_withSimpleTextHtml", "extractPreview_withSimpleTextPlain" ]
      },
      "predecessor" : "68e3c2a431f54832d1f34f7c72a58fac8ae3296c"
    },
    "9ee4c5b2d0b19e90455566eef1aa173ac529ae99" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.internet.MessageExtractorTest" : [ "getTextFromPart_withExceptionThrownGettingInputStream_shouldReturnNull", "getTextFromPart_withHtmlWithCharsetInContentTypeRawDataBody_shouldReturnHtmlText", "getTextFromPart_withHtmlWithCharsetInHtmlRawDataBody_shouldReturnHtmlText", "getTextFromPart_withNoBody_shouldReturnNull", "getTextFromPart_withPlainTextWithCharsetInContentTypeRawDataBody_shouldReturnText", "getTextFromPart_withRawDataBodyWithNonText_shouldReturnNull", "getTextFromPart_withTextBody_shouldReturnText", "getTextFromPart_withUnknownEncoding_shouldReturnNull" ],
        "k9mail§com.fsck.k9.crypto.MessageDecryptVerifierTest" : [ "isPartPgpInlineEncryptedOrSigned__withSignedData__shouldReturnTrue", "isPartPgpInlineEncrypted__withSignedData__shouldReturnFalse", "isPgpInlineMethods__withEncryptedDataAndLeadingGarbage__shouldReturnFalse", "isPgpInlineMethods__withEncryptedDataAndLeadingWhitespace__shouldReturnTrue", "isPgpInlineMethods__withPgpInlineData__shouldReturnTrue" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.message.extractors.EncryptionDetectorTest" : [ "isEncrypted_withInlinePgp_shouldReturnTrue", "isEncrypted_withPlainTextAndPreambleWithInlinePgp_shouldReturnFalse", "isEncrypted_withQuotedInlinePgp_shouldReturnFalse" ],
        "k9mail§com.fsck.k9.message.extractors.PreviewTextExtractorTest" : [ "extractPreview_shouldCollapseAndTrimWhitespace", "extractPreview_shouldReplaceUrl", "extractPreview_shouldStripGenericQuoteHeader", "extractPreview_shouldStripHorizontalLine", "extractPreview_shouldStripHorizontalRules", "extractPreview_shouldStripQuoteHeaderAndQuotedText", "extractPreview_shouldStripSignature", "extractPreview_withEmptyBody_shouldThrow", "extractPreview_withLongTextPlain", "extractPreview_withSimpleTextHtml", "extractPreview_withSimpleTextPlain" ]
      },
      "predecessor" : "92356e3cee93c4e3a0d249a3a703fe6c3ae39cf6"
    },
    "0ecbf441c19434a1280dc05aa335f7ee4b6a4d47" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavFolderTest" : [ "appendWebDavMessages_replaces_messages_with_WebDAV_versions" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "9ee4c5b2d0b19e90455566eef1aa173ac529ae99"
    },
    "8def88afcbc9ee1d227f0b2773a301884a35b1d3" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.BoundaryGeneratorTest" : [ "generateBoundary", "generateBoundary_allZeros" ],
        "k9mail§com.fsck.k9.crypto.MessageDecryptVerifierTest" : [ "findEncryptedPartsShouldReturnEmptyEncryptedPart", "findEncryptedPartsShouldReturnMultipleEncryptedParts", "findEncrypted__withMultipartEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubEncryptedAndEncrypted__shouldReturnBoth", "findEncrypted__withMultipartMixedSubEncryptedAndText__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubSignedAndText__shouldReturnSigned", "findEncrypted__withMultipartMixedSubSigned__shouldReturnSigned", "findEncrypted__withMultipartMixedSubTextAndEncrypted__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubTextAndSigned__shouldReturnSigned", "findSigned__withComplexMultipartSigned__shouldReturnRoot", "findSigned__withSimpleMultipartSigned__shouldReturnRoot" ],
        "k9mail§com.fsck.k9.mailstore.AttachmentResolverTest" : [ "buildCidMap__onMultipartWithEmptyBodyPart__shouldReturnEmptyMap", "buildCidMap__onMultipartWithNoParts__shouldReturnEmptyMap", "buildCidMap__onTwoPart__shouldReturnBothUris" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartPlainTextMessage", "testTextPlusRfc822Message" ]
      },
      "predecessor" : "0ecbf441c19434a1280dc05aa335f7ee4b6a4d47"
    },
    "74017c926e8c18de83404b370a3bf3719f27965f" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_authXoauthWithSaslIr", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOn400Response", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnInvalidJsonResponse", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnMissingStatusJsonResponse", "open_authXoauthWithSaslIrParsesCapabilities", "open_authXoauthWithSaslIrThrowsExeptionOn401Response", "open_authXoauthWithSaslIrWithOldTokenThrowsExceptionIfRetryFails", "open_withCapabilitiesInInitialResponse_shouldNotIssueCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "sendContinuation" ],
        "k9mail-library§com.fsck.k9.mail.transport.SmtpTransportTest" : [ "open_withXoauth2Extension", "open_withXoauth2Extension_shouldInvalidateAndRetryOn400Response", "open_withXoauth2Extension_shouldInvalidateAndRetryOnInvalidJsonResponse", "open_withXoauth2Extension_shouldInvalidateAndRetryOnMissingStatusJsonResponse", "open_withXoauth2Extension_shouldThrowOn401Response", "open_withXoauth2Extension_shouldThrowOnFailure_fetchingToken", "open_withXoauth2Extension_shouldThrowOnMultipleFailure" ],
        "k9mail-library§com.fsck.k9.mail.transport.SmtpTransportUriTest" : [ "createUri_canEncodeSmtpSslUri", "createUri_canEncodeSmtpTlsUri", "createUri_canEncodeSmtpUri", "decodeUri_canDecodeAuthType", "decodeUri_canDecodeAuthType_withEmptyPassword", "decodeUri_canDecodeClientCert", "decodeUri_canDecodeHost", "decodeUri_canDecodePassword", "decodeUri_canDecodePort", "decodeUri_canDecodeSSL", "decodeUri_canDecodeTLS", "decodeUri_canDecodeUsername", "decodeUri_canDecodeUsername_withNoAuthType", "decodeUri_canDecodeUsername_withNoPasswordOrAuthType", "decodeUri_forUnknownSchema_throwsIllegalArgumentException" ]
      },
      "predecessor" : "74017c926e8c18de83404b370a3bf3719f27965f~1"
    },
    "dc3d1f0e87bd60178fc29ef0886581cd64f9c06d" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.MessageTest" : [ "testMessage", "testSetSendDateFormatsHeaderCorrectlyWithCurrentTimeZone", "testSetSendDateFormatsHeaderCorrectlyWithoutTimeZone", "testSetSendDateSetsSentDate", "testToBodyPart" ],
        "k9mail-library§com.fsck.k9.mail.internet.MessageExtractorTest" : [ "getTextFromPart_withExceptionThrownGettingInputStream_shouldReturnNull", "getTextFromPart_withHtmlWithCharsetInContentTypeRawDataBody_shouldReturnHtmlText", "getTextFromPart_withHtmlWithCharsetInHtmlRawDataBody_shouldReturnHtmlText", "getTextFromPart_withNoBody_shouldReturnNull", "getTextFromPart_withPlainTextWithCharsetInContentTypeRawDataBody_shouldReturnText", "getTextFromPart_withRawDataBodyWithNonText_shouldReturnNull", "getTextFromPart_withTextBody_shouldReturnText", "getTextFromPart_withUnknownEncoding_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.internet.MimeMessageParseTest" : [ "testMultipartSingleLayerNoRecurse", "testMultipartSingleLayerRecurse", "testMultipartTwoLayersRecurse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "fetchPart_withTextSection_shouldProcessImapResponses" ],
        "k9mail§com.fsck.k9.crypto.MessageDecryptVerifierTest" : [ "findEncryptedPartsShouldReturnEmptyEncryptedPart", "findEncryptedPartsShouldReturnMultipleEncryptedParts", "findEncrypted__withMultipartEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubEncryptedAndEncrypted__shouldReturnBoth", "findEncrypted__withMultipartMixedSubEncryptedAndText__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubSignedAndText__shouldReturnSigned", "findEncrypted__withMultipartMixedSubSigned__shouldReturnSigned", "findEncrypted__withMultipartMixedSubTextAndEncrypted__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubTextAndSigned__shouldReturnSigned", "findSigned__withComplexMultipartSigned__shouldReturnRoot", "findSigned__withSimpleMultipartSigned__shouldReturnRoot" ],
        "k9mail§com.fsck.k9.mailstore.AttachmentResolverTest" : [ "buildCidMap__onMultipartWithEmptyBodyPart__shouldReturnEmptyMap", "buildCidMap__onMultipartWithNoParts__shouldReturnEmptyMap", "buildCidMap__onPartWithNoBody__shouldReturnEmptyMap", "buildCidMap__onTwoPart__shouldReturnBothUris" ],
        "k9mail§com.fsck.k9.mailstore.LocalStoreTest" : [ "findPartById__withNestedLocalBodyPart", "findPartById__withNestedLocalMessagePart", "findPartById__withRootLocalBodyPart", "findPartById__withTwoTimesNestedLocalMessagePart" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml" ],
        "k9mail§com.fsck.k9.message.MessageBuilderTest" : [ "build_detachAndReattach_shouldSucceed" ],
        "k9mail§com.fsck.k9.message.extractors.AttachmentInfoExtractorTest" : [ "extractInfoForDb__withContentTypeAndEncodedWordName__shouldReturnDecodedName", "extractInfoForDb__withContentTypeAndName__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionAttach__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionInlineAndContentId__shouldReturnInlineAttachment", "extractInfoForDb__withDispositionInvalidSizeParam__shouldReturnUnknownSize", "extractInfoForDb__withDispositionSizeParam__shouldReturnThatSize", "extractInfoForDb__withNoBody__shouldReturnContentAvailable", "extractInfoForDb__withNoBody__shouldReturnContentNotAvailable", "extractInfoForDb__withNoHeaders__shouldReturnEmptyValues", "extractInfoForDb__withTextMimeType__shouldReturnTxtExtension", "extractInfo__fromLocalBodyPart__shouldReturnProvidedValues", "extractInfo__withDeferredFileBody" ],
        "k9mail§com.fsck.k9.message.extractors.EncryptionDetectorTest" : [ "isEncrypted_withMultipartEncrypted_shouldReturnTrue", "isEncrypted_withMultipartMixedContainingSMimePart_shouldReturnTrue" ],
        "k9mail§com.fsck.k9.message.extractors.MessagePreviewCreatorTest" : [ "createPreview_withEmptyTextPart", "createPreview_withPreviewTextExtractorThrowing", "createPreview_withTextPart" ],
        "k9mail§com.fsck.k9.message.extractors.PreviewTextExtractorTest" : [ "extractPreview_shouldCollapseAndTrimWhitespace", "extractPreview_shouldReplaceUrl", "extractPreview_shouldStripGenericQuoteHeader", "extractPreview_shouldStripHorizontalLine", "extractPreview_shouldStripHorizontalRules", "extractPreview_shouldStripQuoteHeaderAndQuotedText", "extractPreview_shouldStripSignature", "extractPreview_withEmptyBody_shouldThrow", "extractPreview_withLongTextPlain", "extractPreview_withSimpleTextHtml", "extractPreview_withSimpleTextPlain" ],
        "k9mail§com.fsck.k9.message.extractors.TextPartFinderTest" : [ "findFirstTextPart_withMultipartAlternative", "findFirstTextPart_withMultipartAlternativeContainingEmptyTextPlainPart", "findFirstTextPart_withMultipartAlternativeContainingMultipartRelatedContainingTextHtmlFirst", "findFirstTextPart_withMultipartAlternativeContainingMultipartRelatedContainingTextPlain", "findFirstTextPart_withMultipartAlternativeContainingOnlyTextHtmlPart", "findFirstTextPart_withMultipartAlternativeHtmlPartFirst", "findFirstTextPart_withMultipartAlternativeNotContainingTextPart", "findFirstTextPart_withMultipartMixedContainingEmptyTextHtmlPart", "findFirstTextPart_withMultipartMixedContainingMultipartAlternative", "findFirstTextPart_withMultipartMixedContainingMultipartAlternativeWithTextPlainPartLast", "findFirstTextPart_withMultipartMixedContainingTextHtmlFirst", "findFirstTextPart_withMultipartMixedContainingTextPlain", "findFirstTextPart_withMultipartMixedNotContainingTextPart", "findFirstTextPart_withTextHtmlPart", "findFirstTextPart_withTextPlainPart", "findFirstTextPart_withoutTextPart" ]
      },
      "predecessor" : "db1b97d23f7086b12f8d54c381e2cf6bf19c25cd"
    },
    "a055ed42a8c94b7a31c9d99ab28ab3d202d20cc6" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.MessageTest" : [ "testMessage", "testSetSendDateFormatsHeaderCorrectlyWithCurrentTimeZone", "testSetSendDateFormatsHeaderCorrectlyWithoutTimeZone", "testSetSendDateSetsSentDate", "testToBodyPart" ],
        "k9mail-library§com.fsck.k9.mail.internet.MessageExtractorTest" : [ "getTextFromPart_withExceptionThrownGettingInputStream_shouldReturnNull", "getTextFromPart_withHtmlWithCharsetInContentTypeRawDataBody_shouldReturnHtmlText", "getTextFromPart_withHtmlWithCharsetInHtmlRawDataBody_shouldReturnHtmlText", "getTextFromPart_withNoBody_shouldReturnNull", "getTextFromPart_withPlainTextWithCharsetInContentTypeRawDataBody_shouldReturnText", "getTextFromPart_withRawDataBodyWithNonText_shouldReturnNull", "getTextFromPart_withTextBody_shouldReturnText", "getTextFromPart_withUnknownEncoding_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.internet.MimeMessageParseTest" : [ "testMultipartSingleLayerNoRecurse", "testMultipartSingleLayerRecurse", "testMultipartTwoLayersRecurse" ],
        "k9mail-library§com.fsck.k9.mail.internet.MimeUtilityTest" : [ "isFormatFlowed_withTextHtmlFormatFlowed__shouldReturnFalse", "isFormatFlowed_withTextPlainFormatFlowed__shouldReturnTrue", "isFormatFlowed_withTextPlain__shouldReturnFalse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "fetchPart_withTextSection_shouldProcessImapResponses" ],
        "k9mail§com.fsck.k9.crypto.MessageDecryptVerifierTest" : [ "findEncryptedPartsShouldReturnEmptyEncryptedPart", "findEncryptedPartsShouldReturnMultipleEncryptedParts", "findEncrypted__withMultipartEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubEncryptedAndEncrypted__shouldReturnBoth", "findEncrypted__withMultipartMixedSubEncryptedAndText__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubSignedAndText__shouldReturnSigned", "findEncrypted__withMultipartMixedSubSigned__shouldReturnSigned", "findEncrypted__withMultipartMixedSubTextAndEncrypted__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubTextAndSigned__shouldReturnSigned", "findSigned__withComplexMultipartSigned__shouldReturnRoot", "findSigned__withSimpleMultipartSigned__shouldReturnRoot" ],
        "k9mail§com.fsck.k9.mailstore.AttachmentResolverTest" : [ "buildCidMap__onMultipartWithEmptyBodyPart__shouldReturnEmptyMap", "buildCidMap__onMultipartWithNoParts__shouldReturnEmptyMap", "buildCidMap__onPartWithNoBody__shouldReturnEmptyMap", "buildCidMap__onTwoPart__shouldReturnBothUris" ],
        "k9mail§com.fsck.k9.mailstore.LocalStoreTest" : [ "findPartById__withNestedLocalBodyPart", "findPartById__withNestedLocalMessagePart", "findPartById__withRootLocalBodyPart", "findPartById__withTwoTimesNestedLocalMessagePart" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml" ],
        "k9mail§com.fsck.k9.message.MessageBuilderTest" : [ "build_detachAndReattach_shouldSucceed" ],
        "k9mail§com.fsck.k9.message.extractors.AttachmentInfoExtractorTest" : [ "extractInfoForDb__withContentTypeAndEncodedWordName__shouldReturnDecodedName", "extractInfoForDb__withContentTypeAndName__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionAttach__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionInlineAndContentId__shouldReturnInlineAttachment", "extractInfoForDb__withDispositionInvalidSizeParam__shouldReturnUnknownSize", "extractInfoForDb__withDispositionSizeParam__shouldReturnThatSize", "extractInfoForDb__withNoBody__shouldReturnContentAvailable", "extractInfoForDb__withNoBody__shouldReturnContentNotAvailable", "extractInfoForDb__withNoHeaders__shouldReturnEmptyValues", "extractInfoForDb__withTextMimeType__shouldReturnTxtExtension", "extractInfo__fromLocalBodyPart__shouldReturnProvidedValues", "extractInfo__withDeferredFileBody" ],
        "k9mail§com.fsck.k9.message.extractors.EncryptionDetectorTest" : [ "isEncrypted_withMultipartEncrypted_shouldReturnTrue", "isEncrypted_withMultipartMixedContainingSMimePart_shouldReturnTrue" ],
        "k9mail§com.fsck.k9.message.extractors.MessagePreviewCreatorTest" : [ "createPreview_withEmptyTextPart", "createPreview_withPreviewTextExtractorThrowing", "createPreview_withTextPart" ],
        "k9mail§com.fsck.k9.message.extractors.PreviewTextExtractorTest" : [ "extractPreview_shouldCollapseAndTrimWhitespace", "extractPreview_shouldReplaceUrl", "extractPreview_shouldStripGenericQuoteHeader", "extractPreview_shouldStripHorizontalLine", "extractPreview_shouldStripHorizontalRules", "extractPreview_shouldStripQuoteHeaderAndQuotedText", "extractPreview_shouldStripSignature", "extractPreview_withEmptyBody_shouldThrow", "extractPreview_withLongTextPlain", "extractPreview_withSimpleTextHtml", "extractPreview_withSimpleTextPlain" ],
        "k9mail§com.fsck.k9.message.extractors.TextPartFinderTest" : [ "findFirstTextPart_withMultipartAlternative", "findFirstTextPart_withMultipartAlternativeContainingEmptyTextPlainPart", "findFirstTextPart_withMultipartAlternativeContainingMultipartRelatedContainingTextHtmlFirst", "findFirstTextPart_withMultipartAlternativeContainingMultipartRelatedContainingTextPlain", "findFirstTextPart_withMultipartAlternativeContainingOnlyTextHtmlPart", "findFirstTextPart_withMultipartAlternativeHtmlPartFirst", "findFirstTextPart_withMultipartAlternativeNotContainingTextPart", "findFirstTextPart_withMultipartMixedContainingEmptyTextHtmlPart", "findFirstTextPart_withMultipartMixedContainingMultipartAlternative", "findFirstTextPart_withMultipartMixedContainingMultipartAlternativeWithTextPlainPartLast", "findFirstTextPart_withMultipartMixedContainingTextHtmlFirst", "findFirstTextPart_withMultipartMixedContainingTextPlain", "findFirstTextPart_withMultipartMixedNotContainingTextPart", "findFirstTextPart_withTextHtmlPart", "findFirstTextPart_withTextPlainPart", "findFirstTextPart_withoutTextPart" ]
      },
      "predecessor" : "a055ed42a8c94b7a31c9d99ab28ab3d202d20cc6~1"
    },
    "36da79d60c0eb5770bb7e24e410f00b80da4e922" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapResponseParserTest" : [ "testParseLiteralWithNonConsumingCallbackReturningNull", "testParseLiteralWithThrowingCallback", "testParseQuotedToEndOfStream", "testParseUntaggedResponseWithoutSpace", "testReadStatusResponseSkippingWrongTag", "testReadStatusResponseUntaggedHandlerGetsUntaggedOnly", "testReadStatusResponseUntaggedHandlerStillCalledOnNegativeReply", "testReadStatusResponseWithErrorResponse", "testReadStringUntilEndOfStream", "testRespTextCodeWithList" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartPlainTextMessage", "testTextPlusRfc822Message" ]
      },
      "predecessor" : "a055ed42a8c94b7a31c9d99ab28ab3d202d20cc6"
    },
    "e7653c4725a2f8c63d5fed561a190f37e79b52df" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "e7653c4725a2f8c63d5fed561a190f37e79b52df~1"
    },
    "40e5f038044f208b345842bf726e009aea86c87e" : {
      "testcases" : {
        "k9mail§com.fsck.k9.helper.ReplyToParserTest" : [ "getRecipientsToReplyAllTo_should_excludeDuplicates", "getRecipientsToReplyAllTo_should_excludeIdentityAddresses", "getRecipientsToReplyAllTo_should_returnFromAndToAndCcRecipients" ]
      },
      "predecessor" : "e7653c4725a2f8c63d5fed561a190f37e79b52df"
    },
    "b0574804813c978d9826380667cf01b8e50429de" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "40e5f038044f208b345842bf726e009aea86c87e"
    },
    "1cfb706c20194c6c6606a053ac30a49e4eb416a0" : {
      "testcases" : {
        "k9mail§com.fsck.k9.helper.ReplyToParserTest" : [ "getRecipientsToReplyAllTo_should_excludeDuplicates", "getRecipientsToReplyAllTo_should_excludeIdentityAddresses", "getRecipientsToReplyAllTo_should_returnFromAndToAndCcRecipients" ]
      },
      "predecessor" : "b0574804813c978d9826380667cf01b8e50429de"
    },
    "f4c1dd2be150930136a64e6093e1c914f252436a" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "f4c1dd2be150930136a64e6093e1c914f252436a~1"
    },
    "ec637b5c4614a1435d5fe7b072519afe1349f18a" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "ec637b5c4614a1435d5fe7b072519afe1349f18a~1"
    },
    "de60e0e8c4105af957db647898511a584ac5e6aa" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "f0ac353a21e06f4838c50ec1a47006bbb3c2586c"
    },
    "9d18ed97fea99a776af40b5e4abdee5a8c4c2520" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapResponseParserTest" : [ "testParseLiteralWithConsumingCallbackReturningNull", "testParseLiteralWithIncompleteConsumingCallbackReturningString", "testParseLiteralWithNonConsumingCallbackReturningNull" ]
      },
      "predecessor" : "de60e0e8c4105af957db647898511a584ac5e6aa"
    },
    "55c87fcaaf11e209afa88013aaca3aa99a3679ff" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.AlertResponseTest" : [ "getAlertText_withProperAlertResponse", "getAlertText_withResponseCodeTextContainingTooManyItems_shouldReturnNull", "getAlertText_withWrongResponseCodeText_shouldReturnNull", "getAlertText_withoutAlertText_shouldReturnNull", "getAlertText_withoutResponseCodeTextList_shouldReturnNull", "getAlertText_withoutResponseCodeText_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.CapabilityResponseTest" : [ "parse_withCapabilityResponseInResponseList", "parse_withListInCapabilityResponse_shouldReturnNull", "parse_withOkResponseWithoutList_shouldReturnNull", "parse_withProperCapabilityResponse", "parse_withProperResponseContainingCapabilityCode", "parse_withSingleCapabilityResponseInResponseList", "parse_withTaggedResponse_shouldReturnNull", "parse_withoutCapabilityResponseInResponseList_shouldReturnNull", "parse_withoutCapabilityResponse_shouldReturnNull", "parse_withoutOkResponse_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.CopyUidResponseTest" : [ "parse_withCopyUidResponse_shouldCreateUidMapping", "parse_withNonNumberCopyUidArguments_shouldReturnNull", "parse_withNonStringCopyUidArgumentOne_shouldReturnNull", "parse_withNonStringCopyUidArgumentThree_shouldReturnNull", "parse_withNonStringCopyUidArgumentTwo_shouldReturnNull", "parse_withResponseTextListTooShort_shouldReturnNull", "parse_withTooShortResponse_shouldReturnNull", "parse_withUnbalancedCopyUidArguments_shouldReturnNull", "parse_withUntaggedResponse_shouldReturnNull", "parse_withoutCopyUidResponse_shouldReturnNull", "parse_withoutOkResponse_shouldReturnNull", "parse_withoutResponseTextList_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_authXoauthWithSaslIr", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOn400Response", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnInvalidJsonResponse", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnMissingStatusJsonResponse", "open_authXoauthWithSaslIrParsesCapabilities", "open_authXoauthWithSaslIrThrowsExeptionOn401Response", "open_authXoauthWithSaslIrWithOldTokenThrowsExceptionIfRetryFails", "open_withCapabilitiesInInitialResponse_shouldNotIssueCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withNegativeResponseToStartTlsCommand_shouldThrow", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "sendContinuation" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getNewPushState_withNewerUid_shouldReturnNewPushState", "getNewPushState_withoutNewerUid_shouldReturnNull", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapResponseParserTest" : [ "readResponseShouldReadWholeListResponseLine", "readResponse_withListAsFirstToken_shouldThrow", "readStatusResponse_withNoResponseAndAlertText_shouldThrowWithAlertText", "readStatusResponse_withNoResponse_shouldThrow", "testCommandContinuation", "testExistsResponse", "testFetchResponse", "testListResponseContainingFolderNameWithBrackets", "testOkResponseWithRespTextCode", "testOkResponseWithRespTextCodeAndText", "testOkResponseWithText", "testParseAtomToEndOfStream", "testParseLiteral", "testParseLiteralToEndOfStream", "testParseLiteralWithCallbackThrowingIOException", "testParseLiteralWithConsumingCallbackReturningNull", "testParseLiteralWithEmptyString", "testParseLiteralWithIncompleteConsumingCallbackReturningString", "testParseLiteralWithNonConsumingCallbackReturningNull", "testParseLiteralWithThrowingCallback", "testParseQuoted", "testParseQuotedToEndOfStream", "testParseUntaggedResponseWithoutSpace", "testReadStatusResponseSkippingWrongTag", "testReadStatusResponseUntaggedHandlerGetsUntaggedOnly", "testReadStatusResponseUntaggedHandlerStillCalledOnNegativeReply", "testReadStatusResponseWithErrorResponse", "testReadStatusResponseWithOKResponse", "testReadStringUntilEndOfStream", "testRespTextCodeWithList", "testSimpleOkResponse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ListResponseTest" : [ "parseList_withMalformedListResponse1_shouldReturnEmptyList", "parseList_withMalformedListResponse2_shouldReturnEmptyList", "parseList_withValidResponseContainingAttributes_shouldReturnListResponse", "parseList_withValidResponse_shouldReturnListResponse", "parseList_withValidResponses_shouldReturnListResponses", "parseList_withoutListResponse_shouldReturnEmptyList", "parseLsub_withValidResponse_shouldReturnListResponse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.NamespaceResponseTest" : [ "parse_withEmptyListForFirstPersonalNamespace_shouldReturnNull", "parse_withEmptyListForPersonalNamespaces_shouldReturnNull", "parse_withIncompleteFirstPersonalNamespace_shouldReturnNull", "parse_withPersonalNamespacesNotPresent_shouldReturnNull", "parse_withProperNamespaceResponse", "parse_withResponseList", "parse_withSingleItemInResponseList", "parse_withTooShortNamespaceResponse_shouldReturnNull", "parse_withoutNamespaceResponse_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.PermanentFlagsResponseTest" : [ "parse_withInvalidElementInPermanentFlagsList_shouldReturnNull", "parse_withPermanentFlagsResponseContainingSpecialKeyword_shouldSetCanCreateKeywords", "parse_withPermanentFlagsResponseNotContainingSpecialKeyword_shouldNotSetCanCreateKeywords", "parse_withPermanentFlagsResponse_shouldExtractFlags", "parse_withTaggedResponse_shouldReturnNull", "parse_withTooShortResponseText_shouldReturnNull", "parse_withoutOkResponse_shouldReturnNull", "parse_withoutPermanentFlagsList_shouldReturnNull", "parse_withoutPermanentFlagsResponse_shouldReturnNull", "parse_withoutResponseText_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.SearchResponseTest" : [ "parse_withSearchResponseContainingInvalidNumber_shouldReturnEmptyList", "parse_withSearchResponse_shouldExtractNumbers", "parse_withTaggedSearchResponse_shouldReturnEmptyList", "parse_withTooShortResponse_shouldReturnEmptyList", "parse_withoutSearchResponse_shouldReturnEmptyList" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.SelectOrExamineResponseTest" : [ "getOpenMode_withoutResponseCode_shouldThrow", "parse_withExamineResponse_shouldReturnOpenModeReadOnly", "parse_withInvalidResponseText_shouldReturnHasOpenModeFalse", "parse_withSelectResponse_shouldReturnOpenModeReadWrite", "parse_withUnknownResponseText_shouldReturnHasOpenModeFalse", "parse_withUntaggedResponse_shouldReturnNull", "parse_withoutOkResponse_shouldReturnNull", "parse_withoutResponseCode_shouldReturnHasOpenModeFalse" ]
      },
      "predecessor" : "55c87fcaaf11e209afa88013aaca3aa99a3679ff~1"
    },
    "d3310b565639d9174a662aa87a0a230e16188c5a" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authExternal", "open_authPlain", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_authXoauthWithSaslIr", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOn400Response", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnInvalidJsonResponse", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnMissingStatusJsonResponse", "open_authXoauthWithSaslIrParsesCapabilities", "open_withCapabilitiesInInitialResponse_shouldNotIssueCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withNegativeResponseToCompressionCommand_shouldContinue", "sendContinuation" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapResponseParserTest" : [ "readResponseShouldReadWholeListResponseLine", "testListResponseContainingFolderNameWithBrackets" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ListResponseTest" : [ "parseList_withMalformedListResponse1_shouldReturnEmptyList", "parseList_withMalformedListResponse2_shouldReturnEmptyList", "parseList_withValidResponseContainingAttributes_shouldReturnListResponse", "parseList_withValidResponse_shouldReturnListResponse", "parseList_withValidResponses_shouldReturnListResponses", "parseList_withoutListResponse_shouldReturnEmptyList", "parseLsub_withValidResponse_shouldReturnListResponse" ]
      },
      "predecessor" : "d3310b565639d9174a662aa87a0a230e16188c5a~1"
    },
    "a56f12f1bef60cee0f94be879ed2b7a0b27e65c6" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.AlertResponseTest" : [ "getAlertText_withProperAlertResponse", "getAlertText_withResponseCodeTextContainingTooManyItems_shouldReturnNull", "getAlertText_withWrongResponseCodeText_shouldReturnNull", "getAlertText_withoutAlertText_shouldReturnNull", "getAlertText_withoutResponseCodeTextList_shouldReturnNull", "getAlertText_withoutResponseCodeText_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.CapabilityResponseTest" : [ "parse_withCapabilityResponseInResponseList", "parse_withListInCapabilityResponse_shouldReturnNull", "parse_withOkResponseWithoutList_shouldReturnNull", "parse_withProperCapabilityResponse", "parse_withProperResponseContainingCapabilityCode", "parse_withSingleCapabilityResponseInResponseList", "parse_withTaggedResponse_shouldReturnNull", "parse_withoutCapabilityResponseInResponseList_shouldReturnNull", "parse_withoutCapabilityResponse_shouldReturnNull", "parse_withoutOkResponse_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.CopyUidResponseTest" : [ "parse_withCopyUidResponse_shouldCreateUidMapping", "parse_withNonNumberCopyUidArguments_shouldReturnNull", "parse_withNonStringCopyUidArgumentOne_shouldReturnNull", "parse_withNonStringCopyUidArgumentThree_shouldReturnNull", "parse_withNonStringCopyUidArgumentTwo_shouldReturnNull", "parse_withResponseTextListTooShort_shouldReturnNull", "parse_withTooShortResponse_shouldReturnNull", "parse_withUnbalancedCopyUidArguments_shouldReturnNull", "parse_withUntaggedResponse_shouldReturnNull", "parse_withoutCopyUidResponse_shouldReturnNull", "parse_withoutOkResponse_shouldReturnNull", "parse_withoutResponseTextList_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_authXoauthWithSaslIr", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOn400Response", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnInvalidJsonResponse", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnMissingStatusJsonResponse", "open_authXoauthWithSaslIrParsesCapabilities", "open_authXoauthWithSaslIrThrowsExeptionOn401Response", "open_authXoauthWithSaslIrWithOldTokenThrowsExceptionIfRetryFails", "open_withCapabilitiesInInitialResponse_shouldNotIssueCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withNegativeResponseToStartTlsCommand_shouldThrow", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "sendContinuation" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getNewPushState_withNewerUid_shouldReturnNewPushState", "getNewPushState_withoutNewerUid_shouldReturnNull", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapResponseParserTest" : [ "readResponseShouldReadWholeListResponseLine", "readResponse_withListAsFirstToken_shouldThrow", "readStatusResponse_withNoResponseAndAlertText_shouldThrowWithAlertText", "readStatusResponse_withNoResponse_shouldThrow", "testCommandContinuation", "testExistsResponse", "testFetchResponse", "testListResponseContainingFolderNameWithBrackets", "testOkResponseWithRespTextCode", "testOkResponseWithRespTextCodeAndText", "testOkResponseWithText", "testParseAtomToEndOfStream", "testParseLiteral", "testParseLiteralToEndOfStream", "testParseLiteralWithCallbackThrowingIOException", "testParseLiteralWithConsumingCallbackReturningNull", "testParseLiteralWithEmptyString", "testParseLiteralWithIncompleteConsumingCallbackReturningString", "testParseLiteralWithNonConsumingCallbackReturningNull", "testParseLiteralWithThrowingCallback", "testParseQuoted", "testParseQuotedToEndOfStream", "testParseUntaggedResponseWithoutSpace", "testReadStatusResponseSkippingWrongTag", "testReadStatusResponseUntaggedHandlerGetsUntaggedOnly", "testReadStatusResponseUntaggedHandlerStillCalledOnNegativeReply", "testReadStatusResponseWithErrorResponse", "testReadStatusResponseWithOKResponse", "testReadStringUntilEndOfStream", "testRespTextCodeWithList", "testSimpleOkResponse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ListResponseTest" : [ "parseList_withMalformedListResponse1_shouldReturnEmptyList", "parseList_withMalformedListResponse2_shouldReturnEmptyList", "parseList_withValidResponseContainingAttributes_shouldReturnListResponse", "parseList_withValidResponse_shouldReturnListResponse", "parseList_withValidResponses_shouldReturnListResponses", "parseList_withoutListResponse_shouldReturnEmptyList", "parseLsub_withValidResponse_shouldReturnListResponse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.NamespaceResponseTest" : [ "parse_withEmptyListForFirstPersonalNamespace_shouldReturnNull", "parse_withEmptyListForPersonalNamespaces_shouldReturnNull", "parse_withIncompleteFirstPersonalNamespace_shouldReturnNull", "parse_withPersonalNamespacesNotPresent_shouldReturnNull", "parse_withProperNamespaceResponse", "parse_withResponseList", "parse_withSingleItemInResponseList", "parse_withTooShortNamespaceResponse_shouldReturnNull", "parse_withoutNamespaceResponse_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.PermanentFlagsResponseTest" : [ "parse_withInvalidElementInPermanentFlagsList_shouldReturnNull", "parse_withPermanentFlagsResponseContainingSpecialKeyword_shouldSetCanCreateKeywords", "parse_withPermanentFlagsResponseNotContainingSpecialKeyword_shouldNotSetCanCreateKeywords", "parse_withPermanentFlagsResponse_shouldExtractFlags", "parse_withTaggedResponse_shouldReturnNull", "parse_withTooShortResponseText_shouldReturnNull", "parse_withoutOkResponse_shouldReturnNull", "parse_withoutPermanentFlagsList_shouldReturnNull", "parse_withoutPermanentFlagsResponse_shouldReturnNull", "parse_withoutResponseText_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.SearchResponseTest" : [ "parse_withSearchResponseContainingInvalidNumber_shouldReturnEmptyList", "parse_withSearchResponse_shouldExtractNumbers", "parse_withTaggedSearchResponse_shouldReturnEmptyList", "parse_withTooShortResponse_shouldReturnEmptyList", "parse_withoutSearchResponse_shouldReturnEmptyList" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.SelectOrExamineResponseTest" : [ "getOpenMode_withoutResponseCode_shouldThrow", "parse_withExamineResponse_shouldReturnOpenModeReadOnly", "parse_withInvalidResponseText_shouldReturnHasOpenModeFalse", "parse_withSelectResponse_shouldReturnOpenModeReadWrite", "parse_withUnknownResponseText_shouldReturnHasOpenModeFalse", "parse_withUntaggedResponse_shouldReturnNull", "parse_withoutOkResponse_shouldReturnNull", "parse_withoutResponseCode_shouldReturnHasOpenModeFalse" ]
      },
      "predecessor" : "a56f12f1bef60cee0f94be879ed2b7a0b27e65c6~1"
    },
    "b7adc5e5744a54bedc2b3d35cc44992ea7b60f3b" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authExternal", "open_authPlain", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_authXoauthWithSaslIr", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOn400Response", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnInvalidJsonResponse", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnMissingStatusJsonResponse", "open_authXoauthWithSaslIrParsesCapabilities", "open_withCapabilitiesInInitialResponse_shouldNotIssueCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withNegativeResponseToCompressionCommand_shouldContinue", "sendContinuation" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapResponseParserTest" : [ "readResponseShouldReadWholeListResponseLine", "testListResponseContainingFolderNameWithBrackets" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ListResponseTest" : [ "parseList_withMalformedListResponse1_shouldReturnEmptyList", "parseList_withMalformedListResponse2_shouldReturnEmptyList", "parseList_withValidResponseContainingAttributes_shouldReturnListResponse", "parseList_withValidResponse_shouldReturnListResponse", "parseList_withValidResponses_shouldReturnListResponses", "parseList_withoutListResponse_shouldReturnEmptyList", "parseLsub_withValidResponse_shouldReturnListResponse" ]
      },
      "predecessor" : "5c06bc01daa2d0c14edd6c2ad33b3a3d8384bcc6"
    },
    "4323ca3419a149b7a1693d16a9abae4a77db87b9" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.LocalStoreTest" : [ "findPartById__withRootLocalMessage" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "b7adc5e5744a54bedc2b3d35cc44992ea7b60f3b"
    },
    "a452ded9cb118467c2b08670c0402f838d0c9793" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.LocalStoreTest" : [ "findPartById__withRootLocalMessage" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "0fe74e59cc66c4433ae5f8faa6e01b9e7af59de3"
    },
    "00f82316f0c56a129f4a17212e9436e3b8239633" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapResponseParserTest" : [ "testParseLiteralWithConsumingCallbackReturningNull", "testParseLiteralWithIncompleteConsumingCallbackReturningString", "testParseLiteralWithNonConsumingCallbackReturningNull", "testParseLiteralWithThrowingCallback" ]
      },
      "predecessor" : "a452ded9cb118467c2b08670c0402f838d0c9793"
    },
    "892873f61c926bb119a9bfb4d1bccec639859b64" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.AlertResponseTest" : [ "getAlertText_withProperAlertResponse", "getAlertText_withResponseCodeTextContainingTooManyItems_shouldReturnNull", "getAlertText_withWrongResponseCodeText_shouldReturnNull", "getAlertText_withoutAlertText_shouldReturnNull", "getAlertText_withoutResponseCodeTextList_shouldReturnNull", "getAlertText_withoutResponseCodeText_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.CapabilityResponseTest" : [ "parse_withCapabilityResponseInResponseList", "parse_withListInCapabilityResponse_shouldReturnNull", "parse_withOkResponseWithoutList_shouldReturnNull", "parse_withProperCapabilityResponse", "parse_withProperResponseContainingCapabilityCode", "parse_withSingleCapabilityResponseInResponseList", "parse_withTaggedResponse_shouldReturnNull", "parse_withoutCapabilityResponseInResponseList_shouldReturnNull", "parse_withoutCapabilityResponse_shouldReturnNull", "parse_withoutOkResponse_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.CopyUidResponseTest" : [ "parse_withCopyUidResponse_shouldCreateUidMapping", "parse_withNonNumberCopyUidArguments_shouldReturnNull", "parse_withNonStringCopyUidArgumentOne_shouldReturnNull", "parse_withNonStringCopyUidArgumentThree_shouldReturnNull", "parse_withNonStringCopyUidArgumentTwo_shouldReturnNull", "parse_withResponseTextListTooShort_shouldReturnNull", "parse_withTooShortResponse_shouldReturnNull", "parse_withUnbalancedCopyUidArguments_shouldReturnNull", "parse_withUntaggedResponse_shouldReturnNull", "parse_withoutCopyUidResponse_shouldReturnNull", "parse_withoutOkResponse_shouldReturnNull", "parse_withoutResponseTextList_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_withCapabilitiesInInitialResponse_shouldNotIssueCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withNegativeResponseToStartTlsCommand_shouldThrow", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "sendContinuation" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getNewPushState_withNewerUid_shouldReturnNewPushState", "getNewPushState_withoutNewerUid_shouldReturnNull", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapResponseParserTest" : [ "readResponseShouldReadWholeListResponseLine", "readResponse_withListAsFirstToken_shouldThrow", "readStatusResponse_withNoResponseAndAlertText_shouldThrowWithAlertText", "readStatusResponse_withNoResponse_shouldThrow", "testCommandContinuation", "testExistsResponse", "testFetchResponse", "testListResponseContainingFolderNameWithBrackets", "testOkResponseWithRespTextCode", "testOkResponseWithRespTextCodeAndText", "testOkResponseWithText", "testParseAtomToEndOfStream", "testParseLiteral", "testParseLiteralToEndOfStream", "testParseLiteralWithCallbackThrowingIOException", "testParseLiteralWithConsumingCallbackReturningNull", "testParseLiteralWithEmptyString", "testParseLiteralWithIncompleteConsumingCallbackReturningString", "testParseLiteralWithNonConsumingCallbackReturningNull", "testParseLiteralWithThrowingCallback", "testParseQuoted", "testParseQuotedToEndOfStream", "testParseUntaggedResponseWithoutSpace", "testReadStatusResponseSkippingWrongTag", "testReadStatusResponseWithErrorResponse", "testReadStatusResponseWithOKResponse", "testReadStringUntilEndOfStream", "testRespTextCodeWithList", "testSimpleOkResponse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ListResponseTest" : [ "parseList_withMalformedListResponse1_shouldReturnEmptyList", "parseList_withMalformedListResponse2_shouldReturnEmptyList", "parseList_withValidResponseContainingAttributes_shouldReturnListResponse", "parseList_withValidResponse_shouldReturnListResponse", "parseList_withValidResponses_shouldReturnListResponses", "parseList_withoutListResponse_shouldReturnEmptyList", "parseLsub_withValidResponse_shouldReturnListResponse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.NamespaceResponseTest" : [ "parse_withEmptyListForFirstPersonalNamespace_shouldReturnNull", "parse_withEmptyListForPersonalNamespaces_shouldReturnNull", "parse_withIncompleteFirstPersonalNamespace_shouldReturnNull", "parse_withPersonalNamespacesNotPresent_shouldReturnNull", "parse_withProperNamespaceResponse", "parse_withResponseList", "parse_withSingleItemInResponseList", "parse_withTooShortNamespaceResponse_shouldReturnNull", "parse_withoutNamespaceResponse_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.PermanentFlagsResponseTest" : [ "parse_withInvalidElementInPermanentFlagsList_shouldReturnNull", "parse_withPermanentFlagsResponseContainingSpecialKeyword_shouldSetCanCreateKeywords", "parse_withPermanentFlagsResponseNotContainingSpecialKeyword_shouldNotSetCanCreateKeywords", "parse_withPermanentFlagsResponse_shouldExtractFlags", "parse_withTaggedResponse_shouldReturnNull", "parse_withTooShortResponseText_shouldReturnNull", "parse_withoutOkResponse_shouldReturnNull", "parse_withoutPermanentFlagsList_shouldReturnNull", "parse_withoutPermanentFlagsResponse_shouldReturnNull", "parse_withoutResponseText_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.SearchResponseTest" : [ "parse_withSearchResponseContainingInvalidNumber_shouldReturnEmptyList", "parse_withSearchResponse_shouldExtractNumbers", "parse_withTaggedSearchResponse_shouldReturnEmptyList", "parse_withTooShortResponse_shouldReturnEmptyList", "parse_withoutSearchResponse_shouldReturnEmptyList" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.SelectOrExamineResponseTest" : [ "getOpenMode_withoutResponseCode_shouldThrow", "parse_withExamineResponse_shouldReturnOpenModeReadOnly", "parse_withInvalidResponseText_shouldReturnHasOpenModeFalse", "parse_withSelectResponse_shouldReturnOpenModeReadWrite", "parse_withUnknownResponseText_shouldReturnHasOpenModeFalse", "parse_withUntaggedResponse_shouldReturnNull", "parse_withoutOkResponse_shouldReturnNull", "parse_withoutResponseCode_shouldReturnHasOpenModeFalse" ]
      },
      "predecessor" : "892873f61c926bb119a9bfb4d1bccec639859b64~1"
    },
    "d15332108e93ac24c1fd7d1ba04461de6159b1e4" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authExternal", "open_authPlain", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_withCapabilitiesInInitialResponse_shouldNotIssueCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withNegativeResponseToCompressionCommand_shouldContinue", "sendContinuation" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapResponseParserTest" : [ "readResponseShouldReadWholeListResponseLine", "testListResponseContainingFolderNameWithBrackets" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ListResponseTest" : [ "parseList_withMalformedListResponse1_shouldReturnEmptyList", "parseList_withMalformedListResponse2_shouldReturnEmptyList", "parseList_withValidResponseContainingAttributes_shouldReturnListResponse", "parseList_withValidResponse_shouldReturnListResponse", "parseList_withValidResponses_shouldReturnListResponses", "parseList_withoutListResponse_shouldReturnEmptyList", "parseLsub_withValidResponse_shouldReturnListResponse" ]
      },
      "predecessor" : "892873f61c926bb119a9bfb4d1bccec639859b64"
    },
    "09e47c6654883ffd6968501b37836c13b71b2236" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.LocalStoreTest" : [ "findPartById__withRootLocalMessage" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "09e47c6654883ffd6968501b37836c13b71b2236~1"
    },
    "db791579c1089ab4c9b1050a4e4f627c56003226" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.internet.MimeMessageParseTest" : [ "testMultipartSingleLayerNoRecurse", "testMultipartSingleLayerRecurse", "testMultipartTwoLayersRecurse", "testSinglePart7BitNoRecurse", "testSinglePart8BitRecurse", "testSinglePartBase64NoRecurse", "testSinglePartUnknownEncoding_throwsUnsupportedEncodingException" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.message.extractors.AttachmentInfoExtractorTest" : [ "extractInfoForDb__withContentTypeAndEncodedWordName__shouldReturnDecodedName", "extractInfoForDb__withDispositionInlineAndContentId__shouldReturnInlineAttachment" ]
      },
      "predecessor" : "09e47c6654883ffd6968501b37836c13b71b2236"
    },
    "4e3b91352286045b0da485829c889959edda1f49" : {
      "testcases" : {
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords" ]
      },
      "predecessor" : "4e3b91352286045b0da485829c889959edda1f49~1"
    },
    "6beb9902dade44b5f6dce8e8e8a2638e7be9e6ef" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.internet.MimeMessageParseTest" : [ "testMultipartSingleLayerNoRecurse", "testMultipartSingleLayerRecurse", "testMultipartTwoLayersRecurse", "testSinglePart7BitNoRecurse", "testSinglePart8BitRecurse", "testSinglePartBase64NoRecurse", "testSinglePartUnknownEncoding_throwsUnsupportedEncodingException" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.message.extractors.AttachmentInfoExtractorTest" : [ "extractInfoForDb__withContentTypeAndEncodedWordName__shouldReturnDecodedName", "extractInfoForDb__withDispositionInlineAndContentId__shouldReturnInlineAttachment" ]
      },
      "predecessor" : "4e3b91352286045b0da485829c889959edda1f49"
    },
    "0ecf5bcfc70562e14afab1f41aaada07bc30b287" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "initFromReplyToMessage_shouldCallComposePgpInlineDecider" ]
      },
      "predecessor" : "0ecf5bcfc70562e14afab1f41aaada07bc30b287~1"
    },
    "f3e55347970bbe6929556492494218f7fae9ee3d" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "f3e55347970bbe6929556492494218f7fae9ee3d~1"
    },
    "6064204d7bd6028252ce49ddacecde11e1675b1a" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "initFromReplyToMessage_shouldCallComposePgpInlineDecider" ]
      },
      "predecessor" : "f3e55347970bbe6929556492494218f7fae9ee3d"
    },
    "217c61430d55949316a645d23f24717f7bc098bb" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "6064204d7bd6028252ce49ddacecde11e1675b1a"
    },
    "c5234d88e0dbefbc7b69ac246a14cecbad01a495" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.MessageTest" : [ "testMessage", "testSetSendDateFormatsHeaderCorrectlyWithCurrentTimeZone", "testSetSendDateFormatsHeaderCorrectlyWithoutTimeZone", "testSetSendDateSetsSentDate", "testToBodyPart" ],
        "k9mail-library§com.fsck.k9.mail.internet.MessageExtractorTest" : [ "getTextFromPart_withExceptionThrownGettingInputStream_shouldReturnNull", "getTextFromPart_withHtmlWithCharsetInContentTypeRawDataBody_shouldReturnHtmlText", "getTextFromPart_withHtmlWithCharsetInHtmlRawDataBody_shouldReturnHtmlText", "getTextFromPart_withNoBody_shouldReturnNull", "getTextFromPart_withPlainTextWithCharsetInContentTypeRawDataBody_shouldReturnText", "getTextFromPart_withRawDataBodyWithNonText_shouldReturnNull", "getTextFromPart_withTextBody_shouldReturnText", "getTextFromPart_withUnknownEncoding_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.internet.MimeMessageParseTest" : [ "testMultipartSingleLayerNoRecurse", "testMultipartSingleLayerRecurse", "testMultipartTwoLayersRecurse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "fetchPart_withTextSection_shouldProcessImapResponses" ],
        "k9mail§com.fsck.k9.crypto.MessageDecryptVerifierTest" : [ "findEncryptedPartsShouldReturnEmptyEncryptedPart", "findEncryptedPartsShouldReturnMultipleEncryptedParts", "findEncrypted__withMultipartEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubEncryptedAndEncrypted__shouldReturnBoth", "findEncrypted__withMultipartMixedSubEncryptedAndText__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubSignedAndText__shouldReturnSigned", "findEncrypted__withMultipartMixedSubSigned__shouldReturnSigned", "findEncrypted__withMultipartMixedSubTextAndEncrypted__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubTextAndSigned__shouldReturnSigned", "findSigned__withComplexMultipartSigned__shouldReturnRoot", "findSigned__withSimpleMultipartSigned__shouldReturnRoot" ],
        "k9mail§com.fsck.k9.mailstore.AttachmentResolverTest" : [ "buildCidMap__onMultipartWithEmptyBodyPart__shouldReturnEmptyMap", "buildCidMap__onMultipartWithNoParts__shouldReturnEmptyMap", "buildCidMap__onPartWithNoBody__shouldReturnEmptyMap", "buildCidMap__onTwoPart__shouldReturnBothUris" ],
        "k9mail§com.fsck.k9.mailstore.LocalStoreTest" : [ "findPartById__withNestedLocalBodyPart", "findPartById__withNestedLocalMessagePart", "findPartById__withRootLocalBodyPart", "findPartById__withTwoTimesNestedLocalMessagePart" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml" ],
        "k9mail§com.fsck.k9.message.MessageBuilderTest" : [ "build_detachAndReattach_shouldSucceed" ],
        "k9mail§com.fsck.k9.message.extractors.AttachmentInfoExtractorTest" : [ "extractInfoForDb__withContentTypeAndEncodedWordName__shouldReturnDecodedName", "extractInfoForDb__withContentTypeAndName__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionAttach__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionInlineAndContentId__shouldReturnInlineAttachment", "extractInfoForDb__withDispositionInvalidSizeParam__shouldReturnUnknownSize", "extractInfoForDb__withDispositionSizeParam__shouldReturnThatSize", "extractInfoForDb__withNoBody__shouldReturnContentAvailable", "extractInfoForDb__withNoBody__shouldReturnContentNotAvailable", "extractInfoForDb__withNoHeaders__shouldReturnEmptyValues", "extractInfoForDb__withTextMimeType__shouldReturnTxtExtension", "extractInfo__fromLocalBodyPart__shouldReturnProvidedValues", "extractInfo__withDeferredFileBody" ],
        "k9mail§com.fsck.k9.message.extractors.EncryptionDetectorTest" : [ "isEncrypted_withMultipartEncrypted_shouldReturnTrue", "isEncrypted_withMultipartMixedContainingSMimePart_shouldReturnTrue" ],
        "k9mail§com.fsck.k9.message.extractors.MessagePreviewCreatorTest" : [ "createPreview_withEmptyTextPart", "createPreview_withPreviewTextExtractorThrowing", "createPreview_withTextPart" ],
        "k9mail§com.fsck.k9.message.extractors.PreviewTextExtractorTest" : [ "extractPreview_shouldCollapseAndTrimWhitespace", "extractPreview_shouldReplaceUrl", "extractPreview_shouldStripGenericQuoteHeader", "extractPreview_shouldStripHorizontalLine", "extractPreview_shouldStripHorizontalRules", "extractPreview_shouldStripQuoteHeaderAndQuotedText", "extractPreview_shouldStripSignature", "extractPreview_withEmptyBody_shouldThrow", "extractPreview_withLongTextPlain", "extractPreview_withSimpleTextHtml", "extractPreview_withSimpleTextPlain" ],
        "k9mail§com.fsck.k9.message.extractors.TextPartFinderTest" : [ "findFirstTextPart_withMultipartAlternative", "findFirstTextPart_withMultipartAlternativeContainingEmptyTextPlainPart", "findFirstTextPart_withMultipartAlternativeContainingMultipartRelatedContainingTextHtmlFirst", "findFirstTextPart_withMultipartAlternativeContainingMultipartRelatedContainingTextPlain", "findFirstTextPart_withMultipartAlternativeContainingOnlyTextHtmlPart", "findFirstTextPart_withMultipartAlternativeHtmlPartFirst", "findFirstTextPart_withMultipartAlternativeNotContainingTextPart", "findFirstTextPart_withMultipartMixedContainingEmptyTextHtmlPart", "findFirstTextPart_withMultipartMixedContainingMultipartAlternative", "findFirstTextPart_withMultipartMixedContainingMultipartAlternativeWithTextPlainPartLast", "findFirstTextPart_withMultipartMixedContainingTextHtmlFirst", "findFirstTextPart_withMultipartMixedContainingTextPlain", "findFirstTextPart_withMultipartMixedNotContainingTextPart", "findFirstTextPart_withTextHtmlPart", "findFirstTextPart_withTextPlainPart", "findFirstTextPart_withoutTextPart" ]
      },
      "predecessor" : "217c61430d55949316a645d23f24717f7bc098bb"
    },
    "0644fa048185df707225cc7118cecdb8b63f607f" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "initFromReplyToMessage_shouldCallComposePgpInlineDecider" ]
      },
      "predecessor" : "0644fa048185df707225cc7118cecdb8b63f607f~1"
    },
    "f457de38211f10e49e5a7531f83497bc4154f933" : {
      "testcases" : {
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords", "parseSettings_account", "parseSettings_account_cram_md5" ]
      },
      "predecessor" : "95f6fba382545bd1d860d9bde095640f5a63dfd9"
    },
    "0fbc94237c5f46b00963751e4b70fbde4d740996" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.MessageTest" : [ "testMessage", "testSetSendDateFormatsHeaderCorrectlyWithCurrentTimeZone", "testSetSendDateFormatsHeaderCorrectlyWithoutTimeZone", "testSetSendDateSetsSentDate", "testToBodyPart" ],
        "k9mail-library§com.fsck.k9.mail.internet.MessageExtractorTest" : [ "getTextFromPart_withExceptionThrownGettingInputStream_shouldReturnNull", "getTextFromPart_withHtmlWithCharsetInContentTypeRawDataBody_shouldReturnHtmlText", "getTextFromPart_withHtmlWithCharsetInHtmlRawDataBody_shouldReturnHtmlText", "getTextFromPart_withNoBody_shouldReturnNull", "getTextFromPart_withPlainTextWithCharsetInContentTypeRawDataBody_shouldReturnText", "getTextFromPart_withRawDataBodyWithNonText_shouldReturnNull", "getTextFromPart_withTextBody_shouldReturnText", "getTextFromPart_withUnknownEncoding_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.internet.MimeMessageParseTest" : [ "testMultipartSingleLayerNoRecurse", "testMultipartSingleLayerRecurse", "testMultipartTwoLayersRecurse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "fetchPart_withTextSection_shouldProcessImapResponses" ],
        "k9mail§com.fsck.k9.crypto.MessageDecryptVerifierTest" : [ "findEncryptedPartsShouldReturnEmptyEncryptedPart", "findEncryptedPartsShouldReturnMultipleEncryptedParts", "findEncrypted__withMultipartEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubEncryptedAndEncrypted__shouldReturnBoth", "findEncrypted__withMultipartMixedSubEncryptedAndText__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubSignedAndText__shouldReturnSigned", "findEncrypted__withMultipartMixedSubSigned__shouldReturnSigned", "findEncrypted__withMultipartMixedSubTextAndEncrypted__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubTextAndSigned__shouldReturnSigned", "findSigned__withComplexMultipartSigned__shouldReturnRoot", "findSigned__withSimpleMultipartSigned__shouldReturnRoot" ],
        "k9mail§com.fsck.k9.mailstore.AttachmentResolverTest" : [ "buildCidMap__onMultipartWithEmptyBodyPart__shouldReturnEmptyMap", "buildCidMap__onMultipartWithNoParts__shouldReturnEmptyMap", "buildCidMap__onPartWithNoBody__shouldReturnEmptyMap", "buildCidMap__onTwoPart__shouldReturnBothUris" ],
        "k9mail§com.fsck.k9.mailstore.LocalStoreTest" : [ "findPartById__withNestedLocalBodyPart", "findPartById__withNestedLocalMessagePart", "findPartById__withRootLocalBodyPart", "findPartById__withTwoTimesNestedLocalMessagePart" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml" ],
        "k9mail§com.fsck.k9.message.MessageBuilderTest" : [ "build_detachAndReattach_shouldSucceed" ],
        "k9mail§com.fsck.k9.message.extractors.AttachmentInfoExtractorTest" : [ "extractInfoForDb__withContentTypeAndEncodedWordName__shouldReturnDecodedName", "extractInfoForDb__withContentTypeAndName__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionAttach__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionInlineAndContentId__shouldReturnInlineAttachment", "extractInfoForDb__withDispositionInvalidSizeParam__shouldReturnUnknownSize", "extractInfoForDb__withDispositionSizeParam__shouldReturnThatSize", "extractInfoForDb__withNoBody__shouldReturnContentAvailable", "extractInfoForDb__withNoBody__shouldReturnContentNotAvailable", "extractInfoForDb__withNoHeaders__shouldReturnEmptyValues", "extractInfoForDb__withTextMimeType__shouldReturnTxtExtension", "extractInfo__fromLocalBodyPart__shouldReturnProvidedValues", "extractInfo__withDeferredFileBody" ],
        "k9mail§com.fsck.k9.message.extractors.EncryptionDetectorTest" : [ "isEncrypted_withMultipartEncrypted_shouldReturnTrue", "isEncrypted_withMultipartMixedContainingSMimePart_shouldReturnTrue" ],
        "k9mail§com.fsck.k9.message.extractors.MessagePreviewCreatorTest" : [ "createPreview_withEmptyTextPart", "createPreview_withPreviewTextExtractorThrowing", "createPreview_withTextPart" ],
        "k9mail§com.fsck.k9.message.extractors.PreviewTextExtractorTest" : [ "extractPreview_shouldCollapseAndTrimWhitespace", "extractPreview_shouldReplaceUrl", "extractPreview_shouldStripGenericQuoteHeader", "extractPreview_shouldStripHorizontalLine", "extractPreview_shouldStripHorizontalRules", "extractPreview_shouldStripQuoteHeaderAndQuotedText", "extractPreview_shouldStripSignature", "extractPreview_withEmptyBody_shouldThrow", "extractPreview_withLongTextPlain", "extractPreview_withSimpleTextHtml", "extractPreview_withSimpleTextPlain" ],
        "k9mail§com.fsck.k9.message.extractors.TextPartFinderTest" : [ "findFirstTextPart_withMultipartAlternative", "findFirstTextPart_withMultipartAlternativeContainingEmptyTextPlainPart", "findFirstTextPart_withMultipartAlternativeContainingMultipartRelatedContainingTextHtmlFirst", "findFirstTextPart_withMultipartAlternativeContainingMultipartRelatedContainingTextPlain", "findFirstTextPart_withMultipartAlternativeContainingOnlyTextHtmlPart", "findFirstTextPart_withMultipartAlternativeHtmlPartFirst", "findFirstTextPart_withMultipartAlternativeNotContainingTextPart", "findFirstTextPart_withMultipartMixedContainingEmptyTextHtmlPart", "findFirstTextPart_withMultipartMixedContainingMultipartAlternative", "findFirstTextPart_withMultipartMixedContainingMultipartAlternativeWithTextPlainPartLast", "findFirstTextPart_withMultipartMixedContainingTextHtmlFirst", "findFirstTextPart_withMultipartMixedContainingTextPlain", "findFirstTextPart_withMultipartMixedNotContainingTextPart", "findFirstTextPart_withTextHtmlPart", "findFirstTextPart_withTextPlainPart", "findFirstTextPart_withoutTextPart" ]
      },
      "predecessor" : "f457de38211f10e49e5a7531f83497bc4154f933"
    },
    "76b66472d4bc44ea2c63764e7edad087b2b83dd4" : {
      "testcases" : {
        "k9mail§com.fsck.k9.crypto.MessageDecryptVerifierTest" : [ "findPrimaryCryptoPart_withMultipartAlternativeContainingPgpInline", "findPrimaryCryptoPart_withMultipartMixedContainingMultipartAlternativeContainingPgpInline", "findPrimaryCryptoPart_withMultipartMixedContainingPgpInline" ]
      },
      "predecessor" : "76b66472d4bc44ea2c63764e7edad087b2b83dd4~1"
    },
    "dbb5180e1e0b220133eef74ba9773141a40acdbc" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "initFromReplyToMessage_shouldCallComposePgpInlineDecider" ]
      },
      "predecessor" : "dbb5180e1e0b220133eef74ba9773141a40acdbc~1"
    },
    "25d977a813364bc4685bb625208ba03e231d7f61" : {
      "testcases" : {
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "getImportStreamContents_account", "getImportStreamContents_alternativeName", "importSettings_disablesAccountsNeedingPasswords", "parseSettings_account", "parseSettings_account_cram_md5", "parseSettings_account_identities" ]
      },
      "predecessor" : "25d977a813364bc4685bb625208ba03e231d7f61~1"
    },
    "1a74420eb712ccd1884573579b1334d315d0bf85" : {
      "testcases" : {
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "getImportStreamContents_account", "getImportStreamContents_alternativeName" ]
      },
      "predecessor" : "1a74420eb712ccd1884573579b1334d315d0bf85~1"
    },
    "025502ceb533878585cf34bc6a927109ae1ecf8b" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.internet.MessageExtractorTest" : [ "getTextFromPart_withExceptionThrownGettingInputStream_shouldReturnNull", "getTextFromPart_withHtmlWithCharsetInContentTypeRawDataBody_shouldReturnHtmlText", "getTextFromPart_withHtmlWithCharsetInHtmlRawDataBody_shouldReturnHtmlText", "getTextFromPart_withPlainTextWithCharsetInContentTypeRawDataBody_shouldReturnText", "getTextFromPart_withTextBody_shouldReturnText", "getTextFromPart_withUnknownEncoding_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.internet.MimeMessageParseTest" : [ "testMultipartSingleLayerNoRecurse", "testMultipartSingleLayerRecurse", "testMultipartTwoLayersRecurse", "testSinglePart7BitNoRecurse", "testSinglePart8BitRecurse", "testSinglePartBase64NoRecurse", "testSinglePartUnknownEncoding_throwsUnsupportedEncodingException" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "025502ceb533878585cf34bc6a927109ae1ecf8b~1"
    },
    "02eb84a1f082aafcdddaca6157f677a060209ae3" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "initFromReplyToMessage_shouldCallComposePgpInlineDecider" ]
      },
      "predecessor" : "025502ceb533878585cf34bc6a927109ae1ecf8b"
    },
    "6d104bd8608af05efc3219c19addd79e00fd7cef" : {
      "testcases" : {
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords", "parseSettings_account", "parseSettings_account_cram_md5" ]
      },
      "predecessor" : "6d104bd8608af05efc3219c19addd79e00fd7cef~1"
    },
    "3e8ad4b195831ec9d5ec6afc3c3582bccd29ee3d" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "3e8ad4b195831ec9d5ec6afc3c3582bccd29ee3d~1"
    },
    "0f964655b39cba5fb07b2d0c13538f444ffa6d35" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "initFromReplyToMessage_shouldCallComposePgpInlineDecider" ]
      },
      "predecessor" : "0f964655b39cba5fb07b2d0c13538f444ffa6d35~1"
    },
    "096b9ad5f3b60d8c6502681121561191e619bb14" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "096b9ad5f3b60d8c6502681121561191e619bb14~1"
    },
    "25dd43174967a3c44259afc6344f6f2395a6c1da" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.MessageTest" : [ "testMessage", "testSetSendDateFormatsHeaderCorrectlyWithCurrentTimeZone", "testSetSendDateFormatsHeaderCorrectlyWithoutTimeZone", "testSetSendDateSetsSentDate", "testToBodyPart" ],
        "k9mail-library§com.fsck.k9.mail.internet.MessageExtractorTest" : [ "getTextFromPart_withExceptionThrownGettingInputStream_shouldReturnNull", "getTextFromPart_withHtmlWithCharsetInContentTypeRawDataBody_shouldReturnHtmlText", "getTextFromPart_withHtmlWithCharsetInHtmlRawDataBody_shouldReturnHtmlText", "getTextFromPart_withNoBody_shouldReturnNull", "getTextFromPart_withPlainTextWithCharsetInContentTypeRawDataBody_shouldReturnText", "getTextFromPart_withRawDataBodyWithNonText_shouldReturnNull", "getTextFromPart_withTextBody_shouldReturnText", "getTextFromPart_withUnknownEncoding_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.internet.MimeMessageParseTest" : [ "testMultipartSingleLayerNoRecurse", "testMultipartSingleLayerRecurse", "testMultipartTwoLayersRecurse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "fetchPart_withTextSection_shouldProcessImapResponses" ],
        "k9mail§com.fsck.k9.crypto.MessageDecryptVerifierTest" : [ "findEncryptedPartsShouldReturnEmptyEncryptedPart", "findEncryptedPartsShouldReturnMultipleEncryptedParts", "findEncrypted__withMultipartEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubEncryptedAndEncrypted__shouldReturnBoth", "findEncrypted__withMultipartMixedSubEncryptedAndText__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubSignedAndText__shouldReturnSigned", "findEncrypted__withMultipartMixedSubSigned__shouldReturnSigned", "findEncrypted__withMultipartMixedSubTextAndEncrypted__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubTextAndSigned__shouldReturnSigned", "findSigned__withComplexMultipartSigned__shouldReturnRoot", "findSigned__withSimpleMultipartSigned__shouldReturnRoot" ],
        "k9mail§com.fsck.k9.mailstore.AttachmentResolverTest" : [ "buildCidMap__onMultipartWithEmptyBodyPart__shouldReturnEmptyMap", "buildCidMap__onMultipartWithNoParts__shouldReturnEmptyMap", "buildCidMap__onPartWithNoBody__shouldReturnEmptyMap", "buildCidMap__onTwoPart__shouldReturnBothUris" ],
        "k9mail§com.fsck.k9.mailstore.LocalStoreTest" : [ "findPartById__withNestedLocalBodyPart", "findPartById__withNestedLocalMessagePart", "findPartById__withRootLocalBodyPart", "findPartById__withTwoTimesNestedLocalMessagePart" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml" ],
        "k9mail§com.fsck.k9.message.MessageBuilderTest" : [ "build_detachAndReattach_shouldSucceed" ],
        "k9mail§com.fsck.k9.message.extractors.AttachmentInfoExtractorTest" : [ "extractInfoForDb__withContentTypeAndEncodedWordName__shouldReturnDecodedName", "extractInfoForDb__withContentTypeAndName__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionAttach__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionInlineAndContentId__shouldReturnInlineAttachment", "extractInfoForDb__withDispositionInvalidSizeParam__shouldReturnUnknownSize", "extractInfoForDb__withDispositionSizeParam__shouldReturnThatSize", "extractInfoForDb__withNoBody__shouldReturnContentAvailable", "extractInfoForDb__withNoBody__shouldReturnContentNotAvailable", "extractInfoForDb__withNoHeaders__shouldReturnEmptyValues", "extractInfoForDb__withTextMimeType__shouldReturnTxtExtension", "extractInfo__fromLocalBodyPart__shouldReturnProvidedValues", "extractInfo__withDeferredFileBody" ],
        "k9mail§com.fsck.k9.message.extractors.EncryptionDetectorTest" : [ "isEncrypted_withMultipartEncrypted_shouldReturnTrue", "isEncrypted_withMultipartMixedContainingSMimePart_shouldReturnTrue" ],
        "k9mail§com.fsck.k9.message.extractors.MessagePreviewCreatorTest" : [ "createPreview_withEmptyTextPart", "createPreview_withPreviewTextExtractorThrowing", "createPreview_withTextPart" ],
        "k9mail§com.fsck.k9.message.extractors.PreviewTextExtractorTest" : [ "extractPreview_shouldCollapseAndTrimWhitespace", "extractPreview_shouldReplaceUrl", "extractPreview_shouldStripGenericQuoteHeader", "extractPreview_shouldStripHorizontalLine", "extractPreview_shouldStripHorizontalRules", "extractPreview_shouldStripQuoteHeaderAndQuotedText", "extractPreview_shouldStripSignature", "extractPreview_withEmptyBody_shouldThrow", "extractPreview_withLongTextPlain", "extractPreview_withSimpleTextHtml", "extractPreview_withSimpleTextPlain" ],
        "k9mail§com.fsck.k9.message.extractors.TextPartFinderTest" : [ "findFirstTextPart_withMultipartAlternative", "findFirstTextPart_withMultipartAlternativeContainingEmptyTextPlainPart", "findFirstTextPart_withMultipartAlternativeContainingMultipartRelatedContainingTextHtmlFirst", "findFirstTextPart_withMultipartAlternativeContainingMultipartRelatedContainingTextPlain", "findFirstTextPart_withMultipartAlternativeContainingOnlyTextHtmlPart", "findFirstTextPart_withMultipartAlternativeHtmlPartFirst", "findFirstTextPart_withMultipartAlternativeNotContainingTextPart", "findFirstTextPart_withMultipartMixedContainingEmptyTextHtmlPart", "findFirstTextPart_withMultipartMixedContainingMultipartAlternative", "findFirstTextPart_withMultipartMixedContainingMultipartAlternativeWithTextPlainPartLast", "findFirstTextPart_withMultipartMixedContainingTextHtmlFirst", "findFirstTextPart_withMultipartMixedContainingTextPlain", "findFirstTextPart_withMultipartMixedNotContainingTextPart", "findFirstTextPart_withTextHtmlPart", "findFirstTextPart_withTextPlainPart", "findFirstTextPart_withoutTextPart" ]
      },
      "predecessor" : "096b9ad5f3b60d8c6502681121561191e619bb14"
    },
    "69e2032ea09722f6dcd54da701fe86d03beb6e71" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "initFromReplyToMessage_shouldCallComposePgpInlineDecider" ]
      },
      "predecessor" : "25dd43174967a3c44259afc6344f6f2395a6c1da"
    },
    "0fc01b13dc927bf8c113cef27841061d6379dad5" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.internet.MessageExtractorTest" : [ "getTextFromPart_withExceptionThrownGettingInputStream_shouldReturnNull", "getTextFromPart_withHtmlWithCharsetInContentTypeRawDataBody_shouldReturnHtmlText", "getTextFromPart_withHtmlWithCharsetInHtmlRawDataBody_shouldReturnHtmlText", "getTextFromPart_withPlainTextWithCharsetInContentTypeRawDataBody_shouldReturnText", "getTextFromPart_withTextBody_shouldReturnText", "getTextFromPart_withUnknownEncoding_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.internet.MimeMessageParseTest" : [ "testMultipartSingleLayerNoRecurse", "testMultipartSingleLayerRecurse", "testMultipartTwoLayersRecurse", "testSinglePart7BitNoRecurse", "testSinglePart8BitRecurse", "testSinglePartBase64NoRecurse", "testSinglePartUnknownEncoding_throwsUnsupportedEncodingException" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "08ce45d4ee9eead8ea0af8f74bc26d9fec1e64f2"
    },
    "bdf21431f74202812737c0a87d1f9d5b701c9be9" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.MessageTest" : [ "testMessage", "testSetSendDateFormatsHeaderCorrectlyWithCurrentTimeZone", "testSetSendDateFormatsHeaderCorrectlyWithoutTimeZone", "testSetSendDateSetsSentDate", "testToBodyPart" ],
        "k9mail-library§com.fsck.k9.mail.internet.MessageExtractorTest" : [ "getTextFromPart_withExceptionThrownGettingInputStream_shouldReturnNull", "getTextFromPart_withHtmlWithCharsetInContentTypeRawDataBody_shouldReturnHtmlText", "getTextFromPart_withHtmlWithCharsetInHtmlRawDataBody_shouldReturnHtmlText", "getTextFromPart_withPlainTextWithCharsetInContentTypeRawDataBody_shouldReturnText", "getTextFromPart_withRawDataBodyWithNonText_shouldReturnNull", "getTextFromPart_withTextBody_shouldReturnText" ],
        "k9mail-library§com.fsck.k9.mail.internet.MimeMessageParseTest" : [ "testMultipartSingleLayerNoRecurse", "testMultipartSingleLayerRecurse", "testMultipartTwoLayersRecurse", "testSinglePart7BitNoRecurse", "testSinglePart8BitRecurse", "testSinglePartBase64NoRecurse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "fetchPart_withTextSection_shouldProcessImapResponses" ],
        "k9mail§com.fsck.k9.crypto.MessageDecryptVerifierTest" : [ "findEncryptedPartsShouldReturnEmptyEncryptedPart", "findEncryptedPartsShouldReturnMultipleEncryptedParts", "findEncrypted__withMultipartEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubEncryptedAndEncrypted__shouldReturnBoth", "findEncrypted__withMultipartMixedSubEncryptedAndText__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubSignedAndText__shouldReturnSigned", "findEncrypted__withMultipartMixedSubSigned__shouldReturnSigned", "findEncrypted__withMultipartMixedSubTextAndEncrypted__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubTextAndSigned__shouldReturnSigned", "findSigned__withComplexMultipartSigned__shouldReturnRoot", "findSigned__withSimpleMultipartSigned__shouldReturnRoot" ],
        "k9mail§com.fsck.k9.mailstore.AttachmentResolverTest" : [ "buildCidMap__onMultipartWithEmptyBodyPart__shouldReturnEmptyMap", "buildCidMap__onMultipartWithNoParts__shouldReturnEmptyMap", "buildCidMap__onTwoPart__shouldReturnBothUris" ],
        "k9mail§com.fsck.k9.mailstore.LocalStoreTest" : [ "findPartById__withTwoTimesNestedLocalMessagePart" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.message.MessageBuilderTest" : [ "build_detachAndReattach_shouldSucceed" ],
        "k9mail§com.fsck.k9.message.extractors.AttachmentInfoExtractorTest" : [ "extractInfoForDb__withContentTypeAndEncodedWordName__shouldReturnDecodedName", "extractInfoForDb__withContentTypeAndName__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionAttach__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionInlineAndContentId__shouldReturnInlineAttachment", "extractInfoForDb__withDispositionInvalidSizeParam__shouldReturnUnknownSize", "extractInfoForDb__withDispositionSizeParam__shouldReturnThatSize", "extractInfoForDb__withNoBody__shouldReturnContentAvailable", "extractInfoForDb__withNoBody__shouldReturnContentNotAvailable", "extractInfoForDb__withNoHeaders__shouldReturnEmptyValues", "extractInfoForDb__withTextMimeType__shouldReturnTxtExtension", "extractInfo__fromLocalBodyPart__shouldReturnProvidedValues", "extractInfo__withDeferredFileBody" ],
        "k9mail§com.fsck.k9.message.extractors.EncryptionDetectorTest" : [ "isEncrypted_withMultipartEncrypted_shouldReturnTrue", "isEncrypted_withMultipartMixedContainingSMimePart_shouldReturnTrue" ],
        "k9mail§com.fsck.k9.message.extractors.MessagePreviewCreatorTest" : [ "createPreview_withEmptyTextPart", "createPreview_withPreviewTextExtractorThrowing", "createPreview_withTextPart" ],
        "k9mail§com.fsck.k9.message.extractors.PreviewTextExtractorTest" : [ "extractPreview_shouldCollapseAndTrimWhitespace", "extractPreview_shouldReplaceUrl", "extractPreview_shouldStripGenericQuoteHeader", "extractPreview_shouldStripHorizontalLine", "extractPreview_shouldStripHorizontalRules", "extractPreview_shouldStripQuoteHeaderAndQuotedText", "extractPreview_shouldStripSignature", "extractPreview_withEmptyBody_shouldThrow", "extractPreview_withLongTextPlain", "extractPreview_withSimpleTextHtml", "extractPreview_withSimpleTextPlain" ],
        "k9mail§com.fsck.k9.message.extractors.TextPartFinderTest" : [ "findFirstTextPart_withMultipartAlternative", "findFirstTextPart_withMultipartAlternativeContainingEmptyTextPlainPart", "findFirstTextPart_withMultipartAlternativeContainingMultipartRelatedContainingTextHtmlFirst", "findFirstTextPart_withMultipartAlternativeContainingMultipartRelatedContainingTextPlain", "findFirstTextPart_withMultipartAlternativeContainingOnlyTextHtmlPart", "findFirstTextPart_withMultipartAlternativeHtmlPartFirst", "findFirstTextPart_withMultipartAlternativeNotContainingTextPart", "findFirstTextPart_withMultipartMixedContainingEmptyTextHtmlPart", "findFirstTextPart_withMultipartMixedContainingMultipartAlternative", "findFirstTextPart_withMultipartMixedContainingMultipartAlternativeWithTextPlainPartLast", "findFirstTextPart_withMultipartMixedContainingTextHtmlFirst", "findFirstTextPart_withMultipartMixedContainingTextPlain", "findFirstTextPart_withMultipartMixedNotContainingTextPart", "findFirstTextPart_withTextHtmlPart", "findFirstTextPart_withTextPlainPart", "findFirstTextPart_withoutTextPart" ],
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords", "parseSettings_account", "parseSettings_account_cram_md5" ]
      },
      "predecessor" : "5633ddbeaf59ccc2804ce30a433f068d871f1cff"
    },
    "c94804df2689984c7b418bfe04336fb48bd079d4" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "c94804df2689984c7b418bfe04336fb48bd079d4~1"
    },
    "0383fbe4faf22bc35e02c9334ac9814c7396affc" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.ActivityListenerTest" : [ "getOperation__whenSynchronizeMailboxFailed_shouldResultInValidStatus" ]
      },
      "predecessor" : "c94804df2689984c7b418bfe04336fb48bd079d4"
    },
    "252aedccd4a6e7afc26ac88a14d35ed0a1207c2f" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavStoreTest" : [ "checkSettings_shouldRegisterHttpsSchemeWithRegistry", "checkSettings_withErrorResponse_shouldThrow", "checkSettings_withHttpPrefixedServerName_shouldUseInsecureConnection", "checkSettings_withInitialUnauthorizedResponse_shouldPerformBasicAuthentication", "checkSettings_withOkResponse_shouldPerformFormBasedAuthentication", "checkSettings_withSslException_shouldThrowCertificateValidationException", "checkSettings_withUnauthorizedResponses_shouldThrow", "checkSettings_withWebDavSslUri_shouldUseSecureConnection", "checkSettings_withWebDavTlsUri_shouldUseSecureConnection", "checkSettings_withWebDavUri_shouldUseInsecureConnection", "constructor_withImapStoreUri_shouldThrow", "createUri_withSetting_shouldProvideUri", "createUri_withSettingsWithTLS_shouldProvideSSLUri", "getFolder_calledTwice_shouldReturnFirstInstance", "getFolder_shouldReturnWebDavFolderInstance", "getPersonalNamespaces_shouldProvideListOfAllFoldersSentFromResponses", "getPersonalNamespaces_shouldRequestFolderList", "getPersonalNamespaces_shouldRequestSpecialFolders", "getPersonalNamespaces_shouldSetSpecialFolderNames" ]
      },
      "predecessor" : "252aedccd4a6e7afc26ac88a14d35ed0a1207c2f~1"
    },
    "cf15e8a2c5dbea0bc8211300c8a7ebd270f129bf" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.ActivityListenerTest" : [ "getOperation__whenSynchronizeMailboxFailed_shouldResultInValidStatus" ]
      },
      "predecessor" : "252aedccd4a6e7afc26ac88a14d35ed0a1207c2f"
    },
    "9cd75bc62026c6c83aaa5348c29480b5ba72a925" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavStoreTest" : [ "checkSettings_shouldRegisterHttpsSchemeWithRegistry", "checkSettings_withErrorResponse_shouldThrow", "checkSettings_withHttpPrefixedServerName_shouldUseInsecureConnection", "checkSettings_withInitialUnauthorizedResponse_shouldPerformBasicAuthentication", "checkSettings_withOkResponse_shouldPerformFormBasedAuthentication", "checkSettings_withSslException_shouldThrowCertificateValidationException", "checkSettings_withUnauthorizedResponses_shouldThrow", "checkSettings_withWebDavSslUri_shouldUseSecureConnection", "checkSettings_withWebDavTlsUri_shouldUseSecureConnection", "checkSettings_withWebDavUri_shouldUseInsecureConnection", "constructor_withImapStoreUri_shouldThrow", "createUri_withSetting_shouldProvideUri", "createUri_withSettingsWithTLS_shouldProvideSSLUri", "getFolder_calledTwice_shouldReturnFirstInstance", "getFolder_shouldReturnWebDavFolderInstance", "getPersonalNamespaces_shouldProvideListOfAllFoldersSentFromResponses", "getPersonalNamespaces_shouldRequestFolderList", "getPersonalNamespaces_shouldRequestSpecialFolders", "getPersonalNamespaces_shouldSetSpecialFolderNames" ]
      },
      "predecessor" : "9cd75bc62026c6c83aaa5348c29480b5ba72a925~1"
    },
    "5301639045a49318b47888929f4bc3b41d585e46" : {
      "testcases" : {
        "k9mail§com.fsck.k9.helper.HtmlSanitizerTest" : [ "shouldRemoveMetaRefreshBetweenHeadAndBody", "shouldRemoveMetaRefreshButKeepOtherMetaTags", "shouldRemoveMetaRefreshInBody", "shouldRemoveMetaRefreshInHead", "shouldRemoveMetaRefreshWithMixedCaseAttributeValue", "shouldRemoveMetaRefreshWithSpacesInAttributeValue", "shouldRemoveMetaRefreshWithUpperCaseAttributeValue", "shouldRemoveMetaRefreshWithoutQuotesAroundAttributeValue", "shouldRemoveMultipleMetaRefreshTags" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ]
      },
      "predecessor" : "c8eaba861c38aa5485ffdd654aa7dcfa28c4e0a4"
    },
    "b15636a3ca1728cc05669697fc9e3261f78a7d5c" : {
      "testcases" : {
        "k9mail§com.fsck.k9.helper.HtmlSanitizerTest" : [ "shouldRemoveMetaRefreshBetweenHeadAndBody", "shouldRemoveMetaRefreshButKeepOtherMetaTags", "shouldRemoveMetaRefreshInBody", "shouldRemoveMetaRefreshInHead", "shouldRemoveMetaRefreshWithMixedCaseAttributeValue", "shouldRemoveMetaRefreshWithSpacesInAttributeValue", "shouldRemoveMetaRefreshWithUpperCaseAttributeValue", "shouldRemoveMetaRefreshWithoutQuotesAroundAttributeValue", "shouldRemoveMultipleMetaRefreshTags" ]
      },
      "predecessor" : "b15636a3ca1728cc05669697fc9e3261f78a7d5c~1"
    },
    "9f51ab627e8b1ab2ad5e24761b4b58f963d93983" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords" ]
      },
      "predecessor" : "b15636a3ca1728cc05669697fc9e3261f78a7d5c"
    },
    "4ae85ddd38ebf506aaa7e3e2650a52bd45b95b2a" : {
      "testcases" : {
        "k9mail§com.fsck.k9.notification.DeviceNotificationsTest" : [ "buildSummaryNotification_withAdditionalMessages", "buildSummaryNotification_withMultiMessageNotification", "buildSummaryNotification_withoutDeleteAllAction" ]
      },
      "predecessor" : "9f51ab627e8b1ab2ad5e24761b4b58f963d93983"
    },
    "a6dfa14af2286c937a1e6e4fbaf4d751bfa6326d" : {
      "testcases" : {
        "k9mail§com.fsck.k9.preferences.SettingsExporterTest" : [ "exportPreferences_exportsGlobalSettingsWhenRequested" ],
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords" ]
      },
      "predecessor" : "4ae85ddd38ebf506aaa7e3e2650a52bd45b95b2a"
    },
    "cad7da10d66aee0c6556af9e92a13ccf2b7c9d32" : {
      "testcases" : {
        "k9mail§com.fsck.k9.preferences.SettingsExporterTest" : [ "exportPreferences_exportsGlobalSettingsWhenRequested" ],
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords" ]
      },
      "predecessor" : "cad7da10d66aee0c6556af9e92a13ccf2b7c9d32~1"
    },
    "045fd63760f1a5fdfdd0d1a0ed2d58519066aefc" : {
      "testcases" : {
        "k9mail§com.fsck.k9.preferences.SettingsExporterTest" : [ "exportPreferences_exportsGlobalSettingsWhenRequested" ],
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords" ]
      },
      "predecessor" : "045fd63760f1a5fdfdd0d1a0ed2d58519066aefc~1"
    },
    "a9a69a031e8623a6aaa44f9ddb6091dea4e1372f" : {
      "testcases" : {
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords" ]
      },
      "predecessor" : "a9a69a031e8623a6aaa44f9ddb6091dea4e1372f~1"
    },
    "2583a5336b07ff8c3f8c44dc9022b6dd9b6a8739" : {
      "testcases" : {
        "k9mail§com.fsck.k9.preferences.SettingsExporterTest" : [ "exportPreferences_exportsGlobalSettingsWhenRequested", "exportPreferences_ignoresGlobalSettingsWhenRequested", "exportPreferences_producesXML", "exportPreferences_setsFormatTo1", "exportPreferences_setsVersionToLatest" ]
      },
      "predecessor" : "2583a5336b07ff8c3f8c44dc9022b6dd9b6a8739~1"
    },
    "7e1482636dd00684669bfec376a75f85da604c81" : {
      "testcases" : {
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "getImportStreamContents_account", "getImportStreamContents_alternativeName", "importSettings_disablesAccountsNeedingPasswords", "importSettings_throwsExceptionOnBlankFile", "importSettings_throwsExceptionOnInvalidFormat", "importSettings_throwsExceptionOnInvalidVersion", "importSettings_throwsExceptionOnMissingFormat", "importSettings_throwsExceptionOnMissingVersion", "importSettings_throwsExceptionOnNonPositiveFormat", "importSettings_throwsExceptionOnNonPositiveVersion", "parseSettings_account", "parseSettings_account_cram_md5", "parseSettings_account_identities" ]
      },
      "predecessor" : "7e1482636dd00684669bfec376a75f85da604c81~1"
    },
    "f5b8a56c8a86560963a5e95682330ef3265e53cd" : {
      "testcases" : {
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords" ]
      },
      "predecessor" : "f5b8a56c8a86560963a5e95682330ef3265e53cd~1"
    },
    "2710fd3d8d2cefd232aa1d00373880987fa6c624" : {
      "testcases" : {
        "k9mail§com.fsck.k9.preferences.SettingsExporterTest" : [ "exportPreferences_exportsGlobalSettingsWhenRequested" ],
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords", "importSettings_throwsExceptionOnBlankFile", "importSettings_throwsExceptionOnInvalidFormat", "importSettings_throwsExceptionOnInvalidVersion", "importSettings_throwsExceptionOnMissingFormat", "importSettings_throwsExceptionOnMissingVersion", "importSettings_throwsExceptionOnNonPositiveFormat", "importSettings_throwsExceptionOnNonPositiveVersion" ]
      },
      "predecessor" : "2710fd3d8d2cefd232aa1d00373880987fa6c624~1"
    },
    "62acbfcd81d0d5cf095aa07d8b5ba9756b4a4269" : {
      "testcases" : {
        "k9mail§com.fsck.k9.preferences.SettingsExporterTest" : [ "exportPreferences_exportsGlobalSettingsWhenRequested" ],
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords" ]
      },
      "predecessor" : "62acbfcd81d0d5cf095aa07d8b5ba9756b4a4269~1"
    },
    "23603278ea92c1231b89503aa4c015f86b6c4622" : {
      "testcases" : {
        "k9mail§com.fsck.k9.preferences.SettingsExporterTest" : [ "exportPreferences_exportsGlobalSettingsWhenRequested" ],
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords" ]
      },
      "predecessor" : "23603278ea92c1231b89503aa4c015f86b6c4622~1"
    },
    "24a4e3a4fb1bb821018cca03990a6f67106c188e" : {
      "testcases" : {
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords", "importSettings_throwsExceptionOnBlankFile", "importSettings_throwsExceptionOnInvalidFormat", "importSettings_throwsExceptionOnInvalidVersion", "importSettings_throwsExceptionOnMissingFormat", "importSettings_throwsExceptionOnMissingVersion", "importSettings_throwsExceptionOnNonPositiveFormat", "importSettings_throwsExceptionOnNonPositiveVersion" ]
      },
      "predecessor" : "24a4e3a4fb1bb821018cca03990a6f67106c188e~1"
    },
    "9254e7a05282fb2f3c3d75d3f384cb2ae162b583" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "24a4e3a4fb1bb821018cca03990a6f67106c188e"
    },
    "bf881cd3c2a24c2f67924dc5f350e468c2c9eb04" : {
      "testcases" : {
        "k9mail§com.fsck.k9.notification.DeviceNotificationsTest" : [ "buildSummaryNotification_withAdditionalMessages", "buildSummaryNotification_withMultiMessageNotification", "buildSummaryNotification_withoutDeleteAllAction" ]
      },
      "predecessor" : "bf881cd3c2a24c2f67924dc5f350e468c2c9eb04~1"
    },
    "c24c89e76a0f4bdca8544fa203f116a7956dab8f" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.AddressTest" : [ "equals_withoutAddress_doesNotMatchWithAddress", "equals_withoutAddress_matchesSame", "equals_withoutPersonal_doesNotMatchWithAddress" ],
        "k9mail§com.fsck.k9.helper.ReplyToParserTest" : [ "getRecipientsToReplyAllTo_should_excludeDuplicates", "getRecipientsToReplyAllTo_should_excludeIdentityAddresses", "getRecipientsToReplyTo_should_prefer_listPost_over_from_field" ]
      },
      "predecessor" : "c24c89e76a0f4bdca8544fa203f116a7956dab8f~1"
    },
    "7bf9d7ec085f13c691d345ca1e9af3c8c449b708" : {
      "testcases" : {
        "k9mail§com.fsck.k9.preferences.SettingsExporterTest" : [ "exportPreferences_exportsGlobalSettingsWhenRequested", "exportPreferences_ignoresGlobalSettingsWhenRequested", "exportPreferences_producesXML", "exportPreferences_setsFormatTo1", "exportPreferences_setsVersionToLatest" ],
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "getImportStreamContents_account", "getImportStreamContents_alternativeName", "importSettings_disablesAccountsNeedingPasswords", "importSettings_throwsExceptionOnBlankFile", "importSettings_throwsExceptionOnInvalidFormat", "importSettings_throwsExceptionOnInvalidVersion", "importSettings_throwsExceptionOnMissingFormat", "importSettings_throwsExceptionOnMissingVersion", "importSettings_throwsExceptionOnNonPositiveFormat", "importSettings_throwsExceptionOnNonPositiveVersion", "parseSettings_account", "parseSettings_account_cram_md5", "parseSettings_account_identities" ]
      },
      "predecessor" : "7bf9d7ec085f13c691d345ca1e9af3c8c449b708~1"
    },
    "65c4f86105d07270d76bd906abcab5954eb97433" : {
      "testcases" : {
        "k9mail§com.fsck.k9.notification.AuthenticationErrorNotificationsTest" : [ "showAuthenticationErrorNotification_withIncomingServer_shouldCreateNotification", "showAuthenticationErrorNotification_withOutgoingServer_shouldCreateNotification" ],
        "k9mail§com.fsck.k9.notification.BaseNotificationsTest" : [ "testCreateAndInitializeNotificationBuilder", "testCreateBigTextStyleNotification" ],
        "k9mail§com.fsck.k9.notification.CertificateErrorNotificationsTest" : [ "testShowCertificateErrorNotificationForIncomingServer", "testShowCertificateErrorNotificationForOutgoingServer" ],
        "k9mail§com.fsck.k9.notification.DeviceNotificationsTest" : [ "buildSummaryNotification_withAdditionalMessages", "buildSummaryNotification_withMultiMessageNotification", "buildSummaryNotification_withPrivacyModeActive", "buildSummaryNotification_withSingleMessageNotification", "buildSummaryNotification_withoutDeleteAction", "buildSummaryNotification_withoutDeleteAllAction" ],
        "k9mail§com.fsck.k9.notification.LockScreenNotificationTest" : [ "configureLockScreenNotification_MESSAGE_COUNT", "configureLockScreenNotification_SENDERS_withMultipleMessages", "configureLockScreenNotification_SENDERS_withSingleMessage" ],
        "k9mail§com.fsck.k9.notification.SendFailedNotificationsTest" : [ "testShowSendFailedNotification" ],
        "k9mail§com.fsck.k9.notification.SyncNotificationsTest" : [ "testGetFetchingMailNotificationId" ],
        "k9mail§com.fsck.k9.notification.WearNotificationsTest" : [ "testBuildStackedNotification", "testBuildStackedNotificationWithArchiveActionEnabled", "testBuildStackedNotificationWithDeleteActionEnabled", "testBuildStackedNotificationWithMarkAsSpamActionEnabled" ]
      },
      "predecessor" : "65c4f86105d07270d76bd906abcab5954eb97433~1"
    },
    "6738b497f088a61f998a3b03dc7eab60a1d1813d" : {
      "testcases" : {
        "k9mail§com.fsck.k9.helper.ReplyToParserTest" : [ "getRecipientsToReplyAllTo_should_excludeDuplicates", "getRecipientsToReplyAllTo_should_excludeIdentityAddresses", "getRecipientsToReplyTo_should_prefer_listPost_over_from_field" ]
      },
      "predecessor" : "65c4f86105d07270d76bd906abcab5954eb97433"
    },
    "9e102a571b46c31a49508693d7129c95e85a6ac4" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "9e102a571b46c31a49508693d7129c95e85a6ac4~1"
    },
    "7a39e7c48b1adc09c2a22d757cc32ef47a1f2100" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "getCurrentCryptoStatus_withoutCryptoProvider", "initFromReplyToMessage_shouldCallComposePgpInlineDecider" ]
      },
      "predecessor" : "9e102a571b46c31a49508693d7129c95e85a6ac4"
    },
    "f34abe36c0def24c2105b2be2feba139a423184e" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_authXoauthWithSaslIr", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOn400Response", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnInvalidJsonResponse", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnMissingStatusJsonResponse", "open_authXoauthWithSaslIrParsesCapabilities", "open_authXoauthWithSaslIrThrowsExeptionOn401Response", "open_authXoauthWithSaslIrWithOldTokenThrowsExceptionIfRetryFails", "open_withCapabilitiesInInitialResponse_shouldNotIssueCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withNegativeResponseToStartTlsCommand_shouldThrow", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "sendContinuation" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapResponseParserTest" : [ "readStatusResponse_withNoResponseAndAlertText_shouldThrowWithAlertText", "readStatusResponse_withNoResponse_shouldThrow", "testReadStatusResponseSkippingWrongTag", "testReadStatusResponseUntaggedHandlerGetsUntaggedOnly", "testReadStatusResponseUntaggedHandlerStillCalledOnNegativeReply", "testReadStatusResponseWithErrorResponse", "testReadStatusResponseWithOKResponse" ]
      },
      "predecessor" : "0d4d39acaac21caa4e56c1ee32de0b8c737d3ae1"
    },
    "79c65d4cff60ef6dd3e452591ae8f8dcec18630a" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "79c65d4cff60ef6dd3e452591ae8f8dcec18630a~1"
    },
    "6e88c7d39c132a82d5e7cf70ba506e93f4413408" : {
      "testcases" : {
        "k9mail§com.fsck.k9.helper.HtmlSanitizerTest" : [ "shouldRemoveMetaRefreshBetweenHeadAndBody", "shouldRemoveMetaRefreshButKeepOtherMetaTags", "shouldRemoveMetaRefreshInBody", "shouldRemoveMetaRefreshInHead", "shouldRemoveMetaRefreshWithMixedCaseAttributeValue", "shouldRemoveMetaRefreshWithSpacesInAttributeValue", "shouldRemoveMetaRefreshWithUpperCaseAttributeValue", "shouldRemoveMetaRefreshWithoutQuotesAroundAttributeValue", "shouldRemoveMultipleMetaRefreshTags" ]
      },
      "predecessor" : "5a51523cc991f5132ba4404656b9ee17c5ed2486"
    },
    "0f3f2412ae71d0b5ae501a78a578037eedea4e75" : {
      "testcases" : {
        "k9mail§com.fsck.k9.helper.HtmlSanitizerTest" : [ "shouldRemoveMetaRefreshBetweenHeadAndBody", "shouldRemoveMetaRefreshButKeepOtherMetaTags", "shouldRemoveMetaRefreshInBody", "shouldRemoveMetaRefreshInHead", "shouldRemoveMetaRefreshWithMixedCaseAttributeValue", "shouldRemoveMetaRefreshWithSpacesInAttributeValue", "shouldRemoveMetaRefreshWithUpperCaseAttributeValue", "shouldRemoveMetaRefreshWithoutQuotesAroundAttributeValue", "shouldRemoveMultipleMetaRefreshTags" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlusRfc822Message" ]
      },
      "predecessor" : "0f3f2412ae71d0b5ae501a78a578037eedea4e75~1"
    },
    "f228abd348b6f2696b3322fd2ea3dca9d2f36330" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "f228abd348b6f2696b3322fd2ea3dca9d2f36330~1"
    },
    "67ade96101ee4dca8f2e17922d7f58cd7ee08b64" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "getCurrentCryptoStatus_withoutCryptoProvider", "initFromReplyToMessage_shouldCallComposePgpInlineDecider" ]
      },
      "predecessor" : "2c04f66346a62ffc4ed8cee27a384a31ad908168"
    },
    "0c5fedb5045145cdc9eb93f497d094aba1363f9e" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "0c5fedb5045145cdc9eb93f497d094aba1363f9e~1"
    },
    "8e94ab55ca83b9c4b2d01417b0f53b49d005a26e" : {
      "testcases" : {
        "k9mail§com.fsck.k9.helper.HtmlSanitizerTest" : [ "shouldRemoveMetaRefreshBetweenHeadAndBody", "shouldRemoveMetaRefreshButKeepOtherMetaTags", "shouldRemoveMetaRefreshInBody", "shouldRemoveMetaRefreshInHead", "shouldRemoveMetaRefreshWithMixedCaseAttributeValue", "shouldRemoveMetaRefreshWithSpacesInAttributeValue", "shouldRemoveMetaRefreshWithUpperCaseAttributeValue", "shouldRemoveMetaRefreshWithoutQuotesAroundAttributeValue", "shouldRemoveMultipleMetaRefreshTags" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlusRfc822Message" ]
      },
      "predecessor" : "8e94ab55ca83b9c4b2d01417b0f53b49d005a26e~1"
    },
    "3bd84de9c9d495a9a9ab069577fd1e997348d882" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_authXoauthWithSaslIr", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOn400Response", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnInvalidJsonResponse", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnMissingStatusJsonResponse", "open_authXoauthWithSaslIrParsesCapabilities", "open_authXoauthWithSaslIrThrowsExeptionOn401Response", "open_authXoauthWithSaslIrWithOldTokenThrowsExceptionIfRetryFails", "open_withCapabilitiesInInitialResponse_shouldNotIssueCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withNegativeResponseToStartTlsCommand_shouldThrow", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "sendContinuation" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapResponseParserTest" : [ "readStatusResponse_withNoResponseAndAlertText_shouldThrowWithAlertText", "readStatusResponse_withNoResponse_shouldThrow", "testReadStatusResponseSkippingWrongTag", "testReadStatusResponseUntaggedHandlerGetsUntaggedOnly", "testReadStatusResponseUntaggedHandlerStillCalledOnNegativeReply", "testReadStatusResponseWithErrorResponse", "testReadStatusResponseWithOKResponse" ]
      },
      "predecessor" : "3bd84de9c9d495a9a9ab069577fd1e997348d882~1"
    },
    "8030977d680e5aeca8bc5c10d5d55b90d1e01851" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "getCurrentCryptoStatus_withoutCryptoProvider", "initFromReplyToMessage_shouldCallComposePgpInlineDecider" ]
      },
      "predecessor" : "8030977d680e5aeca8bc5c10d5d55b90d1e01851~1"
    },
    "c60f97fb7e6eb400fe8e4a85f635c89215ac685d" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "c60f97fb7e6eb400fe8e4a85f635c89215ac685d~1"
    },
    "8760849f79b52c58de6d971ef2902edd796a0895" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.MessageReferenceTest" : [ "checkIdentityStringFromMessageReferenceWithFlag", "checkIdentityStringFromMessageReferenceWithoutFlag", "checkMessageReferenceWithChangedFlag", "checkMessageReferenceWithChangedUid", "equalsWithAnObjectShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentAccountUuidShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentFolderNameShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentUidShouldReturnFalse", "equalsWithMessageReferenceContainingSameDataShouldReturnTrue", "equalsWithNullShouldReturnFalse", "equalsWithSameMessageReferenceShouldReturnTrue", "parseIdentityStringContainingBadVersionNumber", "parseIdentityStringWithCorruptFlag", "parseIdentityStringWithFlag", "parseIdentityStringWithoutFlag", "parseNullIdentityString" ],
        "k9mail§com.fsck.k9.notification.NewMailNotificationsTest" : [ "testRemoveNewMailNotification", "testRemoveNewMailNotificationClearingAllNotifications", "testRemoveNewMailNotificationWithCreateNotification", "testRemoveNewMailNotificationWithUnknownMessageReference", "testRemoveNewMailNotificationWithoutNotificationData" ],
        "k9mail§com.fsck.k9.notification.NotificationContentCreatorTest" : [ "createFromMessage_withEncryptedMessage", "createFromMessage_withErrorPreview", "createFromMessage_withMessageFromSelf", "createFromMessage_withRegularMessage", "createFromMessage_withStarredMessage", "createFromMessage_withoutEmptyMessage", "createFromMessage_withoutPreview", "createFromMessage_withoutSender", "createFromMessage_withoutSubject" ],
        "k9mail§com.fsck.k9.notification.NotificationDataTest" : [ "testAddNotificationContent", "testAddNotificationContentWithReplacingNotification", "testContainsStarredMessages", "testContainsStarredMessagesWithAdditionalMessages", "testGetActiveNotificationIds", "testGetAllMessageReferences", "testGetContentForSummaryNotification", "testGetHolderForLatestNotification", "testIsSingleMessageNotification", "testNewMessagesCount", "testOverflowNotifications", "testRemoveDoesNotLeakNotificationIds", "testRemoveNotificationForMessage", "testRemoveNotificationForMessageWithRecreatingNotification", "testUnreadMessagesCount" ],
        "k9mail§com.fsck.k9.notification.WearNotificationsTest" : [ "testAddSummaryActions", "testAddSummaryActionsWithArchiveAllActionEnabled", "testAddSummaryActionsWithDeleteAllActionEnabled", "testBuildStackedNotification", "testBuildStackedNotificationWithArchiveActionEnabled", "testBuildStackedNotificationWithDeleteActionEnabled", "testBuildStackedNotificationWithMarkAsSpamActionEnabled" ]
      },
      "predecessor" : "8760849f79b52c58de6d971ef2902edd796a0895~1"
    },
    "0a76ea609cfa853243ccda5f0c97da40bf47c154" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.MessageReferenceTest" : [ "equalsWithMessageReferenceContainingDifferentAccountUuidShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentFolderNameShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentUidShouldReturnFalse", "equalsWithMessageReferenceContainingSameDataShouldReturnTrue", "equalsWithSameMessageReferenceShouldReturnTrue" ],
        "k9mail§com.fsck.k9.notification.NotificationContentCreatorTest" : [ "createFromMessage_withRegularMessage" ],
        "k9mail§com.fsck.k9.notification.NotificationDataTest" : [ "testGetAllMessageReferences", "testRemoveDoesNotLeakNotificationIds", "testRemoveNotificationForMessage", "testRemoveNotificationForMessageWithRecreatingNotification" ]
      },
      "predecessor" : "0a76ea609cfa853243ccda5f0c97da40bf47c154~1"
    },
    "67e304a42afd4a65bcb968f2af30c6b0f7530131" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "67e304a42afd4a65bcb968f2af30c6b0f7530131~1"
    },
    "4805af02bf29a52d76e10f909c207c07c7d96ccd" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_resultsInSameIndexes", "doDbUpgrade_fromV29_resultsInSameTables", "doDbUpgrade_fromV29_resultsInSameTriggers", "doDbUpgrade_withV29_upgradesDB", "doDbUpgrade_withV29_upgradesDBToLatestVersion" ]
      },
      "predecessor" : "4805af02bf29a52d76e10f909c207c07c7d96ccd~1"
    },
    "a52e0bd60ad4bb8b3f3b1bb0fad26c80cb3790af" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withBadDatabase_shouldThrowInDebugBuild", "doDbUpgrade_withEmptyDatabase_shouldSetsDatabaseVersion", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion", "getVersion_shouldReturnCurrentDatabaseVersion" ]
      },
      "predecessor" : "a52e0bd60ad4bb8b3f3b1bb0fad26c80cb3790af~1"
    },
    "b79673bf6f01492e73322c8f3c0f352674e9b75c" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "d5a6286cb7c262fefe2ab9d5d04c321239df4cbd"
    },
    "8c55e571f8b59e251ad765c57a430ba61c45fb2f" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.MessageReferenceTest" : [ "checkIdentityStringFromMessageReferenceWithFlag", "checkIdentityStringFromMessageReferenceWithoutFlag", "checkMessageReferenceWithChangedFlag", "checkMessageReferenceWithChangedUid", "equalsWithAnObjectShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentAccountUuidShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentFolderNameShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentUidShouldReturnFalse", "equalsWithMessageReferenceContainingSameDataShouldReturnTrue", "equalsWithNullShouldReturnFalse", "equalsWithSameMessageReferenceShouldReturnTrue", "parseIdentityStringContainingBadVersionNumber", "parseIdentityStringWithCorruptFlag", "parseIdentityStringWithFlag", "parseIdentityStringWithoutFlag", "parseNullIdentityString" ],
        "k9mail§com.fsck.k9.notification.NewMailNotificationsTest" : [ "testRemoveNewMailNotification", "testRemoveNewMailNotificationClearingAllNotifications", "testRemoveNewMailNotificationWithCreateNotification", "testRemoveNewMailNotificationWithUnknownMessageReference", "testRemoveNewMailNotificationWithoutNotificationData" ],
        "k9mail§com.fsck.k9.notification.NotificationContentCreatorTest" : [ "createFromMessage_withEncryptedMessage", "createFromMessage_withErrorPreview", "createFromMessage_withMessageFromSelf", "createFromMessage_withRegularMessage", "createFromMessage_withStarredMessage", "createFromMessage_withoutEmptyMessage", "createFromMessage_withoutPreview", "createFromMessage_withoutSender", "createFromMessage_withoutSubject" ],
        "k9mail§com.fsck.k9.notification.NotificationDataTest" : [ "testAddNotificationContent", "testAddNotificationContentWithReplacingNotification", "testContainsStarredMessages", "testContainsStarredMessagesWithAdditionalMessages", "testGetActiveNotificationIds", "testGetAllMessageReferences", "testGetContentForSummaryNotification", "testGetHolderForLatestNotification", "testIsSingleMessageNotification", "testNewMessagesCount", "testOverflowNotifications", "testRemoveDoesNotLeakNotificationIds", "testRemoveNotificationForMessage", "testRemoveNotificationForMessageWithRecreatingNotification", "testUnreadMessagesCount" ],
        "k9mail§com.fsck.k9.notification.WearNotificationsTest" : [ "testAddSummaryActions", "testAddSummaryActionsWithArchiveAllActionEnabled", "testAddSummaryActionsWithDeleteAllActionEnabled", "testBuildStackedNotification", "testBuildStackedNotificationWithArchiveActionEnabled", "testBuildStackedNotificationWithDeleteActionEnabled", "testBuildStackedNotificationWithMarkAsSpamActionEnabled" ]
      },
      "predecessor" : "8c55e571f8b59e251ad765c57a430ba61c45fb2f~1"
    },
    "a2e33fcc230dbd4caf077dc2860c00ea5c822c0e" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.MessageReferenceTest" : [ "checkIdentityStringFromMessageReferenceWithFlag", "checkIdentityStringFromMessageReferenceWithoutFlag", "checkMessageReferenceWithChangedFlag", "checkMessageReferenceWithChangedUid", "equalsWithAnObjectShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentAccountUuidShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentFolderNameShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentUidShouldReturnFalse", "equalsWithMessageReferenceContainingSameDataShouldReturnTrue", "equalsWithNullShouldReturnFalse", "equalsWithSameMessageReferenceShouldReturnTrue", "parseIdentityStringContainingBadVersionNumber", "parseIdentityStringWithCorruptFlag", "parseIdentityStringWithFlag", "parseIdentityStringWithoutFlag", "parseNullIdentityString" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withEmptyDatabase_shouldSetsDatabaseVersion", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ]
      },
      "predecessor" : "8c55e571f8b59e251ad765c57a430ba61c45fb2f"
    },
    "8179d88113f8ab8c60c2b00a4aa7d0392594fc5e" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ],
        "k9mail§com.fsck.k9.mailstore.migrations.MigrationTo60Test" : [ "testMigrateAppend", "testMigrateEmptyTrash", "testMigrateExpunge", "testMigrateMarkAllMessagesRead", "testMigrateMoveOrCopy__withEvenOlderFormat", "testMigrateMoveOrCopy__withOldFormat", "testMigrateMoveOrCopy__withUidArray", "testMigrateMoveOrCopy__withUidMap", "testMigrateSetFlag", "testMigrateSetFlag__oldFormat" ]
      },
      "predecessor" : "8179d88113f8ab8c60c2b00a4aa7d0392594fc5e~1"
    },
    "5d2e28e8ed269082eb4012515c93e2a025d6f848" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.mailstore.migrations.MigrationTo60Test" : [ "testMigrateAppend", "testMigrateEmptyTrash", "testMigrateExpunge", "testMigrateMarkAllMessagesRead", "testMigrateMoveOrCopy__withEvenOlderFormat", "testMigrateMoveOrCopy__withOldFormat", "testMigrateMoveOrCopy__withUidArray", "testMigrateMoveOrCopy__withUidMap", "testMigrateSetFlag", "testMigrateSetFlag__oldFormat" ]
      },
      "predecessor" : "5d2e28e8ed269082eb4012515c93e2a025d6f848~1"
    },
    "874943885f393a7dac8b6142e394d43cea4fb704" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages" ]
      },
      "predecessor" : "874943885f393a7dac8b6142e394d43cea4fb704~1"
    },
    "e96718f3a00a2071fbeb758731ef3430f5bf0ecd" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ]
      },
      "predecessor" : "78c7f01719254f45505bfc7c7caa542276a93256"
    },
    "17863cfeaf88635e533569f43a435c1841937f19" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ]
      },
      "predecessor" : "be67e849c2cc9b345ac140999aef5321b2bfb733"
    },
    "19b7d4491d5a925a4f53f6d155619e674f16c5cc" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.SmtpTransportTest" : [ "open_withoutAuthLoginExtension_shouldConnectWithoutAuthentication", "open_withoutCramMd5AuthExtension_shouldThrow", "open_withoutLoginAndPlainAuthExtensions_shouldThrow", "sendMessage_with8BitEncoding", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withSingleRecipient", "sendMessage_withoutAddressToSendTo_shouldNotOpenConnection" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError" ]
      },
      "predecessor" : "19b7d4491d5a925a4f53f6d155619e674f16c5cc~1"
    },
    "47a5b5288f383a930ec49b5331d774c1a319463c" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ]
      },
      "predecessor" : "47a5b5288f383a930ec49b5331d774c1a319463c~1"
    },
    "7ad0a959e2490d0556a3488ef452a35cb8904f40" : {
      "testcases" : {
        "k9mail§com.fsck.k9.crypto.MessageDecryptVerifierTest" : [ "findEncryptedPartsShouldReturnEmptyEncryptedPart", "findEncryptedPartsShouldReturnMultipleEncryptedParts", "findEncrypted__withMultipartEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubEncryptedAndEncrypted__shouldReturnBoth", "findEncrypted__withMultipartMixedSubEncryptedAndText__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubSignedAndText__shouldReturnSigned", "findEncrypted__withMultipartMixedSubSigned__shouldReturnSigned", "findEncrypted__withMultipartMixedSubTextAndEncrypted__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubTextAndSigned__shouldReturnSigned", "findSigned__withComplexMultipartSigned__shouldReturnRoot", "findSigned__withSimpleMultipartSigned__shouldReturnRoot" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "47a5b5288f383a930ec49b5331d774c1a319463c"
    },
    "1680b0c8b6a7a83ee4a156013466b07aee68adc2" : {
      "testcases" : {
        "k9mail§com.fsck.k9.crypto.MessageDecryptVerifierTest" : [ "findPrimaryCryptoPart_withEmptyMultipartAlternativeInsideMultipartMixed_shouldReturnNull", "findPrimaryCryptoPart_withEmptyMultipartAlternative_shouldReturnNull", "findPrimaryCryptoPart_withEmptyMultipartMixed_shouldReturnNull", "findPrimaryCryptoPart_withMultipartAlternativeContainingPgpInline", "findPrimaryCryptoPart_withMultipartMixedContainingMultipartAlternativeContainingPgpInline", "findPrimaryCryptoPart_withMultipartMixedContainingPgpInline" ]
      },
      "predecessor" : "1680b0c8b6a7a83ee4a156013466b07aee68adc2~1"
    },
    "364174e87af0a641e999508fa95babc6ce71aa78" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "1680b0c8b6a7a83ee4a156013466b07aee68adc2"
    },
    "973cbfe4296d2aee6ecf7d10cac2afc464f67e10" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.ActivityListenerTest" : [ "getOperation__whenSynchronizeMailboxFailed_shouldResultInValidStatus" ]
      },
      "predecessor" : "364174e87af0a641e999508fa95babc6ce71aa78"
    },
    "824f28dd7e256da2d5d6a8834eeaab9c71d2d336" : {
      "testcases" : {
        "k9mail§com.fsck.k9.helper.HtmlSanitizerTest" : [ "shouldNotEndAttributeValueWhenEncounteringConditionalComment", "shouldRemoveMetaRefreshBetweenHeadAndBody", "shouldRemoveMetaRefreshButKeepOtherMetaTags", "shouldRemoveMetaRefreshInBody", "shouldRemoveMetaRefreshInHead", "shouldRemoveMetaRefreshWithMixedCaseAttributeValue", "shouldRemoveMetaRefreshWithSpacesInAttributeValue", "shouldRemoveMetaRefreshWithUpperCaseAttributeValue", "shouldRemoveMetaRefreshWithoutQuotesAroundAttributeValue", "shouldRemoveMultipleMetaRefreshTags" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlusRfc822Message" ]
      },
      "predecessor" : "973cbfe4296d2aee6ecf7d10cac2afc464f67e10"
    },
    "6ebe298fa0a0e1ee58c0cdb4d3b101013632b422" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyFailureIfStoreThrowsException", "searchLocalMessagesSynchronous_shouldNotifyStartedListingLocalMessages", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyListenerOfNewMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "87b49dfaa8d1779072fb5c6d24955dbda7fda165"
    },
    "cee27e07d07f7394b27e956e895870f1d01730ea" : {
      "testcases" : {
        "k9mail§com.fsck.k9.notification.DeviceNotificationsTest" : [ "buildSummaryNotification_withAdditionalMessages", "buildSummaryNotification_withMultiMessageNotification", "buildSummaryNotification_withoutDeleteAllAction" ],
        "k9mail§com.fsck.k9.notification.NotificationDataTest" : [ "testAddNotificationContent", "testAddNotificationContentWithReplacingNotification", "testContainsStarredMessages", "testContainsStarredMessagesWithAdditionalMessages", "testGetActiveNotificationIds", "testGetAllMessageReferences", "testGetContentForSummaryNotification", "testGetHolderForLatestNotification", "testIsSingleMessageNotification", "testNewMessagesCount", "testOverflowNotifications", "testRemoveDoesNotLeakNotificationIds", "testRemoveNotificationForMessage", "testRemoveNotificationForMessageWithRecreatingNotification", "testUnreadMessagesCount" ]
      },
      "predecessor" : "6ebe298fa0a0e1ee58c0cdb4d3b101013632b422"
    },
    "ad95a011f4c5f0f730cbea76d8620cb5598ee6a4" : {
      "testcases" : {
        "k9mail§com.fsck.k9.notification.AuthenticationErrorNotificationsTest" : [ "showAuthenticationErrorNotification_withIncomingServer_shouldCreateNotification", "showAuthenticationErrorNotification_withOutgoingServer_shouldCreateNotification" ],
        "k9mail§com.fsck.k9.notification.BaseNotificationsTest" : [ "testCreateAndInitializeNotificationBuilder", "testCreateBigTextStyleNotification" ],
        "k9mail§com.fsck.k9.notification.CertificateErrorNotificationsTest" : [ "testShowCertificateErrorNotificationForIncomingServer", "testShowCertificateErrorNotificationForOutgoingServer" ],
        "k9mail§com.fsck.k9.notification.DeviceNotificationsTest" : [ "buildSummaryNotification_withAdditionalMessages", "buildSummaryNotification_withMultiMessageNotification", "buildSummaryNotification_withPrivacyModeActive", "buildSummaryNotification_withSingleMessageNotification", "buildSummaryNotification_withoutDeleteAction", "buildSummaryNotification_withoutDeleteAllAction" ],
        "k9mail§com.fsck.k9.notification.LockScreenNotificationTest" : [ "configureLockScreenNotification_MESSAGE_COUNT", "configureLockScreenNotification_SENDERS_withMultipleMessages", "configureLockScreenNotification_SENDERS_withSingleMessage" ],
        "k9mail§com.fsck.k9.notification.SendFailedNotificationsTest" : [ "testShowSendFailedNotification" ],
        "k9mail§com.fsck.k9.notification.SyncNotificationsTest" : [ "testGetFetchingMailNotificationId" ],
        "k9mail§com.fsck.k9.notification.WearNotificationsTest" : [ "testBuildStackedNotification", "testBuildStackedNotificationWithArchiveActionEnabled", "testBuildStackedNotificationWithDeleteActionEnabled", "testBuildStackedNotificationWithMarkAsSpamActionEnabled" ]
      },
      "predecessor" : "cee27e07d07f7394b27e956e895870f1d01730ea"
    },
    "11112123052eb453b1436caa7bdf3019321b1faf" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.AddressTest" : [ "equals_withoutAddress_doesNotMatchWithAddress", "equals_withoutAddress_matchesSame", "equals_withoutPersonal_doesNotMatchWithAddress", "equals_withoutPersonal_matchesSame" ],
        "k9mail§com.fsck.k9.helper.ReplyToParserTest" : [ "getRecipientsToReplyAllTo_should_excludeDuplicates", "getRecipientsToReplyAllTo_should_excludeIdentityAddresses", "getRecipientsToReplyTo_should_prefer_listPost_over_from_field" ]
      },
      "predecessor" : "11112123052eb453b1436caa7bdf3019321b1faf~1"
    },
    "e35e6f421ab2ce30925cb91bfa9e1a4628e53a17" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "11112123052eb453b1436caa7bdf3019321b1faf"
    },
    "203fee99e0bf747648ad6247232eeea3ec62f081" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_withCapabilitiesInInitialResponse_shouldNotIssueCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withNegativeResponseToStartTlsCommand_shouldThrow", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "sendContinuation" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapResponseParserTest" : [ "readStatusResponse_withNoResponseAndAlertText_shouldThrowWithAlertText", "readStatusResponse_withNoResponse_shouldThrow", "testReadStatusResponseSkippingWrongTag", "testReadStatusResponseWithErrorResponse", "testReadStatusResponseWithOKResponse" ]
      },
      "predecessor" : "e35e6f421ab2ce30925cb91bfa9e1a4628e53a17"
    },
    "7d1f87082d49377c67b046df8dbbabad482b224b" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "listFoldersSynchronous_shouldNotifyFailureOnException", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "203fee99e0bf747648ad6247232eeea3ec62f081"
    },
    "fdda9fee9f96151be67ef5b15bec6c3bd6c2d9cb" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "fdda9fee9f96151be67ef5b15bec6c3bd6c2d9cb~1"
    },
    "448a8cf47fe755710dd27141432fbfd6c4130fef" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_resultsInSameIndexes", "doDbUpgrade_fromV29_resultsInSameTables", "doDbUpgrade_fromV29_resultsInSameTriggers", "doDbUpgrade_withV29_upgradesDB", "doDbUpgrade_withV29_upgradesDBToLatestVersion" ]
      },
      "predecessor" : "448a8cf47fe755710dd27141432fbfd6c4130fef~1"
    },
    "3e7f3320372c14e57835615140b2fe573812e186" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_resultsInSameIndexes", "doDbUpgrade_fromV29_resultsInSameTables", "doDbUpgrade_fromV29_resultsInSameTriggers", "doDbUpgrade_withV29_upgradesDB", "doDbUpgrade_withV29_upgradesDBToLatestVersion" ]
      },
      "predecessor" : "3e7f3320372c14e57835615140b2fe573812e186~1"
    },
    "aebeaf88c515f1a67748dd8c2f01c7540cf498f6" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withBadDatabase_shouldThrowInDebugBuild", "doDbUpgrade_withEmptyDatabase_shouldSetsDatabaseVersion", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion", "getVersion_shouldReturnCurrentDatabaseVersion" ]
      },
      "predecessor" : "aebeaf88c515f1a67748dd8c2f01c7540cf498f6~1"
    },
    "58cfb8701fc328f4d3c998b679466f257579c1b4" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.MessageReferenceTest" : [ "checkIdentityStringFromMessageReferenceWithFlag", "checkIdentityStringFromMessageReferenceWithoutFlag", "checkMessageReferenceWithChangedFlag", "checkMessageReferenceWithChangedUid", "equalsWithAnObjectShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentAccountUuidShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentFolderNameShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentUidShouldReturnFalse", "equalsWithMessageReferenceContainingSameDataShouldReturnTrue", "equalsWithNullShouldReturnFalse", "equalsWithSameMessageReferenceShouldReturnTrue", "parseIdentityStringContainingBadVersionNumber", "parseIdentityStringWithCorruptFlag", "parseIdentityStringWithFlag", "parseIdentityStringWithoutFlag", "parseNullIdentityString" ],
        "k9mail§com.fsck.k9.notification.NewMailNotificationsTest" : [ "testRemoveNewMailNotification", "testRemoveNewMailNotificationClearingAllNotifications", "testRemoveNewMailNotificationWithCreateNotification", "testRemoveNewMailNotificationWithUnknownMessageReference", "testRemoveNewMailNotificationWithoutNotificationData" ],
        "k9mail§com.fsck.k9.notification.NotificationContentCreatorTest" : [ "createFromMessage_withEncryptedMessage", "createFromMessage_withErrorPreview", "createFromMessage_withMessageFromSelf", "createFromMessage_withRegularMessage", "createFromMessage_withStarredMessage", "createFromMessage_withoutEmptyMessage", "createFromMessage_withoutPreview", "createFromMessage_withoutSender", "createFromMessage_withoutSubject" ],
        "k9mail§com.fsck.k9.notification.NotificationDataTest" : [ "testAddNotificationContent", "testAddNotificationContentWithReplacingNotification", "testContainsStarredMessages", "testContainsStarredMessagesWithAdditionalMessages", "testGetActiveNotificationIds", "testGetAllMessageReferences", "testGetContentForSummaryNotification", "testGetHolderForLatestNotification", "testIsSingleMessageNotification", "testNewMessagesCount", "testOverflowNotifications", "testRemoveDoesNotLeakNotificationIds", "testRemoveNotificationForMessage", "testRemoveNotificationForMessageWithRecreatingNotification", "testUnreadMessagesCount" ],
        "k9mail§com.fsck.k9.notification.WearNotificationsTest" : [ "testAddSummaryActions", "testAddSummaryActionsWithArchiveAllActionEnabled", "testAddSummaryActionsWithDeleteAllActionEnabled", "testBuildStackedNotification", "testBuildStackedNotificationWithArchiveActionEnabled", "testBuildStackedNotificationWithDeleteActionEnabled", "testBuildStackedNotificationWithMarkAsSpamActionEnabled" ]
      },
      "predecessor" : "58cfb8701fc328f4d3c998b679466f257579c1b4~1"
    },
    "67e65c86abdb8c484ff91572bfa4ae4a3c622888" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.MessageReferenceTest" : [ "equalsWithMessageReferenceContainingDifferentAccountUuidShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentFolderNameShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentUidShouldReturnFalse", "equalsWithMessageReferenceContainingSameDataShouldReturnTrue", "equalsWithSameMessageReferenceShouldReturnTrue" ],
        "k9mail§com.fsck.k9.notification.NotificationContentCreatorTest" : [ "createFromMessage_withRegularMessage" ],
        "k9mail§com.fsck.k9.notification.NotificationDataTest" : [ "testGetAllMessageReferences", "testRemoveDoesNotLeakNotificationIds", "testRemoveNotificationForMessage", "testRemoveNotificationForMessageWithRecreatingNotification" ]
      },
      "predecessor" : "e703070a03c10f476490cd10bdc9f4a593b32a3e"
    },
    "46046f8926a511b4997d2d350c4780d78a81955a" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "getCurrentCryptoStatus_withoutCryptoProvider", "initFromReplyToMessage_shouldCallComposePgpInlineDecider" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.message.MessageBuilderTest" : [ "build_detachAndReattach_shouldSucceed" ]
      },
      "predecessor" : "7623a731fd9edf9927f7ecd627dac5baef88cfe2"
    },
    "6e982690d24e7de87c2e2eeb104403e6a1e0f082" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "6e982690d24e7de87c2e2eeb104403e6a1e0f082~1"
    },
    "884b12a48b6d8dc3e0de37f052ae2fe19387bb2a" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "getCurrentCryptoStatus_withoutCryptoProvider", "initFromReplyToMessage_shouldCallComposePgpInlineDecider", "onBccTokenAdded_notifiesListenerOfRecipientChange", "onBccTokenChanged_notifiesListenerOfRecipientChange", "onBccTokenRemoved_notifiesListenerOfRecipientChange", "onCcTokenAdded_notifiesListenerOfRecipientChange", "onCcTokenChanged_notifiesListenerOfRecipientChange", "onCcTokenRemoved_notifiesListenerOfRecipientChange", "onToTokenAdded_notifiesListenerOfRecipientChange", "onToTokenChanged_notifiesListenerOfRecipientChange", "onToTokenRemoved_notifiesListenerOfRecipientChange" ]
      },
      "predecessor" : "884b12a48b6d8dc3e0de37f052ae2fe19387bb2a~1"
    },
    "9207afdc69a3daadef93bfa6be07130ce878e0f2" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.internet.MessageIdGeneratorTest" : [ "generateMessageId_withFromAndReplyToAddress", "generateMessageId_withReplyToAddress" ]
      },
      "predecessor" : "9207afdc69a3daadef93bfa6be07130ce878e0f2~1"
    },
    "d084fdbc1111919f6ec3bd0d86166ae3ee3674ba" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTriggers" ]
      },
      "predecessor" : "9207afdc69a3daadef93bfa6be07130ce878e0f2"
    },
    "7d628cf719f0ee404d609f9006565c3771d195d0" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow" ],
        "k9mail-library§com.fsck.k9.mail.transport.SmtpTransportTest" : [ "open_withAutomaticAuthAndNoTransportSecurityAndAuthCramMd5Extension_shouldUseAuthCramMd5", "open_withCramMd5AuthExtension" ]
      },
      "predecessor" : "7d628cf719f0ee404d609f9006565c3771d195d0~1"
    },
    "44e9960dc67b088982d3edd933e026b593b729f7" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withEmptyDatabase_shouldSetsDatabaseVersion" ]
      },
      "predecessor" : "44e9960dc67b088982d3edd933e026b593b729f7~1"
    },
    "c007271b4e3bc7808f70c434e881043938ef25b8" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ]
      },
      "predecessor" : "c007271b4e3bc7808f70c434e881043938ef25b8~1"
    },
    "cbbab8b920a1d957a0121c3e0440a05256950744" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow" ],
        "k9mail-library§com.fsck.k9.mail.transport.SmtpTransportTest" : [ "open_withAutomaticAuthAndNoTransportSecurityAndAuthCramMd5Extension_shouldUseAuthCramMd5", "open_withCramMd5AuthExtension" ]
      },
      "predecessor" : "5104278c709f559590ea53ca70d8447526bd1e64"
    },
    "0387b253ba934504f975c46d6a23b575f6bc245b" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "getCurrentCryptoStatus_withoutCryptoProvider", "initFromReplyToMessage_shouldCallComposePgpInlineDecider", "onBccTokenAdded_notifiesListenerOfRecipientChange", "onBccTokenChanged_notifiesListenerOfRecipientChange", "onBccTokenRemoved_notifiesListenerOfRecipientChange", "onCcTokenAdded_notifiesListenerOfRecipientChange", "onCcTokenChanged_notifiesListenerOfRecipientChange", "onCcTokenRemoved_notifiesListenerOfRecipientChange", "onToTokenAdded_notifiesListenerOfRecipientChange", "onToTokenChanged_notifiesListenerOfRecipientChange", "onToTokenRemoved_notifiesListenerOfRecipientChange" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "0387b253ba934504f975c46d6a23b575f6bc245b~1"
    },
    "83951c087eb70f4e2feacf7c291ffabc0cca34da" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers" ]
      },
      "predecessor" : "83951c087eb70f4e2feacf7c291ffabc0cca34da~1"
    },
    "ac6a1ea213de4b4ea05b5da2eba356126a0fca2b" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers" ]
      },
      "predecessor" : "ac6a1ea213de4b4ea05b5da2eba356126a0fca2b~1"
    },
    "2cec47491d963b0e7493469aba1bf9497ccf2678" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavFolderTest" : [ "appendWebDavMessages_replaces_messages_with_WebDAV_versions", "can_fetch_message_count", "can_fetch_unread_message_count", "close_should_close_folder", "copyMessages_should_requestCopyXml", "copyMessages_should_send_copy_command", "exists_is_always_true", "folder_can_fetch_less_than_10_envelopes", "folder_can_fetch_less_than_20_flags", "folder_can_fetch_more_than_10_envelopes", "folder_can_fetch_more_than_20_flags", "folder_can_fetch_sensible_body_data_and_notifies_listener", "folder_can_handle_empty_response_to_body_request", "folder_does_not_notify_listener_twice_when_fetching_flags_and_bodies", "folder_does_not_start_open", "folder_ignores_exception_thrown_when_closing", "getMessages_shouldProvideCorrectHeadersInRequest", "getMessages_should_request_message_search", "getMessages_should_throw_message_exception_if_requesting_messages_from_empty_folder", "mode_is_always_readwrite", "moveMessages_should_requestMoveXml", "moveMessages_should_send_move_command", "open_should_open_folder" ]
      },
      "predecessor" : "ac6a1ea213de4b4ea05b5da2eba356126a0fca2b"
    },
    "4161b914415aef08ab645387893812d13356bda3" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyFailureIfStoreThrowsException", "searchLocalMessagesSynchronous_shouldNotifyStartedListingLocalMessages", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyListenerOfNewMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "4161b914415aef08ab645387893812d13356bda3~1"
    },
    "8ee9b2c5919cc0b83e4eff13e32b41d1cf301ffb" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyFailureIfStoreThrowsException", "searchLocalMessagesSynchronous_shouldNotifyStartedListingLocalMessages", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyListenerOfNewMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "8ee9b2c5919cc0b83e4eff13e32b41d1cf301ffb~1"
    },
    "2e01043a28cb3f6ad9bdbb5e126b8b87b692f5e2" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyFailureIfStoreThrowsException", "searchLocalMessagesSynchronous_shouldNotifyStartedListingLocalMessages", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyListenerOfNewMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "2e01043a28cb3f6ad9bdbb5e126b8b87b692f5e2~1"
    },
    "b97cbba3205cdda576cf47cb84b6305f49f66963" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldCloseTheFolder", "searchLocalMessagesSynchronous_shouldNotifyStartedListingLocalMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "b97cbba3205cdda576cf47cb84b6305f49f66963~1"
    },
    "329ed78c5dae5e8d53ba014891587b7151c4bf13" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavFolderTest" : [ "appendWebDavMessages_replaces_messages_with_WebDAV_versions", "can_fetch_message_count", "can_fetch_unread_message_count", "close_should_close_folder", "copyMessages_should_requestCopyXml", "copyMessages_should_send_copy_command", "exists_is_always_true", "folder_can_fetch_less_than_10_envelopes", "folder_can_fetch_less_than_20_flags", "folder_can_fetch_more_than_10_envelopes", "folder_can_fetch_more_than_20_flags", "folder_can_fetch_sensible_body_data_and_notifies_listener", "folder_can_handle_empty_response_to_body_request", "folder_does_not_notify_listener_twice_when_fetching_flags_and_bodies", "folder_does_not_start_open", "folder_ignores_exception_thrown_when_closing", "getMessages_shouldProvideCorrectHeadersInRequest", "getMessages_should_request_message_search", "getMessages_should_throw_message_exception_if_requesting_messages_from_empty_folder", "mode_is_always_readwrite", "moveMessages_should_requestMoveXml", "moveMessages_should_send_move_command", "open_should_open_folder" ]
      },
      "predecessor" : "329ed78c5dae5e8d53ba014891587b7151c4bf13~1"
    },
    "c45251f66e19e2a9a73a1326ff902ef9877ef2b6" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldCloseTheFolder", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError" ]
      },
      "predecessor" : "c45251f66e19e2a9a73a1326ff902ef9877ef2b6~1"
    },
    "f3bf599410326c60004370929f77ea19828606f0" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ]
      },
      "predecessor" : "ff6bd274d32f250df5630c21455a9bac33327306"
    },
    "b1b2d0a3f1a7d577a8446138add3e56264be1449" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "getCurrentCryptoStatus_withoutCryptoProvider", "initFromReplyToMessage_shouldCallComposePgpInlineDecider" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.message.MessageBuilderTest" : [ "build_detachAndReattach_shouldSucceed" ]
      },
      "predecessor" : "f3bf599410326c60004370929f77ea19828606f0"
    },
    "238cf80ec915329c23ed751b6dbf2074e836f829" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.filter.SmtpDataStuffingTest" : [ "dotAtStartOfStream" ]
      },
      "predecessor" : "238cf80ec915329c23ed751b6dbf2074e836f829~1"
    },
    "b54f6ee11b1f6b7c7fe59643f2f8ea9ed5212f10" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.ActivityListenerTest" : [ "getOperation__whenFolderStatusChanged", "getOperation__whenSynchronizeMailboxAddOrUpdateMessage", "getOperation__whenSynchronizeMailboxFailedAfterHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFailed_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFinished", "getOperation__whenSynchronizeMailboxHeadersFinished", "getOperation__whenSynchronizeMailboxHeadersProgress", "getOperation__whenSynchronizeMailboxHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxNewMessage", "getOperation__whenSynchronizeMailboxProgress_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxStarted" ]
      },
      "predecessor" : "238cf80ec915329c23ed751b6dbf2074e836f829"
    },
    "f4e84c302b16e491bfdaa4462cf0f541c9b2f045" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.ActivityListenerTest" : [ "getOperation__whenFolderStatusChanged", "getOperation__whenSynchronizeMailboxAddOrUpdateMessage", "getOperation__whenSynchronizeMailboxFailedAfterHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFailed_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFinished", "getOperation__whenSynchronizeMailboxHeadersFinished", "getOperation__whenSynchronizeMailboxHeadersProgress", "getOperation__whenSynchronizeMailboxHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxNewMessage", "getOperation__whenSynchronizeMailboxProgress_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxStarted" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders" ]
      },
      "predecessor" : "b54f6ee11b1f6b7c7fe59643f2f8ea9ed5212f10"
    },
    "0a473e481bc179db3d408b946ac1915afc93938c" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.ActivityListenerTest" : [ "getOperation__whenFolderStatusChanged", "getOperation__whenSynchronizeMailboxAddOrUpdateMessage", "getOperation__whenSynchronizeMailboxFailedAfterHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFailed_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFinished", "getOperation__whenSynchronizeMailboxHeadersFinished", "getOperation__whenSynchronizeMailboxHeadersProgress", "getOperation__whenSynchronizeMailboxHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxNewMessage", "getOperation__whenSynchronizeMailboxProgress_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxStarted" ]
      },
      "predecessor" : "212ee9142237b9bc4fb8283290f2cb12d6c5f151"
    },
    "d4d796010ce5c10434f7d8b4c6cdb0ea7ececfb1" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testTextPlusRfc822Message" ]
      },
      "predecessor" : "206e168a78fdd1d0831122280feecd54e764af9a"
    },
    "93aaa85c14734969410903f2afe8197f62d02901" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.ActivityListenerTest" : [ "getOperation__whenFolderStatusChanged", "getOperation__whenSynchronizeMailboxAddOrUpdateMessage", "getOperation__whenSynchronizeMailboxFailedAfterHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFailed_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFinished", "getOperation__whenSynchronizeMailboxHeadersFinished", "getOperation__whenSynchronizeMailboxHeadersProgress", "getOperation__whenSynchronizeMailboxHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxNewMessage", "getOperation__whenSynchronizeMailboxProgress_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxStarted" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldAddErrorMessageInDebug", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyFailureIfStoreThrowsException", "searchLocalMessagesSynchronous_shouldNotifyStartedListingLocalMessages", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyListenerOfNewMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "d4d796010ce5c10434f7d8b4c6cdb0ea7ececfb1"
    },
    "82f3c67ff0ac0a4da02aa21e51e933905eaa8580" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldAddErrorMessageInDebug", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "82f3c67ff0ac0a4da02aa21e51e933905eaa8580~1"
    },
    "420b6496a809b8e842a3f4898b7e8dcea11c3337" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.MessageTest" : [ "testSetSendDateFormatsHeaderCorrectlyWithCurrentTimeZone", "testSetSendDateFormatsHeaderCorrectlyWithoutTimeZone" ],
        "k9mail-library§com.fsck.k9.mail.internet.CharsetSupportTest" : [ "testFixupCharset" ],
        "k9mail-library§com.fsck.k9.mail.internet.ListHeadersTest" : [ "getListPostAddresses_shouldProvideAllListPostHeaders", "getListPostAddresses_withMailTo_shouldReturnCorrectAddress", "getListPostAddresses_withMailtoWithNote_shouldReturnCorrectAddress", "getListPostAddresses_withMailtoWithSubject_shouldReturnCorrectAddress", "getListPostAddresses_withMessageWithNo_shouldReturnEmptyList", "getListPostAddresses_withoutMailtoUriInBrackets_shouldReturnEmptyList" ],
        "k9mail-library§com.fsck.k9.mail.internet.MimeMessageParseTest" : [ "headerFieldNameWithSpace" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUidFromMessageId_withoutMessageIdHeader_shouldReturnNull" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldAddErrorMessageInDebug", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.helper.ReplyToParserTest" : [ "getRecipientsToReplyAllTo_should_excludeDuplicates", "getRecipientsToReplyAllTo_should_excludeIdentityAddresses", "getRecipientsToReplyAllTo_should_returnFromAndToAndCcRecipients", "getRecipientsToReplyTo_should_prefer_from_ifOtherIsIdentity", "getRecipientsToReplyTo_should_prefer_listPost_over_from_field", "getRecipientsToReplyTo_should_prefer_replyTo_over_any_other_field", "getRecipientsToReplyTo_should_return_from_otherwise" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateMixedWithAttachments", "migratePgpMimeEncryptedMessage", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.message.extractors.AttachmentInfoExtractorTest" : [ "extractInfoForDb__withContentTypeAndEncodedWordName__shouldReturnDecodedName", "extractInfoForDb__withContentTypeAndName__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionAttach__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionInlineAndContentId__shouldReturnInlineAttachment", "extractInfoForDb__withDispositionInvalidSizeParam__shouldReturnUnknownSize", "extractInfoForDb__withDispositionSizeParam__shouldReturnThatSize", "extractInfoForDb__withNoBody__shouldReturnContentAvailable", "extractInfoForDb__withNoBody__shouldReturnContentNotAvailable", "extractInfoForDb__withNoHeaders__shouldReturnEmptyValues", "extractInfoForDb__withTextMimeType__shouldReturnTxtExtension", "extractInfo__fromLocalBodyPart__shouldReturnProvidedValues", "extractInfo__withDeferredFileBody" ]
      },
      "predecessor" : "82f3c67ff0ac0a4da02aa21e51e933905eaa8580"
    },
    "e76a9fea9d382e3b3b26dcf04725634770116ca1" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.MessageTest" : [ "testSetSendDateFormatsHeaderCorrectlyWithCurrentTimeZone", "testSetSendDateFormatsHeaderCorrectlyWithoutTimeZone" ],
        "k9mail-library§com.fsck.k9.mail.internet.CharsetSupportTest" : [ "testFixupCharset" ],
        "k9mail-library§com.fsck.k9.mail.internet.MimeMessageParseTest" : [ "headerFieldNameWithSpace" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "getUidFromMessageId_withoutMessageIdHeader_shouldReturnNull" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateMixedWithAttachments", "migratePgpMimeEncryptedMessage", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.message.extractors.AttachmentInfoExtractorTest" : [ "extractInfoForDb__withContentTypeAndEncodedWordName__shouldReturnDecodedName", "extractInfoForDb__withContentTypeAndName__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionAttach__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionInlineAndContentId__shouldReturnInlineAttachment", "extractInfoForDb__withDispositionInvalidSizeParam__shouldReturnUnknownSize", "extractInfoForDb__withDispositionSizeParam__shouldReturnThatSize", "extractInfoForDb__withNoBody__shouldReturnContentAvailable", "extractInfoForDb__withNoBody__shouldReturnContentNotAvailable", "extractInfoForDb__withNoHeaders__shouldReturnEmptyValues", "extractInfoForDb__withTextMimeType__shouldReturnTxtExtension", "extractInfo__fromLocalBodyPart__shouldReturnProvidedValues", "extractInfo__withDeferredFileBody" ]
      },
      "predecessor" : "e76a9fea9d382e3b3b26dcf04725634770116ca1~1"
    },
    "5816f84df0f5b04392d7ce67710798645ea29371" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords" ]
      },
      "predecessor" : "5816f84df0f5b04392d7ce67710798645ea29371~1"
    },
    "ff274e29783a0cc74284cdac62b78681410269fb" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldAddErrorMessageInDebug", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.mailstore.AttachmentResolverTest" : [ "buildCidMap__onMultipartWithEmptyBodyPart__shouldReturnEmptyMap", "buildCidMap__onMultipartWithNoParts__shouldReturnEmptyMap", "buildCidMap__onPartWithNoBody__shouldReturnEmptyMap", "buildCidMap__onTwoPart__shouldReturnBothUris" ],
        "k9mail§com.fsck.k9.mailstore.DeferredFileBodyTest" : [ "withLongData__shouldReturnData", "withShortData__getFile__shouldWriteDataToFile", "withShortData__shouldReturnData", "withShortData__writeTo__shouldWriteData" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withEmptyDatabase_shouldSetsDatabaseVersion", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ],
        "k9mail§com.fsck.k9.message.MessageBuilderTest" : [ "buildWithException_detachAndReattach_shouldThrow", "build_detachAndReattach_shouldSucceed" ],
        "k9mail§com.fsck.k9.message.signature.HtmlSignatureRemoverTest" : [ "shouldNotStripSignatureInsideBlockquoteTags", "shouldStripSignatureAfterLastBlockquoteTags", "shouldStripSignatureBeforeBlockquoteTag", "shouldStripSignatureBetweenBlockquoteTags", "shouldStripSignatureFromK9StyleHtml" ],
        "k9mail§com.fsck.k9.preferences.SettingsExporterTest" : [ "exportPreferences_exportsGlobalSettingsWhenRequested", "exportPreferences_ignoresGlobalSettingsWhenRequested", "exportPreferences_producesXML", "exportPreferences_setsFormatTo1", "exportPreferences_setsVersionToLatest" ],
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "getImportStreamContents_account", "getImportStreamContents_alternativeName", "importSettings_disablesAccountsNeedingPasswords", "importSettings_throwsExceptionOnBlankFile", "importSettings_throwsExceptionOnInvalidFormat", "importSettings_throwsExceptionOnInvalidVersion", "importSettings_throwsExceptionOnMissingFormat", "importSettings_throwsExceptionOnMissingVersion", "importSettings_throwsExceptionOnNonPositiveFormat", "importSettings_throwsExceptionOnNonPositiveVersion", "parseSettings_account", "parseSettings_account_cram_md5", "parseSettings_account_identities" ]
      },
      "predecessor" : "ff274e29783a0cc74284cdac62b78681410269fb~1"
    },
    "7309132659340d3d13913cac14276262051cabff" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldAddErrorMessageInDebug", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.mailstore.AttachmentResolverTest" : [ "buildCidMap__onMultipartWithEmptyBodyPart__shouldReturnEmptyMap", "buildCidMap__onMultipartWithNoParts__shouldReturnEmptyMap", "buildCidMap__onPartWithNoBody__shouldReturnEmptyMap", "buildCidMap__onTwoPart__shouldReturnBothUris" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withEmptyDatabase_shouldSetsDatabaseVersion", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ],
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords", "importSettings_throwsExceptionOnBlankFile", "importSettings_throwsExceptionOnInvalidFormat", "importSettings_throwsExceptionOnInvalidVersion", "importSettings_throwsExceptionOnMissingFormat", "importSettings_throwsExceptionOnMissingVersion", "importSettings_throwsExceptionOnNonPositiveFormat", "importSettings_throwsExceptionOnNonPositiveVersion" ]
      },
      "predecessor" : "7309132659340d3d13913cac14276262051cabff~1"
    },
    "eb618290038dcba4ed9b53aa8ef39e38fe3e9638" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldAddErrorMessageInDebug", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withEmptyDatabase_shouldSetsDatabaseVersion", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ],
        "k9mail§com.fsck.k9.message.signature.HtmlSignatureRemoverTest" : [ "shouldNotStripSignatureInsideBlockquoteTags", "shouldStripSignatureAfterLastBlockquoteTags", "shouldStripSignatureBeforeBlockquoteTag", "shouldStripSignatureBetweenBlockquoteTags", "shouldStripSignatureFromK9StyleHtml" ],
        "k9mail§com.fsck.k9.preferences.SettingsExporterTest" : [ "exportPreferences_exportsGlobalSettingsWhenRequested" ],
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "getImportStreamContents_account", "getImportStreamContents_alternativeName", "importSettings_disablesAccountsNeedingPasswords", "importSettings_throwsExceptionOnBlankFile", "importSettings_throwsExceptionOnInvalidFormat", "importSettings_throwsExceptionOnInvalidVersion", "importSettings_throwsExceptionOnMissingFormat", "importSettings_throwsExceptionOnMissingVersion", "importSettings_throwsExceptionOnNonPositiveFormat", "importSettings_throwsExceptionOnNonPositiveVersion", "parseSettings_account", "parseSettings_account_cram_md5", "parseSettings_account_identities" ]
      },
      "predecessor" : "eb618290038dcba4ed9b53aa8ef39e38fe3e9638~1"
    },
    "021b24c93f2fb2ad39d758f1760889134cbd7312" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldAddErrorMessageInDebug", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage" ],
        "k9mail§com.fsck.k9.preferences.SettingsExporterTest" : [ "exportPreferences_exportsGlobalSettingsWhenRequested" ],
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords", "importSettings_throwsExceptionOnBlankFile", "importSettings_throwsExceptionOnInvalidFormat", "importSettings_throwsExceptionOnInvalidVersion", "importSettings_throwsExceptionOnMissingFormat", "importSettings_throwsExceptionOnMissingVersion", "importSettings_throwsExceptionOnNonPositiveFormat", "importSettings_throwsExceptionOnNonPositiveVersion" ]
      },
      "predecessor" : "021b24c93f2fb2ad39d758f1760889134cbd7312~1"
    },
    "05bd6e0a5b79b78ca77cd5459e7bf8af7485ec33" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.ActivityListenerTest" : [ "getOperation__whenFolderStatusChanged", "getOperation__whenSynchronizeMailboxFailedAfterHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFailed_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFinished", "getOperation__whenSynchronizeMailboxHeadersFinished", "getOperation__whenSynchronizeMailboxHeadersProgress", "getOperation__whenSynchronizeMailboxHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxNewMessage", "getOperation__whenSynchronizeMailboxProgress_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxStarted" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_whenExceptionThrown_shouldAddErrorMessageInDebug", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords" ]
      },
      "predecessor" : "05bd6e0a5b79b78ca77cd5459e7bf8af7485ec33~1"
    },
    "3670f94424cf46e337c942e3ae89e2aa687f7e80" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.SmtpTransportTest" : [ "open_withAuthExternalExtension", "open_withAuthLoginExtension", "open_withAuthPlainExtension", "open_withAutomaticAuthAndNoTransportSecurityAndAuthCramMd5Extension_shouldUseAuthCramMd5", "open_withAutomaticAuthAndNoTransportSecurityAndAuthPlainExtension_shouldThrow", "open_withCramMd5AuthExtension", "open_withEhloFailing_shouldTryHelo", "open_withXoauth2Extension", "open_withXoauth2Extension_shouldInvalidateAndRetryOn400Response", "open_withXoauth2Extension_shouldInvalidateAndRetryOnInvalidJsonResponse", "open_withXoauth2Extension_shouldInvalidateAndRetryOnMissingStatusJsonResponse", "open_withXoauth2Extension_shouldThrowOn401Response", "open_withXoauth2Extension_shouldThrowOnFailure_fetchingToken", "open_withXoauth2Extension_shouldThrowOnMultipleFailure", "open_withoutAuthExternalExtension_shouldThrow", "open_withoutAuthLoginExtension_shouldConnectWithoutAuthentication", "open_withoutCramMd5AuthExtension_shouldThrow", "open_withoutLoginAndPlainAuthExtensions_shouldThrow", "open_withoutXoauth2Extension_shouldThrow", "sendMessage_with8BitEncoding", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withSingleRecipient" ]
      },
      "predecessor" : "3670f94424cf46e337c942e3ae89e2aa687f7e80~1"
    },
    "05df114eb1ffeb9fc7960bb6afc48f0b38e30faf" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.ActivityListenerTest" : [ "getOperation__whenFolderStatusChanged", "getOperation__whenSynchronizeMailboxFailedAfterHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFailed_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFinished", "getOperation__whenSynchronizeMailboxHeadersFinished", "getOperation__whenSynchronizeMailboxHeadersProgress", "getOperation__whenSynchronizeMailboxHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxNewMessage", "getOperation__whenSynchronizeMailboxProgress_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxStarted" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldAddErrorMessageInDebug", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.mailstore.AttachmentResolverTest" : [ "buildCidMap__onMultipartWithEmptyBodyPart__shouldReturnEmptyMap", "buildCidMap__onMultipartWithNoParts__shouldReturnEmptyMap", "buildCidMap__onPartWithNoBody__shouldReturnEmptyMap", "buildCidMap__onTwoPart__shouldReturnBothUris" ],
        "k9mail§com.fsck.k9.mailstore.DeferredFileBodyTest" : [ "withLongData__shouldReturnData", "withShortData__getFile__shouldWriteDataToFile", "withShortData__shouldReturnData", "withShortData__writeTo__shouldWriteData" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withEmptyDatabase_shouldSetsDatabaseVersion", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ],
        "k9mail§com.fsck.k9.message.MessageBuilderTest" : [ "buildWithException_detachAndReattach_shouldThrow", "build_detachAndReattach_shouldSucceed" ],
        "k9mail§com.fsck.k9.message.signature.HtmlSignatureRemoverTest" : [ "shouldNotStripSignatureInsideBlockquoteTags", "shouldStripSignatureAfterLastBlockquoteTags", "shouldStripSignatureBeforeBlockquoteTag", "shouldStripSignatureBetweenBlockquoteTags", "shouldStripSignatureFromK9StyleHtml" ],
        "k9mail§com.fsck.k9.preferences.SettingsExporterTest" : [ "exportPreferences_exportsGlobalSettingsWhenRequested", "exportPreferences_ignoresGlobalSettingsWhenRequested", "exportPreferences_producesXML", "exportPreferences_setsFormatTo1", "exportPreferences_setsVersionToLatest" ],
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "getImportStreamContents_account", "getImportStreamContents_alternativeName", "importSettings_disablesAccountsNeedingPasswords", "importSettings_throwsExceptionOnBlankFile", "importSettings_throwsExceptionOnInvalidFormat", "importSettings_throwsExceptionOnInvalidVersion", "importSettings_throwsExceptionOnMissingFormat", "importSettings_throwsExceptionOnMissingVersion", "importSettings_throwsExceptionOnNonPositiveFormat", "importSettings_throwsExceptionOnNonPositiveVersion", "parseSettings_account", "parseSettings_account_cram_md5", "parseSettings_account_identities" ]
      },
      "predecessor" : "3670f94424cf46e337c942e3ae89e2aa687f7e80"
    },
    "9d1f82901db17ec4970ad84570af05971c35872b" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "initFromReplyToMessage_shouldCallComposePgpInlineDecider", "onBccTokenAdded_notifiesListenerOfRecipientChange", "onBccTokenChanged_notifiesListenerOfRecipientChange", "onBccTokenRemoved_notifiesListenerOfRecipientChange", "onCcTokenAdded_notifiesListenerOfRecipientChange", "onCcTokenChanged_notifiesListenerOfRecipientChange", "onCcTokenRemoved_notifiesListenerOfRecipientChange", "onToTokenAdded_notifiesListenerOfRecipientChange", "onToTokenChanged_notifiesListenerOfRecipientChange", "onToTokenRemoved_notifiesListenerOfRecipientChange" ]
      },
      "predecessor" : "9d1f82901db17ec4970ad84570af05971c35872b~1"
    },
    "57633996fdb9400db8d615d120a4f5008f78f059" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "getCurrentCryptoStatus_withoutCryptoProvider", "initFromReplyToMessage_shouldCallComposePgpInlineDecider", "onBccTokenAdded_notifiesListenerOfRecipientChange", "onBccTokenChanged_notifiesListenerOfRecipientChange", "onBccTokenRemoved_notifiesListenerOfRecipientChange", "onCcTokenAdded_notifiesListenerOfRecipientChange", "onCcTokenChanged_notifiesListenerOfRecipientChange", "onCcTokenRemoved_notifiesListenerOfRecipientChange", "onToTokenAdded_notifiesListenerOfRecipientChange", "onToTokenChanged_notifiesListenerOfRecipientChange", "onToTokenRemoved_notifiesListenerOfRecipientChange" ]
      },
      "predecessor" : "9d1f82901db17ec4970ad84570af05971c35872b"
    },
    "a6ad98e9da93c354b0d270470f2c2ac7b3c68ab6" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.SmtpTransportTest" : [ "open_withAuthExternalExtension", "open_withAuthLoginExtension", "open_withAuthPlainExtension", "open_withAutomaticAuthAndNoTransportSecurityAndAuthCramMd5Extension_shouldUseAuthCramMd5", "open_withAutomaticAuthAndNoTransportSecurityAndAuthPlainExtension_shouldThrow", "open_withCramMd5AuthExtension", "open_withEhloFailing_shouldTryHelo", "open_withXoauth2Extension", "open_withXoauth2Extension_shouldInvalidateAndRetryOn400Response", "open_withXoauth2Extension_shouldInvalidateAndRetryOnInvalidJsonResponse", "open_withXoauth2Extension_shouldInvalidateAndRetryOnMissingStatusJsonResponse", "open_withXoauth2Extension_shouldThrowOn401Response", "open_withXoauth2Extension_shouldThrowOnFailure_fetchingToken", "open_withXoauth2Extension_shouldThrowOnMultipleFailure", "open_withoutAuthExternalExtension_shouldThrow", "open_withoutAuthLoginExtension_shouldConnectWithoutAuthentication", "open_withoutCramMd5AuthExtension_shouldThrow", "open_withoutXoauth2Extension_shouldThrow", "sendMessage_with8BitEncoding", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withSingleRecipient" ]
      },
      "predecessor" : "a6ad98e9da93c354b0d270470f2c2ac7b3c68ab6~1"
    },
    "24f4f867557c890fa297678f3a69b1e487c12146" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.message.html.HtmlConverterTest" : [ "testPreserveSpacesAtFirst", "testPreserveSpacesAtFirstForSpecialCharacters", "testQuoteDepthColor", "testTextQuoteToHtmlBlockquote", "testTextQuoteToHtmlBlockquoteIndented" ]
      },
      "predecessor" : "5fa77adfcbcad4acafdc4d315a7cf97624f3ee71"
    },
    "34588c1d9d477bd47a5da487f4232fa2cf89c280" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.SmtpTransportTest" : [ "open_withAuthExternalExtension", "open_withAuthLoginExtension", "open_withAuthPlainExtension", "open_withAutomaticAuthAndNoTransportSecurityAndAuthCramMd5Extension_shouldUseAuthCramMd5", "open_withAutomaticAuthAndNoTransportSecurityAndAuthPlainExtension_shouldThrow", "open_withCramMd5AuthExtension", "open_withEhloFailing_shouldTryHelo", "open_withManyExtensions_shouldParseAll", "open_withSupportWithEnhancedStatusCodesOnAuthFailure_shouldThrowEncodedMessage", "open_withXoauth2Extension", "open_withXoauth2Extension_shouldInvalidateAndRetryOn400Response", "open_withXoauth2Extension_shouldInvalidateAndRetryOnInvalidJsonResponse", "open_withXoauth2Extension_shouldInvalidateAndRetryOnMissingStatusJsonResponse", "open_withXoauth2Extension_shouldThrowOn401Response", "open_withXoauth2Extension_shouldThrowOnFailure_fetchingToken", "open_withXoauth2Extension_shouldThrowOnMultipleFailure", "open_withoutAuthExternalExtension_shouldThrow", "open_withoutAuthLoginExtension_shouldConnectWithoutAuthentication", "open_withoutCramMd5AuthExtension_shouldThrow", "open_withoutXoauth2Extension_shouldThrow", "sendMessage_with8BitEncoding", "sendMessage_with8BitEncodingExtensionNotCaseSensitive", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withSingleRecipient" ]
      },
      "predecessor" : "34588c1d9d477bd47a5da487f4232fa2cf89c280~1"
    },
    "f927eadbdb14a8dad734dc1edfa098441b6a5977" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.SmtpTransportTest" : [ "open_withAuthExternalExtension", "open_withAuthLoginExtension", "open_withAuthPlainExtension", "open_withAutomaticAuthAndNoTransportSecurityAndAuthCramMd5Extension_shouldUseAuthCramMd5", "open_withAutomaticAuthAndNoTransportSecurityAndAuthPlainExtension_shouldThrow", "open_withCramMd5AuthExtension", "open_withEhloFailing_shouldTryHelo", "open_withManyExtensions_shouldParseAll", "open_withSupportWithEnhancedStatusCodesOnAuthFailure_shouldThrowEncodedMessage", "open_withXoauth2Extension", "open_withXoauth2Extension_shouldInvalidateAndRetryOn400Response", "open_withXoauth2Extension_shouldInvalidateAndRetryOnInvalidJsonResponse", "open_withXoauth2Extension_shouldInvalidateAndRetryOnMissingStatusJsonResponse", "open_withXoauth2Extension_shouldThrowOn401Response", "open_withXoauth2Extension_shouldThrowOnFailure_fetchingToken", "open_withXoauth2Extension_shouldThrowOnMultipleFailure", "open_withoutAuthExternalExtension_shouldThrow", "open_withoutAuthLoginExtension_shouldConnectWithoutAuthentication", "open_withoutCramMd5AuthExtension_shouldThrow", "open_withoutXoauth2Extension_shouldThrow", "sendMessage_with8BitEncoding", "sendMessage_with8BitEncodingExtensionNotCaseSensitive", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withSingleRecipient" ]
      },
      "predecessor" : "f927eadbdb14a8dad734dc1edfa098441b6a5977~1"
    },
    "7f7a8902a9ae2cfa2c8ffa062aef3ff2754e4f61" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "open_withEhloFailing_shouldTryHelo", "open_withSupportWithEnhancedStatusCodesOnAuthFailure_shouldThrowEncodedMessage", "open_withXoauth2Extension_shouldInvalidateAndRetryOn400Response", "open_withXoauth2Extension_shouldInvalidateAndRetryOnInvalidJsonResponse", "open_withXoauth2Extension_shouldInvalidateAndRetryOnMissingStatusJsonResponse", "open_withXoauth2Extension_shouldThrowOn401Response", "open_withXoauth2Extension_shouldThrowOnMultipleFailure", "sendMessage_withNegativeReply_shouldThrow" ]
      },
      "predecessor" : "7f7a8902a9ae2cfa2c8ffa062aef3ff2754e4f61~1"
    },
    "188720d7ff69ea808f62bcc83026614801a84b2c" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "open_withEhloFailing_shouldTryHelo", "open_withSupportWithEnhancedStatusCodesOnAuthFailure_shouldThrowEncodedMessage", "open_withXoauth2Extension_shouldInvalidateAndRetryOn400Response", "open_withXoauth2Extension_shouldInvalidateAndRetryOnInvalidJsonResponse", "open_withXoauth2Extension_shouldInvalidateAndRetryOnMissingStatusJsonResponse", "open_withXoauth2Extension_shouldThrowOn401Response", "open_withXoauth2Extension_shouldThrowOnMultipleFailure", "sendMessage_withNegativeReply_shouldThrow" ]
      },
      "predecessor" : "188720d7ff69ea808f62bcc83026614801a84b2c~1"
    },
    "481823c7d8d35bf14165af2907713b38ea52c0d8" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "open_withAuthExternalExtension", "open_withAuthLoginExtension", "open_withAuthPlainExtension", "open_withAutomaticAuthAndNoTransportSecurityAndAuthCramMd5Extension_shouldUseAuthCramMd5", "open_withAutomaticAuthAndNoTransportSecurityAndAuthPlainExtension_shouldThrow", "open_withCramMd5AuthExtension", "open_withEhloFailing_shouldTryHelo", "open_withManyExtensions_shouldParseAll", "open_withSupportWithEnhancedStatusCodesOnAuthFailure_shouldThrowEncodedMessage", "open_withXoauth2Extension", "open_withXoauth2Extension_shouldInvalidateAndRetryOn400Response", "open_withXoauth2Extension_shouldInvalidateAndRetryOnInvalidJsonResponse", "open_withXoauth2Extension_shouldInvalidateAndRetryOnMissingStatusJsonResponse", "open_withXoauth2Extension_shouldThrowOn401Response", "open_withXoauth2Extension_shouldThrowOnFailure_fetchingToken", "open_withXoauth2Extension_shouldThrowOnMultipleFailure", "open_withoutAuthExternalExtension_shouldThrow", "open_withoutAuthLoginExtension_shouldConnectWithoutAuthentication", "open_withoutCramMd5AuthExtension_shouldThrow", "open_withoutXoauth2Extension_shouldThrow", "sendMessage_with8BitEncoding", "sendMessage_with8BitEncodingExtensionNotCaseSensitive", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withSingleRecipient" ]
      },
      "predecessor" : "188720d7ff69ea808f62bcc83026614801a84b2c"
    },
    "71a6cd3d9eb02fcb82d806d9c0b38d7fd1000a7f" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "open_withAuthExternalExtension", "open_withAuthLoginExtension", "open_withAuthPlainExtension", "open_withAutomaticAuthAndNoTransportSecurityAndAuthCramMd5Extension_shouldUseAuthCramMd5", "open_withAutomaticAuthAndNoTransportSecurityAndAuthPlainExtension_shouldThrow", "open_withCramMd5AuthExtension", "open_withEhloFailing_shouldTryHelo", "open_withManyExtensions_shouldParseAll", "open_withSupportWithEnhancedStatusCodesOnAuthFailure_shouldThrowEncodedMessage", "open_withXoauth2Extension", "open_withXoauth2Extension_shouldInvalidateAndRetryOn400Response", "open_withXoauth2Extension_shouldInvalidateAndRetryOnInvalidJsonResponse", "open_withXoauth2Extension_shouldInvalidateAndRetryOnMissingStatusJsonResponse", "open_withXoauth2Extension_shouldThrowOn401Response", "open_withXoauth2Extension_shouldThrowOnFailure_fetchingToken", "open_withXoauth2Extension_shouldThrowOnMultipleFailure", "open_withoutAuthExternalExtension_shouldThrow", "open_withoutAuthLoginExtension_shouldConnectWithoutAuthentication", "open_withoutCramMd5AuthExtension_shouldThrow", "open_withoutXoauth2Extension_shouldThrow", "sendMessage_with8BitEncoding", "sendMessage_with8BitEncodingExtensionNotCaseSensitive", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withSingleRecipient" ]
      },
      "predecessor" : "71a6cd3d9eb02fcb82d806d9c0b38d7fd1000a7f~1"
    },
    "9b49f08b6039b3dcc7ff288078d147f916930db2" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.message.html.HtmlConverterTest" : [ "testPreserveSpacesAtFirst", "testPreserveSpacesAtFirstForSpecialCharacters", "testQuoteDepthColor", "testTextQuoteToHtmlBlockquote", "testTextQuoteToHtmlBlockquoteIndented" ]
      },
      "predecessor" : "9b49f08b6039b3dcc7ff288078d147f916930db2~1"
    },
    "54c2e293883959823bb8f78e19f43eb327c4c79f" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavFolderTest" : [ "folder_can_fetch_sensible_body_data_and_notifies_listener", "folder_can_handle_empty_response_to_body_request", "folder_does_not_notify_listener_twice_when_fetching_flags_and_bodies", "folder_ignores_exception_thrown_when_closing" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavStoreTest" : [ "checkSettings_shouldRegisterHttpsSchemeWithRegistry", "checkSettings_withErrorResponse_shouldThrow", "checkSettings_withHttpPrefixedServerName_shouldUseInsecureConnection", "checkSettings_withInitialUnauthorizedResponse_shouldPerformBasicAuthentication", "checkSettings_withOkResponse_shouldPerformFormBasedAuthentication", "checkSettings_withSslException_shouldThrowCertificateValidationException", "checkSettings_withUnauthorizedResponses_shouldThrow", "checkSettings_withWebDavSslUri_shouldUseSecureConnection", "checkSettings_withWebDavTlsUri_shouldUseSecureConnection", "checkSettings_withWebDavUri_shouldUseInsecureConnection", "constructor_withImapStoreUri_shouldThrow", "getFolder_calledTwice_shouldReturnFirstInstance", "getFolder_shouldReturnWebDavFolderInstance", "getPersonalNamespaces_shouldProvideListOfAllFoldersSentFromResponses", "getPersonalNamespaces_shouldRequestFolderList", "getPersonalNamespaces_shouldRequestSpecialFolders", "getPersonalNamespaces_shouldSetSpecialFolderNames" ]
      },
      "predecessor" : "309b6891f4ddb8abed2cd8ba655540320c735f2b"
    },
    "0d3d9aab3257464ed7d9a467e44a36ab5eb58be3" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.message.html.HtmlConverterTest" : [ "anyTripletIsHRuledOut", "dashedHorizontalRulePrefixedWithTextIgnoredAsHR", "dashesContainingSpacesIgnoredAsHR", "doubleEqualsIgnoredAsHR", "doubleMinusIgnoredAsHR", "doubleUnderscoreIgnoredAsHR", "issue2259Spec", "mergeConsecutiveBreaksIntoOne", "replaceSpaceSeparatedDashesWithHR", "replacementOfScissorsByHR", "replacementWithHRAtBeginning", "replacementWithHRAtEnd", "testPreserveSpacesAtFirst", "testPreserveSpacesAtFirstForSpecialCharacters", "testQuoteDepthColor", "testTextQuoteToHtmlBlockquote", "testTextQuoteToHtmlBlockquoteIndented" ]
      },
      "predecessor" : "54c2e293883959823bb8f78e19f43eb327c4c79f"
    },
    "0f9bc4867a60a24ea6061e4357ff53a7130da487" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.message.html.HtmlConverterTest" : [ "anyTripletIsHRuledOut", "dashedHorizontalRulePrefixedWithTextIgnoredAsHR", "dashesContainingSpacesIgnoredAsHR", "doubleEqualsIgnoredAsHR", "doubleMinusIgnoredAsHR", "doubleUnderscoreIgnoredAsHR", "issue2259Spec", "mergeConsecutiveBreaksIntoOne", "replaceSpaceSeparatedDashesWithHR", "replacementOfScissorsByHR", "replacementWithHRAtBeginning", "replacementWithHRAtEnd", "testPreserveSpacesAtFirst", "testPreserveSpacesAtFirstForSpecialCharacters", "testQuoteDepthColor", "testTextQuoteToHtmlBlockquote", "testTextQuoteToHtmlBlockquoteIndented" ]
      },
      "predecessor" : "0f9bc4867a60a24ea6061e4357ff53a7130da487~1"
    },
    "98974a76997c0ead1243cc737380c327d59c649a" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.message.html.HtmlConverterTest" : [ "anyTripletIsHRuledOut", "dashedHorizontalRulePrefixedWithTextIgnoredAsHR", "dashesContainingSpacesIgnoredAsHR", "doubleEqualsIgnoredAsHR", "doubleMinusIgnoredAsHR", "doubleUnderscoreIgnoredAsHR", "issue2259Spec", "mergeConsecutiveBreaksIntoOne", "replaceSpaceSeparatedDashesWithHR", "replacementOfScissorsByHR", "replacementWithHRAtBeginning", "replacementWithHRAtEnd", "testPreserveSpacesAtFirst", "testPreserveSpacesAtFirstForSpecialCharacters", "testQuoteDepthColor", "testTextQuoteToHtmlBlockquote", "testTextQuoteToHtmlBlockquoteIndented" ]
      },
      "predecessor" : "0f9bc4867a60a24ea6061e4357ff53a7130da487"
    },
    "cf9c3d078e6e7296f16d8d8a29905047eeeec36b" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.message.html.HtmlConverterTest" : [ "anyTripletIsHRuledOut", "dashedHorizontalRulePrefixedWithTextIgnoredAsHR", "dashesContainingSpacesIgnoredAsHR", "doubleEqualsIgnoredAsHR", "doubleMinusIgnoredAsHR", "doubleUnderscoreIgnoredAsHR", "issue2259Spec", "mergeConsecutiveBreaksIntoOne", "replaceSpaceSeparatedDashesWithHR", "replacementOfScissorsByHR", "replacementWithHRAtBeginning", "replacementWithHRAtEnd", "testPreserveSpacesAtFirst", "testPreserveSpacesAtFirstForSpecialCharacters", "testQuoteDepthColor", "testTextQuoteToHtmlBlockquote", "testTextQuoteToHtmlBlockquoteIndented" ],
        "k9mail§com.fsck.k9.message.html.UriLinkifierTest" : [ "emptyText", "schemaMatchWithInvalidUriInMiddleOfTextFollowedVyValidUri", "simpleUri", "textWithoutUri_shouldBeCopiedToOutputBuffer", "uriEmbeddedInText", "uriNotPrecededByValidSeparatorFollowedByValidUri", "uriNotPrecededByValidSeparator_shouldNotBeLinkified", "uriPrecededByOpeningParenthesis", "uriPrecededBySomeText", "uriPrecededBySpace", "uriWithTrailingText", "uriWithUppercaseScheme" ]
      },
      "predecessor" : "cf9c3d078e6e7296f16d8d8a29905047eeeec36b~1"
    },
    "9d3cc8ed00a4f058b21318d125b96892cafc7d27" : {
      "testcases" : {
        "k9mail§com.fsck.k9.message.html.UriLinkifierTest" : [ "simpleUri", "uriEmbeddedInText", "uriNotPrecededByValidSeparatorFollowedByValidUri", "uriPrecededByOpeningParenthesis", "uriPrecededBySomeText", "uriPrecededBySpace", "uriWithTrailingText", "uriWithUppercaseScheme" ]
      },
      "predecessor" : "cf9c3d078e6e7296f16d8d8a29905047eeeec36b"
    },
    "b0682018e2af9fca305a381f91ac62b33ec6ccb7" : {
      "testcases" : {
        "k9mail§com.fsck.k9.message.html.HttpUriParserTest" : [ "domainWithTrailingAngleBracket", "domainWithTrailingNewline", "domainWithTrailingSlash", "domainWithTrailingSpace", "domainWithoutWww", "emptyAuthorityIgnored", "emptyUriIgnored", "fragment", "invalidDomainIgnored", "ipv4Address", "ipv4AddressWithEmptyPort", "ipv4AddressWithPort", "ipv4AddressWithTrailingSlash", "ipv6Address", "ipv6AddressWithBeginCompression", "ipv6AddressWithCompressionPort", "ipv6AddressWithEndCompression", "ipv6AddressWithPort", "ipv6AddressWithPrependedCompression", "ipv6AddressWithTrailingIp4AndPort", "ipv6AddressWithTrailingSlash", "ipv6InvalidClosingSquareBracketIgnored", "ipv6WithoutClosingSquareBracketIgnored", "query", "queryAndFragment", "simpleDomain", "uriInMiddleAfterInput", "uriInMiddleOfInput" ],
        "k9mail§com.fsck.k9.message.html.UriLinkifierTest" : [ "multipleValidUrisInRow", "schemaMatchWithInvalidUriInMiddleOfTextFollowedByValidUri", "simpleUri", "uriEmbeddedInText", "uriNotPrecededByValidSeparatorFollowedByValidUri", "uriPrecededByOpeningParenthesis", "uriPrecededBySomeText", "uriPrecededBySpace", "uriWithTrailingText", "uriWithUppercaseScheme" ]
      },
      "predecessor" : "b0682018e2af9fca305a381f91ac62b33ec6ccb7~1"
    },
    "b3ebd4d978ee79a00a5d41041cee3bf7e212adef" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.AddressTest" : [ "equals_withoutAddress_doesNotMatchWithAddress", "equals_withoutAddress_matchesSame", "equals_withoutPersonal_doesNotMatchWithAddress", "equals_withoutPersonal_matchesSame", "getHostname_withoutAddress_isNull", "hashCode_withoutAddress", "hashCode_withoutPersonal", "parse_withEncodedPersonal_shouldDecode", "parse_withMissingEmail__shouldSetPersonal", "parse_withMultipleEmails_shouldDecodeBoth", "parse_withQuotedEncodedPersonal_shouldDecode", "parse_withUnusualEmails_shouldSetAddress", "parse_withValidEmailAndPersonal_shouldSetBoth" ],
        "k9mail-library§com.fsck.k9.mail.MessageTest" : [ "testMessage", "testToBodyPart" ],
        "k9mail-library§com.fsck.k9.mail.internet.CharsetSupportTest" : [ "testFixupCharset" ],
        "k9mail-library§com.fsck.k9.mail.internet.DecoderUtilTest" : [ "testDecodeEncodedWords" ],
        "k9mail-library§com.fsck.k9.mail.internet.MessageExtractorTest" : [ "getTextFromPart_withExceptionThrownGettingInputStream_shouldReturnNull", "getTextFromPart_withHtmlWithCharsetInContentTypeRawDataBody_shouldReturnHtmlText", "getTextFromPart_withHtmlWithCharsetInHtmlRawDataBody_shouldReturnHtmlText", "getTextFromPart_withNoBody_shouldReturnNull", "getTextFromPart_withPlainTextWithCharsetInContentTypeRawDataBody_shouldReturnText", "getTextFromPart_withRawDataBodyWithNonText_shouldReturnNull", "getTextFromPart_withTextBody_shouldReturnText", "getTextFromPart_withUnknownEncoding_shouldReturnUnmodifiedBodyContents" ],
        "k9mail-library§com.fsck.k9.mail.internet.MessageIdGeneratorTest" : [ "generateMessageId_withFromAndReplyToAddress", "generateMessageId_withReplyToAddress", "generateMessageId_withoutRelevantHeaders" ],
        "k9mail-library§com.fsck.k9.mail.internet.MimeMessageParseTest" : [ "decodeBody_withUnknownEncoding_shouldReturnUnmodifiedBodyContents", "testMultipartSingleLayerNoRecurse", "testMultipartSingleLayerRecurse", "testMultipartTwoLayersRecurse", "testSinglePart7BitNoRecurse", "testSinglePart8BitRecurse", "testSinglePartBase64NoRecurse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.CopyUidResponseTest" : [ "parse_withCopyUidResponse_shouldCreateUidMapping", "parse_withNonNumberCopyUidArguments_shouldReturnNull", "parse_withUnbalancedCopyUidArguments_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithByeResponseAndConnectionClose_shouldThrowAuthenticationFailedException", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_authXoauthWithSaslIr", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOn400Response", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnInvalidJsonResponse", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnMissingStatusJsonResponse", "open_authXoauthWithSaslIrParsesCapabilities", "open_authXoauthWithSaslIrThrowsExeptionOn401Response", "open_authXoauthWithSaslIrWithOldTokenThrowsExceptionIfRetryFails", "open_withCapabilitiesInInitialResponse_shouldNotIssueCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withConnectionError_shouldThrow", "open_withInvalidHostname_shouldThrow", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withNegativeResponseToStartTlsCommand_shouldThrow", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "sendContinuation" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "copyMessages_withClosedFolder_shouldThrow", "copyMessages_withEmptyMessageList_shouldReturnNull", "copyMessages_withoutDestinationFolderOfWrongType_shouldThrow", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withEmptyMessageList_shouldNotInteractWithImapConnection", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEmptyMessageListArgument_shouldDoNothing", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withNullMessageListArgument_shouldDoNothing", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getNewPushState_withNewerUid_shouldReturnNewPushState", "getNewPushState_withoutNewerUid_shouldReturnNull", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUidFromMessageId_withoutMessageIdHeader_shouldReturnNull", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapPushStateTest" : [ "parse_withEmptyArgument_shouldReturnUidNextOfMinusOne", "parse_withIncompleteArgument_shouldReturnUidNextOfMinusOne", "parse_withInvalidArgument_shouldReturnUidNextOfMinusOne", "parse_withNullArgument_shouldReturnUidNextOfMinusOne", "parse_withValidArgument", "parse_withoutIntegerAsUidNext_shouldReturnUidNextOfMinusOne" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapPusherTest" : [ "refresh_shouldCallRefreshOnStartedImapFolderPusher", "refresh_withImapFolderPusherThrowing_shouldNotThrow", "start_calledAfterStart_shouldStopFirstImapFolderPusher", "start_shouldSetLastRefreshToCurrentTime", "start_withSingleFolderName_shouldCreateImapFolderPusherAndCallStartOnIt", "start_withTwoFolderNames_shouldCreateTwoImapFolderPushersAndCallStart", "stop_afterStartWithSingleFolderName_shouldStopImapFolderPusher", "stop_withImapFolderPusherThrowing_shouldNotThrow", "stop_withoutStartBeingCalled_shouldNotCreateAnyImapFolderPushers" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapResponseParserTest" : [ "readStatusResponse_withNoResponseAndAlertText_shouldThrowWithAlertText", "readStatusResponse_withNoResponse_shouldThrow", "testReadStatusResponseSkippingWrongTag", "testReadStatusResponseUntaggedHandlerGetsUntaggedOnly", "testReadStatusResponseUntaggedHandlerStillCalledOnNegativeReply", "testReadStatusResponseWithErrorResponse", "testReadStatusResponseWithOKResponse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "autoconfigureFolders_withoutSpecialUseCapability_shouldNotIssueImapCommand", "checkSettings_shouldCreateImapConnectionAndCallOpen", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withIoException_shouldCloseImapConnection", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapUtilityTest" : [ "testGetImapRangeValues", "testGetImapSequenceValues" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavFolderTest" : [ "appendWebDavMessages_replaces_messages_with_WebDAV_versions", "appendWebDavMessages_sendsRequestUsingStore", "can_fetch_message_count", "can_fetch_unread_message_count", "copyMessages_should_requestCopyXml", "copyMessages_should_send_copy_command", "folder_can_fetch_less_than_10_envelopes", "folder_can_fetch_less_than_20_flags", "folder_can_fetch_more_than_10_envelopes", "folder_can_fetch_more_than_20_flags", "folder_can_fetch_sensible_body_data_and_notifies_listener", "folder_can_handle_empty_response_to_body_request", "folder_does_not_notify_listener_twice_when_fetching_flags_and_bodies", "folder_ignores_exception_thrown_when_closing", "getMessages_shouldProvideCorrectHeadersInRequest", "getMessages_should_request_message_search", "moveMessages_should_requestMoveXml", "moveMessages_should_send_move_command" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavMessageTest" : [ "delete_asks_folder_to_delete_message", "setUrl_tests" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavStoreTest" : [ "checkSettings_shouldRegisterHttpsSchemeWithRegistry", "checkSettings_withErrorResponse_shouldThrow", "checkSettings_withHttpPrefixedServerName_shouldUseInsecureConnection", "checkSettings_withInitialUnauthorizedResponse_shouldPerformBasicAuthentication", "checkSettings_withOkResponse_shouldPerformFormBasedAuthentication", "checkSettings_withSslException_shouldThrowCertificateValidationException", "checkSettings_withUnauthorizedResponses_shouldThrow", "checkSettings_withWebDavSslUri_shouldUseSecureConnection", "checkSettings_withWebDavTlsUri_shouldUseSecureConnection", "checkSettings_withWebDavUri_shouldUseInsecureConnection", "getPersonalNamespaces_shouldProvideListOfAllFoldersSentFromResponses", "getPersonalNamespaces_shouldRequestFolderList", "getPersonalNamespaces_shouldRequestSpecialFolders", "getPersonalNamespaces_shouldSetSpecialFolderNames" ],
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "open_withAuthExternalExtension", "open_withAuthLoginExtension", "open_withAuthPlainExtension", "open_withAutomaticAuthAndNoTransportSecurityAndAuthCramMd5Extension_shouldUseAuthCramMd5", "open_withAutomaticAuthAndNoTransportSecurityAndAuthPlainExtension_shouldThrow", "open_withCramMd5AuthExtension", "open_withEhloFailing_shouldTryHelo", "open_withManyExtensions_shouldParseAll", "open_withSupportWithEnhancedStatusCodesOnAuthFailure_shouldThrowEncodedMessage", "open_withXoauth2Extension", "open_withXoauth2Extension_shouldInvalidateAndRetryOn400Response", "open_withXoauth2Extension_shouldInvalidateAndRetryOnInvalidJsonResponse", "open_withXoauth2Extension_shouldInvalidateAndRetryOnMissingStatusJsonResponse", "open_withXoauth2Extension_shouldThrowOn401Response", "open_withXoauth2Extension_shouldThrowOnFailure_fetchingToken", "open_withXoauth2Extension_shouldThrowOnMultipleFailure", "open_withoutAuthExternalExtension_shouldThrow", "open_withoutAuthLoginExtension_shouldConnectWithoutAuthentication", "open_withoutCramMd5AuthExtension_shouldThrow", "open_withoutXoauth2Extension_shouldThrow", "sendMessage_with8BitEncoding", "sendMessage_with8BitEncodingExtensionNotCaseSensitive", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withSingleRecipient", "sendMessage_withoutAddressToSendTo_shouldNotOpenConnection" ],
        "k9mail§com.fsck.k9.crypto.MessageDecryptVerifierTest" : [ "findPrimaryCryptoPart_withMultipartAlternativeContainingPgpInline", "findPrimaryCryptoPart_withMultipartMixedContainingMultipartAlternativeContainingPgpInline", "findPrimaryCryptoPart_withMultipartMixedContainingPgpInline", "findPrimaryCryptoPart_withSimplePgpInline", "isPartPgpInlineEncryptedOrSigned__withSignedData__shouldReturnTrue", "isPartPgpInlineEncrypted__withSignedData__shouldReturnFalse", "isPgpInlineMethods__withEncryptedDataAndLeadingGarbage__shouldReturnFalse", "isPgpInlineMethods__withEncryptedDataAndLeadingWhitespace__shouldReturnTrue", "isPgpInlineMethods__withPgpInlineData__shouldReturnTrue" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.message.extractors.AttachmentInfoExtractorTest" : [ "extractInfoForDb__withContentTypeAndEncodedWordName__shouldReturnDecodedName" ],
        "k9mail§com.fsck.k9.message.extractors.EncryptionDetectorTest" : [ "isEncrypted_withInlinePgp_shouldReturnTrue", "isEncrypted_withPlainTextAndPreambleWithInlinePgp_shouldReturnFalse", "isEncrypted_withQuotedInlinePgp_shouldReturnFalse" ],
        "k9mail§com.fsck.k9.message.extractors.PreviewTextExtractorTest" : [ "extractPreview_shouldCollapseAndTrimWhitespace", "extractPreview_shouldReplaceUrl", "extractPreview_shouldStripGenericQuoteHeader", "extractPreview_shouldStripHorizontalLine", "extractPreview_shouldStripHorizontalRules", "extractPreview_shouldStripQuoteHeaderAndQuotedText", "extractPreview_shouldStripSignature", "extractPreview_withEmptyBody_shouldThrow", "extractPreview_withLongTextPlain", "extractPreview_withSimpleTextHtml", "extractPreview_withSimpleTextPlain" ]
      },
      "predecessor" : "cf02795d5e78470fdc8283188039aeeade9e635c"
    },
    "62a8bae494ea259e9f0295fa441ec182459783bc" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authExternal", "open_authPlain", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_authXoauthWithSaslIr", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOn400Response", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnInvalidJsonResponse", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnMissingStatusJsonResponse", "open_authXoauthWithSaslIrParsesCapabilities", "open_authXoauthWithSaslIrThrowsExeptionOn401Response", "open_authXoauthWithSaslIrWithOldTokenThrowsExceptionIfRetryFails", "open_withCapabilitiesInInitialResponse_shouldNotIssueCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "sendContinuation" ],
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "open_withXoauth2Extension_shouldInvalidateAndRetryOn400Response", "open_withXoauth2Extension_shouldInvalidateAndRetryOnInvalidJsonResponse", "open_withXoauth2Extension_shouldInvalidateAndRetryOnMissingStatusJsonResponse", "open_withXoauth2Extension_shouldThrowOnMultipleFailure" ]
      },
      "predecessor" : "62a8bae494ea259e9f0295fa441ec182459783bc~1"
    },
    "5e4068de456e12c71d3ab8a268faa798ad3327cc" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithByeResponseAndConnectionClose_shouldThrowAuthenticationFailedException", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_authXoauthWithSaslIr", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOn400Response", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnInvalidJsonResponse", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnMissingStatusJsonResponse", "open_authXoauthWithSaslIrParsesCapabilities", "open_authXoauthWithSaslIrThrowsExeptionOn401Response", "open_authXoauthWithSaslIrWithOldTokenThrowsExceptionIfRetryFails", "open_withCapabilitiesInInitialResponse_shouldNotIssueCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withConnectionError_shouldThrow", "open_withInvalidHostname_shouldThrow", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withNegativeResponseToStartTlsCommand_shouldThrow", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "sendContinuation" ]
      },
      "predecessor" : "5e4068de456e12c71d3ab8a268faa798ad3327cc~1"
    },
    "d9bde84daf19fd90eb1d45a68301011cacece6e6" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getNewPushState_withNewerUid_shouldReturnNewPushState", "getNewPushState_withoutNewerUid_shouldReturnNull", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavFolderTest" : [ "folder_can_fetch_sensible_body_data_and_notifies_listener", "folder_can_handle_empty_response_to_body_request", "folder_does_not_notify_listener_twice_when_fetching_flags_and_bodies", "folder_ignores_exception_thrown_when_closing" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavStoreTest" : [ "checkSettings_shouldRegisterHttpsSchemeWithRegistry", "checkSettings_withErrorResponse_shouldThrow", "checkSettings_withHttpPrefixedServerName_shouldUseInsecureConnection", "checkSettings_withInitialUnauthorizedResponse_shouldPerformBasicAuthentication", "checkSettings_withOkResponse_shouldPerformFormBasedAuthentication", "checkSettings_withSslException_shouldThrowCertificateValidationException", "checkSettings_withUnauthorizedResponses_shouldThrow", "checkSettings_withWebDavSslUri_shouldUseSecureConnection", "checkSettings_withWebDavTlsUri_shouldUseSecureConnection", "checkSettings_withWebDavUri_shouldUseInsecureConnection", "getPersonalNamespaces_shouldProvideListOfAllFoldersSentFromResponses", "getPersonalNamespaces_shouldRequestFolderList", "getPersonalNamespaces_shouldRequestSpecialFolders", "getPersonalNamespaces_shouldSetSpecialFolderNames" ]
      },
      "predecessor" : "d9bde84daf19fd90eb1d45a68301011cacece6e6~1"
    },
    "0b9decdf42ff910ffc04c0f90e8b836b1c8ac583" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "open_withCompressDeflateCapability_shouldEnableCompression", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withNegativeResponseToCompressionCommand_shouldContinue" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "copyMessages_withClosedFolder_shouldThrow", "copyMessages_withEmptyMessageList_shouldReturnNull", "copyMessages_withoutDestinationFolderOfWrongType_shouldThrow", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withEmptyMessageList_shouldNotInteractWithImapConnection", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEmptyMessageListArgument_shouldDoNothing", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withNullMessageListArgument_shouldDoNothing", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUidFromMessageId_withoutMessageIdHeader_shouldReturnNull", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "setFlags_shouldIssueUidStoreCommand" ]
      },
      "predecessor" : "0b9decdf42ff910ffc04c0f90e8b836b1c8ac583~1"
    },
    "f7c4b0e7c4926512844a6cacca45bc01b5363b43" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "getNewPushState_withNewerUid_shouldReturnNewPushState", "getNewPushState_withoutNewerUid_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapPushStateTest" : [ "parse_withEmptyArgument_shouldReturnUidNextOfMinusOne", "parse_withIncompleteArgument_shouldReturnUidNextOfMinusOne", "parse_withInvalidArgument_shouldReturnUidNextOfMinusOne", "parse_withNullArgument_shouldReturnUidNextOfMinusOne", "parse_withValidArgument", "parse_withoutIntegerAsUidNext_shouldReturnUidNextOfMinusOne" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapPusherTest" : [ "refresh_shouldCallRefreshOnStartedImapFolderPusher", "refresh_withImapFolderPusherThrowing_shouldNotThrow", "start_calledAfterStart_shouldStopFirstImapFolderPusher", "start_shouldSetLastRefreshToCurrentTime", "start_withSingleFolderName_shouldCreateImapFolderPusherAndCallStartOnIt", "start_withTwoFolderNames_shouldCreateTwoImapFolderPushersAndCallStart", "stop_afterStartWithSingleFolderName_shouldStopImapFolderPusher", "stop_withImapFolderPusherThrowing_shouldNotThrow", "stop_withoutStartBeingCalled_shouldNotCreateAnyImapFolderPushers" ]
      },
      "predecessor" : "f7c4b0e7c4926512844a6cacca45bc01b5363b43~1"
    },
    "ad1328d77533e308f55103e300f485b571f995b0" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.internet.MessageExtractorTest" : [ "getTextFromPart_withExceptionThrownGettingInputStream_shouldReturnNull", "getTextFromPart_withHtmlWithCharsetInContentTypeRawDataBody_shouldReturnHtmlText", "getTextFromPart_withHtmlWithCharsetInHtmlRawDataBody_shouldReturnHtmlText", "getTextFromPart_withPlainTextWithCharsetInContentTypeRawDataBody_shouldReturnText", "getTextFromPart_withTextBody_shouldReturnText", "getTextFromPart_withUnknownEncoding_shouldReturnUnmodifiedBodyContents" ],
        "k9mail-library§com.fsck.k9.mail.internet.MimeMessageParseTest" : [ "decodeBody_withUnknownEncoding_shouldReturnUnmodifiedBodyContents", "testMultipartSingleLayerNoRecurse", "testMultipartSingleLayerRecurse", "testMultipartTwoLayersRecurse", "testSinglePart7BitNoRecurse", "testSinglePart8BitRecurse", "testSinglePartBase64NoRecurse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.CopyUidResponseTest" : [ "parse_withCopyUidResponse_shouldCreateUidMapping", "parse_withNonNumberCopyUidArguments_shouldReturnNull", "parse_withUnbalancedCopyUidArguments_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithByeResponseAndConnectionClose_shouldThrowAuthenticationFailedException", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_authXoauthWithSaslIr", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOn400Response", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnInvalidJsonResponse", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnMissingStatusJsonResponse", "open_authXoauthWithSaslIrParsesCapabilities", "open_authXoauthWithSaslIrThrowsExeptionOn401Response", "open_authXoauthWithSaslIrWithOldTokenThrowsExceptionIfRetryFails", "open_withCapabilitiesInInitialResponse_shouldNotIssueCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withNegativeResponseToStartTlsCommand_shouldThrow", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "sendContinuation" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "copyMessages", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapResponseParserTest" : [ "readStatusResponse_withNoResponseAndAlertText_shouldThrowWithAlertText", "readStatusResponse_withNoResponse_shouldThrow", "testReadStatusResponseSkippingWrongTag", "testReadStatusResponseUntaggedHandlerGetsUntaggedOnly", "testReadStatusResponseUntaggedHandlerStillCalledOnNegativeReply", "testReadStatusResponseWithErrorResponse", "testReadStatusResponseWithOKResponse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "autoconfigureFolders_withoutSpecialUseCapability_shouldNotIssueImapCommand", "checkSettings_shouldCreateImapConnectionAndCallOpen", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withIoException_shouldCloseImapConnection", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapUtilityTest" : [ "testGetImapRangeValues", "testGetImapSequenceValues" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavFolderTest" : [ "appendWebDavMessages_replaces_messages_with_WebDAV_versions", "appendWebDavMessages_sendsRequestUsingStore", "can_fetch_message_count", "can_fetch_unread_message_count", "copyMessages_should_requestCopyXml", "copyMessages_should_send_copy_command", "folder_can_fetch_less_than_10_envelopes", "folder_can_fetch_more_than_10_envelopes", "folder_can_fetch_sensible_body_data_and_notifies_listener", "folder_can_handle_empty_response_to_body_request", "folder_does_not_notify_listener_twice_when_fetching_flags_and_bodies", "folder_ignores_exception_thrown_when_closing", "getMessages_shouldProvideCorrectHeadersInRequest", "getMessages_should_request_message_search", "moveMessages_should_requestMoveXml", "moveMessages_should_send_move_command" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavMessageTest" : [ "delete_asks_folder_to_delete_message" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavStoreTest" : [ "checkSettings_shouldRegisterHttpsSchemeWithRegistry", "checkSettings_withErrorResponse_shouldThrow", "checkSettings_withHttpPrefixedServerName_shouldUseInsecureConnection", "checkSettings_withInitialUnauthorizedResponse_shouldPerformBasicAuthentication", "checkSettings_withOkResponse_shouldPerformFormBasedAuthentication", "checkSettings_withSslException_shouldThrowCertificateValidationException", "checkSettings_withUnauthorizedResponses_shouldThrow", "checkSettings_withWebDavSslUri_shouldUseSecureConnection", "checkSettings_withWebDavTlsUri_shouldUseSecureConnection", "checkSettings_withWebDavUri_shouldUseInsecureConnection", "getPersonalNamespaces_shouldProvideListOfAllFoldersSentFromResponses", "getPersonalNamespaces_shouldRequestFolderList", "getPersonalNamespaces_shouldRequestSpecialFolders", "getPersonalNamespaces_shouldSetSpecialFolderNames" ],
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "open_withAuthExternalExtension", "open_withAuthLoginExtension", "open_withAuthPlainExtension", "open_withAutomaticAuthAndNoTransportSecurityAndAuthCramMd5Extension_shouldUseAuthCramMd5", "open_withAutomaticAuthAndNoTransportSecurityAndAuthPlainExtension_shouldThrow", "open_withCramMd5AuthExtension", "open_withEhloFailing_shouldTryHelo", "open_withManyExtensions_shouldParseAll", "open_withSupportWithEnhancedStatusCodesOnAuthFailure_shouldThrowEncodedMessage", "open_withXoauth2Extension", "open_withXoauth2Extension_shouldInvalidateAndRetryOn400Response", "open_withXoauth2Extension_shouldInvalidateAndRetryOnInvalidJsonResponse", "open_withXoauth2Extension_shouldInvalidateAndRetryOnMissingStatusJsonResponse", "open_withXoauth2Extension_shouldThrowOn401Response", "open_withXoauth2Extension_shouldThrowOnFailure_fetchingToken", "open_withXoauth2Extension_shouldThrowOnMultipleFailure", "open_withoutAuthExternalExtension_shouldThrow", "open_withoutAuthLoginExtension_shouldConnectWithoutAuthentication", "open_withoutCramMd5AuthExtension_shouldThrow", "open_withoutXoauth2Extension_shouldThrow", "sendMessage_with8BitEncoding", "sendMessage_with8BitEncodingExtensionNotCaseSensitive", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withSingleRecipient" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages" ]
      },
      "predecessor" : "ad1328d77533e308f55103e300f485b571f995b0~1"
    },
    "571b80016671b64bd13a1fc81446c811f632fbd5" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.AccountsTest" : [ "onCreate_startsMessageListForIntegratedInbox__whenIntegratedInboxEnabled" ]
      },
      "predecessor" : "20b90ba3b7e62bd842ed1c8d327fb5379b8b6508"
    },
    "5a9bbbf7c44702d4fe99e3786b6c5eef17fc95a8" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.AccountsTest" : [ "onCreate_startsMessageListForIntegratedInbox__whenIntegratedInboxEnabled", "onCreate_startsMessageListForSingleInbox__whenOnly1Account", "onCreate_startsNothing__whenMultipleAccounts", "onCreate_startsUpgradeDatabase_whenNotUpToDate" ],
        "k9mail§com.fsck.k9.activity.MessageComposeTest" : [ "onCreate_startsAccounts_whenNoAccountsAvailable", "onCreate_startsUpgradeDatabase_whenNotUpToDate", "onCreate_usesDefaultAccountFirstIdentity_whenNoAccountProvided" ],
        "k9mail§com.fsck.k9.activity.MessageListTest" : [ "onCreate_startsAccounts_whenAnAccountExistsButNoSearchProvided", "onCreate_startsNothing_whenSearchProvided" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldAddErrorMessageInDebug", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "5a9bbbf7c44702d4fe99e3786b6c5eef17fc95a8~1"
    },
    "3cd7e26bb9cc1fe9e4ad158120ac0effdb93006e" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.AddressTest" : [ "equals_withoutAddress_doesNotMatchWithAddress", "equals_withoutAddress_matchesSame", "equals_withoutPersonal_doesNotMatchWithAddress", "equals_withoutPersonal_matchesSame", "getHostname_withoutAddress_isNull", "hashCode_withoutAddress", "hashCode_withoutPersonal", "parse_withEncodedPersonal_shouldDecode", "parse_withMissingEmail__shouldSetPersonal", "parse_withMultipleEmails_shouldDecodeBoth", "parse_withQuotedEncodedPersonal_shouldDecode", "parse_withUnusualEmails_shouldSetAddress", "parse_withValidEmailAndPersonal_shouldSetBoth" ],
        "k9mail-library§com.fsck.k9.mail.MessageTest" : [ "testMessage", "testToBodyPart" ],
        "k9mail-library§com.fsck.k9.mail.internet.CharsetSupportTest" : [ "testFixupCharset" ],
        "k9mail-library§com.fsck.k9.mail.internet.DecoderUtilTest" : [ "testDecodeEncodedWords" ],
        "k9mail-library§com.fsck.k9.mail.internet.MessageExtractorTest" : [ "getTextFromPart_withExceptionThrownGettingInputStream_shouldReturnNull", "getTextFromPart_withHtmlWithCharsetInContentTypeRawDataBody_shouldReturnHtmlText", "getTextFromPart_withHtmlWithCharsetInHtmlRawDataBody_shouldReturnHtmlText", "getTextFromPart_withNoBody_shouldReturnNull", "getTextFromPart_withPlainTextWithCharsetInContentTypeRawDataBody_shouldReturnText", "getTextFromPart_withRawDataBodyWithNonText_shouldReturnNull", "getTextFromPart_withTextBody_shouldReturnText", "getTextFromPart_withUnknownEncoding_shouldReturnUnmodifiedBodyContents" ],
        "k9mail-library§com.fsck.k9.mail.internet.MessageIdGeneratorTest" : [ "generateMessageId_withFromAndReplyToAddress", "generateMessageId_withReplyToAddress", "generateMessageId_withoutRelevantHeaders" ],
        "k9mail-library§com.fsck.k9.mail.internet.MimeMessageParseTest" : [ "decodeBody_withUnknownEncoding_shouldReturnUnmodifiedBodyContents", "testMultipartSingleLayerNoRecurse", "testMultipartSingleLayerRecurse", "testMultipartTwoLayersRecurse", "testSinglePart7BitNoRecurse", "testSinglePart8BitRecurse", "testSinglePartBase64NoRecurse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.CopyUidResponseTest" : [ "parse_withCopyUidResponse_shouldCreateUidMapping", "parse_withNonNumberCopyUidArguments_shouldReturnNull", "parse_withUnbalancedCopyUidArguments_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithByeResponseAndConnectionClose_shouldThrowAuthenticationFailedException", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_authXoauthWithSaslIr", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOn400Response", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnInvalidJsonResponse", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnMissingStatusJsonResponse", "open_authXoauthWithSaslIrParsesCapabilities", "open_authXoauthWithSaslIrThrowsExeptionOn401Response", "open_authXoauthWithSaslIrWithOldTokenThrowsExceptionIfRetryFails", "open_withCapabilitiesInInitialResponse_shouldNotIssueCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withConnectionError_shouldThrow", "open_withInvalidHostname_shouldThrow", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withNegativeResponseToStartTlsCommand_shouldThrow", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "sendContinuation" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "copyMessages_withClosedFolder_shouldThrow", "copyMessages_withEmptyMessageList_shouldReturnNull", "copyMessages_withoutDestinationFolderOfWrongType_shouldThrow", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withEmptyMessageList_shouldNotInteractWithImapConnection", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEmptyMessageListArgument_shouldDoNothing", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withNullMessageListArgument_shouldDoNothing", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getNewPushState_withNewerUid_shouldReturnNewPushState", "getNewPushState_withoutNewerUid_shouldReturnNull", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUidFromMessageId_withoutMessageIdHeader_shouldReturnNull", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapPushStateTest" : [ "parse_withEmptyArgument_shouldReturnUidNextOfMinusOne", "parse_withIncompleteArgument_shouldReturnUidNextOfMinusOne", "parse_withInvalidArgument_shouldReturnUidNextOfMinusOne", "parse_withNullArgument_shouldReturnUidNextOfMinusOne", "parse_withValidArgument", "parse_withoutIntegerAsUidNext_shouldReturnUidNextOfMinusOne" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapPusherTest" : [ "refresh_shouldCallRefreshOnStartedImapFolderPusher", "refresh_withImapFolderPusherThrowing_shouldNotThrow", "start_calledAfterStart_shouldStopFirstImapFolderPusher", "start_shouldSetLastRefreshToCurrentTime", "start_withSingleFolderName_shouldCreateImapFolderPusherAndCallStartOnIt", "start_withTwoFolderNames_shouldCreateTwoImapFolderPushersAndCallStart", "stop_afterStartWithSingleFolderName_shouldStopImapFolderPusher", "stop_withImapFolderPusherThrowing_shouldNotThrow", "stop_withoutStartBeingCalled_shouldNotCreateAnyImapFolderPushers" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapResponseParserTest" : [ "readStatusResponse_withNoResponseAndAlertText_shouldThrowWithAlertText", "readStatusResponse_withNoResponse_shouldThrow", "testReadStatusResponseSkippingWrongTag", "testReadStatusResponseUntaggedHandlerGetsUntaggedOnly", "testReadStatusResponseUntaggedHandlerStillCalledOnNegativeReply", "testReadStatusResponseWithErrorResponse", "testReadStatusResponseWithOKResponse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "autoconfigureFolders_withoutSpecialUseCapability_shouldNotIssueImapCommand", "checkSettings_shouldCreateImapConnectionAndCallOpen", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withIoException_shouldCloseImapConnection", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapUtilityTest" : [ "testGetImapRangeValues", "testGetImapSequenceValues" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavFolderTest" : [ "appendWebDavMessages_replaces_messages_with_WebDAV_versions", "appendWebDavMessages_sendsRequestUsingStore", "can_fetch_message_count", "can_fetch_unread_message_count", "copyMessages_should_requestCopyXml", "copyMessages_should_send_copy_command", "folder_can_fetch_less_than_10_envelopes", "folder_can_fetch_less_than_20_flags", "folder_can_fetch_more_than_10_envelopes", "folder_can_fetch_more_than_20_flags", "folder_can_fetch_sensible_body_data_and_notifies_listener", "folder_can_handle_empty_response_to_body_request", "folder_does_not_notify_listener_twice_when_fetching_flags_and_bodies", "folder_ignores_exception_thrown_when_closing", "getMessages_shouldProvideCorrectHeadersInRequest", "getMessages_should_request_message_search", "moveMessages_should_requestMoveXml", "moveMessages_should_send_move_command" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavMessageTest" : [ "delete_asks_folder_to_delete_message", "setUrl_tests" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavStoreTest" : [ "checkSettings_shouldRegisterHttpsSchemeWithRegistry", "checkSettings_withErrorResponse_shouldThrow", "checkSettings_withHttpPrefixedServerName_shouldUseInsecureConnection", "checkSettings_withInitialUnauthorizedResponse_shouldPerformBasicAuthentication", "checkSettings_withOkResponse_shouldPerformFormBasedAuthentication", "checkSettings_withSslException_shouldThrowCertificateValidationException", "checkSettings_withUnauthorizedResponses_shouldThrow", "checkSettings_withWebDavSslUri_shouldUseSecureConnection", "checkSettings_withWebDavTlsUri_shouldUseSecureConnection", "checkSettings_withWebDavUri_shouldUseInsecureConnection", "getPersonalNamespaces_shouldProvideListOfAllFoldersSentFromResponses", "getPersonalNamespaces_shouldRequestFolderList", "getPersonalNamespaces_shouldRequestSpecialFolders", "getPersonalNamespaces_shouldSetSpecialFolderNames" ],
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "open_withAuthExternalExtension", "open_withAuthLoginExtension", "open_withAuthPlainExtension", "open_withAutomaticAuthAndNoTransportSecurityAndAuthCramMd5Extension_shouldUseAuthCramMd5", "open_withAutomaticAuthAndNoTransportSecurityAndAuthPlainExtension_shouldThrow", "open_withCramMd5AuthExtension", "open_withEhloFailing_shouldTryHelo", "open_withManyExtensions_shouldParseAll", "open_withSupportWithEnhancedStatusCodesOnAuthFailure_shouldThrowEncodedMessage", "open_withXoauth2Extension", "open_withXoauth2Extension_shouldInvalidateAndRetryOn400Response", "open_withXoauth2Extension_shouldInvalidateAndRetryOnInvalidJsonResponse", "open_withXoauth2Extension_shouldInvalidateAndRetryOnMissingStatusJsonResponse", "open_withXoauth2Extension_shouldThrowOn401Response", "open_withXoauth2Extension_shouldThrowOnFailure_fetchingToken", "open_withXoauth2Extension_shouldThrowOnMultipleFailure", "open_withoutAuthExternalExtension_shouldThrow", "open_withoutAuthLoginExtension_shouldConnectWithoutAuthentication", "open_withoutCramMd5AuthExtension_shouldThrow", "open_withoutXoauth2Extension_shouldThrow", "sendMessage_with8BitEncoding", "sendMessage_with8BitEncodingExtensionNotCaseSensitive", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withSingleRecipient", "sendMessage_withoutAddressToSendTo_shouldNotOpenConnection" ],
        "k9mail§com.fsck.k9.crypto.MessageDecryptVerifierTest" : [ "findPrimaryCryptoPart_withMultipartAlternativeContainingPgpInline", "findPrimaryCryptoPart_withMultipartMixedContainingMultipartAlternativeContainingPgpInline", "findPrimaryCryptoPart_withMultipartMixedContainingPgpInline", "findPrimaryCryptoPart_withSimplePgpInline", "isPartPgpInlineEncryptedOrSigned__withSignedData__shouldReturnTrue", "isPartPgpInlineEncrypted__withSignedData__shouldReturnFalse", "isPgpInlineMethods__withEncryptedDataAndLeadingGarbage__shouldReturnFalse", "isPgpInlineMethods__withEncryptedDataAndLeadingWhitespace__shouldReturnTrue", "isPgpInlineMethods__withPgpInlineData__shouldReturnTrue" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.message.extractors.AttachmentInfoExtractorTest" : [ "extractInfoForDb__withContentTypeAndEncodedWordName__shouldReturnDecodedName" ],
        "k9mail§com.fsck.k9.message.extractors.EncryptionDetectorTest" : [ "isEncrypted_withInlinePgp_shouldReturnTrue", "isEncrypted_withPlainTextAndPreambleWithInlinePgp_shouldReturnFalse", "isEncrypted_withQuotedInlinePgp_shouldReturnFalse" ],
        "k9mail§com.fsck.k9.message.extractors.PreviewTextExtractorTest" : [ "extractPreview_shouldCollapseAndTrimWhitespace", "extractPreview_shouldReplaceUrl", "extractPreview_shouldStripGenericQuoteHeader", "extractPreview_shouldStripHorizontalLine", "extractPreview_shouldStripHorizontalRules", "extractPreview_shouldStripQuoteHeaderAndQuotedText", "extractPreview_shouldStripSignature", "extractPreview_withEmptyBody_shouldThrow", "extractPreview_withLongTextPlain", "extractPreview_withSimpleTextHtml", "extractPreview_withSimpleTextPlain" ]
      },
      "predecessor" : "5a9bbbf7c44702d4fe99e3786b6c5eef17fc95a8"
    },
    "dbc614769a9cdc21d36ce6d729d196afc79a46b8" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ]
      },
      "predecessor" : "dbc614769a9cdc21d36ce6d729d196afc79a46b8~1"
    },
    "d22533b6d35290da5c3051d109154ee7c243200f" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.internet.FlowedMessageUtilsTest" : [ "idDelSp_withTextHtmlFormatFlowed_shouldReturnFalse", "isDelSp_withFormatFlowed_shouldReturnTrue", "isDelSp_withTextPlainFormatFlowed_shoulReturnFalse", "isDelSp_withoutFormatFlowed_shouldReturnFalse" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ]
      },
      "predecessor" : "d22533b6d35290da5c3051d109154ee7c243200f~1"
    },
    "ba21aaf41247e3abf9f560b505a2bd41d720422f" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ]
      },
      "predecessor" : "ba21aaf41247e3abf9f560b505a2bd41d720422f~1"
    },
    "c3c5f958c20b4b6d70507ac25e45a87a05c3b133" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithByeResponseAndConnectionClose_shouldThrowAuthenticationFailedException", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_authXoauthWithSaslIr", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOn400Response", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnInvalidJsonResponse", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnMissingStatusJsonResponse", "open_authXoauthWithSaslIrParsesCapabilities", "open_authXoauthWithSaslIrThrowsExeptionOn401Response", "open_authXoauthWithSaslIrWithOldTokenThrowsExceptionIfRetryFails", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withConnectionError_shouldThrow", "open_withInvalidHostname_shouldThrow", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withNegativeResponseToStartTlsCommand_shouldThrow", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "sendContinuation" ]
      },
      "predecessor" : "ba21aaf41247e3abf9f560b505a2bd41d720422f"
    },
    "ac6221f4fa20e6c67b32be8ede43b58c8fa393e2" : {
      "testcases" : {
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords" ]
      },
      "predecessor" : "ac6221f4fa20e6c67b32be8ede43b58c8fa393e2~1"
    },
    "dd5a0cce9825375a50bbe2ea26ae05554ec35642" : {
      "testcases" : {
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords" ]
      },
      "predecessor" : "dd5a0cce9825375a50bbe2ea26ae05554ec35642~1"
    },
    "3bb3a5bdbdffbc0e3d38647e417283d6375673d1" : {
      "testcases" : {
        "k9mail§com.fsck.k9.notification.DeviceNotificationsTest" : [ "buildSummaryNotification_withAdditionalMessages", "buildSummaryNotification_withMultiMessageNotification", "buildSummaryNotification_withPrivacyModeActive", "buildSummaryNotification_withSingleMessageNotification", "buildSummaryNotification_withoutDeleteAction", "buildSummaryNotification_withoutDeleteAllAction" ],
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords" ]
      },
      "predecessor" : "3bb3a5bdbdffbc0e3d38647e417283d6375673d1~1"
    },
    "910ee757983d0e3fe92bca8dcd557f2fe75adb7c" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages" ],
        "k9mail§com.fsck.k9.preferences.SettingsExporterTest" : [ "exportPreferences_exportsGlobalSettingsWhenRequested", "exportPreferences_ignoresGlobalSettingsWhenRequested", "exportPreferences_producesXML", "exportPreferences_setsFormatTo1", "exportPreferences_setsVersionToLatest" ],
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "getImportStreamContents_account", "getImportStreamContents_alternativeName", "importSettings_disablesAccountsNeedingPasswords", "importSettings_throwsExceptionOnBlankFile", "importSettings_throwsExceptionOnInvalidFormat", "importSettings_throwsExceptionOnInvalidVersion", "importSettings_throwsExceptionOnMissingFormat", "importSettings_throwsExceptionOnMissingVersion", "importSettings_throwsExceptionOnNonPositiveFormat", "importSettings_throwsExceptionOnNonPositiveVersion", "parseSettings_account", "parseSettings_account_cram_md5", "parseSettings_account_identities" ]
      },
      "predecessor" : "3bb3a5bdbdffbc0e3d38647e417283d6375673d1"
    },
    "06e5f790bb11c1f48a75ed0e4f31deef423120dc" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.MessageTest" : [ "testMessage", "testSetSendDateFormatsHeaderCorrectlyWithCurrentTimeZone", "testSetSendDateFormatsHeaderCorrectlyWithoutTimeZone", "testSetSendDateSetsSentDate", "testToBodyPart" ],
        "k9mail-library§com.fsck.k9.mail.internet.MimeMessageParseTest" : [ "decodeBody_withUnknownEncoding_shouldReturnUnmodifiedBodyContents", "headerFieldNameWithSpace", "testMultipartSingleLayerNoRecurse", "testMultipartSingleLayerRecurse", "testMultipartTwoLayersRecurse", "testSinglePart7BitNoRecurse", "testSinglePart8BitRecurse", "testSinglePartBase64NoRecurse" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavFolderTest" : [ "folder_can_fetch_sensible_body_data_and_notifies_listener", "folder_does_not_notify_listener_twice_when_fetching_flags_and_bodies", "folder_ignores_exception_thrown_when_closing" ],
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "sendMessage_with8BitEncoding", "sendMessage_with8BitEncodingExtensionNotCaseSensitive", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withSingleRecipient", "sendMessage_withoutAddressToSendTo_shouldNotOpenConnection" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testTextPlusRfc822Message" ]
      },
      "predecessor" : "910ee757983d0e3fe92bca8dcd557f2fe75adb7c"
    },
    "7e29a7eac3d50766b8abf6c8d44e54c8804bea58" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.MessageTest" : [ "testMessage", "testSetSendDateFormatsHeaderCorrectlyWithCurrentTimeZone", "testSetSendDateFormatsHeaderCorrectlyWithoutTimeZone", "testSetSendDateSetsSentDate", "testToBodyPart" ],
        "k9mail-library§com.fsck.k9.mail.internet.MimeMessageParseTest" : [ "decodeBody_withUnknownEncoding_shouldReturnUnmodifiedBodyContents", "headerFieldNameWithSpace", "testMultipartSingleLayerNoRecurse", "testMultipartSingleLayerRecurse", "testMultipartTwoLayersRecurse", "testSinglePart7BitNoRecurse", "testSinglePart8BitRecurse", "testSinglePartBase64NoRecurse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "fetchPart_withTextSection_shouldProcessImapResponses" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavFolderTest" : [ "folder_can_fetch_sensible_body_data_and_notifies_listener", "folder_does_not_notify_listener_twice_when_fetching_flags_and_bodies", "folder_ignores_exception_thrown_when_closing" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages" ]
      },
      "predecessor" : "06e5f790bb11c1f48a75ed0e4f31deef423120dc"
    },
    "62df90d13be2cc54f35f22a284bba14370f23790" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages" ],
        "k9mail§com.fsck.k9.notification.DeviceNotificationsTest" : [ "buildSummaryNotification_withAdditionalMessages", "buildSummaryNotification_withMultiMessageNotification", "buildSummaryNotification_withPrivacyModeActive", "buildSummaryNotification_withSingleMessageNotification", "buildSummaryNotification_withoutDeleteAction", "buildSummaryNotification_withoutDeleteAllAction" ],
        "k9mail§com.fsck.k9.preferences.SettingsExporterTest" : [ "exportPreferences_exportsGlobalSettingsWhenRequested", "exportPreferences_ignoresGlobalSettingsWhenRequested", "exportPreferences_producesXML", "exportPreferences_setsFormatTo1", "exportPreferences_setsVersionToLatest" ],
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "getImportStreamContents_account", "getImportStreamContents_alternativeName", "importSettings_disablesAccountsNeedingPasswords", "importSettings_throwsExceptionOnBlankFile", "importSettings_throwsExceptionOnInvalidFormat", "importSettings_throwsExceptionOnInvalidVersion", "importSettings_throwsExceptionOnMissingFormat", "importSettings_throwsExceptionOnMissingVersion", "importSettings_throwsExceptionOnNonPositiveFormat", "importSettings_throwsExceptionOnNonPositiveVersion", "parseSettings_account", "parseSettings_account_cram_md5", "parseSettings_account_identities" ]
      },
      "predecessor" : "7e29a7eac3d50766b8abf6c8d44e54c8804bea58"
    },
    "c84fe2312be579e5fa121953f5b03dcc2e2a55e7" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.CopyUidResponseTest" : [ "parse_withCopyUidResponse_shouldCreateUidMapping", "parse_withNonNumberCopyUidArguments_shouldReturnNull", "parse_withNonStringCopyUidArgumentOne_shouldReturnNull", "parse_withNonStringCopyUidArgumentThree_shouldReturnNull", "parse_withNonStringCopyUidArgumentTwo_shouldReturnNull", "parse_withResponseTextListTooShort_shouldReturnNull", "parse_withTooShortResponse_shouldReturnNull", "parse_withUnbalancedCopyUidArguments_shouldReturnNull", "parse_withUntaggedResponse_shouldReturnNull", "parse_withoutCopyUidResponse_shouldReturnNull", "parse_withoutOkResponse_shouldReturnNull", "parse_withoutResponseTextList_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithByeResponseAndConnectionClose_shouldThrowAuthenticationFailedException", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_authXoauthWithSaslIr", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOn400Response", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnInvalidJsonResponse", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnMissingStatusJsonResponse", "open_authXoauthWithSaslIrParsesCapabilities", "open_authXoauthWithSaslIrThrowsExeptionOn401Response", "open_authXoauthWithSaslIrWithOldTokenThrowsExceptionIfRetryFails", "open_withCapabilitiesInInitialResponse_shouldNotIssueCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withNegativeResponseToStartTlsCommand_shouldThrow", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "sendContinuation" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getNewPushState_withNewerUid_shouldReturnNewPushState", "getNewPushState_withoutNewerUid_shouldReturnNull", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapResponseParserTest" : [ "readResponseShouldReadWholeListResponseLine", "readResponse_withCallbackThatThrowsRepeatedly_shouldConsumeAllInputAndThrowFirstException", "readResponse_withListAsFirstToken_shouldThrow", "readResponse_withListResponseContainingNil", "readResponse_withPartlyConsumingCallbackThatThrows_shouldReadAllDataAndThrow", "readStatusResponse_withNoResponseAndAlertText_shouldThrowWithAlertText", "readStatusResponse_withNoResponse_shouldThrow", "testExistsResponse", "testFetchResponse", "testListResponseContainingFolderNameWithBrackets", "testOkResponseWithRespTextCode", "testOkResponseWithRespTextCodeAndText", "testOkResponseWithText", "testParseLiteral", "testParseLiteralWithConsumingCallbackReturningNull", "testParseLiteralWithEmptyString", "testParseLiteralWithIncompleteConsumingCallbackReturningString", "testParseLiteralWithNonConsumingCallbackReturningNull", "testParseLiteralWithThrowingCallback", "testParseQuoted", "testReadStatusResponseSkippingWrongTag", "testReadStatusResponseUntaggedHandlerGetsUntaggedOnly", "testReadStatusResponseUntaggedHandlerStillCalledOnNegativeReply", "testReadStatusResponseWithErrorResponse", "testReadStatusResponseWithOKResponse", "testReadStringUntilEndOfStream", "testRespTextCodeWithList", "testSimpleOkResponse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ]
      },
      "predecessor" : "3552ed40a63305daa3c396c9a2339747fd361351"
    },
    "1b1106346eb15fa0c39b868fc264a241c904603f" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.CopyUidResponseTest" : [ "parse_withCopyUidResponse_shouldCreateUidMapping", "parse_withNonNumberCopyUidArguments_shouldReturnNull", "parse_withNonStringCopyUidArgumentOne_shouldReturnNull", "parse_withNonStringCopyUidArgumentThree_shouldReturnNull", "parse_withNonStringCopyUidArgumentTwo_shouldReturnNull", "parse_withResponseTextListTooShort_shouldReturnNull", "parse_withTooShortResponse_shouldReturnNull", "parse_withUnbalancedCopyUidArguments_shouldReturnNull", "parse_withUntaggedResponse_shouldReturnNull", "parse_withoutCopyUidResponse_shouldReturnNull", "parse_withoutOkResponse_shouldReturnNull", "parse_withoutResponseTextList_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithByeResponseAndConnectionClose_shouldThrowAuthenticationFailedException", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_authXoauthWithSaslIr", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOn400Response", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnInvalidJsonResponse", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnMissingStatusJsonResponse", "open_authXoauthWithSaslIrParsesCapabilities", "open_authXoauthWithSaslIrThrowsExeptionOn401Response", "open_authXoauthWithSaslIrWithOldTokenThrowsExceptionIfRetryFails", "open_withCapabilitiesInInitialResponse_shouldNotIssueCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withNegativeResponseToStartTlsCommand_shouldThrow", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "sendContinuation" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getNewPushState_withNewerUid_shouldReturnNewPushState", "getNewPushState_withoutNewerUid_shouldReturnNull", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapResponseParserTest" : [ "readResponseShouldReadWholeListResponseLine", "readResponse_withCallbackThatThrowsRepeatedly_shouldConsumeAllInputAndThrowFirstException", "readResponse_withListAsFirstToken_shouldThrow", "readResponse_withListResponseContainingNil", "readResponse_withPartlyConsumingCallbackThatThrows_shouldReadAllDataAndThrow", "readStatusResponse_withNoResponseAndAlertText_shouldThrowWithAlertText", "readStatusResponse_withNoResponse_shouldThrow", "testExistsResponse", "testFetchResponse", "testListResponseContainingFolderNameWithBrackets", "testOkResponseWithRespTextCode", "testOkResponseWithRespTextCodeAndText", "testOkResponseWithText", "testParseLiteral", "testParseLiteralWithConsumingCallbackReturningNull", "testParseLiteralWithEmptyString", "testParseLiteralWithIncompleteConsumingCallbackReturningString", "testParseLiteralWithNonConsumingCallbackReturningNull", "testParseLiteralWithThrowingCallback", "testParseQuoted", "testReadStatusResponseSkippingWrongTag", "testReadStatusResponseUntaggedHandlerGetsUntaggedOnly", "testReadStatusResponseUntaggedHandlerStillCalledOnNegativeReply", "testReadStatusResponseWithErrorResponse", "testReadStatusResponseWithOKResponse", "testReadStringUntilEndOfStream", "testRespTextCodeWithList", "testSimpleOkResponse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ]
      },
      "predecessor" : "9e74faf6de95f19ff66443cf64d6320f7c469106"
    },
    "24c8c25eef1260593bcd1c1c897b6a41853fbe9e" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure" ]
      },
      "predecessor" : "24c8c25eef1260593bcd1c1c897b6a41853fbe9e~1"
    },
    "2accaae9015ad8b6591ec01afb4342edd96e6c8e" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.internet.MimeMessageParseTest" : [ "decodeBody_withUnknownEncoding_shouldReturnUnmodifiedBodyContents", "getRecipients_withDeliveredTo", "getRecipients_withXEnvelopeTo", "getRecipients_withXOriginalTo", "headerFieldNameWithSpace", "testMultipartSingleLayerNoRecurse", "testMultipartSingleLayerRecurse", "testMultipartTwoLayersRecurse", "testSinglePart7BitNoRecurse", "testSinglePart8BitRecurse", "testSinglePartBase64NoRecurse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavFolderTest" : [ "folder_can_fetch_sensible_body_data_and_notifies_listener", "folder_does_not_notify_listener_twice_when_fetching_flags_and_bodies", "folder_ignores_exception_thrown_when_closing" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress" ],
        "k9mail§com.fsck.k9.crypto.MessageDecryptVerifierTest" : [ "findSigned__withComplexMultipartSigned__shouldReturnRoot" ],
        "k9mail§com.fsck.k9.helper.IdentityHelperTest" : [ "testDeliveredTo", "testTo_withoutXOriginalTo", "testXEnvelopeTo", "testXEnvelopeTo_withXOriginalTo", "testXOriginalTo" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages" ]
      },
      "predecessor" : "2accaae9015ad8b6591ec01afb4342edd96e6c8e~1"
    },
    "bb16b1da3beca2609d3104162f020c34a04a1394" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.internet.MimeMessageParseTest" : [ "decodeBody_withUnknownEncoding_shouldReturnUnmodifiedBodyContents", "getRecipients_withDeliveredTo", "getRecipients_withXEnvelopeTo", "getRecipients_withXOriginalTo", "headerFieldNameWithSpace", "testMultipartSingleLayerNoRecurse", "testMultipartSingleLayerRecurse", "testMultipartTwoLayersRecurse", "testSinglePart7BitNoRecurse", "testSinglePart8BitRecurse", "testSinglePartBase64NoRecurse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavFolderTest" : [ "folder_can_fetch_sensible_body_data_and_notifies_listener", "folder_does_not_notify_listener_twice_when_fetching_flags_and_bodies", "folder_ignores_exception_thrown_when_closing" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress" ],
        "k9mail§com.fsck.k9.helper.IdentityHelperTest" : [ "testDeliveredTo", "testTo_withoutXOriginalTo", "testXEnvelopeTo", "testXEnvelopeTo_withXOriginalTo", "testXOriginalTo" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages" ],
        "k9mail§com.fsck.k9.message.extractors.PreviewTextExtractorTest" : [ "extractPreview_withLongTextPlain" ]
      },
      "predecessor" : "bb16b1da3beca2609d3104162f020c34a04a1394~1"
    },
    "f69ef280badb856fe11b957b2a0d4876c9fb0e7d" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.AttachmentResolverTest" : [ "buildCidMap__onTwoPart__shouldReturnBothUris" ],
        "k9mail§com.fsck.k9.message.extractors.AttachmentInfoExtractorTest" : [ "extractInfoForDb__withContentTypeAndEncodedWordName__shouldReturnDecodedName", "extractInfoForDb__withContentTypeAndName__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionAttach__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionInlineAndContentId__shouldReturnInlineAttachment", "extractInfoForDb__withDispositionInvalidSizeParam__shouldReturnUnknownSize", "extractInfoForDb__withDispositionSizeParam__shouldReturnThatSize", "extractInfoForDb__withNoBody__shouldReturnContentAvailable", "extractInfoForDb__withNoBody__shouldReturnContentNotAvailable", "extractInfoForDb__withNoHeaders__shouldReturnEmptyValues", "extractInfoForDb__withTextMimeType__shouldReturnTxtExtension", "extractInfo__fromLocalBodyPart__shouldReturnProvidedValues", "extractInfo__withDeferredFileBody" ]
      },
      "predecessor" : "bb16b1da3beca2609d3104162f020c34a04a1394"
    },
    "febb7448ddfc77e6817cf4da9cdfd64a03b12f20" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ]
      },
      "predecessor" : "febb7448ddfc77e6817cf4da9cdfd64a03b12f20~1"
    },
    "268189c1b097a058cf8e5da621f760871fa58d58" : {
      "testcases" : {
        "k9mail§com.fsck.k9.message.html.HtmlSanitizerTest" : [ "shouldHtmlEncodeXmlDirectives", "shouldNormalizeTables", "shouldProduceValidHtmlFromHtmlWithXmlDeclaration", "shouldRemoveMetaRefreshBetweenHeadAndBody", "shouldRemoveMetaRefreshButKeepOtherMetaTags", "shouldRemoveMetaRefreshInBody", "shouldRemoveMetaRefreshInHead", "shouldRemoveMetaRefreshWithMixedCaseAttributeValue", "shouldRemoveMetaRefreshWithSpacesInAttributeValue", "shouldRemoveMetaRefreshWithUpperCaseAttributeValue", "shouldRemoveMetaRefreshWithoutQuotesAroundAttributeValue", "shouldRemoveMultipleMetaRefreshTags" ]
      },
      "predecessor" : "febb7448ddfc77e6817cf4da9cdfd64a03b12f20"
    },
    "6d06b332a70626d8d56e4316869a14631eeb4c41" : {
      "testcases" : {
        "k9mail§com.fsck.k9.message.html.HtmlSanitizerTest" : [ "shouldHtmlEncodeXmlDirectives", "shouldNormalizeTables", "shouldProduceValidHtmlFromHtmlWithXmlDeclaration", "shouldRemoveMetaRefreshBetweenHeadAndBody", "shouldRemoveMetaRefreshButKeepOtherMetaTags", "shouldRemoveMetaRefreshInBody", "shouldRemoveMetaRefreshInHead", "shouldRemoveMetaRefreshWithMixedCaseAttributeValue", "shouldRemoveMetaRefreshWithSpacesInAttributeValue", "shouldRemoveMetaRefreshWithUpperCaseAttributeValue", "shouldRemoveMetaRefreshWithoutQuotesAroundAttributeValue", "shouldRemoveMultipleMetaRefreshTags" ],
        "k9mail§com.fsck.k9.message.signature.HtmlSignatureRemoverTest" : [ "shouldNotStripSignatureInsideBlockquoteTags", "shouldStripSignatureAfterLastBlockquoteTags", "shouldStripSignatureBeforeBlockquoteTag", "shouldStripSignatureBetweenBlockquoteTags", "shouldStripSignatureFromK9StyleHtml" ]
      },
      "predecessor" : "6d06b332a70626d8d56e4316869a14631eeb4c41~1"
    },
    "b52d7c7cd864e948e7a46346c1b9ed0cfa43cec4" : {
      "testcases" : {
        "k9mail§com.fsck.k9.message.html.HttpUriParserTest" : [ "domainWithFullUserInfo", "domainWithTrailingAngleBracket", "domainWithTrailingNewline", "domainWithTrailingSlash", "domainWithTrailingSpace", "domainWithUserInfo", "domainWithoutWww", "emptyAuthorityIgnored", "emptyUriIgnored", "fragment", "invalidDomainIgnored", "ipv4Address", "ipv4AddressWithEmptyPort", "ipv4AddressWithPort", "ipv4AddressWithTrailingSlash", "ipv6Address", "ipv6AddressWithBeginCompression", "ipv6AddressWithCompressionPort", "ipv6AddressWithEndCompression", "ipv6AddressWithPort", "ipv6AddressWithPrependedCompression", "ipv6AddressWithTrailingIp4AndPort", "ipv6AddressWithTrailingSlash", "ipv6InvalidClosingSquareBracketIgnored", "ipv6WithoutClosingSquareBracketIgnored", "query", "queryAndFragment", "simpleDomain", "uriInMiddleAfterInput", "uriInMiddleOfInput" ],
        "k9mail§com.fsck.k9.message.html.UriLinkifierTest" : [ "multipleValidUrisInRow", "schemaMatchWithInvalidUriInMiddleOfTextFollowedByValidUri", "simpleUri", "uriEmbeddedInText", "uriNotPrecededByValidSeparatorFollowedByValidUri", "uriPrecededByOpeningParenthesis", "uriPrecededBySomeText", "uriPrecededBySpace", "uriWithTrailingText", "uriWithUppercaseScheme" ]
      },
      "predecessor" : "6d06b332a70626d8d56e4316869a14631eeb4c41"
    },
    "949902a8603ca90abcf396758e9e97f42646c400" : {
      "testcases" : {
        "k9mail§com.fsck.k9.helper.K9AlarmManagerTest" : [ "cancel_shouldCallCancelOnAlarmManager", "set_withDozeSupportAndNotWhiteListed_shouldCallSetOnAlarmManager", "set_withDozeSupportAndWhiteListed_shouldCallSetAndAllowWhileIdleOnAlarmManager", "set_withoutDozeSupport_shouldCallSetOnAlarmManager" ]
      },
      "predecessor" : "cc2c242c1f220da32b24bbc79e45ca9065d1b5bd"
    },
    "0ada7fd58c28832da713aaf8c440f5515add970f" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure" ],
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords" ]
      },
      "predecessor" : "0ada7fd58c28832da713aaf8c440f5515add970f~1"
    },
    "c54b95b2c60c4ac98c6420abc9b566aba1bac980" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithByeResponseAndConnectionClose_shouldThrowAuthenticationFailedException", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_authXoauthWithSaslIr", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOn400Response", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnInvalidJsonResponse", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnMissingStatusJsonResponse", "open_authXoauthWithSaslIrParsesCapabilities", "open_authXoauthWithSaslIrThrowsExeptionOn401Response", "open_authXoauthWithSaslIrWithOldTokenThrowsExceptionIfRetryFails", "open_withCapabilitiesInInitialResponse_shouldNotIssueCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "sendContinuation" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapResponseParserTest" : [ "readStatusResponse_withNoResponseAndAlertText_shouldThrowWithAlertText" ]
      },
      "predecessor" : "c54b95b2c60c4ac98c6420abc9b566aba1bac980~1"
    },
    "c816276a3f14cc0f044784f603b9ab1505a9ce2e" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.message.html.HtmlSanitizerTest" : [ "shouldHtmlEncodeXmlDirectives", "shouldNormalizeTables", "shouldProduceValidHtmlFromHtmlWithXmlDeclaration", "shouldRemoveMetaRefreshBetweenHeadAndBody", "shouldRemoveMetaRefreshButKeepOtherMetaTags", "shouldRemoveMetaRefreshInBody", "shouldRemoveMetaRefreshInHead", "shouldRemoveMetaRefreshWithMixedCaseAttributeValue", "shouldRemoveMetaRefreshWithSpacesInAttributeValue", "shouldRemoveMetaRefreshWithUpperCaseAttributeValue", "shouldRemoveMetaRefreshWithoutQuotesAroundAttributeValue", "shouldRemoveMultipleMetaRefreshTags" ],
        "k9mail§com.fsck.k9.message.signature.HtmlSignatureRemoverTest" : [ "shouldNotStripSignatureInsideBlockquoteTags", "shouldStripSignatureAfterLastBlockquoteTags", "shouldStripSignatureBeforeBlockquoteTag", "shouldStripSignatureBetweenBlockquoteTags", "shouldStripSignatureFromK9StyleHtml" ]
      },
      "predecessor" : "c816276a3f14cc0f044784f603b9ab1505a9ce2e~1"
    },
    "f241a0a650473ea79a5ea93337e7d6b0e39affba" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "close_withoutOpen_shouldNotThrow", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isConnected_withoutPreviousOpen_shouldReturnFalse", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithByeResponseAndConnectionClose_shouldThrowAuthenticationFailedException", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_authXoauthWithSaslIr", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOn400Response", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnInvalidJsonResponse", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnMissingStatusJsonResponse", "open_authXoauthWithSaslIrParsesCapabilities", "open_authXoauthWithSaslIrThrowsExeptionOn401Response", "open_authXoauthWithSaslIrWithOldTokenThrowsExceptionIfRetryFails", "open_withCapabilitiesInInitialResponse_shouldNotIssuePreAuthCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withConnectionError_shouldThrow", "open_withInvalidHostname_shouldThrow", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withNegativeResponseToStartTlsCommand_shouldThrow", "open_withNoCapabilitiesInInitialResponse_shouldIssuePreAuthCapabilitiesCommand", "open_withNoPostAuthCapabilityResponse_shouldIssueCapabilityCommand", "open_withPostAuthCapabilityResponse_shouldNotIssueCapabilityCommand", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "open_withUntaggedPostAuthCapabilityResponse_shouldNotIssueCapabilityCommand", "sendContinuation" ]
      },
      "predecessor" : "f241a0a650473ea79a5ea93337e7d6b0e39affba~1"
    },
    "da3bf8d679639de9a27da4b632863258fbc2d86d" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "close_withoutOpen_shouldNotThrow", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isConnected_withoutPreviousOpen_shouldReturnFalse", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainFailureAndDisconnect_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithByeResponseAndConnectionClose_shouldThrowAuthenticationFailedException", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_authXoauthWithSaslIr", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOn400Response", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnInvalidJsonResponse", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnMissingStatusJsonResponse", "open_authXoauthWithSaslIrParsesCapabilities", "open_authXoauthWithSaslIrThrowsExeptionOn401Response", "open_authXoauthWithSaslIrWithOldTokenThrowsExceptionIfRetryFails", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withConnectionError_shouldThrow", "open_withInvalidHostname_shouldThrow", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withNegativeResponseToStartTlsCommand_shouldThrow", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "sendContinuation" ]
      },
      "predecessor" : "da3bf8d679639de9a27da4b632863258fbc2d86d~1"
    },
    "3e8b04391f18f869cab9cf1d2a1f20d8405dcd82" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.CopyUidResponseTest" : [ "parse_withCopyUidResponse_shouldCreateUidMapping", "parse_withNonNumberCopyUidArguments_shouldReturnNull", "parse_withNonStringCopyUidArgumentOne_shouldReturnNull", "parse_withNonStringCopyUidArgumentThree_shouldReturnNull", "parse_withNonStringCopyUidArgumentTwo_shouldReturnNull", "parse_withResponseTextListTooShort_shouldReturnNull", "parse_withUnbalancedCopyUidArguments_shouldReturnNull", "parse_withoutCopyUidResponse_shouldReturnNull", "parse_withoutOkResponse_shouldReturnNull", "parse_withoutResponseTextList_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlainWithLoginDisabled_shouldThrow", "open_withConnectionError_shouldThrow", "open_withInvalidHostname_shouldThrow", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessageByUid_returnsNewImapMessageWithUidInFolder", "getMessages_withEndArgumentSmallerThanStartArgument_shouldThrow", "getMessages_withInvalidEndArgument_shouldThrow", "getMessages_withInvalidStartArgument_shouldThrow", "getNewPushState_withNewerUid_shouldReturnNewPushState", "getNewPushState_withoutNewerUid_shouldReturnNull", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withRemoteSearchDisabled_shouldThrow", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapResponseParserTest" : [ "readResponseShouldReadWholeListResponseLine", "readResponse_withCallbackThatThrowsRepeatedly_shouldConsumeAllInputAndThrowFirstException", "readResponse_withListResponseContainingNil", "readResponse_withPartlyConsumingCallbackThatThrows_shouldReadAllDataAndThrow", "readStatusResponse_withNoResponseAndAlertText_shouldThrowWithAlertText", "readStatusResponse_withNoResponse_shouldThrow", "testExistsResponse", "testFetchResponse", "testListResponseContainingFolderNameContainingBracketsThrowsException", "testListResponseContainingFolderNameWithBrackets", "testParseLiteral", "testParseLiteralWithConsumingCallbackReturningNull", "testParseLiteralWithEmptyString", "testParseLiteralWithIncompleteConsumingCallbackReturningString", "testParseLiteralWithNonConsumingCallbackReturningNull", "testParseLiteralWithThrowingCallback", "testParseQuoted", "testReadStatusResponseSkippingWrongTag", "testReadStatusResponseUntaggedHandlerGetsUntaggedOnly", "testReadStatusResponseUntaggedHandlerStillCalledOnNegativeReply", "testReadStatusResponseWithErrorResponse", "testReadStatusResponseWithOKResponse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.SearchResponseTest" : [ "parse_withSearchResponseContainingInvalidNumber_shouldReturnEmptyList", "parse_withSearchResponse_shouldExtractNumbers", "parse_withTaggedSearchResponse_shouldReturnEmptyList", "parse_withTooShortResponse_shouldReturnEmptyList", "parse_withoutSearchResponse_shouldReturnEmptyList" ]
      },
      "predecessor" : "44e2954b208731109c5d7300f30a628a28d5b0a3"
    },
    "72af527db083327e871d9ef80b02c31ac3b799f1" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "searchRemoteMessagesSynchronous_shouldNotifyOnFinish" ],
        "k9mail§com.fsck.k9.helper.K9AlarmManagerTest" : [ "cancel_shouldCallCancelOnAlarmManager", "set_withDozeSupportAndNotWhiteListed_shouldCallSetOnAlarmManager", "set_withDozeSupportAndWhiteListed_shouldCallSetAndAllowWhileIdleOnAlarmManager", "set_withoutDozeSupport_shouldCallSetOnAlarmManager" ],
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords" ]
      },
      "predecessor" : "72af527db083327e871d9ef80b02c31ac3b799f1~1"
    },
    "4e8829f26ed943fd40c1e817e1f50ec1005b1b14" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.command.UidSearchCommandTest" : [ "execute_shouldIssueProperCommand" ]
      },
      "predecessor" : "4e8829f26ed943fd40c1e817e1f50ec1005b1b14~1"
    },
    "0f46f5a57576c799e2b858f6aa36e4c357e73f52" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEmptyMessageListArgument_shouldDoNothing", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withNullMessageListArgument_shouldDoNothing", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException" ]
      },
      "predecessor" : "0f46f5a57576c799e2b858f6aa36e4c357e73f52~1"
    },
    "8f073e0672f4e2c52510abb56ab37014074e7e35" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "copyMessages_withClosedFolder_shouldThrow", "copyMessages_withEmptyMessageList_shouldReturnNull", "copyMessages_withoutDestinationFolderOfWrongType_shouldThrow", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEmptyMessageListArgument_shouldDoNothing", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withNullMessageListArgument_shouldDoNothing", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getFlaggedMessageCount_withClosedFolder_shouldThrow", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessagesFromUids_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withClosedFolder_shouldThrow", "getMessages_withDateConstraint", "getMessages_withEndArgumentSmallerThanStartArgument_shouldThrow", "getMessages_withInvalidEndArgument_shouldThrow", "getMessages_withInvalidStartArgument_shouldThrow", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUidFromMessageId_withoutMessageIdHeader_shouldReturnNull", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "getUnreadMessageCount_withClosedFolder_shouldThrow", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "search_withRemoteSearchDisabled_shouldThrow", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.selectedstate.command.SelectedStateCommandTest" : [ "executeInternal_withAllIds_shouldCreateProperCommand", "executeInternal_withManyNonContiguousIds_shouldSplitCommand", "executeInternal_withOnlyHighestId_shouldCreateProperCommand" ]
      },
      "predecessor" : "8f073e0672f4e2c52510abb56ab37014074e7e35~1"
    },
    "c7a1c5db1a5cb97fe0006b12f94ebb6133034d99" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withEmptyDatabase_shouldSetsDatabaseVersion", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ]
      },
      "predecessor" : "c7a1c5db1a5cb97fe0006b12f94ebb6133034d99~1"
    },
    "feea224b0e1c062c39f65220b48fe0a58a3cd026" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.selectedstate.response.UidSearchResponseTest" : [ "parse_withMultipleSearchResponsesAndSingleNoSearchResponse_shouldExtractNumbers", "parse_withMultipleSearchResponsesAndSingleSearchResponseContainingInvalidNumber_shouldExtractNumbers", "parse_withMultipleSearchResponsesAndSingleTaggedSearchResponse_shouldExtractNumbers", "parse_withMultipleSearchResponsesAndSingleTooShortResponse_shouldExtractNumbers", "parse_withMultipleSearchResponses_shouldExtractNumbers", "parse_withSingleNoSearchResponse_shouldReturnEmptyList", "parse_withSingleSearchResponseContainingInvalidNumber_shouldReturnEmptyList", "parse_withSingleSearchResponse_shouldExtractNumbers", "parse_withSingleTaggedSearchResponse_shouldReturnEmptyList", "parse_withSingleTooShortResponse_shouldReturnEmptyList" ]
      },
      "predecessor" : "feea224b0e1c062c39f65220b48fe0a58a3cd026~1"
    },
    "7858104b7df089b43f921002460e0f488b90ec8d" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "expunge_shouldIssueExpungeCommand", "fetch_withEmptyMessageListArgument_shouldDoNothing", "fetch_withNullMessageListArgument_shouldDoNothing", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "open_calledTwice_shouldReuseSameImapConnection", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldCloseTheFolder", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "7858104b7df089b43f921002460e0f488b90ec8d~1"
    },
    "be9058c7376e562524fce03de091993a52804889" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUnreadMessageCount", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldAddErrorMessageInDebug", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "4055e1fc9c06551bf94b64005a491f840f1db4a4"
    },
    "afe1f016e94bae96b394ac85e56413d1055d77d2" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "copyMessages", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUnreadMessageCount", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.selectedstate.response.UidCopyResponseTest" : [ "parse_withCopyUidResponse_shouldCreateUidMapping", "parse_withNonNumberCopyUidArguments_shouldReturnNull", "parse_withNonStringCopyUidArgumentOne_shouldReturnNull", "parse_withNonStringCopyUidArgumentThree_shouldReturnNull", "parse_withNonStringCopyUidArgumentTwo_shouldReturnNull", "parse_withResponseTextListTooShort_shouldReturnNull", "parse_withTooShortResponse_shouldReturnNull", "parse_withUnbalancedCopyUidArguments_shouldReturnNull", "parse_withUntaggedResponse_shouldReturnNull", "parse_withoutCopyUidResponse_shouldReturnNull", "parse_withoutOkResponse_shouldReturnNull", "parse_withoutResponseTextList_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.selectedstate.response.UidSearchResponseTest" : [ "parse_withMultipleSearchResponsesAndSingleNoSearchResponse_shouldExtractNumbers", "parse_withMultipleSearchResponsesAndSingleSearchResponseContainingInvalidNumber_shouldExtractNumbers", "parse_withMultipleSearchResponsesAndSingleTaggedSearchResponse_shouldExtractNumbers", "parse_withMultipleSearchResponsesAndSingleTooShortResponse_shouldExtractNumbers", "parse_withMultipleSearchResponses_shouldExtractNumbers", "parse_withSingleNoSearchResponse_shouldReturnEmptyList", "parse_withSingleSearchResponse_shouldExtractNumbers", "parse_withSingleTaggedSearchResponse_shouldReturnEmptyList", "parse_withSingleTooShortResponse_shouldReturnEmptyList" ]
      },
      "predecessor" : "afe1f016e94bae96b394ac85e56413d1055d77d2~1"
    },
    "cc03e430d2f2b9ba7feb3b6437f5d9db63e5a438" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "getUnreadMessageCount" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder" ]
      },
      "predecessor" : "cc03e430d2f2b9ba7feb3b6437f5d9db63e5a438~1"
    },
    "b852b8eeb4cdbad405a6700c8800505150354e32" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUnreadMessageCount", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withEmptyDatabase_shouldSetsDatabaseVersion", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ]
      },
      "predecessor" : "cc03e430d2f2b9ba7feb3b6437f5d9db63e5a438"
    },
    "f73f26a84492ed64ce267417c2f50ccec4fec6ad" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withClosedFolder_shouldThrow", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "copyMessages_withClosedFolder_shouldThrow", "copyMessages_withEmptyMessageList_shouldReturnNull", "copyMessages_withoutDestinationFolderOfWrongType_shouldThrow", "create_withClosedFolder_shouldOpenConnectionAndIssueCreateCommand", "create_withNegativeImapResponse_shouldReturnFalse", "create_withoutNegativeImapResponse_shouldReturnTrue", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "exists_withClosedFolder_shouldOpenConnectionAndIssueStatusCommand", "exists_withNegativeImapResponse_shouldReturnFalse", "exists_withoutNegativeImapResponse_shouldReturnTrue", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEmptyMessageListArgument_shouldDoNothing", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withNullMessageListArgument_shouldDoNothing", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getFlaggedMessageCount_withClosedFolder_shouldThrow", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessageByUid_returnsNewImapMessageWithUidInFolder", "getMessagesFromUids", "getMessagesFromUids_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withClosedFolder_shouldThrow", "getMessages_withDateConstraint", "getMessages_withEndArgumentSmallerThanStartArgument_shouldThrow", "getMessages_withInvalidEndArgument_shouldThrow", "getMessages_withInvalidStartArgument_shouldThrow", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getNewPushState_withNewerUid_shouldReturnNewPushState", "getNewPushState_withoutNewerUid_shouldReturnNull", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUidFromMessageId_withoutMessageIdHeader_shouldReturnNull", "getUnreadMessageCount", "getUnreadMessageCount_withClosedFolder_shouldThrow", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "search_withRemoteSearchDisabled_shouldThrow", "setFlags_shouldIssueUidStoreCommand" ]
      },
      "predecessor" : "129ee0c4360c80da1792b73ef20e81ff9f2e16d7"
    },
    "d80681a2b80442d7d58ef2ccee2d21b06e13c6bf" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync" ]
      },
      "predecessor" : "d80681a2b80442d7d58ef2ccee2d21b06e13c6bf~1"
    },
    "22f3d1c7719d9cd0e1b4e023ac3b7431fbc71bc5" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldCloseTheFolder" ]
      },
      "predecessor" : "22f3d1c7719d9cd0e1b4e023ac3b7431fbc71bc5~1"
    },
    "57bdd0fb8af6776da5b2e0d7c74086890656d3bb" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages" ]
      },
      "predecessor" : "57bdd0fb8af6776da5b2e0d7c74086890656d3bb~1"
    },
    "1f3e43c668df6bd629a475d8f7fc21533b5fda28" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.setup.outgoing.OutgoingPresenterTest" : [ "testFields_withCertificate", "testFields_withIncompleteServer", "testFields_withInvalidPassword", "testFields_withInvalidPort", "testFields_withNotRequiredLogin", "testFields_withPassword", "testRevokeInvalidSettings_withSecurityChanged", "testUpdatePortFromSecurity" ]
      },
      "predecessor" : "1f3e43c668df6bd629a475d8f7fc21533b5fda28~1"
    },
    "4abe071ecf962ee4d431c5d1eb4eff8831f41a57" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ]
      },
      "predecessor" : "228441bfd64a19027db3d55783f8925b97529c37"
    },
    "c6e2acc63e4e71c9c769171215d842391f753001" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withEmptyDatabase_shouldSetsDatabaseVersion", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ]
      },
      "predecessor" : "c6e2acc63e4e71c9c769171215d842391f753001~1"
    },
    "4170922cb598dbb84afd7f5ce536631ca9d2aaac" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.SelectOrExamineResponseTest" : [ "getOpenMode_withoutResponseCode_shouldThrow", "newInstance_withExamineResponse_shouldReturnOpenModeReadOnly", "newInstance_withInvalidResponseText_shouldReturnHasOpenModeFalse", "newInstance_withSelectResponse_shouldParseAllFieldsCorrectly", "newInstance_withSelectResponse_shouldReturnOpenModeReadWrite", "newInstance_withUnknownResponseText_shouldReturnHasOpenModeFalse", "newInstance_withoutResponseCode_shouldReturnHasOpenModeFalse" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen" ]
      },
      "predecessor" : "4170922cb598dbb84afd7f5ce536631ca9d2aaac~1"
    },
    "268b25c920eb824be2ef62ef2b9ed662ba7244fc" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainFailureAndDisconnect_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithByeResponseAndConnectionClose_shouldThrowAuthenticationFailedException", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_authXoauthWithSaslIr", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOn400Response", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnInvalidJsonResponse", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnMissingStatusJsonResponse", "open_authXoauthWithSaslIrParsesCapabilities", "open_authXoauthWithSaslIrThrowsExeptionOn401Response", "open_authXoauthWithSaslIrWithOldTokenThrowsExceptionIfRetryFails", "open_withCapabilitiesInInitialResponse_shouldNotIssuePreAuthCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withConnectionError_shouldThrow", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withNegativeResponseToStartTlsCommand_shouldThrow", "open_withNoCapabilitiesInInitialResponse_shouldIssuePreAuthCapabilitiesCommand", "open_withNoPostAuthCapabilityResponse_shouldIssueCapabilityCommand", "open_withPostAuthCapabilityResponse_shouldNotIssueCapabilityCommand", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "open_withUntaggedPostAuthCapabilityResponse_shouldNotIssueCapabilityCommand", "sendContinuation" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUidFromMessageId_withoutMessageIdHeader_shouldReturnNull", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapPusherTest" : [ "refresh_shouldCallRefreshOnStartedImapFolderPusher", "refresh_withImapFolderPusherThrowing_shouldNotThrow", "start_calledAfterStart_shouldStopFirstImapFolderPusher", "start_shouldSetLastRefreshToCurrentTime", "start_withSingleFolderName_shouldCreateImapFolderPusherAndCallStartOnIt", "start_withTwoFolderNames_shouldCreateTwoImapFolderPushersAndCallStart", "stop_afterStartWithSingleFolderName_shouldStopImapFolderPusher", "stop_withImapFolderPusherThrowing_shouldNotThrow", "stop_withoutStartBeingCalled_shouldNotCreateAnyImapFolderPushers" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapResponseParserTest" : [ "readStatusResponse_withNoResponseAndAlertText_shouldThrowWithAlertText", "readStatusResponse_withNoResponse_shouldThrow", "testReadStatusResponseSkippingWrongTag", "testReadStatusResponseUntaggedHandlerGetsUntaggedOnly", "testReadStatusResponseUntaggedHandlerStillCalledOnNegativeReply", "testReadStatusResponseWithErrorResponse", "testReadStatusResponseWithOKResponse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "autoconfigureFolders_withoutSpecialUseCapability_shouldNotIssueImapCommand", "checkSettings_shouldCreateImapConnectionAndCallOpen" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.SelectOrExamineResponseTest" : [ "getOpenMode_withoutResponseCode_shouldThrow", "newInstance_withExamineResponse_shouldReturnOpenModeReadOnly", "newInstance_withInvalidResponseText_shouldReturnHasOpenModeFalse", "newInstance_withSelectResponse_shouldParseAllFieldsCorrectly", "newInstance_withSelectResponse_shouldReturnOpenModeReadWrite", "newInstance_withUnknownResponseText_shouldReturnHasOpenModeFalse", "newInstance_withoutResponseCode_shouldReturnHasOpenModeFalse" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavFolderTest" : [ "can_fetch_message_count", "can_fetch_unread_message_count", "getMessages_shouldProvideCorrectHeadersInRequest", "getMessages_should_request_message_search" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavStoreTest" : [ "checkSettings_shouldRegisterHttpsSchemeWithRegistry", "checkSettings_withErrorResponse_shouldThrow", "checkSettings_withHttpPrefixedServerName_shouldUseInsecureConnection", "checkSettings_withInitialUnauthorizedResponse_shouldPerformBasicAuthentication", "checkSettings_withOkResponse_shouldPerformFormBasedAuthentication", "checkSettings_withSslException_shouldThrowCertificateValidationException", "checkSettings_withUnauthorizedResponses_shouldThrow", "checkSettings_withWebDavSslUri_shouldUseSecureConnection", "checkSettings_withWebDavTlsUri_shouldUseSecureConnection", "checkSettings_withWebDavUri_shouldUseInsecureConnection", "getPersonalNamespaces_shouldProvideListOfAllFoldersSentFromResponses", "getPersonalNamespaces_shouldRequestFolderList", "getPersonalNamespaces_shouldRequestSpecialFolders", "getPersonalNamespaces_shouldSetSpecialFolderNames" ],
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "open_withAuthExternalExtension", "open_withAuthLoginExtension", "open_withAuthPlainExtension", "open_withAutomaticAuthAndNoTransportSecurityAndAuthCramMd5Extension_shouldUseAuthCramMd5", "open_withAutomaticAuthAndNoTransportSecurityAndAuthPlainExtension_shouldThrow", "open_withCramMd5AuthExtension", "open_withEhloFailing_shouldTryHelo", "open_withManyExtensions_shouldParseAll", "open_withSupportWithEnhancedStatusCodesOnAuthFailure_shouldThrowEncodedMessage", "open_withXoauth2Extension", "open_withXoauth2Extension_shouldInvalidateAndRetryOn400Response", "open_withXoauth2Extension_shouldInvalidateAndRetryOnInvalidJsonResponse", "open_withXoauth2Extension_shouldInvalidateAndRetryOnMissingStatusJsonResponse", "open_withXoauth2Extension_shouldThrowOn401Response", "open_withXoauth2Extension_shouldThrowOnFailure_fetchingToken", "open_withXoauth2Extension_shouldThrowOnMultipleFailure", "open_withoutAuthExternalExtension_shouldThrow", "open_withoutAuthLoginExtension_shouldConnectWithoutAuthentication", "open_withoutCramMd5AuthExtension_shouldThrow", "open_withoutXoauth2Extension_shouldThrow", "sendMessage_with8BitEncoding", "sendMessage_with8BitEncodingExtensionNotCaseSensitive", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withSingleRecipient" ],
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords" ]
      },
      "predecessor" : "268b25c920eb824be2ef62ef2b9ed662ba7244fc~1"
    },
    "5b605f25ab7c837279347cf9895c82c5705eb813" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainFailureAndDisconnect_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithByeResponseAndConnectionClose_shouldThrowAuthenticationFailedException", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_authXoauthWithSaslIr", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOn400Response", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnInvalidJsonResponse", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnMissingStatusJsonResponse", "open_authXoauthWithSaslIrParsesCapabilities", "open_authXoauthWithSaslIrThrowsExeptionOn401Response", "open_authXoauthWithSaslIrWithOldTokenThrowsExceptionIfRetryFails", "open_withCapabilitiesInInitialResponse_shouldNotIssuePreAuthCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withConnectionError_shouldThrow", "open_withInvalidHostname_shouldThrow", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withNegativeResponseToStartTlsCommand_shouldThrow", "open_withNoCapabilitiesInInitialResponse_shouldIssuePreAuthCapabilitiesCommand", "open_withNoPostAuthCapabilityResponse_shouldIssueCapabilityCommand", "open_withPostAuthCapabilityResponse_shouldNotIssueCapabilityCommand", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "open_withUntaggedPostAuthCapabilityResponse_shouldNotIssueCapabilityCommand", "sendContinuation" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "setFlags_shouldIssueUidStoreCommand" ]
      },
      "predecessor" : "5b605f25ab7c837279347cf9895c82c5705eb813~1"
    },
    "4763087cf528d138da50539ef371dad637901250" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldAddErrorMessageInDebug", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync" ]
      },
      "predecessor" : "4763087cf528d138da50539ef371dad637901250~1"
    },
    "bf9d1bda0b1f52ff5ee3c856fc9743c6a8f40cd2" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "setFlags_shouldIssueUidStoreCommand" ]
      },
      "predecessor" : "4763087cf528d138da50539ef371dad637901250"
    },
    "9d044e31093178508b3017cc2c6c0d813d0fc66a" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.selectedstate.command.ImapCommandSplitterTest" : [ "splitCommand_withContiguousAndNonContiguousIds_shouldGroupIdsAndSplitCommand" ]
      },
      "predecessor" : "9d044e31093178508b3017cc2c6c0d813d0fc66a~1"
    },
    "cb472744a1f43692fe483df962e17599b27c8bf0" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldAddErrorMessageInDebug", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withEmptyDatabase_shouldSetsDatabaseVersion", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ],
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords" ]
      },
      "predecessor" : "9d044e31093178508b3017cc2c6c0d813d0fc66a"
    },
    "b39e21f7c0edba8649618cb72c46167db617a1d5" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "expungeUsingQresync_shouldIssueExpungeCommand", "expungeUsingQresync_withUidsExpunged_shouldReportExpungedUidsAndUpdateModSeq", "expunge_shouldIssueExpungeCommand", "fetchChangedMessageFlagsUsingCondstore_shouldIssueRespectiveCommand", "fetchChangedMessageFlagsUsingCondstore_shouldSetFlags", "fetchChangedMessageFlagsUsingCondstore_withListener_shouldCallListener", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "openUsingQresyncParam_shouldFetchHighestModSeq", "openUsingQresyncParam_withValidParams_shouldReturnValidQresyncParamResponse", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldFetchUidValidity", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withCondstoreParam_shouldFetchHighestModSeq", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "setFlags_shouldIssueUidStoreCommand", "supportsModSeq_afterCondstoreOpenWithNoModSeqResponse_shouldReturnFalse", "supportsModSeq_afterCondstoreOpen_shouldReturnTrue", "supportsModSeq_afterQresyncOpen_shouldReturnTrue", "supportsModSeq_afterRegularOpen_shouldReturnFalse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.SelectOrExamineResponseTest" : [ "getOpenMode_withoutResponseCode_shouldThrow", "newInstance_withExamineResponse_shouldReturnOpenModeReadOnly", "newInstance_withInvalidResponseText_shouldReturnHasOpenModeFalse", "newInstance_withSelectResponse_shouldParseAllFieldsCorrectly", "newInstance_withSelectResponse_shouldReturnOpenModeReadWrite", "newInstance_withUnknownResponseText_shouldReturnHasOpenModeFalse", "newInstance_withUntaggedResponse_shouldReturnNull", "newInstance_withoutOkResponse_shouldReturnNull", "newInstance_withoutResponseCode_shouldReturnHasOpenModeFalse" ]
      },
      "predecessor" : "b39e21f7c0edba8649618cb72c46167db617a1d5~1"
    },
    "3c64e4205f44ff00777e346e8105e1e1f68f416a" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "expungeUsingQresync_shouldIssueExpungeCommand", "expungeUsingQresync_withUidsExpunged_shouldReportExpungedUidsAndUpdateModSeq", "openUsingQresyncParam_shouldFetchHighestModSeq", "openUsingQresyncParam_withValidParams_shouldReturnValidQresyncParamResponse", "supportsModSeq_afterQresyncOpen_shouldReturnTrue" ]
      },
      "predecessor" : "3c64e4205f44ff00777e346e8105e1e1f68f416a~1"
    },
    "7bf3f7e863578cd412dfdece33828534e71b0950" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "expungeUsingQresync_shouldIssueExpungeCommand", "expungeUsingQresync_withUidsExpunged_shouldReportExpungedUidsAndUpdateModSeq", "openUsingQresyncParam_shouldFetchHighestModSeq", "openUsingQresyncParam_withValidParams_shouldReturnValidQresyncParamResponse", "supportsModSeq_afterQresyncOpen_shouldReturnTrue" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapUtilityTest" : [ "extractVanishedUids_withVanishedEarlierResponse_shouldReturnRespectiveValues", "extractVanishedUids_withVanishedResponse_shouldReturnRespectiveValues" ]
      },
      "predecessor" : "7bf3f7e863578cd412dfdece33828534e71b0950~1"
    },
    "57bef034d7db33fa9cd685d790c757e90c45efa4" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.selectedstate.command.UidFetchCommandTest" : [ "createCommandString_withBodyFetchProfileAndNoMaximumDownloadSize_shouldCreateRespectiveString", "createCommandString_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldCreateRespectiveString", "createCommandString_withBodySaneFetchProfile_shouldCreateRespectiveString", "createCommandString_withEnvelopeFetchProfile_shouldCreateRespectiveString", "createCommandString_withFlagsFetchProfile_shouldCreateRespectiveString", "createCommandString_withStructureFetchProfile_shouldCreateRespectiveString" ]
      },
      "predecessor" : "57bef034d7db33fa9cd685d790c757e90c45efa4~1"
    },
    "010018e5fd99fa9268e12ae43e67fdf1c63fa021" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "expungeUsingQresync_shouldIssueExpungeCommand", "expungeUsingQresync_withUidsExpunged_shouldReportExpungedUidsAndUpdateModSeq", "expunge_shouldIssueExpungeCommand", "fetchChangedMessageFlagsUsingCondstore_shouldIssueRespectiveCommand", "fetchChangedMessageFlagsUsingCondstore_shouldSetFlags", "fetchChangedMessageFlagsUsingCondstore_withListener_shouldCallListener", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getNewPushState_withNewerUid_shouldReturnNewPushState", "getNewPushState_withoutNewerUid_shouldReturnNull", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUnreadMessageCount", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "openUsingQresyncParam_shouldFetchHighestModSeq", "openUsingQresyncParam_withValidParams_shouldReturnValidQresyncParamResponse", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldFetchUidValidity", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withCondstoreParam_shouldFetchHighestModSeq", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "setFlags_shouldIssueUidStoreCommand", "supportsModSeq_afterCondstoreOpenWithNoModSeqResponse_shouldReturnFalse", "supportsModSeq_afterCondstoreOpen_shouldReturnTrue", "supportsModSeq_afterQresyncOpenWithNoModSeqResponse_shouldReturnFalse", "supportsModSeq_afterQresyncOpen_shouldReturnTrue", "supportsModSeq_afterRegularOpen_shouldReturnFalse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.QresyncParamResponseTest" : [ "fromSelectOrExamineResponse_shouldParseResponseCorrectly" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.SelectOrExamineResponseTest" : [ "getOpenMode_withoutResponseCode_shouldThrow", "newInstance_withExamineResponse_shouldReturnOpenModeReadOnly", "newInstance_withInvalidResponseText_shouldReturnHasOpenModeFalse", "newInstance_withSelectResponse_shouldParseAllFieldsCorrectly", "newInstance_withSelectResponse_shouldReturnOpenModeReadWrite", "newInstance_withUnknownResponseText_shouldReturnHasOpenModeFalse", "newInstance_withUntaggedResponse_shouldReturnNull", "newInstance_withoutOkResponse_shouldReturnNull", "newInstance_withoutResponseCode_shouldReturnHasOpenModeFalse" ]
      },
      "predecessor" : "010018e5fd99fa9268e12ae43e67fdf1c63fa021~1"
    },
    "c60ce303c1b5e253900455cd3eff3de5f3c85077" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldAddErrorMessageInDebug", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync" ]
      },
      "predecessor" : "010018e5fd99fa9268e12ae43e67fdf1c63fa021"
    },
    "02bad12c4b8b297cfb21ee74a9ca6d5af41ee044" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress" ]
      },
      "predecessor" : "ff022c1bb5dd119fe99a45dd429f4f810a8a49b7"
    },
    "8772045cefa96f7c2daff68b1252525e7eff4bdd" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.ImapSyncInteractorTest" : [ "performSync_afterCompletion_shouldCloseFolders", "performSync_shouldUpdateCachedUidValidity", "performSync_withAccountNotSetToExpungeOnPoll_shouldNotExpungeRemoteFolder", "performSync_withDifferentUidValidity_shouldClearHighestModSeq", "performSync_withDifferentUidValidity_shouldDeleteAllLocallyStoredMessages", "performSync_withDifferentUidValidity_shouldNotifyListenersOfDeletion", "performSync_withEqualUidValidity_shouldNotDeleteAllLocallyStoredMessages", "performSync_withFolderNotSupportingModSeqs_shouldInvalidateCachedHighestModSeq", "performSync_withFolderSupportingModSeqs_shouldUpdateCachedHighestModSeq", "performSync_withImapFolder_shouldFinishWithoutError", "performSync_withInvalidCachedHighestModSeq_shouldOpenImapFolderNormally", "performSync_withNegativeMessageCount_shouldFinishWithError", "performSync_withNonImapFolder_shouldFinishWithError", "performSync_withProcessPendingCommandsSynchronousThrowingException_shouldFinishWithError", "performSync_withQresyncEnabledAndAccountSetToExpungeOnPoll_shouldExpungeRemoteFolder", "performSync_withRemoteFolderCreationFailed_shouldExitWithoutOpeningRemoteFolder", "performSync_withValidCachedUidValidityAndHighestModSeq_shouldOpenFolderUsingQresyncParams", "performSync_withoutCachedUidValidity_shouldNotDeleteAllLocallyStoredMessages", "performSync_withoutCachedUidValidity_shouldOpenImapFolderNormally", "performSync_withoutQresyncEnabledAndAccountSetToExpungeOnPoll_shouldExpungeRemoteFolder", "syncRemoteDeletions_withEmptyMessageUidList_shouldNotCheckForMoreMessages", "syncRemoteDeletions_withNonEmptyMessageUidListAndMoreMessagesAvailable_shouldSetMoreMessagesAsTrue", "syncRemoteDeletions_withNonEmptyMessageUidListAndNoMoreMessagesAvailable_shouldSetMoreMessagesAsFalse", "syncRemoteDeletions_withNonEmptyMessageUidListAndRemoteStartAsOne_shouldNotCheckForMoreMessages", "syncRemoteDeletions_withNonEmptyMessageUidList_shouldDeleteLocalCopiesOfMessages", "syncRemoteDeletions_withNonEmptyMessageUidList_shouldNotifyListeners" ]
      },
      "predecessor" : "8772045cefa96f7c2daff68b1252525e7eff4bdd~1"
    },
    "479d63c617ec7209408a96787f47f4e44bc40de4" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.ImapSyncInteractorTest" : [ "performSync_afterCompletion_shouldCloseFolders", "performSync_shouldUpdateCachedUidValidity", "performSync_withAccountNotSetToExpungeOnPoll_shouldNotExpungeRemoteFolder", "performSync_withDifferentUidValidity_shouldClearHighestModSeq", "performSync_withDifferentUidValidity_shouldDeleteAllLocallyStoredMessages", "performSync_withDifferentUidValidity_shouldNotifyListenersOfDeletion", "performSync_withEqualUidValidity_shouldNotDeleteAllLocallyStoredMessages", "performSync_withFolderNotSupportingModSeqs_shouldInvalidateCachedHighestModSeq", "performSync_withFolderSupportingModSeqs_shouldUpdateCachedHighestModSeq", "performSync_withImapFolder_shouldFinishWithoutError", "performSync_withInvalidCachedHighestModSeq_shouldOpenImapFolderNormally", "performSync_withNegativeMessageCount_shouldFinishWithError", "performSync_withNonImapFolder_shouldFinishWithError", "performSync_withProcessPendingCommandsSynchronousThrowingException_shouldFinishWithError", "performSync_withQresyncEnabledAndAccountSetToExpungeOnPoll_shouldExpungeRemoteFolder", "performSync_withRemoteFolderCreationFailed_shouldExitWithoutOpeningRemoteFolder", "performSync_withValidCachedUidValidityAndHighestModSeq_shouldOpenFolderUsingQresyncParams", "performSync_withoutCachedUidValidity_shouldNotDeleteAllLocallyStoredMessages", "performSync_withoutCachedUidValidity_shouldOpenImapFolderNormally", "performSync_withoutQresyncEnabledAndAccountSetToExpungeOnPoll_shouldExpungeRemoteFolder" ]
      },
      "predecessor" : "479d63c617ec7209408a96787f47f4e44bc40de4~1"
    },
    "42847a826dbe82a5dad0a8585268db2435ffc70b" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.ImapSyncInteractorTest" : [ "performSync_afterCompletion_shouldCloseFolders", "performSync_shouldUpdateCachedUidValidity", "performSync_withAccountNotSetToExpungeOnPoll_shouldNotExpungeRemoteFolder", "performSync_withDifferentUidValidity_shouldClearHighestModSeq", "performSync_withDifferentUidValidity_shouldDeleteAllLocallyStoredMessages", "performSync_withDifferentUidValidity_shouldNotifyListenersOfDeletion", "performSync_withEqualUidValidity_shouldNotDeleteAllLocallyStoredMessages", "performSync_withFolderNotSupportingModSeqs_shouldInvalidateCachedHighestModSeq", "performSync_withFolderSupportingModSeqs_shouldUpdateCachedHighestModSeq", "performSync_withImapFolder_shouldFinishWithoutError", "performSync_withInvalidCachedHighestModSeq_shouldOpenImapFolderNormally", "performSync_withNegativeMessageCount_shouldFinishWithError", "performSync_withNonImapFolder_shouldFinishWithError", "performSync_withProcessPendingCommandsSynchronousThrowingException_shouldFinishWithError", "performSync_withQresyncEnabledAndAccountSetToExpungeOnPoll_shouldExpungeRemoteFolder", "performSync_withRemoteFolderCreationFailed_shouldExitWithoutOpeningRemoteFolder", "performSync_withSyncRemoteDeletionsSetToFalse_shouldDeleteLocalCopiesIfNecessary", "performSync_withSyncRemoteDeletionsSetToTrue_shouldDeleteLocalCopiesIfNecessary", "performSync_withValidCachedUidValidityAndHighestModSeq_shouldOpenFolderUsingQresyncParams", "performSync_withoutCachedUidValidity_shouldNotDeleteAllLocallyStoredMessages", "performSync_withoutCachedUidValidity_shouldOpenImapFolderNormally", "performSync_withoutQresyncEnabledAndAccountSetToExpungeOnPoll_shouldExpungeRemoteFolder" ]
      },
      "predecessor" : "42847a826dbe82a5dad0a8585268db2435ffc70b~1"
    },
    "4e66fb6394680855b6abdb388c90a252d57a6a9f" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.ImapSyncInteractorTest" : [ "performSync_afterCompletion_shouldCloseFolders", "performSync_shouldUpdateCachedUidValidity", "performSync_withAccountNotSetToExpungeOnPoll_shouldNotExpungeRemoteFolder", "performSync_withDifferentUidValidity_shouldClearHighestModSeq", "performSync_withDifferentUidValidity_shouldDeleteAllLocallyStoredMessages", "performSync_withDifferentUidValidity_shouldNotifyListenersOfDeletion", "performSync_withEqualUidValidity_shouldNotDeleteAllLocallyStoredMessages", "performSync_withFolderNotSupportingModSeqs_shouldInvalidateCachedHighestModSeq", "performSync_withFolderSupportingModSeqs_shouldUpdateCachedHighestModSeq", "performSync_withImapFolder_shouldFinishWithoutError", "performSync_withInvalidCachedHighestModSeq_shouldOpenImapFolderNormally", "performSync_withNegativeMessageCount_shouldFinishWithError", "performSync_withNonImapFolder_shouldFinishWithError", "performSync_withProcessPendingCommandsSynchronousThrowingException_shouldFinishWithError", "performSync_withQresyncEnabledAndAccountSetToExpungeOnPoll_shouldExpungeRemoteFolder", "performSync_withRemoteFolderCreationFailed_shouldExitWithoutOpeningRemoteFolder", "performSync_withSyncRemoteDeletionsSetToFalse_shouldDeleteLocalCopiesIfNecessary", "performSync_withSyncRemoteDeletionsSetToTrue_shouldDeleteLocalCopiesIfNecessary", "performSync_withValidCachedUidValidityAndHighestModSeq_shouldOpenFolderUsingQresyncParams", "performSync_withoutCachedUidValidity_shouldNotDeleteAllLocallyStoredMessages", "performSync_withoutCachedUidValidity_shouldOpenImapFolderNormally", "performSync_withoutQresyncEnabledAndAccountSetToExpungeOnPoll_shouldExpungeRemoteFolder" ]
      },
      "predecessor" : "4e66fb6394680855b6abdb388c90a252d57a6a9f~1"
    },
    "f706990fea8a63c90777ec060a45e7cce9976909" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore" ]
      },
      "predecessor" : "f706990fea8a63c90777ec060a45e7cce9976909~1"
    },
    "72258a9a69d3c31f3cfd60b50c4e62c0becafcc6" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.ImapSyncInteractorTest" : [ "performSync_withQresyncEnabledAndAccountSetToExpungeOnPoll_shouldExpungeRemoteFolder" ]
      },
      "predecessor" : "72258a9a69d3c31f3cfd60b50c4e62c0becafcc6~1"
    },
    "94bf0375881df8ab0b43e78b27f2aa423ff98296" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.ImapSyncInteractorTest" : [ "performSync_withQresyncEnabledAndAccountSetToExpungeOnPoll_shouldExpungeRemoteFolder" ]
      },
      "predecessor" : "94bf0375881df8ab0b43e78b27f2aa423ff98296~1"
    },
    "dc8fdade853689a9f9c8779ac8c497409abe071d" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.setup.AccountSetupPresenterTest" : [ "testOnCertificatedRefused_outgoing", "testOnNegativeClickedInConfirmationDialog_editSettings", "testOnNegativeClickedInConfirmationDialog_incoming" ]
      },
      "predecessor" : "dc8fdade853689a9f9c8779ac8c497409abe071d~1"
    },
    "3ee5628323d831e7f03bd185b41e3fe63c9c1333" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.setup.AccountSetupPresenterTest" : [ "testOnNegativeClickedInConfirmationDialog_outgoing" ]
      },
      "predecessor" : "7b67114016999295057e9a6f6e13e72eccd12574"
    },
    "2c6634e6e7b0cf82b0e756a6a4dbede5844351f7" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withBadDatabase_shouldThrowInDebugBuild", "doDbUpgrade_withEmptyDatabase_shouldSetsDatabaseVersion", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion", "getVersion_shouldReturnCurrentDatabaseVersion" ],
        "k9mail§com.fsck.k9.notification.BaseNotificationsTest" : [ "testIsDeleteActionEnabled_NotificationQuickDelete_ALWAYS", "testIsDeleteActionEnabled_NotificationQuickDelete_FOR_SINGLE_MSG", "testIsDeleteActionEnabled_NotificationQuickDelete_NEVER" ]
      },
      "predecessor" : "2c6634e6e7b0cf82b0e756a6a4dbede5844351f7~1"
    },
    "fd27daa802bab6f47bb64600c120784a4e24ab56" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.ImapSyncInteractorTest" : [ "performSync_afterCompletion_shouldCloseFolders", "performSync_shouldUpdateCachedUidValidity", "performSync_withAccountNotSetToExpungeOnPoll_shouldNotExpungeRemoteFolder", "performSync_withDifferentUidValidity_shouldClearHighestModSeq", "performSync_withDifferentUidValidity_shouldDeleteAllLocallyStoredMessages", "performSync_withDifferentUidValidity_shouldNotifyListenersOfDeletion", "performSync_withEqualUidValidity_shouldNotDeleteAllLocallyStoredMessages", "performSync_withFolderNotSupportingModSeqs_shouldInvalidateCachedHighestModSeq", "performSync_withFolderSupportingModSeqs_shouldUpdateCachedHighestModSeq", "performSync_withImapFolder_shouldFinishWithoutError", "performSync_withInvalidCachedHighestModSeq_shouldOpenImapFolderNormally", "performSync_withProcessPendingCommandsSynchronousThrowingException_shouldFinishWithError", "performSync_withSyncRemoteDeletionsSetToFalse_shouldDeleteLocalCopiesIfNecessary", "performSync_withSyncRemoteDeletionsSetToTrue_shouldDeleteLocalCopiesIfNecessary", "performSync_withValidCachedUidValidityAndHighestModSeq_shouldOpenFolderUsingQresyncParams", "performSync_withoutCachedUidValidity_shouldNotDeleteAllLocallyStoredMessages", "performSync_withoutCachedUidValidity_shouldOpenImapFolderNormally", "performSync_withoutQresyncEnabledAndAccountSetToExpungeOnPoll_shouldExpungeRemoteFolder" ]
      },
      "predecessor" : "fd27daa802bab6f47bb64600c120784a4e24ab56~1"
    },
    "66b6f650d0c16de6d7b96b04582c6efa7307d12e" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldAddErrorMessageInDebug", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync" ]
      },
      "predecessor" : "66b6f650d0c16de6d7b96b04582c6efa7307d12e~1"
    },
    "084b19ef9f10ed52e603d6e829ef6988cef1b033" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.ImapSyncInteractorTest" : [ "performSync_afterCompletion_shouldCloseFolders", "performSync_shouldUpdateCachedUidValidity", "performSync_withAccountNotSetToExpungeOnPoll_shouldNotExpungeRemoteFolder", "performSync_withDifferentUidValidity_shouldClearHighestModSeq", "performSync_withDifferentUidValidity_shouldDeleteAllLocallyStoredMessages", "performSync_withDifferentUidValidity_shouldNotifyListenersOfDeletion", "performSync_withEqualUidValidity_shouldNotDeleteAllLocallyStoredMessages", "performSync_withFolderNotSupportingModSeqs_shouldInvalidateCachedHighestModSeq", "performSync_withFolderSupportingModSeqs_shouldUpdateCachedHighestModSeq", "performSync_withImapFolder_shouldFinishWithoutError", "performSync_withInvalidCachedHighestModSeq_shouldOpenImapFolderNormally", "performSync_withNegativeMessageCount_shouldFinishWithError", "performSync_withNonImapFolder_shouldFinishWithError", "performSync_withProcessPendingCommandsSynchronousThrowingException_shouldFinishWithError", "performSync_withQresyncEnabledAndAccountSetToExpungeOnPoll_shouldExpungeRemoteFolder", "performSync_withRemoteFolderCreationFailed_shouldExitWithoutOpeningRemoteFolder", "performSync_withSyncRemoteDeletionsSetToFalse_shouldDeleteLocalCopiesIfNecessary", "performSync_withSyncRemoteDeletionsSetToTrue_shouldDeleteLocalCopiesIfNecessary", "performSync_withValidCachedUidValidityAndHighestModSeq_shouldOpenFolderUsingQresyncParams", "performSync_withoutCachedUidValidity_shouldNotDeleteAllLocallyStoredMessages", "performSync_withoutCachedUidValidity_shouldOpenImapFolderNormally", "performSync_withoutQresyncEnabledAndAccountSetToExpungeOnPoll_shouldExpungeRemoteFolder" ],
        "k9mail§com.fsck.k9.controller.LegacySyncInteractorTest" : [ "performSync_shouldDownloadUnsyncedMessagesAndSyncLocalMessageFlags", "performSync_shouldOpenRemoteFolderFromStore", "performSync_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "performSync_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "performSync_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "performSync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "performSync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "performSync_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "performSync_withEmptyRemoteFolder_shouldFinishWithoutError", "performSync_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "performSync_withOneMessageInRemoteFolder_shouldFinishWithoutError" ],
        "k9mail§com.fsck.k9.controller.NonQresyncExtensionHandlerTest" : [ "continueSync_shouldDownloadNewMessages", "continueSync_shouldNotifyListenersOfHeaderSynchronization", "continueSync_withCondstoreEnabled_shouldFetchChangedMessageFlagsUsingCondstore", "continueSync_withFolderNotSupportingModSeqs_shouldFetchFlagsForAllMessages", "continueSync_withSyncRemoteDeletionsSetToFalse_shouldNotDeleteLocalCopiesOfDeletedMessages", "continueSync_withSyncRemoteDeletionsSetToTrue_shouldDeleteLocalCopiesOfDeletedMessages", "continueSync_withoutCondstore_shouldFetchFlagsForAllMessages" ],
        "k9mail§com.fsck.k9.controller.QresyncExtensionHandlerTest" : [ "continueSync_withChangesToOutdatedMessage_shouldNotProcessFlags", "continueSync_withModifiedMessage_shouldProcessFlags", "continueSync_withModifiedMessages_shouldNotifyListenersOfHeaderSynchronization", "continueSync_withNewMessage_shouldDownloadNewMessage", "continueSync_withNoMoreMessagesInRemoteMailbox_shouldNotDownloadOldMessages", "continueSync_withSyncRemoteDeletionsSetToFalse_shouldNotDeleteLocalCopiesOfDeletedMessages", "continueSync_withSyncRemoteDeletionsSetToTrue_shouldDeleteLocalCopiesOfDeletedMessages", "continueSync_withVisibleLimitNotReached_shouldDownloadOldMessages", "continueSync_withVisibleLimitReached_shouldNotDownloadOldMessages" ]
      },
      "predecessor" : "084b19ef9f10ed52e603d6e829ef6988cef1b033~1"
    },
    "9b34e21f8b64d8f2a8d0a8468d9d05e60f9133cb" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.ImapSyncInteractorTest" : [ "performSync_afterCompletion_shouldCloseFolders", "performSync_shouldUpdateCachedUidValidity", "performSync_withAccountNotSetToExpungeOnPoll_shouldNotExpungeRemoteFolder", "performSync_withDifferentUidValidity_shouldClearHighestModSeq", "performSync_withDifferentUidValidity_shouldDeleteAllLocallyStoredMessages", "performSync_withDifferentUidValidity_shouldNotifyListenersOfDeletion", "performSync_withEqualUidValidity_shouldNotDeleteAllLocallyStoredMessages", "performSync_withFolderNotSupportingModSeqs_shouldInvalidateCachedHighestModSeq", "performSync_withFolderSupportingModSeqs_shouldUpdateCachedHighestModSeq", "performSync_withImapFolder_shouldFinishWithoutError", "performSync_withInvalidCachedHighestModSeq_shouldOpenImapFolderNormally", "performSync_withNegativeMessageCount_shouldFinishWithError", "performSync_withNonImapFolder_shouldFinishWithError", "performSync_withProcessPendingCommandsSynchronousThrowingException_shouldFinishWithError", "performSync_withQresyncEnabledAndAccountSetToExpungeOnPoll_shouldExpungeRemoteFolder", "performSync_withRemoteFolderCreationFailed_shouldExitWithoutOpeningRemoteFolder", "performSync_withSyncRemoteDeletionsSetToFalse_shouldDeleteLocalCopiesIfNecessary", "performSync_withSyncRemoteDeletionsSetToTrue_shouldDeleteLocalCopiesIfNecessary", "performSync_withValidCachedUidValidityAndHighestModSeq_shouldOpenFolderUsingQresyncParams", "performSync_withoutCachedUidValidity_shouldNotDeleteAllLocallyStoredMessages", "performSync_withoutCachedUidValidity_shouldOpenImapFolderNormally", "performSync_withoutQresyncEnabledAndAccountSetToExpungeOnPoll_shouldExpungeRemoteFolder" ]
      },
      "predecessor" : "9b34e21f8b64d8f2a8d0a8468d9d05e60f9133cb~1"
    },
    "30ca646b61aab9a5b3c1b3da886bfc136079f6d1" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.ImapSyncInteractorTest" : [ "performSync_afterCompletion_shouldCloseFolders", "performSync_shouldUpdateCachedUidValidity", "performSync_withAccountNotSetToExpungeOnPoll_shouldNotExpungeRemoteFolder", "performSync_withDifferentUidValidity_shouldClearHighestModSeq", "performSync_withDifferentUidValidity_shouldDeleteAllLocallyStoredMessages", "performSync_withDifferentUidValidity_shouldNotifyListenersOfDeletion", "performSync_withEqualUidValidity_shouldNotDeleteAllLocallyStoredMessages", "performSync_withFolderNotSupportingModSeqs_shouldInvalidateCachedHighestModSeq", "performSync_withFolderSupportingModSeqs_shouldUpdateCachedHighestModSeq", "performSync_withImapFolder_shouldFinishWithoutError", "performSync_withInvalidCachedHighestModSeq_shouldOpenImapFolderNormally", "performSync_withNegativeMessageCount_shouldFinishWithError", "performSync_withNonImapFolder_shouldFinishWithError", "performSync_withProcessPendingCommandsSynchronousThrowingException_shouldFinishWithError", "performSync_withQresyncEnabledAndAccountSetToExpungeOnPoll_shouldExpungeRemoteFolder", "performSync_withRemoteFolderCreationFailed_shouldExitWithoutOpeningRemoteFolder", "performSync_withValidCachedUidValidityAndHighestModSeq_shouldOpenFolderUsingQresyncParams", "performSync_withoutCachedUidValidity_shouldNotDeleteAllLocallyStoredMessages", "performSync_withoutCachedUidValidity_shouldOpenImapFolderNormally", "performSync_withoutQresyncEnabledAndAccountSetToExpungeOnPoll_shouldExpungeRemoteFolder" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion" ],
        "k9mail§com.fsck.k9.controller.NonQresyncExtensionHandlerTest" : [ "continueSync_shouldDownloadNewMessages", "continueSync_shouldNotifyListenersOfHeaderSynchronization", "continueSync_withCondstoreEnabled_shouldFetchChangedMessageFlagsUsingCondstore", "continueSync_withFolderNotSupportingModSeqs_shouldFetchFlagsForAllMessages", "continueSync_withSyncRemoteDeletionsSetToFalse_shouldNotDeleteLocalCopiesOfDeletedMessages", "continueSync_withSyncRemoteDeletionsSetToTrue_shouldDeleteLocalCopiesOfDeletedMessages", "continueSync_withoutCondstore_shouldFetchFlagsForAllMessages" ],
        "k9mail§com.fsck.k9.controller.QresyncExtensionHandlerTest" : [ "continueSync_withChangesToOutdatedMessage_shouldNotProcessFlags", "continueSync_withModifiedMessage_shouldProcessFlags", "continueSync_withModifiedMessages_shouldNotifyListenersOfHeaderSynchronization", "continueSync_withNewMessage_shouldDownloadNewMessage", "continueSync_withNoMoreMessagesInRemoteMailbox_shouldNotDownloadOldMessages", "continueSync_withSyncRemoteDeletionsSetToFalse_shouldNotDeleteLocalCopiesOfDeletedMessages", "continueSync_withSyncRemoteDeletionsSetToTrue_shouldDeleteLocalCopiesOfDeletedMessages", "continueSync_withVisibleLimitNotReached_shouldDownloadOldMessages", "continueSync_withVisibleLimitReached_shouldNotDownloadOldMessages" ],
        "k9mail§com.fsck.k9.controller.SyncHelperTest" : [ "deleteLocalMessages_withDeletedMessages_shouldNotifyListeners" ]
      },
      "predecessor" : "30ca646b61aab9a5b3c1b3da886bfc136079f6d1~1"
    },
    "026c391fc141a48babf31b3a056df715eb72971a" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.ImapSyncInteractorTest" : [ "performSync_afterCompletion_shouldCloseFolders", "performSync_shouldUpdateCachedUidValidity", "performSync_withAccountNotSetToExpungeOnPoll_shouldNotExpungeRemoteFolder", "performSync_withDifferentUidValidity_shouldClearHighestModSeq", "performSync_withDifferentUidValidity_shouldDeleteAllLocallyStoredMessages", "performSync_withDifferentUidValidity_shouldNotifyListenersOfDeletion", "performSync_withEqualUidValidity_shouldNotDeleteAllLocallyStoredMessages", "performSync_withFolderNotSupportingModSeqs_shouldInvalidateCachedHighestModSeq", "performSync_withFolderSupportingModSeqs_shouldUpdateCachedHighestModSeq", "performSync_withImapFolder_shouldFinishWithoutError", "performSync_withInvalidCachedHighestModSeq_shouldOpenImapFolderNormally", "performSync_withProcessPendingCommandsSynchronousThrowingException_shouldFinishWithError", "performSync_withValidCachedUidValidityAndHighestModSeq_shouldOpenFolderUsingQresyncParams", "performSync_withoutCachedUidValidity_shouldNotDeleteAllLocallyStoredMessages", "performSync_withoutCachedUidValidity_shouldOpenImapFolderNormally", "performSync_withoutQresyncEnabledAndAccountSetToExpungeOnPoll_shouldExpungeRemoteFolder" ],
        "k9mail§com.fsck.k9.controller.NonQresyncExtensionHandlerTest" : [ "continueSync_shouldDownloadNewMessages", "continueSync_shouldNotifyListenersOfHeaderSynchronization", "continueSync_withFolderNotSupportingModSeqs_shouldFetchFlagsForAllMessages", "continueSync_withSyncRemoteDeletionsSetToFalse_shouldNotDeleteLocalCopiesOfDeletedMessages", "continueSync_withSyncRemoteDeletionsSetToTrue_shouldDeleteLocalCopiesOfDeletedMessages", "continueSync_withoutCondstore_shouldFetchFlagsForAllMessages" ]
      },
      "predecessor" : "026c391fc141a48babf31b3a056df715eb72971a~1"
    },
    "3329679b46ec2922c317f095d08f0e7054a58543" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.SyncHelperTest" : [ "evaluateMessageForDownload_withoutLocalCopy_shouldAddMessageToUnsyncedMessagesList" ]
      },
      "predecessor" : "3329679b46ec2922c317f095d08f0e7054a58543~1"
    },
    "2d9ab369df0714588d1b33cbb75f9291eab66e9d" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.setup.AccountSetupPresenterTest" : [ "testGetStatus", "testOnCertificatedRefused_incoming", "testOnCertificatedRefused_outgoing", "testOnImapOrPop3Selected", "testOnInputChangeInBasics_withInvalidEmail", "testOnInputChangeInBasics_withValidEmailAndPassword", "testOnInputChangeInIncoming_imap_updatePortFromSecurity", "testOnInputChangeInIncoming_pop3_updatePortFromSecurity", "testOnInputChangeInOutgoing_updatePortFromSecurity", "testOnInputChangedInIncoming_withCertificate", "testOnInputChangedInIncoming_withIllegalInput", "testOnInputChangedInIncoming_withIncompleteServer", "testOnInputChangedInIncoming_withInvalidPassword", "testOnInputChangedInIncoming_withInvalidPort", "testOnInputChangedInIncoming_withPassword", "testOnInputChangedInIncoming_withValidInput", "testOnInputChangedInOutgoing_withCertificate", "testOnInputChangedInOutgoing_withCertificateChanged", "testOnInputChangedInOutgoing_withIncompleteServer", "testOnInputChangedInOutgoing_withInvalidPassword", "testOnInputChangedInOutgoing_withInvalidPort", "testOnInputChangedInOutgoing_withNotRequiredLogin", "testOnInputChangedInOutgoing_withPassword", "testOnInputChangedInOutgoing_withSecurityChanged", "testOnNegativeClickedInConfirmationDialog_editSettings", "testOnNegativeClickedInConfirmationDialog_incoming", "testOnNegativeClickedInConfirmationDialog_outgoing", "testOnNextButtonInBasicViewClicked", "testOnWebdavSelected", "testUpdateViewFromAuthType_outgoing" ]
      },
      "predecessor" : "44b68b0739c644a6567c32b99a123dc8fd59a394"
    },
    "e03332e1f0b0e9237607efea425c251afe065de8" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.setup.AccountSetupPresenterTest" : [ "testOnCertificatedRefused_outgoing", "testOnInputChangeInOutgoing_updatePortFromSecurity", "testOnInputChangedInOutgoing_withCertificate", "testOnInputChangedInOutgoing_withCertificateChanged", "testOnInputChangedInOutgoing_withIncompleteServer", "testOnInputChangedInOutgoing_withInvalidPassword", "testOnInputChangedInOutgoing_withInvalidPort", "testOnInputChangedInOutgoing_withNotRequiredLogin", "testOnInputChangedInOutgoing_withPassword", "testOnInputChangedInOutgoing_withSecurityChanged", "testUpdateViewFromAuthType_outgoing" ]
      },
      "predecessor" : "e03332e1f0b0e9237607efea425c251afe065de8~1"
    },
    "51839cc51fe923a3f04b2462b8f9a14700da7554" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "close_withoutOpen_shouldNotThrow", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isConnected_withoutPreviousOpen_shouldReturnFalse", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainFailureAndDisconnect_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithByeResponseAndConnectionClose_shouldThrowAuthenticationFailedException", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_authXoauthWithSaslIr", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOn400Response", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnInvalidJsonResponse", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnMissingStatusJsonResponse", "open_authXoauthWithSaslIrParsesCapabilities", "open_authXoauthWithSaslIrThrowsExeptionOn401Response", "open_authXoauthWithSaslIrWithOldTokenThrowsExceptionIfRetryFails", "open_withCapabilitiesInInitialResponse_shouldNotIssuePreAuthCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withConnectionError_shouldThrow", "open_withInvalidHostname_shouldThrow", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withNegativeResponseToStartTlsCommand_shouldThrow", "open_withNoCapabilitiesInInitialResponse_shouldIssuePreAuthCapabilitiesCommand", "open_withNoPostAuthCapabilityResponse_shouldIssueCapabilityCommand", "open_withPostAuthCapabilityResponse_shouldNotIssueCapabilityCommand", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "open_withUntaggedPostAuthCapabilityResponse_shouldNotIssueCapabilityCommand", "sendContinuation" ],
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "SmtpTransport_withInvalidTransportUri_shouldThrow", "SmtpTransport_withValidTransportUri", "open_withAuthExternalExtension", "open_withAuthLoginExtension", "open_withAuthPlainExtension", "open_withAutomaticAuthAndNoTransportSecurityAndAuthCramMd5Extension_shouldUseAuthCramMd5", "open_withAutomaticAuthAndNoTransportSecurityAndAuthPlainExtension_shouldThrow", "open_withCramMd5AuthExtension", "open_withEhloFailing_shouldTryHelo", "open_withManyExtensions_shouldParseAll", "open_withSupportWithEnhancedStatusCodesOnAuthFailure_shouldThrowEncodedMessage", "open_withXoauth2Extension", "open_withXoauth2Extension_shouldInvalidateAndRetryOn400Response", "open_withXoauth2Extension_shouldInvalidateAndRetryOnInvalidJsonResponse", "open_withXoauth2Extension_shouldInvalidateAndRetryOnMissingStatusJsonResponse", "open_withXoauth2Extension_shouldThrowOn401Response", "open_withXoauth2Extension_shouldThrowOnFailure_fetchingToken", "open_withXoauth2Extension_shouldThrowOnMultipleFailure", "open_withoutAuthExternalExtension_shouldThrow", "open_withoutAuthLoginExtension_shouldConnectWithoutAuthentication", "open_withoutCramMd5AuthExtension_shouldThrow", "open_withoutXoauth2Extension_shouldThrow", "sendMessage_with8BitEncoding", "sendMessage_with8BitEncodingExtensionNotCaseSensitive", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withSingleRecipient", "sendMessage_withoutAddressToSendTo_shouldNotOpenConnection" ]
      },
      "predecessor" : "51839cc51fe923a3f04b2462b8f9a14700da7554~1"
    },
    "59fda3c4d75edaa244e776d97115254571ff53f0" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "open_withAuthExternalExtension", "open_withAuthLoginExtension", "open_withAuthPlainExtension", "open_withAutomaticAuthAndNoTransportSecurityAndAuthCramMd5Extension_shouldUseAuthCramMd5", "open_withAutomaticAuthAndNoTransportSecurityAndAuthPlainExtension_shouldThrow", "open_withCramMd5AuthExtension", "open_withEhloFailing_shouldTryHelo", "open_withManyExtensions_shouldParseAll", "open_withSupportWithEnhancedStatusCodesOnAuthFailure_shouldThrowEncodedMessage", "open_withXoauth2Extension", "open_withXoauth2Extension_shouldInvalidateAndRetryOn400Response", "open_withXoauth2Extension_shouldInvalidateAndRetryOnInvalidJsonResponse", "open_withXoauth2Extension_shouldInvalidateAndRetryOnMissingStatusJsonResponse", "open_withXoauth2Extension_shouldThrowOn401Response", "open_withXoauth2Extension_shouldThrowOnFailure_fetchingToken", "open_withXoauth2Extension_shouldThrowOnMultipleFailure", "open_withoutAuthExternalExtension_shouldThrow", "open_withoutAuthLoginExtension_shouldConnectWithoutAuthentication", "open_withoutCramMd5AuthExtension_shouldThrow", "open_withoutXoauth2Extension_shouldThrow", "sendMessage_with8BitEncoding", "sendMessage_with8BitEncodingExtensionNotCaseSensitive", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withSingleRecipient", "sendMessage_withoutAddressToSendTo_shouldNotOpenConnection" ]
      },
      "predecessor" : "59fda3c4d75edaa244e776d97115254571ff53f0~1"
    },
    "4118a14ab817afae43c0bfd60934a5b8a65c7cb9" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withBadDatabase_shouldThrowInDebugBuild", "doDbUpgrade_withEmptyDatabase_shouldSetsDatabaseVersion", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion", "getVersion_shouldReturnCurrentDatabaseVersion" ]
      },
      "predecessor" : "c01273288e0f50b670012f808e60754cacd94b47"
    },
    "4d1febf838f9b438a7c015de58c5b3c81944c126" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.SyncHelperTest" : [ "evaluateMessageForDownload_withLocalCopy_shouldAddMessageToSyncFlagMessagesList", "evaluateMessageForDownload_withoutLocalCopy_shouldAddMessageToUnsyncedMessagesList" ]
      },
      "predecessor" : "4d1febf838f9b438a7c015de58c5b3c81944c126~1"
    },
    "cf1bc5dd9e658b368927404932fc219ca985114e" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.ImapSyncInteractorTest" : [ "performSync_withFolderSupportingModSeqs_shouldUpdateCachedHighestModSeq" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldAddErrorMessageInDebug", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync" ],
        "k9mail§com.fsck.k9.controller.NonQresyncExtensionHandlerTest" : [ "continueSync_withCondstoreEnabledAndHighestModSeqChanged_shouldFetchChangedMessageFlagsUsingCondstore", "continueSync_withCondstoreEnabledAndHighestModSeqNotChanged_shouldNotFetchChangedMessageFlags" ],
        "k9mail§com.fsck.k9.controller.SyncHelperTest" : [ "deleteLocalMessages_withDeletedMessages_shouldNotifyListeners", "evaluateMessageForDownload_withLocalCopy_shouldAddMessageToSyncFlagMessagesList", "evaluateMessageForDownload_withoutLocalCopy_shouldAddMessageToUnsyncedMessagesList", "getRemoteStart", "verifyOrCreateRemoteSpecialFolder_withFolderCreationFailed_shouldNotifyListeners", "verifyOrCreateRemoteSpecialFolder_withUnavailableRemoteFolder_shouldTryToCreateRemoteFolder" ]
      },
      "predecessor" : "cf1bc5dd9e658b368927404932fc219ca985114e~1"
    },
    "74aa857bb3e9a0185592b3ef2236b3a343d515f1" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainFailureAndDisconnect_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithByeResponseAndConnectionClose_shouldThrowAuthenticationFailedException", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_authXoauthWithSaslIr", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOn400Response", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnInvalidJsonResponse", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnMissingStatusJsonResponse", "open_authXoauthWithSaslIrParsesCapabilities", "open_authXoauthWithSaslIrThrowsExeptionOn401Response", "open_authXoauthWithSaslIrWithOldTokenThrowsExceptionIfRetryFails", "open_withCapabilitiesInInitialResponse_shouldNotIssuePreAuthCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withConnectionError_shouldThrow", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withNegativeResponseToStartTlsCommand_shouldThrow", "open_withNoCapabilitiesInInitialResponse_shouldIssuePreAuthCapabilitiesCommand", "open_withNoPostAuthCapabilityResponse_shouldIssueCapabilityCommand", "open_withPostAuthCapabilityResponse_shouldNotIssueCapabilityCommand", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "open_withUntaggedPostAuthCapabilityResponse_shouldNotIssueCapabilityCommand", "sendContinuation" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "expungeUsingQresync_shouldIssueExpungeCommand", "expungeUsingQresync_withUidsExpunged_shouldReportExpungedUidsAndUpdateModSeq", "expunge_shouldIssueExpungeCommand", "fetchChangedMessageFlagsUsingCondstore_shouldIssueRespectiveCommand", "fetchChangedMessageFlagsUsingCondstore_shouldSetFlags", "fetchChangedMessageFlagsUsingCondstore_withListener_shouldCallListener", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUidFromMessageId_withoutMessageIdHeader_shouldReturnNull", "getUnreadMessageCount", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "openUsingQresyncParam_shouldFetchHighestModSeq", "openUsingQresyncParam_withValidParams_shouldReturnValidQresyncParamResponse", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldFetchUidValidity", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withCondstoreParam_shouldFetchHighestModSeq", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "setFlags_shouldIssueUidStoreCommand", "supportsModSeq_afterCondstoreOpenWithNoModSeqResponse_shouldReturnFalse", "supportsModSeq_afterCondstoreOpen_shouldReturnTrue", "supportsModSeq_afterQresyncOpen_shouldReturnTrue", "supportsModSeq_afterRegularOpen_shouldReturnFalse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.SelectOrExamineCommandTest" : [ "createCommandString_withOpenUsingCondstoreParam_shouldReturnRespectiveString", "createCommandString_withOpenUsingQresyncParam_shouldReturnRespectiveString", "createCommandString_withReadOnlyMode_shouldReturnRespectiveString", "createCommandString_withReadWriteMode_shouldReturnRespectiveString" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.SelectOrExamineResponseTest" : [ "getOpenMode_withoutResponseCode_shouldThrow", "newInstance_withExamineResponse_shouldReturnOpenModeReadOnly", "newInstance_withInvalidResponseText_shouldReturnHasOpenModeFalse", "newInstance_withSelectResponse_shouldParseAllFieldsCorrectly", "newInstance_withSelectResponse_shouldReturnOpenModeReadWrite", "newInstance_withUnknownResponseText_shouldReturnHasOpenModeFalse", "newInstance_withUntaggedResponse_shouldReturnNull", "newInstance_withoutOkResponse_shouldReturnNull", "newInstance_withoutResponseCode_shouldReturnHasOpenModeFalse" ]
      },
      "predecessor" : "74aa857bb3e9a0185592b3ef2236b3a343d515f1~1"
    },
    "7831ffe40936b25ed9f07c25f7d630bc1aa61d0f" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "expungeUsingQresync_shouldIssueExpungeCommand", "expungeUsingQresync_withUidsExpunged_shouldReportExpungedUidsAndUpdateModSeq", "expunge_shouldIssueExpungeCommand", "fetchChangedMessageFlagsUsingCondstore_shouldIssueRespectiveCommand", "fetchChangedMessageFlagsUsingCondstore_shouldSetFlags", "fetchChangedMessageFlagsUsingCondstore_withListener_shouldCallListener", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUnreadMessageCount", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "openUsingQresyncParam_shouldFetchHighestModSeq", "openUsingQresyncParam_withValidParams_shouldReturnValidQresyncParamResponse", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldFetchUidValidity", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withCondstoreParam_shouldFetchHighestModSeq", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "setFlags_shouldIssueUidStoreCommand", "supportsModSeq_afterCondstoreOpenWithNoModSeqResponse_shouldReturnFalse", "supportsModSeq_afterCondstoreOpen_shouldReturnTrue", "supportsModSeq_afterQresyncOpen_shouldReturnTrue", "supportsModSeq_afterRegularOpen_shouldReturnFalse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.SelectOrExamineResponseTest" : [ "getOpenMode_withoutResponseCode_shouldThrow", "newInstance_withExamineResponse_shouldReturnOpenModeReadOnly", "newInstance_withInvalidResponseText_shouldReturnHasOpenModeFalse", "newInstance_withSelectResponse_shouldParseAllFieldsCorrectly", "newInstance_withSelectResponse_shouldReturnOpenModeReadWrite", "newInstance_withUnknownResponseText_shouldReturnHasOpenModeFalse", "newInstance_withUntaggedResponse_shouldReturnNull", "newInstance_withoutOkResponse_shouldReturnNull", "newInstance_withoutResponseCode_shouldReturnHasOpenModeFalse" ],
        "k9mail§com.fsck.k9.controller.SyncHelperTest" : [ "verifyOrCreateRemoteSpecialFolder_withFolderCreationFailed_shouldNotifyListeners", "verifyOrCreateRemoteSpecialFolder_withUnavailableRemoteFolder_shouldTryToCreateRemoteFolder" ]
      },
      "predecessor" : "7831ffe40936b25ed9f07c25f7d630bc1aa61d0f~1"
    },
    "6984979bf39c04259600fbeca46398b0d1a0a1fc" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "close_withoutOpen_shouldNotThrow", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isConnected_withoutPreviousOpen_shouldReturnFalse", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainFailureAndDisconnect_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithByeResponseAndConnectionClose_shouldThrowAuthenticationFailedException", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_authXoauthWithSaslIr", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOn400Response", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnInvalidJsonResponse", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnMissingStatusJsonResponse", "open_authXoauthWithSaslIrParsesCapabilities", "open_authXoauthWithSaslIrThrowsExeptionOn401Response", "open_authXoauthWithSaslIrWithOldTokenThrowsExceptionIfRetryFails", "open_withCapabilitiesInInitialResponse_shouldNotIssuePreAuthCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withConnectionError_shouldThrow", "open_withInvalidHostname_shouldThrow", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withNegativeResponseToStartTlsCommand_shouldThrow", "open_withNoCapabilitiesInInitialResponse_shouldIssuePreAuthCapabilitiesCommand", "open_withNoPostAuthCapabilityResponse_shouldIssueCapabilityCommand", "open_withPostAuthCapabilityResponse_shouldNotIssueCapabilityCommand", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "open_withUntaggedPostAuthCapabilityResponse_shouldNotIssueCapabilityCommand", "sendContinuation" ],
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "SmtpTransport_withInvalidTransportUri_shouldThrow", "SmtpTransport_withValidTransportUri", "open_withAuthExternalExtension", "open_withAuthLoginExtension", "open_withAuthPlainExtension", "open_withAutomaticAuthAndNoTransportSecurityAndAuthCramMd5Extension_shouldUseAuthCramMd5", "open_withAutomaticAuthAndNoTransportSecurityAndAuthPlainExtension_shouldThrow", "open_withCramMd5AuthExtension", "open_withEhloFailing_shouldTryHelo", "open_withManyExtensions_shouldParseAll", "open_withSupportWithEnhancedStatusCodesOnAuthFailure_shouldThrowEncodedMessage", "open_withXoauth2Extension", "open_withXoauth2Extension_shouldInvalidateAndRetryOn400Response", "open_withXoauth2Extension_shouldInvalidateAndRetryOnInvalidJsonResponse", "open_withXoauth2Extension_shouldInvalidateAndRetryOnMissingStatusJsonResponse", "open_withXoauth2Extension_shouldThrowOn401Response", "open_withXoauth2Extension_shouldThrowOnFailure_fetchingToken", "open_withXoauth2Extension_shouldThrowOnMultipleFailure", "open_withoutAuthExternalExtension_shouldThrow", "open_withoutAuthLoginExtension_shouldConnectWithoutAuthentication", "open_withoutCramMd5AuthExtension_shouldThrow", "open_withoutXoauth2Extension_shouldThrow", "sendMessage_with8BitEncoding", "sendMessage_with8BitEncodingExtensionNotCaseSensitive", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withSingleRecipient", "sendMessage_withoutAddressToSendTo_shouldNotOpenConnection" ]
      },
      "predecessor" : "6984979bf39c04259600fbeca46398b0d1a0a1fc~1"
    },
    "dae1ca201b80c960bc98e048805a6ca4ab25af77" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ]
      },
      "predecessor" : "3f21549664b45b330245e6991115a23e88ca4154"
    },
    "b768d2fb6fe1a8df2855050dc2d77a8c43366c67" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withBadDatabase_shouldThrowInDebugBuild", "doDbUpgrade_withEmptyDatabase_shouldSetsDatabaseVersion", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion", "getVersion_shouldReturnCurrentDatabaseVersion" ]
      },
      "predecessor" : "b768d2fb6fe1a8df2855050dc2d77a8c43366c67~1"
    },
    "2fbd6f61a886a822f6953ab8cc374c8e0ca2db59" : {
      "testcases" : {
        "k9mail§com.fsck.k9.cache.EmailProviderCacheTest" : [ "getCache_returnsDifferentCacheForEachUUID", "getCache_returnsSameCacheForAUUID", "getValueForMessage_returnsValueSetForMessage", "getValueForThread_returnsValueSetForThread", "getValueForUnknownMessage_returnsNull", "getValueForUnknownMessage_returnsNullWhenRemoved", "getValueForUnknownThread_returnsNull", "getValueForUnknownThread_returnsNullWhenRemoved", "isMessageHidden_returnsFalseForUnhidenMessage", "isMessageHidden_returnsFalseForUnknownMessage", "isMessageHidden_returnsTrueForHiddenMessage" ],
        "k9mail§com.fsck.k9.mailstore.LocalStoreTest" : [ "findPartById__withNestedLocalBodyPart", "findPartById__withNestedLocalMessagePart", "findPartById__withRootLocalBodyPart", "findPartById__withRootLocalMessage", "findPartById__withTwoTimesNestedLocalMessagePart" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ],
        "k9mail§com.fsck.k9.message.extractors.AttachmentInfoExtractorTest" : [ "extractInfo__fromLocalBodyPart__shouldReturnProvidedValues", "extractInfo__withDeferredFileBody", "extractInfo__withGenericPart_shouldThrow" ]
      },
      "predecessor" : "2fbd6f61a886a822f6953ab8cc374c8e0ca2db59~1"
    },
    "472733edcd53b73df0271c1520669d3671325603" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "472733edcd53b73df0271c1520669d3671325603~1"
    },
    "427906f742e84a924132e77f1a67d32e87503e17" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "427906f742e84a924132e77f1a67d32e87503e17~1"
    },
    "311efc66753ee7b0c9e12c18fc2bda14c9aeb202" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ]
      },
      "predecessor" : "311efc66753ee7b0c9e12c18fc2bda14c9aeb202~1"
    },
    "c4f68b873a7ece8d9a6b80effa263e8e7ab9c42e" : {
      "testcases" : {
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords" ]
      },
      "predecessor" : "c4f68b873a7ece8d9a6b80effa263e8e7ab9c42e~1"
    },
    "9cb7712142c3cd68d01d0a7a3c245ff7f415c901" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "SmtpTransport_withInvalidTransportUri_shouldThrow", "SmtpTransport_withValidTransportUri", "open_withAuthExternalExtension", "open_withAuthLoginExtension", "open_withAuthPlainExtension", "open_withAutomaticAuthAndNoTransportSecurityAndAuthCramMd5Extension_shouldUseAuthCramMd5", "open_withAutomaticAuthAndNoTransportSecurityAndAuthPlainExtension_shouldThrow", "open_withCramMd5AuthExtension", "open_withEhloFailing_shouldTryHelo", "open_withManyExtensions_shouldParseAll", "open_withSupportWithEnhancedStatusCodesOnAuthFailure_shouldThrowEncodedMessage", "open_withXoauth2Extension", "open_withXoauth2Extension_shouldInvalidateAndRetryOn400Response", "open_withXoauth2Extension_shouldInvalidateAndRetryOnInvalidJsonResponse", "open_withXoauth2Extension_shouldInvalidateAndRetryOnMissingStatusJsonResponse", "open_withXoauth2Extension_shouldThrowOn401Response", "open_withXoauth2Extension_shouldThrowOnFailure_fetchingToken", "open_withXoauth2Extension_shouldThrowOnMultipleFailure", "open_withoutAuthExternalExtension_shouldThrow", "open_withoutAuthLoginExtension_shouldConnectWithoutAuthentication", "open_withoutCramMd5AuthExtension_shouldThrow", "open_withoutXoauth2Extension_shouldThrow", "sendMessage_with8BitEncoding", "sendMessage_with8BitEncodingExtensionNotCaseSensitive", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withSingleRecipient", "sendMessage_withoutAddressToSendTo_shouldNotOpenConnection" ]
      },
      "predecessor" : "9cb7712142c3cd68d01d0a7a3c245ff7f415c901~1"
    },
    "8b8ee1ea6d8f7ba69b6ec0e5b797b921e393ec5f" : {
      "testcases" : {
        "k9mail§com.fsck.k9.cache.EmailProviderCacheTest" : [ "getCache_returnsDifferentCacheForEachUUID", "getCache_returnsSameCacheForAUUID", "getValueForMessage_returnsValueSetForMessage", "getValueForThread_returnsValueSetForThread", "getValueForUnknownMessage_returnsNull", "getValueForUnknownMessage_returnsNullWhenRemoved", "getValueForUnknownThread_returnsNull", "getValueForUnknownThread_returnsNullWhenRemoved", "isMessageHidden_returnsFalseForUnhidenMessage", "isMessageHidden_returnsFalseForUnknownMessage", "isMessageHidden_returnsTrueForHiddenMessage" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "8b8ee1ea6d8f7ba69b6ec0e5b797b921e393ec5f~1"
    },
    "565e3ecec19e4ea011870cc02ed522d45de0b8a7" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "565e3ecec19e4ea011870cc02ed522d45de0b8a7~1"
    },
    "e08c764b97c9f8b7df35356c4afa6ca324953805" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "expunge_shouldIssueExpungeCommand" ]
      },
      "predecessor" : "e08c764b97c9f8b7df35356c4afa6ca324953805~1"
    },
    "1209d9b81e0967cf4e863c984f92fc112a5b86e4" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessagesFromUids_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withClosedFolder_shouldThrow", "getMessages_withDateConstraint", "getMessages_withEndArgumentSmallerThanStartArgument_shouldThrow", "getMessages_withInvalidEndArgument_shouldThrow", "getMessages_withInvalidStartArgument_shouldThrow", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "1209d9b81e0967cf4e863c984f92fc112a5b86e4~1"
    },
    "8bc63a2de878591e12e35bb53c9ac719e304b100" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException" ]
      },
      "predecessor" : "8bc63a2de878591e12e35bb53c9ac719e304b100~1"
    },
    "4e9a06afeed606ce02a2a9a56943f88a3010bcd9" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "expunge_shouldIssueExpungeCommand" ]
      },
      "predecessor" : "4e9a06afeed606ce02a2a9a56943f88a3010bcd9~1"
    },
    "4d727db9c522cd27135d46ca01f8a6fe539acd38" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessagesFromUids_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withClosedFolder_shouldThrow", "getMessages_withDateConstraint", "getMessages_withEndArgumentSmallerThanStartArgument_shouldThrow", "getMessages_withInvalidEndArgument_shouldThrow", "getMessages_withInvalidStartArgument_shouldThrow", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "4e9a06afeed606ce02a2a9a56943f88a3010bcd9"
    },
    "5ab8d1c924ba10be6167552cf175e234267b44db" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "search_withRemoteSearchDisabled_shouldThrow" ]
      },
      "predecessor" : "5ab8d1c924ba10be6167552cf175e234267b44db~1"
    },
    "0da8e7a17416a8d5e4845e2db0207740c787f26b" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withFlagsFetchProfile_shouldSetFlags" ],
        "k9mail§com.fsck.k9.activity.MessageReferenceTest" : [ "parseIdentityStringContainingBadVersionNumber", "parseIdentityStringWithCorruptFlag", "parseIdentityStringWithFlag", "parseIdentityStringWithoutFlag", "parseNullIdentityString" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ],
        "k9mail§com.fsck.k9.mailstore.migrations.MigrationTo60Test" : [ "migrateSetFlag", "migrateSetFlag_oldFormat" ]
      },
      "predecessor" : "b8e6b44157700554caf04d2f6bffb3ac114b39c2"
    },
    "4cd40c636e844789072415890ecb8b5da7997a77" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "fetch_withFlagsFetchProfile_shouldSetFlags" ],
        "k9mail§com.fsck.k9.activity.MessageReferenceTest" : [ "parseIdentityStringWithCorruptFlag", "parseIdentityStringWithFlag" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.mailstore.migrations.MigrationTo60Test" : [ "migrateSetFlag", "migrateSetFlag_oldFormat" ]
      },
      "predecessor" : "4cd40c636e844789072415890ecb8b5da7997a77~1"
    },
    "646cfb69a09a58f37fbffe1eb72aaad3f283f04f" : {
      "testcases" : {
        "k9mail§com.fsck.k9.view.MessageHeaderTest" : [ "shouldShowSender_withSender_shouldReturnTrue", "shouldShowSender_withoutSender_shouldReturnFalse" ]
      },
      "predecessor" : "4cd40c636e844789072415890ecb8b5da7997a77"
    },
    "0a04cf838ac663b514769bde4560bcc3f32330b0" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen" ]
      },
      "predecessor" : "0a04cf838ac663b514769bde4560bcc3f32330b0~1"
    },
    "f4b4aa57991b446eb3419b1178c77cd13e89e373" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "initFromReplyToMessage_shouldCallComposePgpInlineDecider", "onBccTokenAdded_notifiesListenerOfRecipientChange", "onBccTokenChanged_notifiesListenerOfRecipientChange", "onBccTokenRemoved_notifiesListenerOfRecipientChange", "onCcTokenAdded_notifiesListenerOfRecipientChange", "onCcTokenChanged_notifiesListenerOfRecipientChange", "onCcTokenRemoved_notifiesListenerOfRecipientChange", "onToTokenAdded_notifiesListenerOfRecipientChange", "onToTokenChanged_notifiesListenerOfRecipientChange", "onToTokenRemoved_notifiesListenerOfRecipientChange" ]
      },
      "predecessor" : "4596990076b3b4fcd7b9621a3fd94d66569ba75f"
    },
    "3e057ea5f3c98bfd820a42e9b999896c2cd059b7" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "initFromReplyToMessage_shouldCallComposePgpInlineDecider", "onBccTokenAdded_notifiesListenerOfRecipientChange", "onBccTokenChanged_notifiesListenerOfRecipientChange", "onBccTokenRemoved_notifiesListenerOfRecipientChange", "onCcTokenAdded_notifiesListenerOfRecipientChange", "onCcTokenChanged_notifiesListenerOfRecipientChange", "onCcTokenRemoved_notifiesListenerOfRecipientChange", "onToTokenAdded_notifiesListenerOfRecipientChange", "onToTokenChanged_notifiesListenerOfRecipientChange", "onToTokenRemoved_notifiesListenerOfRecipientChange" ]
      },
      "predecessor" : "3e057ea5f3c98bfd820a42e9b999896c2cd059b7~1"
    },
    "95f36795719032850ae371fcf3c090047818fb61" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.ActivityListenerTest" : [ "getOperation__whenSynchronizeMailboxFailedAfterHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFailed_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFinished" ],
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "getCurrentCryptoStatus_withoutCryptoProvider", "initFromReplyToMessage_shouldCallComposePgpInlineDecider" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.message.MessageBuilderTest" : [ "build_detachAndReattach_shouldSucceed" ],
        "k9mail§com.fsck.k9.notification.BaseNotificationsTest" : [ "testIsDeleteActionEnabled_NotificationQuickDelete_ALWAYS", "testIsDeleteActionEnabled_NotificationQuickDelete_FOR_SINGLE_MSG", "testIsDeleteActionEnabled_NotificationQuickDelete_NEVER" ],
        "k9mail§com.fsck.k9.notification.DeviceNotificationsTest" : [ "buildSummaryNotification_withAdditionalMessages", "buildSummaryNotification_withMultiMessageNotification", "buildSummaryNotification_withPrivacyModeActive", "buildSummaryNotification_withSingleMessageNotification", "buildSummaryNotification_withoutDeleteAction", "buildSummaryNotification_withoutDeleteAllAction" ],
        "k9mail§com.fsck.k9.notification.NotificationContentCreatorTest" : [ "createFromMessage_withEncryptedMessage", "createFromMessage_withErrorPreview", "createFromMessage_withMessageFromSelf", "createFromMessage_withRegularMessage", "createFromMessage_withStarredMessage", "createFromMessage_withoutEmptyMessage", "createFromMessage_withoutPreview", "createFromMessage_withoutSender", "createFromMessage_withoutSubject" ]
      },
      "predecessor" : "3bbbf0961bb9157845b802570c1d2514d35e5d90"
    },
    "bd51e0157f390ae48113a0dbbf8af49b121e1014" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "close_withoutOpen_shouldNotThrow", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isConnected_withoutPreviousOpen_shouldReturnFalse", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithByeResponseAndConnectionClose_shouldThrowAuthenticationFailedException", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withConnectionError_shouldThrow", "open_withInvalidHostname_shouldThrow", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withNegativeResponseToStartTlsCommand_shouldThrow", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "sendContinuation" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "copyMessages_withClosedFolder_shouldThrow", "copyMessages_withEmptyMessageList_shouldReturnNull", "copyMessages_withoutDestinationFolderOfWrongType_shouldThrow", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withEmptyMessageList_shouldNotInteractWithImapConnection", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEmptyMessageListArgument_shouldDoNothing", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withNullMessageListArgument_shouldDoNothing", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getNewPushState_withNewerUid_shouldReturnNewPushState", "getNewPushState_withoutNewerUid_shouldReturnNull", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUidFromMessageId_withoutMessageIdHeader_shouldReturnNull", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "setFlags_shouldIssueUidStoreCommand" ]
      },
      "predecessor" : "95f36795719032850ae371fcf3c090047818fb61"
    },
    "5425b7ccaefc01956c211a8c904f5c2d32d0c77b" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_withMultiappend_shouldIssueRespectiveCommandAndContinuation" ]
      },
      "predecessor" : "5425b7ccaefc01956c211a8c904f5c2d32d0c77b~1"
    },
    "74bcc44f3e25dc4cc21ebf5b4f53529819e99939" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.ActivityListenerTest" : [ "getOperation__whenFolderStatusChanged", "getOperation__whenSynchronizeMailboxFailedAfterHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFailed_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFinished", "getOperation__whenSynchronizeMailboxHeadersFinished", "getOperation__whenSynchronizeMailboxHeadersProgress", "getOperation__whenSynchronizeMailboxHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxNewMessage", "getOperation__whenSynchronizeMailboxProgress_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxStarted" ]
      },
      "predecessor" : "5425b7ccaefc01956c211a8c904f5c2d32d0c77b"
    },
    "349b7bbcee002f22ce838a0f4abeb7fdd74927ba" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.ActivityListenerTest" : [ "getOperation__whenFolderStatusChanged", "getOperation__whenSynchronizeMailboxFailedAfterHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFailed_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFinished", "getOperation__whenSynchronizeMailboxHeadersFinished", "getOperation__whenSynchronizeMailboxHeadersProgress", "getOperation__whenSynchronizeMailboxHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxNewMessage", "getOperation__whenSynchronizeMailboxProgress_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxStarted" ]
      },
      "predecessor" : "349b7bbcee002f22ce838a0f4abeb7fdd74927ba~1"
    },
    "1b364755df91a8a74040103963f2d03c2ace0a0e" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.ActivityListenerTest" : [ "getOperation__whenFolderStatusChanged", "getOperation__whenSynchronizeMailboxHeadersFinished", "getOperation__whenSynchronizeMailboxHeadersProgress", "getOperation__whenSynchronizeMailboxHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxNewMessage", "getOperation__whenSynchronizeMailboxProgress_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxStarted" ]
      },
      "predecessor" : "1b364755df91a8a74040103963f2d03c2ace0a0e~1"
    },
    "8b1cfb073034a320a09de1a50832b35e15f1c7a2" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.internet.DecoderUtilTest" : [ "testDecodeEncodedWords" ]
      },
      "predecessor" : "1b364755df91a8a74040103963f2d03c2ace0a0e"
    },
    "99dea3a466e2f6544e4a21341aad36f81ae2f22f" : {
      "testcases" : {
        "k9mail§com.fsck.k9.ui.crypto.MessageCryptoHelperTest" : [ "multipartEncrypted__withNullBody__shouldReturnEncryptedIncomplete", "multipartEncrypted__withUnknownProtocol__shouldReturnEncryptedUnsupported", "multipartSigned__withNullBody__shouldReturnSignedIncomplete", "multipartSigned__withUnknownProtocol__shouldReturnSignedUnsupported", "textPlain" ]
      },
      "predecessor" : "99dea3a466e2f6544e4a21341aad36f81ae2f22f~1"
    },
    "2e7c6cf5e84817dbeb335dd57680fd325e55872f" : {
      "testcases" : {
        "k9mail§com.fsck.k9.ui.crypto.MessageCryptoHelperTest" : [ "multipartEncrypted__withNullBody__shouldReturnEncryptedIncomplete", "multipartEncrypted__withUnknownProtocol__shouldReturnEncryptedUnsupported", "multipartSigned__withNullBody__shouldReturnSignedIncomplete", "multipartSigned__withUnknownProtocol__shouldReturnSignedUnsupported", "textPlain" ]
      },
      "predecessor" : "2e7c6cf5e84817dbeb335dd57680fd325e55872f~1"
    },
    "05361adfdef3a1a4b66aef6a2617bdc6d05f0a1b" : {
      "testcases" : {
        "k9mail§com.fsck.k9.ui.crypto.MessageCryptoHelperTest" : [ "multipartEncrypted__withNullBody__shouldReturnEncryptedIncomplete", "multipartEncrypted__withUnknownProtocol__shouldReturnEncryptedUnsupported", "multipartSigned__withNullBody__shouldReturnSignedIncomplete", "multipartSigned__withUnknownProtocol__shouldReturnSignedUnsupported", "textPlain" ]
      },
      "predecessor" : "05361adfdef3a1a4b66aef6a2617bdc6d05f0a1b~1"
    },
    "520bc2543de0047220988508b9d837a60e9d0468" : {
      "testcases" : {
        "k9mail§com.fsck.k9.ui.crypto.MessageCryptoHelperTest" : [ "multipartEncrypted__withNullBody__shouldReturnEncryptedIncomplete", "multipartEncrypted__withUnknownProtocol__shouldReturnEncryptedUnsupported", "multipartSigned__withNullBody__shouldReturnSignedIncomplete", "multipartSigned__withUnknownProtocol__shouldReturnSignedUnsupported", "textPlain" ]
      },
      "predecessor" : "520bc2543de0047220988508b9d837a60e9d0468~1"
    },
    "a41e75f5039e05bdddbcb1c02ebbf3d99f3ec394" : {
      "testcases" : {
        "k9mail§com.fsck.k9.ui.crypto.MessageCryptoHelperTest" : [ "multipartEncrypted__withNullBody__shouldReturnEncryptedIncomplete", "multipartEncrypted__withUnknownProtocol__shouldReturnEncryptedUnsupported", "multipartSigned__withNullBody__shouldReturnSignedIncomplete", "multipartSigned__withUnknownProtocol__shouldReturnSignedUnsupported", "textPlain" ]
      },
      "predecessor" : "a41e75f5039e05bdddbcb1c02ebbf3d99f3ec394~1"
    },
    "bbabd145bcb262d5801ec539e2bfa1e03b7e6642" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "getCurrentCryptoStatus_withoutCryptoProvider", "initFromReplyToMessage_shouldCallComposePgpInlineDecider", "onBccTokenAdded_notifiesListenerOfRecipientChange", "onBccTokenChanged_notifiesListenerOfRecipientChange", "onBccTokenRemoved_notifiesListenerOfRecipientChange", "onCcTokenAdded_notifiesListenerOfRecipientChange", "onCcTokenChanged_notifiesListenerOfRecipientChange", "onCcTokenRemoved_notifiesListenerOfRecipientChange", "onToTokenAdded_notifiesListenerOfRecipientChange", "onToTokenChanged_notifiesListenerOfRecipientChange", "onToTokenRemoved_notifiesListenerOfRecipientChange" ]
      },
      "predecessor" : "a41e75f5039e05bdddbcb1c02ebbf3d99f3ec394"
    },
    "4ef61e4bb9cdff26be66654a08755e1f206f1818" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "getCurrentCryptoStatus_withoutCryptoProvider" ]
      },
      "predecessor" : "4ef61e4bb9cdff26be66654a08755e1f206f1818~1"
    },
    "991a0f703ff919363162330b3ac1d179a89bdcf2" : {
      "testcases" : {
        "k9mail§com.fsck.k9.autocrypt.AutocryptHeaderParserTest" : [ "getValidAutocryptHeader__withBrokenBase64__shouldReturnNull", "getValidAutocryptHeader__withExplicitType", "getValidAutocryptHeader__withSimpleAutocrypt", "getValidAutocryptHeader__withUnknownCriticalHeader__shouldReturnNull", "getValidAutocryptHeader__withUnknownNonCriticalHeader", "getValidAutocryptHeader__withUnknownType__shouldReturnNull" ]
      },
      "predecessor" : "991a0f703ff919363162330b3ac1d179a89bdcf2~1"
    },
    "219b28e057700218c10ef2b61d6d8a7c12c49cd8" : {
      "testcases" : {
        "k9mail§com.fsck.k9.autocrypt.AutocryptHeaderParserTest" : [ "getValidAutocryptHeader__withBrokenBase64__shouldReturnNull", "getValidAutocryptHeader__withExplicitType", "getValidAutocryptHeader__withSimpleAutocrypt", "getValidAutocryptHeader__withUnknownCriticalHeader__shouldReturnNull", "getValidAutocryptHeader__withUnknownNonCriticalHeader", "getValidAutocryptHeader__withUnknownType__shouldReturnNull", "parseAutocryptHeader_toRawHeaderString" ],
        "k9mail§com.fsck.k9.autocrypt.AutocryptHeaderTest" : [ "toRawHeaderString_returnsExpected" ]
      },
      "predecessor" : "219b28e057700218c10ef2b61d6d8a7c12c49cd8~1"
    },
    "f940cf59390654456c6ad7f7beeb5120b9e514da" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "initFromReplyToMessage_shouldCallComposePgpInlineDecider", "onBccTokenAdded_notifiesListenerOfRecipientChange", "onBccTokenChanged_notifiesListenerOfRecipientChange", "onBccTokenRemoved_notifiesListenerOfRecipientChange", "onCcTokenAdded_notifiesListenerOfRecipientChange", "onCcTokenChanged_notifiesListenerOfRecipientChange", "onCcTokenRemoved_notifiesListenerOfRecipientChange", "onToTokenAdded_notifiesListenerOfRecipientChange", "onToTokenChanged_notifiesListenerOfRecipientChange", "onToTokenRemoved_notifiesListenerOfRecipientChange" ]
      },
      "predecessor" : "f940cf59390654456c6ad7f7beeb5120b9e514da~1"
    },
    "66b5154b7d2548cf6b02b30f9ac4d91f62fdf3c8" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.ActivityListenerTest" : [ "getOperation__whenFolderStatusChanged", "getOperation__whenSynchronizeMailboxFailedAfterHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFailed_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFinished", "getOperation__whenSynchronizeMailboxHeadersFinished", "getOperation__whenSynchronizeMailboxHeadersProgress", "getOperation__whenSynchronizeMailboxHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxNewMessage", "getOperation__whenSynchronizeMailboxProgress_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxStarted" ],
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "getCurrentCryptoStatus_withoutCryptoProvider", "initFromReplyToMessage_shouldCallComposePgpInlineDecider", "onBccTokenAdded_notifiesListenerOfRecipientChange", "onBccTokenChanged_notifiesListenerOfRecipientChange", "onBccTokenRemoved_notifiesListenerOfRecipientChange", "onCcTokenAdded_notifiesListenerOfRecipientChange", "onCcTokenChanged_notifiesListenerOfRecipientChange", "onCcTokenRemoved_notifiesListenerOfRecipientChange", "onToTokenAdded_notifiesListenerOfRecipientChange", "onToTokenChanged_notifiesListenerOfRecipientChange", "onToTokenRemoved_notifiesListenerOfRecipientChange" ],
        "k9mail§com.fsck.k9.autocrypt.AutocryptHeaderParserTest" : [ "getValidAutocryptHeader__withBrokenBase64__shouldReturnNull", "getValidAutocryptHeader__withExplicitType", "getValidAutocryptHeader__withSimpleAutocrypt", "getValidAutocryptHeader__withUnknownCriticalHeader__shouldReturnNull", "getValidAutocryptHeader__withUnknownNonCriticalHeader", "getValidAutocryptHeader__withUnknownType__shouldReturnNull" ]
      },
      "predecessor" : "f940cf59390654456c6ad7f7beeb5120b9e514da"
    },
    "8a552d46a0188f0c55fa8f3d9a9222f83a2150af" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "open_withAuthExternalExtension", "open_withAuthLoginExtension", "open_withAuthPlainExtension", "open_withAutomaticAuthAndNoTransportSecurityAndAuthCramMd5Extension_shouldUseAuthCramMd5", "open_withAutomaticAuthAndNoTransportSecurityAndAuthPlainExtension_shouldThrow", "open_withCramMd5AuthExtension", "open_withEhloFailing_shouldTryHelo", "open_withManyExtensions_shouldParseAll", "open_withSupportWithEnhancedStatusCodesOnAuthFailure_shouldThrowEncodedMessage", "open_withXoauth2Extension", "open_withXoauth2Extension_shouldInvalidateAndRetryOn400Response", "open_withXoauth2Extension_shouldInvalidateAndRetryOnInvalidJsonResponse", "open_withXoauth2Extension_shouldInvalidateAndRetryOnMissingStatusJsonResponse", "open_withXoauth2Extension_shouldThrowOn401Response", "open_withXoauth2Extension_shouldThrowOnFailure_fetchingToken", "open_withXoauth2Extension_shouldThrowOnMultipleFailure", "open_withoutAuthExternalExtension_shouldThrow", "open_withoutAuthLoginExtension_shouldConnectWithoutAuthentication", "open_withoutCramMd5AuthExtension_shouldThrow", "open_withoutXoauth2Extension_shouldThrow", "sendMessage_with8BitEncoding", "sendMessage_with8BitEncodingExtensionNotCaseSensitive", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withSingleRecipient" ]
      },
      "predecessor" : "8a552d46a0188f0c55fa8f3d9a9222f83a2150af~1"
    },
    "65b66a05fdadebc73efbce81f0d8b190be629f31" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "sendMessagePipelining_withNegativeReply", "sendMessage_with8BitEncoding", "sendMessage_with8BitEncodingExtensionNotCaseSensitive", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withPipelining", "sendMessage_withSingleRecipient", "sendMessage_withoutPipelining" ]
      },
      "predecessor" : "65b66a05fdadebc73efbce81f0d8b190be629f31~1"
    },
    "f322cbe9713f9868488c1c2e73dd163ec40f323a" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "sendMessagePipelining_withNegativeReply", "sendMessagePipelining_without354ReplyforData_shouldThrow", "sendMessage_withPipelining" ]
      },
      "predecessor" : "f322cbe9713f9868488c1c2e73dd163ec40f323a~1"
    },
    "346bdc8cd2c1a1c115129b9a2624097861801e5a" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "sendMessagePipelining_withNegativeReply", "sendMessagePipelining_without354ReplyforData_shouldThrow", "sendMessage_with8BitEncoding", "sendMessage_with8BitEncodingExtensionNotCaseSensitive", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withPipelining", "sendMessage_withSingleRecipient", "sendMessage_withoutPipelining" ]
      },
      "predecessor" : "346bdc8cd2c1a1c115129b9a2624097861801e5a~1"
    },
    "589b70bb0921fcfaee569e319b08d40228bf2ff4" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "sendMessagePipelining_with250and550ReplyforRecipients_shouldThrow", "sendMessagePipelining_withNegativeReply", "sendMessagePipelining_without354ReplyforData_shouldThrow", "sendMessage_withPipelining" ]
      },
      "predecessor" : "589b70bb0921fcfaee569e319b08d40228bf2ff4~1"
    },
    "e529542bba13ab3599044d2f1244fcf23dddea6d" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "open_withSupportWithEnhancedStatusCodesOnAuthFailure_shouldThrowEncodedMessage", "sendMessagePipelining_with250and550ReplyforRecipientsAnd250ForMessage_shouldThrow", "sendMessagePipelining_with250and550ReplyforRecipients_shouldThrow", "sendMessagePipelining_withNegativeReply", "sendMessagePipelining_without354ReplyforData_shouldThrow", "sendMessage_withPipelining" ]
      },
      "predecessor" : "e529542bba13ab3599044d2f1244fcf23dddea6d~1"
    },
    "f88537284f296d0e40d5b7965dc63126c9ea8e30" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "sendMessagePipelining_with250and550ReplyforRecipientsAnd250ForMessage_shouldThrow", "sendMessagePipelining_with250and550ReplyforRecipients_shouldThrow", "sendMessagePipelining_withNegativeReply", "sendMessagePipelining_without354ReplyforData_shouldThrow", "sendMessage_with8BitEncoding", "sendMessage_with8BitEncodingExtensionNotCaseSensitive", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withPipelining", "sendMessage_withSingleRecipient", "sendMessage_withoutPipelining" ]
      },
      "predecessor" : "f88537284f296d0e40d5b7965dc63126c9ea8e30~1"
    },
    "9ab04c09316bf59d6eee965c8f36d1f93d8a8ab5" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "open_withAuthExternalExtension", "open_withAuthLoginExtension", "open_withAuthPlainExtension", "open_withAutomaticAuthAndNoTransportSecurityAndAuthCramMd5Extension_shouldUseAuthCramMd5", "open_withAutomaticAuthAndNoTransportSecurityAndAuthPlainExtension_shouldThrow", "open_withCramMd5AuthExtension", "open_withEhloFailing_shouldTryHelo", "open_withManyExtensions_shouldParseAll", "open_withSupportWithEnhancedStatusCodesOnAuthFailure_shouldThrowEncodedMessage", "open_withXoauth2Extension", "open_withXoauth2Extension_shouldInvalidateAndRetryOn400Response", "open_withXoauth2Extension_shouldInvalidateAndRetryOnInvalidJsonResponse", "open_withXoauth2Extension_shouldInvalidateAndRetryOnMissingStatusJsonResponse", "open_withXoauth2Extension_shouldThrowOn401Response", "open_withXoauth2Extension_shouldThrowOnFailure_fetchingToken", "open_withXoauth2Extension_shouldThrowOnMultipleFailure", "open_withoutAuthExternalExtension_shouldThrow", "open_withoutAuthLoginExtension_shouldConnectWithoutAuthentication", "open_withoutCramMd5AuthExtension_shouldThrow", "open_withoutXoauth2Extension_shouldThrow", "sendMessage_with8BitEncoding", "sendMessage_with8BitEncodingExtensionNotCaseSensitive", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withSingleRecipient" ],
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "initFromReplyToMessage_shouldCallComposePgpInlineDecider", "onBccTokenAdded_notifiesListenerOfRecipientChange", "onBccTokenChanged_notifiesListenerOfRecipientChange", "onBccTokenRemoved_notifiesListenerOfRecipientChange", "onCcTokenAdded_notifiesListenerOfRecipientChange", "onCcTokenChanged_notifiesListenerOfRecipientChange", "onCcTokenRemoved_notifiesListenerOfRecipientChange", "onToTokenAdded_notifiesListenerOfRecipientChange", "onToTokenChanged_notifiesListenerOfRecipientChange", "onToTokenRemoved_notifiesListenerOfRecipientChange" ]
      },
      "predecessor" : "f88537284f296d0e40d5b7965dc63126c9ea8e30"
    },
    "46161efce69eeb7d938767a03acc2b62e3af59ae" : {
      "testcases" : {
        "k9mail§com.fsck.k9.autocrypt.AutocryptHeaderParserTest" : [ "getValidAutocryptHeader__withBrokenBase64__shouldReturnNull", "getValidAutocryptHeader__withExplicitType", "getValidAutocryptHeader__withSimpleAutocrypt", "getValidAutocryptHeader__withUnknownCriticalHeader__shouldReturnNull", "getValidAutocryptHeader__withUnknownNonCriticalHeader", "getValidAutocryptHeader__withUnknownType__shouldReturnNull", "parseAutocryptHeader_toRawHeaderString" ],
        "k9mail§com.fsck.k9.autocrypt.AutocryptHeaderTest" : [ "toRawHeaderString_returnsExpected" ]
      },
      "predecessor" : "46161efce69eeb7d938767a03acc2b62e3af59ae~1"
    },
    "dea3678fbe7f24c9f56ee9f7e0fd030651f85ccd" : {
      "testcases" : {
        "k9mail§com.fsck.k9.autocrypt.AutocryptHeaderParserTest" : [ "parseAutocryptHeader_toRawHeaderString" ],
        "k9mail§com.fsck.k9.autocrypt.AutocryptHeaderTest" : [ "toRawHeaderString_returnsExpected" ]
      },
      "predecessor" : "dea3678fbe7f24c9f56ee9f7e0fd030651f85ccd~1"
    },
    "d705f2c278dedf8ddf91a24cc1348fcca78bcc10" : {
      "testcases" : {
        "k9mail§com.fsck.k9.autocrypt.AutocryptHeaderParserTest" : [ "parseAutocryptHeader_toRawHeaderString" ],
        "k9mail§com.fsck.k9.autocrypt.AutocryptHeaderTest" : [ "toRawHeaderString_returnsExpected" ]
      },
      "predecessor" : "d705f2c278dedf8ddf91a24cc1348fcca78bcc10~1"
    },
    "038f2bb67076fa1b9ce09da1fe4971f5753b1f58" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "close_withoutOpen_shouldNotThrow", "executeSingleCommand_withNoResponse_shouldThrowNegativeImapResponseException", "executeSingleCommand_withOkResponse_shouldReturnResult", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isConnected_withoutPreviousOpen_shouldReturnFalse", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "sendContinuation" ]
      },
      "predecessor" : "d705f2c278dedf8ddf91a24cc1348fcca78bcc10"
    },
    "f88c3594fca933014cc64b1168c60856cc0091bd" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.MessageTest" : [ "testMessage", "testSetSendDateFormatsHeaderCorrectlyWithCurrentTimeZone", "testSetSendDateFormatsHeaderCorrectlyWithoutTimeZone", "testSetSendDateSetsSentDate", "testToBodyPart" ],
        "k9mail-library§com.fsck.k9.mail.internet.DecoderUtilTest" : [ "decodeEncodedWords_withAsciiCharset_encoded_data_returns_text", "decodeEncodedWords_withGB2312_decodes_correctly", "decodeEncodedWords_withInvalidBase64String_returnsEmptyString", "decodeEncodedWords_withMissingCharset_returnAsText", "decodeEncodedWords_withMissingEncoding_returnAsText", "decodeEncodedWords_withNoTextCharsetOrEncoding_returnAsText", "decodeEncodedWords_withSeparatorsOnly_returnAsText", "decodeEncodedWords_withStartAnd2SeparatorOnly_returnAsText", "decodeEncodedWords_withStartAnd3SeparatorOnly_returnAsText", "decodeEncodedWords_withStartAndSeparatorOnly_returnAsText", "decodeEncodedWords_withStartOnly_encoding_format_returnAsText", "decodeEncodedWords_withTextAndMissingCharset_returnAsText", "decodeEncodedWords_withUnrecognisedCharset_returnsEncodedData", "decodeEncodedWords_withUnrecognisedEncoding_withEncodedData_return_encoded_data", "decodeEncodedWords_with_MissingEncodingAndData_returnAsText", "decodeEncodedWords_with_incompleteEncodingFormat_returnAsText", "decodeEncodedWords_with_unencoded_data_returns_original_text", "decodeEncodedWords_with_unrecognisedEncoding_withEmptyEncodedData_returnAsText" ],
        "k9mail-library§com.fsck.k9.mail.internet.MessageExtractorTest" : [ "getTextFromPart_withExceptionThrownGettingInputStream_shouldReturnNull", "getTextFromPart_withHtmlWithCharsetInContentTypeRawDataBody_shouldReturnHtmlText", "getTextFromPart_withHtmlWithCharsetInHtmlRawDataBody_shouldReturnHtmlText", "getTextFromPart_withPlainTextWithCharsetInContentTypeRawDataBody_shouldReturnText", "getTextFromPart_withRawDataBodyWithNonText_shouldReturnNull", "getTextFromPart_withTextBody_shouldReturnText", "getTextFromPart_withUnknownEncoding_shouldReturnUnmodifiedBodyContents" ],
        "k9mail-library§com.fsck.k9.mail.internet.MimeMessageParseTest" : [ "testMultipartSingleLayerNoRecurse", "testMultipartSingleLayerRecurse", "testMultipartTwoLayersRecurse", "testSinglePart7BitNoRecurse", "testSinglePart8BitRecurse", "testSinglePartBase64NoRecurse" ],
        "k9mail§com.fsck.k9.crypto.MessageDecryptVerifierTest" : [ "findEncryptedPartsShouldReturnEmptyEncryptedPart", "findEncryptedPartsShouldReturnMultipleEncryptedParts", "findEncrypted__withMultipartEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubEncryptedAndEncrypted__shouldReturnBoth", "findEncrypted__withMultipartMixedSubEncryptedAndText__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubSignedAndText__shouldReturnSigned", "findEncrypted__withMultipartMixedSubSigned__shouldReturnSigned", "findEncrypted__withMultipartMixedSubTextAndEncrypted__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubTextAndSigned__shouldReturnSigned", "findPrimaryCryptoPart_withEmptyMultipartAlternativeInsideMultipartMixed_shouldReturnNull", "findPrimaryCryptoPart_withEmptyMultipartAlternative_shouldReturnNull", "findPrimaryCryptoPart_withEmptyMultipartMixed_shouldReturnNull", "findPrimaryCryptoPart_withMultipartAlternativeContainingPgpInline", "findPrimaryCryptoPart_withMultipartMixedContainingMultipartAlternativeContainingPgpInline", "findPrimaryCryptoPart_withMultipartMixedContainingPgpInline", "findPrimaryCryptoPart_withSimplePgpInline", "findSigned__withComplexMultipartSigned__shouldReturnRoot", "findSigned__withSimpleMultipartSigned__shouldReturnRoot" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.message.extractors.AttachmentInfoExtractorTest" : [ "extractInfoForDb__withContentTypeAndName__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionAttach__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionInlineAndContentId__shouldReturnInlineAttachment", "extractInfoForDb__withDispositionInvalidSizeParam__shouldReturnUnknownSize", "extractInfoForDb__withDispositionSizeParam__shouldReturnThatSize", "extractInfoForDb__withNoBody__shouldReturnContentAvailable", "extractInfoForDb__withNoBody__shouldReturnContentNotAvailable", "extractInfoForDb__withNoHeaders__shouldReturnEmptyValues", "extractInfoForDb__withTextMimeType__shouldReturnTxtExtension", "extractInfo__fromLocalBodyPart__shouldReturnProvidedValues", "extractInfo__withDeferredFileBody" ],
        "k9mail§com.fsck.k9.message.extractors.EncryptionDetectorTest" : [ "isEncrypted_withInlinePgp_shouldReturnTrue", "isEncrypted_withMultipartEncrypted_shouldReturnTrue", "isEncrypted_withMultipartMixedContainingSMimePart_shouldReturnTrue", "isEncrypted_withPlainTextAndPreambleWithInlinePgp_shouldReturnFalse", "isEncrypted_withQuotedInlinePgp_shouldReturnFalse", "isEncrypted_withSMimePart_shouldReturnTrue", "isEncrypted_withTextPlain_shouldReturnFalse" ],
        "k9mail§com.fsck.k9.message.extractors.MessagePreviewCreatorTest" : [ "createPreview_withPreviewTextExtractorThrowing", "createPreview_withTextPart" ],
        "k9mail§com.fsck.k9.message.extractors.PreviewTextExtractorTest" : [ "extractPreview_shouldCollapseAndTrimWhitespace", "extractPreview_shouldReplaceUrl", "extractPreview_shouldStripGenericQuoteHeader", "extractPreview_shouldStripHorizontalLine", "extractPreview_shouldStripHorizontalRules", "extractPreview_shouldStripQuoteHeaderAndQuotedText", "extractPreview_shouldStripSignature", "extractPreview_withLongTextPlain", "extractPreview_withSimpleTextHtml", "extractPreview_withSimpleTextPlain" ],
        "k9mail§com.fsck.k9.message.extractors.TextPartFinderTest" : [ "findFirstTextPart_withMultipartAlternative", "findFirstTextPart_withMultipartAlternativeContainingEmptyTextPlainPart", "findFirstTextPart_withMultipartAlternativeContainingMultipartRelatedContainingTextHtmlFirst", "findFirstTextPart_withMultipartAlternativeContainingMultipartRelatedContainingTextPlain", "findFirstTextPart_withMultipartAlternativeContainingOnlyTextHtmlPart", "findFirstTextPart_withMultipartAlternativeHtmlPartFirst", "findFirstTextPart_withMultipartAlternativeNotContainingTextPart", "findFirstTextPart_withMultipartMixedContainingEmptyTextHtmlPart", "findFirstTextPart_withMultipartMixedContainingMultipartAlternative", "findFirstTextPart_withMultipartMixedContainingMultipartAlternativeWithTextPlainPartLast", "findFirstTextPart_withMultipartMixedContainingTextHtmlFirst", "findFirstTextPart_withMultipartMixedContainingTextPlain", "findFirstTextPart_withMultipartMixedNotContainingTextPart", "findFirstTextPart_withTextHtmlPart", "findFirstTextPart_withTextPlainPart", "findFirstTextPart_withoutTextPart" ],
        "k9mail§com.fsck.k9.ui.crypto.MessageCryptoHelperTest" : [ "multipartEncrypted__withNullBody__shouldReturnEncryptedIncomplete", "multipartEncrypted__withUnknownProtocol__shouldReturnEncryptedUnsupported", "multipartSigned__withNullBody__shouldReturnSignedIncomplete", "multipartSigned__withUnknownProtocol__shouldReturnSignedUnsupported", "textPlain" ]
      },
      "predecessor" : "1471e7a06336f7a68deefb881d3f7a1a89537e7a"
    },
    "0e9e4daa8086975d191acaf4164dbf90f94bc5da" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.MessageTest" : [ "testMessage", "testSetSendDateFormatsHeaderCorrectlyWithCurrentTimeZone", "testSetSendDateFormatsHeaderCorrectlyWithoutTimeZone", "testSetSendDateSetsSentDate", "testToBodyPart" ],
        "k9mail-library§com.fsck.k9.mail.internet.DecoderUtilTest" : [ "decodeEncodedWords_withAsciiCharset_encoded_data_returns_text", "decodeEncodedWords_withGB2312_decodes_correctly", "decodeEncodedWords_withInvalidBase64String_returnsEmptyString", "decodeEncodedWords_withMissingCharset_returnAsText", "decodeEncodedWords_withMissingEncoding_returnAsText", "decodeEncodedWords_withMultipleEncodedSections_decodesBoth", "decodeEncodedWords_withMultipleEncodedSections_decodesSequentialSectionTogether", "decodeEncodedWords_withNoTextCharsetOrEncoding_returnAsText", "decodeEncodedWords_withPartiallyEncoded_returnsBothSections", "decodeEncodedWords_withSeparatorsOnly_returnAsText", "decodeEncodedWords_withStartAnd2SeparatorOnly_returnAsText", "decodeEncodedWords_withStartAnd3SeparatorOnly_returnAsText", "decodeEncodedWords_withStartAndSeparatorOnly_returnAsText", "decodeEncodedWords_withStartOnly_encoding_format_returnAsText", "decodeEncodedWords_withTextAndMissingCharset_returnAsText", "decodeEncodedWords_withUnrecognisedCharset_returnsEncodedData", "decodeEncodedWords_withUnrecognisedEncoding_withEncodedData_return_encoded_data", "decodeEncodedWords_with_MissingEncodingAndData_returnAsText", "decodeEncodedWords_with_incompleteEncodingFormat_returnAsText", "decodeEncodedWords_with_unencoded_data_returns_original_text", "decodeEncodedWords_with_unrecognisedEncoding_withEmptyEncodedData_returnAsText" ],
        "k9mail-library§com.fsck.k9.mail.internet.MessageExtractorTest" : [ "getTextFromPart_withExceptionThrownGettingInputStream_shouldReturnNull", "getTextFromPart_withHtmlWithCharsetInContentTypeRawDataBody_shouldReturnHtmlText", "getTextFromPart_withHtmlWithCharsetInHtmlRawDataBody_shouldReturnHtmlText", "getTextFromPart_withPlainTextWithCharsetInContentTypeRawDataBody_shouldReturnText", "getTextFromPart_withRawDataBodyWithNonText_shouldReturnNull", "getTextFromPart_withTextBody_shouldReturnText", "getTextFromPart_withUnknownEncoding_shouldReturnUnmodifiedBodyContents" ],
        "k9mail-library§com.fsck.k9.mail.internet.MimeMessageParseTest" : [ "testMultipartSingleLayerNoRecurse", "testMultipartSingleLayerRecurse", "testMultipartTwoLayersRecurse", "testSinglePart7BitNoRecurse", "testSinglePart8BitRecurse", "testSinglePartBase64NoRecurse" ],
        "k9mail§com.fsck.k9.crypto.MessageDecryptVerifierTest" : [ "findEncryptedPartsShouldReturnEmptyEncryptedPart", "findEncryptedPartsShouldReturnMultipleEncryptedParts", "findEncrypted__withMultipartEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubEncryptedAndEncrypted__shouldReturnBoth", "findEncrypted__withMultipartMixedSubEncryptedAndText__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubSignedAndText__shouldReturnSigned", "findEncrypted__withMultipartMixedSubSigned__shouldReturnSigned", "findEncrypted__withMultipartMixedSubTextAndEncrypted__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubTextAndSigned__shouldReturnSigned", "findPrimaryCryptoPart_withEmptyMultipartAlternativeInsideMultipartMixed_shouldReturnNull", "findPrimaryCryptoPart_withEmptyMultipartAlternative_shouldReturnNull", "findPrimaryCryptoPart_withEmptyMultipartMixed_shouldReturnNull", "findPrimaryCryptoPart_withMultipartAlternativeContainingPgpInline", "findPrimaryCryptoPart_withMultipartMixedContainingMultipartAlternativeContainingPgpInline", "findPrimaryCryptoPart_withMultipartMixedContainingPgpInline", "findPrimaryCryptoPart_withSimplePgpInline", "findSigned__withComplexMultipartSigned__shouldReturnRoot", "findSigned__withSimpleMultipartSigned__shouldReturnRoot" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.message.extractors.AttachmentInfoExtractorTest" : [ "extractInfoForDb__withContentTypeAndEncodedWordName__shouldReturnDecodedName", "extractInfoForDb__withContentTypeAndName__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionAttach__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionInlineAndContentId__shouldReturnInlineAttachment", "extractInfoForDb__withDispositionInvalidSizeParam__shouldReturnUnknownSize", "extractInfoForDb__withDispositionSizeParam__shouldReturnThatSize", "extractInfoForDb__withNoBody__shouldReturnContentAvailable", "extractInfoForDb__withNoBody__shouldReturnContentNotAvailable", "extractInfoForDb__withNoHeaders__shouldReturnEmptyValues", "extractInfoForDb__withTextMimeType__shouldReturnTxtExtension", "extractInfo__fromLocalBodyPart__shouldReturnProvidedValues", "extractInfo__withDeferredFileBody" ],
        "k9mail§com.fsck.k9.message.extractors.EncryptionDetectorTest" : [ "isEncrypted_withInlinePgp_shouldReturnTrue", "isEncrypted_withMultipartEncrypted_shouldReturnTrue", "isEncrypted_withMultipartMixedContainingSMimePart_shouldReturnTrue", "isEncrypted_withPlainTextAndPreambleWithInlinePgp_shouldReturnFalse", "isEncrypted_withQuotedInlinePgp_shouldReturnFalse", "isEncrypted_withSMimePart_shouldReturnTrue", "isEncrypted_withTextPlain_shouldReturnFalse" ],
        "k9mail§com.fsck.k9.message.extractors.MessagePreviewCreatorTest" : [ "createPreview_withPreviewTextExtractorThrowing", "createPreview_withTextPart" ],
        "k9mail§com.fsck.k9.message.extractors.PreviewTextExtractorTest" : [ "extractPreview_shouldCollapseAndTrimWhitespace", "extractPreview_shouldReplaceUrl", "extractPreview_shouldStripGenericQuoteHeader", "extractPreview_shouldStripHorizontalLine", "extractPreview_shouldStripHorizontalRules", "extractPreview_shouldStripQuoteHeaderAndQuotedText", "extractPreview_shouldStripSignature", "extractPreview_withLongTextPlain", "extractPreview_withSimpleTextHtml", "extractPreview_withSimpleTextPlain" ],
        "k9mail§com.fsck.k9.message.extractors.TextPartFinderTest" : [ "findFirstTextPart_withMultipartAlternative", "findFirstTextPart_withMultipartAlternativeContainingEmptyTextPlainPart", "findFirstTextPart_withMultipartAlternativeContainingMultipartRelatedContainingTextHtmlFirst", "findFirstTextPart_withMultipartAlternativeContainingMultipartRelatedContainingTextPlain", "findFirstTextPart_withMultipartAlternativeContainingOnlyTextHtmlPart", "findFirstTextPart_withMultipartAlternativeHtmlPartFirst", "findFirstTextPart_withMultipartAlternativeNotContainingTextPart", "findFirstTextPart_withMultipartMixedContainingEmptyTextHtmlPart", "findFirstTextPart_withMultipartMixedContainingMultipartAlternative", "findFirstTextPart_withMultipartMixedContainingMultipartAlternativeWithTextPlainPartLast", "findFirstTextPart_withMultipartMixedContainingTextHtmlFirst", "findFirstTextPart_withMultipartMixedContainingTextPlain", "findFirstTextPart_withMultipartMixedNotContainingTextPart", "findFirstTextPart_withTextHtmlPart", "findFirstTextPart_withTextPlainPart", "findFirstTextPart_withoutTextPart" ],
        "k9mail§com.fsck.k9.ui.crypto.MessageCryptoHelperTest" : [ "multipartEncrypted__withNullBody__shouldReturnEncryptedIncomplete", "multipartEncrypted__withUnknownProtocol__shouldReturnEncryptedUnsupported", "multipartSigned__withNullBody__shouldReturnSignedIncomplete", "multipartSigned__withUnknownProtocol__shouldReturnSignedUnsupported", "textPlain" ]
      },
      "predecessor" : "0e9e4daa8086975d191acaf4164dbf90f94bc5da~1"
    },
    "498df5db73acaa6599029c48a2b793737e60d76d" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.MessageTest" : [ "testMessage", "testSetSendDateFormatsHeaderCorrectlyWithCurrentTimeZone", "testSetSendDateFormatsHeaderCorrectlyWithoutTimeZone", "testSetSendDateSetsSentDate", "testToBodyPart" ],
        "k9mail-library§com.fsck.k9.mail.internet.DecoderUtilTest" : [ "decodeEncodedWords_withAsciiCharset_encoded_data_returns_text", "decodeEncodedWords_withGB2312_decodes_correctly", "decodeEncodedWords_withInvalidBase64String_returnsEmptyString", "decodeEncodedWords_withMissingCharset_returnAsText", "decodeEncodedWords_withMissingEncoding_returnAsText", "decodeEncodedWords_withMultipleEncodedSections_decodesBoth", "decodeEncodedWords_withMultipleEncodedSections_decodesSequentialSectionTogether", "decodeEncodedWords_withNoTextCharsetOrEncoding_returnAsText", "decodeEncodedWords_withPartiallyEncodedAfter_returnsBothSections", "decodeEncodedWords_withPartiallyEncoded_returnsBothSections", "decodeEncodedWords_withSeparatorsOnly_returnAsText", "decodeEncodedWords_withStartAnd2SeparatorOnly_returnAsText", "decodeEncodedWords_withStartAnd3SeparatorOnly_returnAsText", "decodeEncodedWords_withStartAndSeparatorOnly_returnAsText", "decodeEncodedWords_withStartOnly_encoding_format_returnAsText", "decodeEncodedWords_withTextAndMissingCharset_returnAsText", "decodeEncodedWords_withUnrecognisedCharset_returnsEncodedData", "decodeEncodedWords_withUnrecognisedEncoding_withEncodedData_return_encoded_data", "decodeEncodedWords_with_MissingEncodingAndData_returnAsText", "decodeEncodedWords_with_incompleteEncodingFormat_returnAsText", "decodeEncodedWords_with_unencoded_data_returns_original_text", "decodeEncodedWords_with_unrecognisedEncoding_withEmptyEncodedData_returnAsText" ],
        "k9mail-library§com.fsck.k9.mail.internet.MessageExtractorTest" : [ "getTextFromPart_withExceptionThrownGettingInputStream_shouldReturnNull", "getTextFromPart_withHtmlWithCharsetInContentTypeRawDataBody_shouldReturnHtmlText", "getTextFromPart_withHtmlWithCharsetInHtmlRawDataBody_shouldReturnHtmlText", "getTextFromPart_withPlainTextWithCharsetInContentTypeRawDataBody_shouldReturnText", "getTextFromPart_withRawDataBodyWithNonText_shouldReturnNull", "getTextFromPart_withTextBody_shouldReturnText", "getTextFromPart_withUnknownEncoding_shouldReturnUnmodifiedBodyContents" ],
        "k9mail-library§com.fsck.k9.mail.internet.MimeMessageParseTest" : [ "testMultipartSingleLayerNoRecurse", "testMultipartSingleLayerRecurse", "testMultipartTwoLayersRecurse", "testSinglePart7BitNoRecurse", "testSinglePart8BitRecurse", "testSinglePartBase64NoRecurse" ],
        "k9mail§com.fsck.k9.crypto.MessageDecryptVerifierTest" : [ "findEncryptedPartsShouldReturnEmptyEncryptedPart", "findEncryptedPartsShouldReturnMultipleEncryptedParts", "findEncrypted__withMultipartEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubEncryptedAndEncrypted__shouldReturnBoth", "findEncrypted__withMultipartMixedSubEncryptedAndText__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubSignedAndText__shouldReturnSigned", "findEncrypted__withMultipartMixedSubSigned__shouldReturnSigned", "findEncrypted__withMultipartMixedSubTextAndEncrypted__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubTextAndSigned__shouldReturnSigned", "findPrimaryCryptoPart_withEmptyMultipartAlternativeInsideMultipartMixed_shouldReturnNull", "findPrimaryCryptoPart_withEmptyMultipartAlternative_shouldReturnNull", "findPrimaryCryptoPart_withEmptyMultipartMixed_shouldReturnNull", "findPrimaryCryptoPart_withMultipartAlternativeContainingPgpInline", "findPrimaryCryptoPart_withMultipartMixedContainingMultipartAlternativeContainingPgpInline", "findPrimaryCryptoPart_withMultipartMixedContainingPgpInline", "findPrimaryCryptoPart_withSimplePgpInline", "findSigned__withComplexMultipartSigned__shouldReturnRoot", "findSigned__withSimpleMultipartSigned__shouldReturnRoot" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.message.extractors.AttachmentInfoExtractorTest" : [ "extractInfoForDb__withContentTypeAndEncodedWordName__shouldReturnDecodedName", "extractInfoForDb__withContentTypeAndName__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionAttach__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionInlineAndContentId__shouldReturnInlineAttachment", "extractInfoForDb__withDispositionInvalidSizeParam__shouldReturnUnknownSize", "extractInfoForDb__withDispositionSizeParam__shouldReturnThatSize", "extractInfoForDb__withNoBody__shouldReturnContentAvailable", "extractInfoForDb__withNoBody__shouldReturnContentNotAvailable", "extractInfoForDb__withNoHeaders__shouldReturnEmptyValues", "extractInfoForDb__withTextMimeType__shouldReturnTxtExtension", "extractInfo__fromLocalBodyPart__shouldReturnProvidedValues", "extractInfo__withDeferredFileBody" ],
        "k9mail§com.fsck.k9.message.extractors.EncryptionDetectorTest" : [ "isEncrypted_withInlinePgp_shouldReturnTrue", "isEncrypted_withMultipartEncrypted_shouldReturnTrue", "isEncrypted_withMultipartMixedContainingSMimePart_shouldReturnTrue", "isEncrypted_withPlainTextAndPreambleWithInlinePgp_shouldReturnFalse", "isEncrypted_withQuotedInlinePgp_shouldReturnFalse", "isEncrypted_withSMimePart_shouldReturnTrue", "isEncrypted_withTextPlain_shouldReturnFalse" ],
        "k9mail§com.fsck.k9.message.extractors.MessagePreviewCreatorTest" : [ "createPreview_withPreviewTextExtractorThrowing", "createPreview_withTextPart" ],
        "k9mail§com.fsck.k9.message.extractors.PreviewTextExtractorTest" : [ "extractPreview_shouldCollapseAndTrimWhitespace", "extractPreview_shouldReplaceUrl", "extractPreview_shouldStripGenericQuoteHeader", "extractPreview_shouldStripHorizontalLine", "extractPreview_shouldStripHorizontalRules", "extractPreview_shouldStripQuoteHeaderAndQuotedText", "extractPreview_shouldStripSignature", "extractPreview_withLongTextPlain", "extractPreview_withSimpleTextHtml", "extractPreview_withSimpleTextPlain" ],
        "k9mail§com.fsck.k9.message.extractors.TextPartFinderTest" : [ "findFirstTextPart_withMultipartAlternative", "findFirstTextPart_withMultipartAlternativeContainingEmptyTextPlainPart", "findFirstTextPart_withMultipartAlternativeContainingMultipartRelatedContainingTextHtmlFirst", "findFirstTextPart_withMultipartAlternativeContainingMultipartRelatedContainingTextPlain", "findFirstTextPart_withMultipartAlternativeContainingOnlyTextHtmlPart", "findFirstTextPart_withMultipartAlternativeHtmlPartFirst", "findFirstTextPart_withMultipartAlternativeNotContainingTextPart", "findFirstTextPart_withMultipartMixedContainingEmptyTextHtmlPart", "findFirstTextPart_withMultipartMixedContainingMultipartAlternative", "findFirstTextPart_withMultipartMixedContainingMultipartAlternativeWithTextPlainPartLast", "findFirstTextPart_withMultipartMixedContainingTextHtmlFirst", "findFirstTextPart_withMultipartMixedContainingTextPlain", "findFirstTextPart_withMultipartMixedNotContainingTextPart", "findFirstTextPart_withTextHtmlPart", "findFirstTextPart_withTextPlainPart", "findFirstTextPart_withoutTextPart" ],
        "k9mail§com.fsck.k9.ui.crypto.MessageCryptoHelperTest" : [ "multipartEncrypted__withNullBody__shouldReturnEncryptedIncomplete", "multipartEncrypted__withUnknownProtocol__shouldReturnEncryptedUnsupported", "multipartSigned__withNullBody__shouldReturnSignedIncomplete", "multipartSigned__withUnknownProtocol__shouldReturnSignedUnsupported", "textPlain" ]
      },
      "predecessor" : "498df5db73acaa6599029c48a2b793737e60d76d~1"
    },
    "73adc770f453fc1e8d4c5d2ead541c320ec5bc6e" : {
      "testcases" : {
        "k9mail§com.fsck.k9.message.MessageBuilderTest" : [ "build_detachAndReattach_shouldSucceed" ],
        "k9mail§com.fsck.k9.notification.DeviceNotificationsTest" : [ "buildSummaryNotification_withAdditionalMessages", "buildSummaryNotification_withPrivacyModeActive", "buildSummaryNotification_withoutDeleteAction", "buildSummaryNotification_withoutDeleteAllAction" ],
        "k9mail§com.fsck.k9.notification.LockScreenNotificationTest" : [ "configureLockScreenNotification_SENDERS_withMultipleMessages", "configureLockScreenNotification_SENDERS_withSingleMessage", "createCommaSeparatedListOfSenders_withMoreSendersThanShouldBeDisplayed" ],
        "k9mail§com.fsck.k9.notification.NewMailNotificationsTest" : [ "testAddNewMailNotification", "testAddNewMailNotificationTwice", "testAddNewMailNotificationWithCancelingExistingNotification", "testAddNewMailNotificationWithPrivacyModeEnabled", "testClearNewMailNotifications", "testRemoveNewMailNotification", "testRemoveNewMailNotificationClearingAllNotifications", "testRemoveNewMailNotificationWithCreateNotification", "testRemoveNewMailNotificationWithUnknownMessageReference" ],
        "k9mail§com.fsck.k9.notification.NotificationDataTest" : [ "testAddNotificationContent", "testAddNotificationContentWithReplacingNotification", "testContainsStarredMessages", "testContainsStarredMessagesWithAdditionalMessages", "testGetActiveNotificationIds", "testGetAllMessageReferences", "testGetContentForSummaryNotification", "testGetHolderForLatestNotification", "testIsSingleMessageNotification", "testNewMessagesCount", "testOverflowNotifications", "testRemoveDoesNotLeakNotificationIds", "testRemoveNotificationForMessage", "testRemoveNotificationForMessageWithRecreatingNotification", "testUnreadMessagesCount" ]
      },
      "predecessor" : "73adc770f453fc1e8d4c5d2ead541c320ec5bc6e~1"
    },
    "b133fca87cd565515e85c9ab5e63956efb7cf835" : {
      "testcases" : {
        "k9mail§com.fsck.k9.notification.DeviceNotificationsTest" : [ "buildSummaryNotification_withAdditionalMessages", "buildSummaryNotification_withPrivacyModeActive", "buildSummaryNotification_withoutDeleteAction", "buildSummaryNotification_withoutDeleteAllAction" ],
        "k9mail§com.fsck.k9.notification.LockScreenNotificationTest" : [ "configureLockScreenNotification_SENDERS_withMultipleMessages", "configureLockScreenNotification_SENDERS_withSingleMessage", "createCommaSeparatedListOfSenders_withMoreSendersThanShouldBeDisplayed" ],
        "k9mail§com.fsck.k9.notification.NewMailNotificationsTest" : [ "testAddNewMailNotification", "testAddNewMailNotificationTwice", "testAddNewMailNotificationWithCancelingExistingNotification", "testAddNewMailNotificationWithPrivacyModeEnabled", "testClearNewMailNotifications", "testRemoveNewMailNotification", "testRemoveNewMailNotificationClearingAllNotifications", "testRemoveNewMailNotificationWithCreateNotification", "testRemoveNewMailNotificationWithUnknownMessageReference" ],
        "k9mail§com.fsck.k9.notification.NotificationContentCreatorTest" : [ "createFromMessage_withEncryptedMessage", "createFromMessage_withErrorPreview", "createFromMessage_withMessageFromSelf", "createFromMessage_withStarredMessage", "createFromMessage_withoutEmptyMessage", "createFromMessage_withoutPreview", "createFromMessage_withoutSender", "createFromMessage_withoutSubject" ],
        "k9mail§com.fsck.k9.notification.NotificationDataTest" : [ "testAddNotificationContent", "testAddNotificationContentWithReplacingNotification", "testContainsStarredMessages", "testContainsStarredMessagesWithAdditionalMessages", "testGetActiveNotificationIds", "testGetAllMessageReferences", "testGetContentForSummaryNotification", "testGetHolderForLatestNotification", "testIsSingleMessageNotification", "testNewMessagesCount", "testOverflowNotifications", "testRemoveDoesNotLeakNotificationIds", "testRemoveNotificationForMessage", "testRemoveNotificationForMessageWithRecreatingNotification", "testUnreadMessagesCount" ]
      },
      "predecessor" : "b133fca87cd565515e85c9ab5e63956efb7cf835~1"
    },
    "83e7e65a556a5ecf214979cbf938bc5f01254071" : {
      "testcases" : {
        "k9mail§com.fsck.k9.message.MessageBuilderTest" : [ "build_detachAndReattach_shouldSucceed" ],
        "k9mail§com.fsck.k9.notification.BaseNotificationsTest" : [ "testCreateAndInitializeNotificationBuilder", "testCreateBigTextStyleNotification", "testIsDeleteActionEnabled_NotificationQuickDelete_ALWAYS", "testIsDeleteActionEnabled_NotificationQuickDelete_FOR_SINGLE_MSG", "testIsDeleteActionEnabled_NotificationQuickDelete_NEVER" ],
        "k9mail§com.fsck.k9.notification.DeviceNotificationsTest" : [ "buildSummaryNotification_withAdditionalMessages", "buildSummaryNotification_withMultiMessageNotification", "buildSummaryNotification_withPrivacyModeActive", "buildSummaryNotification_withSingleMessageNotification", "buildSummaryNotification_withoutDeleteAction", "buildSummaryNotification_withoutDeleteAllAction" ],
        "k9mail§com.fsck.k9.notification.NotificationContentCreatorTest" : [ "createFromMessage_withEncryptedMessage", "createFromMessage_withErrorPreview", "createFromMessage_withMessageFromSelf", "createFromMessage_withRegularMessage", "createFromMessage_withStarredMessage", "createFromMessage_withoutEmptyMessage", "createFromMessage_withoutPreview", "createFromMessage_withoutSender", "createFromMessage_withoutSubject" ],
        "k9mail§com.fsck.k9.notification.WearNotificationsTest" : [ "testBuildStackedNotification", "testBuildStackedNotificationWithArchiveActionEnabled", "testBuildStackedNotificationWithDeleteActionEnabled", "testBuildStackedNotificationWithMarkAsSpamActionEnabled" ]
      },
      "predecessor" : "b133fca87cd565515e85c9ab5e63956efb7cf835"
    },
    "8b2b6229829449abf8d627a1b53288a03b583870" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavStoreTest" : [ "getFolder_calledTwice_shouldReturnFirstInstance", "getFolder_shouldReturnWebDavFolderInstance", "getPersonalNamespaces_shouldProvideListOfAllFoldersSentFromResponses", "getPersonalNamespaces_shouldRequestFolderList", "getPersonalNamespaces_shouldRequestSpecialFolders", "getPersonalNamespaces_shouldSetSpecialFolderNames" ]
      },
      "predecessor" : "8b2b6229829449abf8d627a1b53288a03b583870~1"
    },
    "f1e91666933deebd78fdbe8ac10c734d7ddeee78" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withClosedFolder_shouldThrow", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "copyMessages_withClosedFolder_shouldThrow", "copyMessages_withEmptyMessageList_shouldReturnNull", "copyMessages_withoutDestinationFolderOfWrongType_shouldThrow", "create_withClosedFolder_shouldOpenConnectionAndIssueCreateCommand", "create_withNegativeImapResponse_shouldReturnFalse", "create_withoutNegativeImapResponse_shouldReturnTrue", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_notImplemented", "delete_shouldMoveMessagesToTrashFolder", "delete_withEmptyMessageList_shouldNotInteractWithImapConnection", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "exists_withClosedFolder_shouldOpenConnectionAndIssueStatusCommand", "exists_withNegativeImapResponse_shouldReturnFalse", "exists_withoutNegativeImapResponse_shouldReturnTrue", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEmptyMessageListArgument_shouldDoNothing", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withNullMessageListArgument_shouldDoNothing", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getFlaggedMessageCount_withClosedFolder_shouldThrow", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessageByUid_returnsNewImapMessageWithUidInFolder", "getMessagesFromUids", "getMessagesFromUids_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withClosedFolder_shouldThrow", "getMessages_withDateConstraint", "getMessages_withEndArgumentSmallerThanStartArgument_shouldThrow", "getMessages_withInvalidEndArgument_shouldThrow", "getMessages_withInvalidStartArgument_shouldThrow", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getNewPushState_withNewerUid_shouldReturnNewPushState", "getNewPushState_withoutNewerUid_shouldReturnNull", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUidFromMessageId_withoutMessageIdHeader_shouldReturnNull", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "getUnreadMessageCount_withClosedFolder_shouldThrow", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "moveMessages_withEmptyMessageList_shouldReturnNull", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "search_withRemoteSearchDisabled_shouldThrow", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapPusherTest" : [ "refresh_shouldCallRefreshOnStartedImapFolderPusher", "refresh_withImapFolderPusherThrowing_shouldNotThrow", "start_calledAfterStart_shouldStopFirstImapFolderPusher", "start_shouldSetLastRefreshToCurrentTime", "start_withSingleFolderName_shouldCreateImapFolderPusherAndCallStartOnIt", "start_withTwoFolderNames_shouldCreateTwoImapFolderPushersAndCallStart", "stop_afterStartWithSingleFolderName_shouldStopImapFolderPusher", "stop_withImapFolderPusherThrowing_shouldNotThrow", "stop_withoutStartBeingCalled_shouldNotCreateAnyImapFolderPushers" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "autoconfigureFolders_withoutSpecialUseCapability_shouldNotIssueImapCommand", "checkSettings_shouldCreateImapConnectionAndCallOpen", "checkSettings_withOpenThrowing_shouldThrowMessagingException", "getConnection_calledAfterReleaseWithAClosedConnection_shouldReturnNewImapConnectionInstance", "getConnection_calledAfterRelease_shouldReturnCachedImapConnection", "getConnection_calledTwiceWithoutRelease_shouldCreateTwoImapConnection", "getConnection_shouldCreateImapConnection", "getConnection_withDeadConnectionInPool_shouldReturnNewImapConnectionInstance", "getFolder_calledTwice_shouldReturnFirstInstance", "getFolder_shouldReturnImapFolderInstance", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withIoException_shouldCloseImapConnection", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ],
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3StoreTest" : [ "create_withHoldsFoldersArgument_shouldDoNothing", "create_withHoldsMessagesArgument_shouldDoNothing", "exists_withInbox_shouldReturnTrue", "exists_withNonInboxFolder_shouldReturnFalse", "getFlaggedMessageCount_shouldBeMinusOne", "getFolder_shouldReturnFolderWithCorrectName", "getFolder_shouldReturnSameFolderEachTime", "getPersonalNamespace_shouldReturnListConsistingOfInbox", "getUnreadMessageCount_shouldBeMinusOne", "isSeenFlagSupported_shouldReturnFalse", "open_withAuthResponseUsingAuthPlain_shouldRetrieveMessageCountOnAuthenticatedSocket", "open_withFailedAuth_shouldThrow", "open_withoutInboxFolder_shouldThrow" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavMessageTest" : [ "delete_asks_folder_to_delete_message", "setFlag_asks_folder_to_set_flag", "setNewHeaders_updates_size", "setUrl_tests" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavStoreTest" : [ "checkSettings_shouldRegisterHttpsSchemeWithRegistry", "checkSettings_withErrorResponse_shouldThrow", "checkSettings_withHttpPrefixedServerName_shouldUseInsecureConnection", "checkSettings_withInitialUnauthorizedResponse_shouldPerformBasicAuthentication", "checkSettings_withOkResponse_shouldPerformFormBasedAuthentication", "checkSettings_withSslException_shouldThrowCertificateValidationException", "checkSettings_withUnauthorizedResponses_shouldThrow", "checkSettings_withWebDavSslUri_shouldUseSecureConnection", "checkSettings_withWebDavTlsUri_shouldUseSecureConnection", "checkSettings_withWebDavUri_shouldUseInsecureConnection", "constructor_withImapStoreUri_shouldThrow", "getFolder_calledTwice_shouldReturnFirstInstance", "getFolder_shouldReturnWebDavFolderInstance", "getPersonalNamespaces_shouldProvideListOfAllFoldersSentFromResponses", "getPersonalNamespaces_shouldRequestFolderList", "getPersonalNamespaces_shouldRequestSpecialFolders", "getPersonalNamespaces_shouldSetSpecialFolderNames" ],
        "k9mail§com.fsck.k9.activity.MessageReferenceTest" : [ "alternativeEquals", "checkIdentityStringFromMessageReferenceWithFlag", "checkIdentityStringFromMessageReferenceWithoutFlag", "checkMessageReferenceWithChangedFlag", "checkMessageReferenceWithChangedUid", "constructor_withNullAccount_shouldThrow", "constructor_withNullFolder_shouldThrow", "constructor_withNullUid_shouldThrow", "equalsWithAnObjectShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentAccountUuidShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentFolderNameShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentUidShouldReturnFalse", "equalsWithMessageReferenceContainingSameDataShouldReturnTrue", "equalsWithNullShouldReturnFalse", "equalsWithSameMessageReferenceShouldReturnTrue", "equals_withNullAccount_shouldReturnFalse", "equals_withNullFolder_shouldReturnFalse", "equals_withNullUid_shouldReturnFalse", "parseIdentityStringContainingBadVersionNumber", "parseIdentityStringWithCorruptFlag", "parseIdentityStringWithFlag", "parseIdentityStringWithoutFlag", "parseNullIdentityString" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldAddErrorMessageInDebug", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withBadDatabase_shouldThrowInDebugBuild", "doDbUpgrade_withEmptyDatabase_shouldSetsDatabaseVersion", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion", "getVersion_shouldReturnCurrentDatabaseVersion" ],
        "k9mail§com.fsck.k9.notification.NewMailNotificationsTest" : [ "testRemoveNewMailNotification", "testRemoveNewMailNotificationClearingAllNotifications", "testRemoveNewMailNotificationWithCreateNotification", "testRemoveNewMailNotificationWithUnknownMessageReference", "testRemoveNewMailNotificationWithoutNotificationData" ],
        "k9mail§com.fsck.k9.notification.NotificationContentCreatorTest" : [ "createFromMessage_withEncryptedMessage", "createFromMessage_withErrorPreview", "createFromMessage_withMessageFromSelf", "createFromMessage_withRegularMessage", "createFromMessage_withStarredMessage", "createFromMessage_withoutEmptyMessage", "createFromMessage_withoutPreview", "createFromMessage_withoutSender", "createFromMessage_withoutSubject" ],
        "k9mail§com.fsck.k9.notification.NotificationDataTest" : [ "testAddNotificationContent", "testAddNotificationContentWithReplacingNotification", "testContainsStarredMessages", "testContainsStarredMessagesWithAdditionalMessages", "testGetActiveNotificationIds", "testGetAllMessageReferences", "testGetContentForSummaryNotification", "testGetHolderForLatestNotification", "testIsSingleMessageNotification", "testNewMessagesCount", "testOverflowNotifications", "testRemoveDoesNotLeakNotificationIds", "testRemoveNotificationForMessage", "testRemoveNotificationForMessageWithRecreatingNotification", "testUnreadMessagesCount" ],
        "k9mail§com.fsck.k9.notification.SyncNotificationsTest" : [ "testGetFetchingMailNotificationId", "testShowSendingNotification" ],
        "k9mail§com.fsck.k9.notification.WearNotificationsTest" : [ "testAddSummaryActions", "testAddSummaryActionsWithArchiveAllActionEnabled", "testAddSummaryActionsWithDeleteAllActionEnabled", "testBuildStackedNotification", "testBuildStackedNotificationWithArchiveActionEnabled", "testBuildStackedNotificationWithDeleteActionEnabled", "testBuildStackedNotificationWithMarkAsSpamActionEnabled" ]
      },
      "predecessor" : "f1e91666933deebd78fdbe8ac10c734d7ddeee78~1"
    },
    "c1965da3ab01d6f60a70bd3c50d28c38c9a7ddfb" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList" ]
      },
      "predecessor" : "c1965da3ab01d6f60a70bd3c50d28c38c9a7ddfb~1"
    },
    "2a811b6b6598cd8855d93838a91d22a13085efec" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3StoreTest" : [ "create_withHoldsFoldersArgument_shouldDoNothing", "create_withHoldsMessagesArgument_shouldDoNothing", "exists_withInbox_shouldReturnTrue", "exists_withNonInboxFolder_shouldReturnFalse", "getFlaggedMessageCount_shouldBeMinusOne", "getFolder_shouldReturnFolderWithCorrectName", "getFolder_shouldReturnSameFolderEachTime", "getPersonalNamespace_shouldReturnListConsistingOfInbox", "getUnreadMessageCount_shouldBeMinusOne", "isSeenFlagSupported_shouldReturnFalse" ]
      },
      "predecessor" : "2a811b6b6598cd8855d93838a91d22a13085efec~1"
    },
    "371bdbe8bba5b81f55df5d9c88c9908af4484b67" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3StoreTest" : [ "getFolder_shouldReturnFolderWithCorrectName", "getFolder_shouldReturnSameFolderEachTime", "getPersonalNamespace_shouldReturnListConsistingOfInbox", "open_withAuthResponseUsingAuthPlain_shouldRetrieveMessageCountOnAuthenticatedSocket", "open_withFailedAuth_shouldThrow" ]
      },
      "predecessor" : "371bdbe8bba5b81f55df5d9c88c9908af4484b67~1"
    },
    "d9960958d8e709dd666f4dc041cd82985bbdc43b" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3FolderTest" : [ "close_onNonOpenedFolder_succeeds", "close_onOpenedFolder_closesConnection", "close_onOpenedFolder_sendsQUIT", "close_onOpenedFolder_succeeds", "close_withExceptionQuiting_ignoresException", "create_withHoldsFoldersArgument_shouldDoNothing", "create_withHoldsMessagesArgument_shouldDoNothing", "exists_withInbox_shouldReturnTrue", "exists_withNonInboxFolder_shouldReturnFalse", "getFlaggedMessageCount_shouldBeMinusOne", "getMode_withFolderOpenedInRO_isRW", "getUnreadMessageCount_shouldBeMinusOne", "open_withInboxFolderWithExceptionCreatingConnection_shouldThrow", "open_withInboxFolder_shouldSetMessageCountFromStatResponse", "open_withInboxFolder_whenStatCommandFails_shouldThrow", "open_withoutInboxFolder_shouldNotTryAndCreateConnection", "open_withoutInboxFolder_shouldThrow" ]
      },
      "predecessor" : "d9960958d8e709dd666f4dc041cd82985bbdc43b~1"
    },
    "6320d2e285f6d92e21466482946c446456f05e85" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3StoreTest" : [ "checkSetting_whenConnectionThrowsException_shouldThrowMessagingException", "checkSetting_whenUidlSupported_shouldReturn", "checkSetting_whenUidlUnsupported_shouldThrowMessagingException", "open_withAuthResponseUsingAuthPlain_shouldRetrieveMessageCountOnAuthenticatedSocket", "open_withFailedAuth_shouldThrow" ]
      },
      "predecessor" : "6320d2e285f6d92e21466482946c446456f05e85~1"
    },
    "270af8b9c906a1cad9ff4d439471db96e4d19721" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3ConnectionTest" : [ "whenSocketNotConnected_throwsMessagingException", "whenTrustedSocketFactoryThrowsCertificateException_throwMessagingException", "whenTrustedSocketFactoryThrowsGeneralSecurityException_throwMessagingException", "whenTrustedSocketFactoryThrowsIOException_throwMessagingException", "whenTrustedSocketFactoryThrowsSSLCertificateException_throwCertificateValidationException", "withAuthTypePlainAndNoPlainAuthCapability_performsLogin", "withAuthTypePlainAndPlainAuthCapabilityAndInvalidPasswordResponse_throwsException", "withAuthTypePlainAndPlainAuthCapability_performsPlainAuth" ],
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3StoreTest" : [ "checkSetting_whenConnectionThrowsException_shouldThrowMessagingException", "checkSetting_whenUidlSupported_shouldReturn", "checkSetting_whenUidlUnsupported_shouldThrowMessagingException", "open_withAuthResponseUsingAuthPlain_shouldRetrieveMessageCountOnAuthenticatedSocket", "open_withFailedAuth_shouldThrow" ]
      },
      "predecessor" : "6320d2e285f6d92e21466482946c446456f05e85"
    },
    "4360112e87ab7c278eb26172e58fb728dfbce6cf" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withClosedFolder_shouldThrow", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "copyMessages_withClosedFolder_shouldThrow", "create_withClosedFolder_shouldOpenConnectionAndIssueCreateCommand", "create_withNegativeImapResponse_shouldReturnFalse", "create_withoutNegativeImapResponse_shouldReturnTrue", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "exists_withClosedFolder_shouldOpenConnectionAndIssueStatusCommand", "exists_withNegativeImapResponse_shouldReturnFalse", "exists_withoutNegativeImapResponse_shouldReturnTrue", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getFlaggedMessageCount_withClosedFolder_shouldThrow", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessagesFromUids_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withClosedFolder_shouldThrow", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "getUnreadMessageCount_withClosedFolder_shouldThrow", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withIoException_shouldCloseImapConnection", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ]
      },
      "predecessor" : "4360112e87ab7c278eb26172e58fb728dfbce6cf~1"
    },
    "d28a7715549eeae2a2d4cac8f10a7d30238ea603" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3FolderTest" : [ "close_onNonOpenedFolder_succeeds", "close_onOpenedFolder_closesConnection", "close_onOpenedFolder_sendsQUIT", "close_onOpenedFolder_succeeds", "close_withExceptionQuiting_ignoresException", "create_withHoldsFoldersArgument_shouldDoNothing", "create_withHoldsMessagesArgument_shouldDoNothing", "exists_withInbox_shouldReturnTrue", "exists_withNonInboxFolder_shouldReturnFalse", "fetch_withBodyProfile_setsContentOfMessage", "fetch_withEnvelopeProfile_setsSizeOfMessage", "getFlaggedMessageCount_shouldBeMinusOne", "getMessage_withNoPreviouslyFetchedMessage_returnsNewMessage", "getMessage_withPreviouslyFetchedMessage_returnsMessage", "getMessages_returnsListOfMessagesOnServer", "getMessages_withIOExceptionReadingLine_throwsException", "getMessages_withInvalidSet_throwsException", "getMode_withFolderOpenedInRO_isRW", "getUnreadMessageCount_shouldBeMinusOne", "open_whenAlreadyOpenWithValidConnection_doesNotCreateAnotherConnection", "open_withInboxFolderWithExceptionCreatingConnection_shouldThrow", "open_withInboxFolder_shouldSetMessageCountFromStatResponse", "open_withInboxFolder_whenStatCommandFails_shouldThrow", "open_withoutInboxFolder_shouldNotTryAndCreateConnection", "open_withoutInboxFolder_shouldThrow" ],
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3StoreTest" : [ "checkSetting_whenConnectionThrowsException_shouldThrowMessagingException", "checkSetting_whenUidlSupported_shouldReturn", "checkSetting_whenUidlUnsupported_shouldThrowMessagingException", "getFolder_shouldReturnFolderWithCorrectName", "getFolder_shouldReturnSameFolderEachTime", "getPersonalNamespace_shouldReturnListConsistingOfInbox", "open_withAuthResponseUsingAuthPlain_shouldRetrieveMessageCountOnAuthenticatedSocket", "open_withFailedAuth_shouldThrow" ]
      },
      "predecessor" : "d28a7715549eeae2a2d4cac8f10a7d30238ea603~1"
    },
    "c8accce750bcd12fb21874fc997f1542b29f3fd3" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavStoreTest" : [ "getFolder_calledTwice_shouldReturnFirstInstance", "getFolder_shouldReturnWebDavFolderInstance", "getPersonalNamespaces_shouldProvideListOfAllFoldersSentFromResponses", "getPersonalNamespaces_shouldRequestFolderList", "getPersonalNamespaces_shouldRequestSpecialFolders", "getPersonalNamespaces_shouldSetSpecialFolderNames" ]
      },
      "predecessor" : "c8accce750bcd12fb21874fc997f1542b29f3fd3~1"
    },
    "61238a33db96fdcefd4dcf7fba6be13fe4268bfd" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavStoreTest" : [ "getPersonalNamespaces_shouldProvideListOfAllFoldersSentFromResponses", "getPersonalNamespaces_shouldRequestFolderList", "getPersonalNamespaces_shouldRequestSpecialFolders", "getPersonalNamespaces_shouldSetSpecialFolderNames" ]
      },
      "predecessor" : "61238a33db96fdcefd4dcf7fba6be13fe4268bfd~1"
    },
    "bf176e56a83e01b0b17dbf58b8ca46b9dde6350a" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.ActivityListenerTest" : [ "getOperation__whenFolderStatusChanged", "getOperation__whenSynchronizeMailboxFailedAfterHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFailed_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFinished", "getOperation__whenSynchronizeMailboxHeadersFinished", "getOperation__whenSynchronizeMailboxHeadersProgress", "getOperation__whenSynchronizeMailboxHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxNewMessage", "getOperation__whenSynchronizeMailboxProgress_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxStarted" ],
        "k9mail§com.fsck.k9.activity.MessageReferenceTest" : [ "alternativeEquals", "equalsWithMessageReferenceContainingDifferentAccountUuidShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentFolderNameShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentUidShouldReturnFalse", "equalsWithMessageReferenceContainingSameDataShouldReturnTrue", "equalsWithSameMessageReferenceShouldReturnTrue", "equals_withNullAccount_shouldReturnFalse", "equals_withNullFolder_shouldReturnFalse", "equals_withNullUid_shouldReturnFalse" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldAddErrorMessageInDebug", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.notification.NotificationContentCreatorTest" : [ "createFromMessage_withRegularMessage" ],
        "k9mail§com.fsck.k9.notification.NotificationDataTest" : [ "testGetAllMessageReferences", "testRemoveDoesNotLeakNotificationIds", "testRemoveNotificationForMessage", "testRemoveNotificationForMessageWithRecreatingNotification" ]
      },
      "predecessor" : "61238a33db96fdcefd4dcf7fba6be13fe4268bfd"
    },
    "4fbc23061e53d02c22bc090330346b6771bfa9bd" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withEmptyDatabase_shouldSetsDatabaseVersion", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ]
      },
      "predecessor" : "e31fb7f9e05bc78fa92d1dfcd8c7f1caa5e75a8f"
    },
    "56642058129169955df6893b06548eecc5746ff6" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3CapabilitiesTest" : [ "toString_producesReadableOutput" ]
      },
      "predecessor" : "56642058129169955df6893b06548eecc5746ff6~1"
    },
    "2dcbedb8d047bb1941fb45f17d8afa0662c355bf" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "autoconfigureFolders_withoutSpecialUseCapability_shouldNotIssueImapCommand", "checkSettings_shouldCreateImapConnectionAndCallOpen", "checkSettings_withOpenThrowing_shouldThrowMessagingException", "getConnection_calledAfterReleaseWithAClosedConnection_shouldReturnNewImapConnectionInstance", "getConnection_calledAfterRelease_shouldReturnCachedImapConnection", "getConnection_calledTwiceWithoutRelease_shouldCreateTwoImapConnection", "getConnection_shouldCreateImapConnection", "getConnection_withDeadConnectionInPool_shouldReturnNewImapConnectionInstance", "getFolder_calledTwice_shouldReturnFirstInstance", "getFolder_shouldReturnImapFolderInstance", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withIoException_shouldCloseImapConnection", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ]
      },
      "predecessor" : "2dcbedb8d047bb1941fb45f17d8afa0662c355bf~1"
    },
    "895e85dadbcc759220d05349501749d710e34b0e" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ]
      },
      "predecessor" : "895e85dadbcc759220d05349501749d710e34b0e~1"
    },
    "ab231119bf9dcf12cd76a75a50c5b5d1a7afb122" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.autoconfiguration.AutodiscoverTest" : [ "test", "testDomainRequiredAndCustomLoginNameAndDomainName", "testMalformedXml", "testProtocolPreference", "testSocketTypeAndDefaultPort", "testUnusualPorts" ],
        "k9mail-library§com.fsck.k9.mail.autoconfiguration.SRVTest" : [ "testRecordsWithOnlyADot", "testUnusualPorts", "testWeightSelection" ]
      },
      "predecessor" : "ab231119bf9dcf12cd76a75a50c5b5d1a7afb122~1"
    },
    "1abae13a7601d748256f5522a9f0b4e3b3c32213" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.setup.AccountSetupPresenterTest" : [ "testGetStatus", "testOnCertificatedRefused_incoming", "testOnCertificatedRefused_outgoing", "testOnImapOrPop3Selected", "testOnInputChangeInBasics_withInvalidEmail", "testOnInputChangeInBasics_withValidEmailAndPassword", "testOnInputChangeInIncoming_imap_updatePortFromSecurity", "testOnInputChangeInIncoming_pop3_updatePortFromSecurity", "testOnInputChangeInOutgoing_updatePortFromSecurity", "testOnInputChangedInIncoming_withCertificate", "testOnInputChangedInIncoming_withIllegalInput", "testOnInputChangedInIncoming_withIncompleteServer", "testOnInputChangedInIncoming_withInvalidPassword", "testOnInputChangedInIncoming_withInvalidPort", "testOnInputChangedInIncoming_withPassword", "testOnInputChangedInIncoming_withValidInput", "testOnInputChangedInOutgoing_withCertificate", "testOnInputChangedInOutgoing_withCertificateChanged", "testOnInputChangedInOutgoing_withIncompleteServer", "testOnInputChangedInOutgoing_withInvalidPassword", "testOnInputChangedInOutgoing_withInvalidPort", "testOnInputChangedInOutgoing_withNotRequiredLogin", "testOnInputChangedInOutgoing_withPassword", "testOnInputChangedInOutgoing_withSecurityChanged", "testOnNegativeClickedInConfirmationDialog_editSettings", "testOnNegativeClickedInConfirmationDialog_incoming", "testOnNegativeClickedInConfirmationDialog_outgoing", "testOnNextButtonInBasicViewClicked", "testOnWebdavSelected", "testUpdateViewFromAuthType_outgoing" ]
      },
      "predecessor" : "1abae13a7601d748256f5522a9f0b4e3b3c32213~1"
    },
    "e7e805ccef97e0d323137ffba6e7689465d66384" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "open_withAuthExternalExtension", "open_withAuthLoginExtension", "open_withAuthPlainExtension", "open_withAutomaticAuthAndNoTransportSecurityAndAuthCramMd5Extension_shouldUseAuthCramMd5", "open_withAutomaticAuthAndNoTransportSecurityAndAuthPlainExtension_shouldThrow", "open_withCramMd5AuthExtension", "open_withEhloFailing_shouldTryHelo", "open_withManyExtensions_shouldParseAll", "open_withSupportWithEnhancedStatusCodesOnAuthFailure_shouldThrowEncodedMessage", "open_withXoauth2Extension", "open_withXoauth2Extension_shouldInvalidateAndRetryOn400Response", "open_withXoauth2Extension_shouldInvalidateAndRetryOnInvalidJsonResponse", "open_withXoauth2Extension_shouldInvalidateAndRetryOnMissingStatusJsonResponse", "open_withXoauth2Extension_shouldThrowOn401Response", "open_withXoauth2Extension_shouldThrowOnFailure_fetchingToken", "open_withXoauth2Extension_shouldThrowOnMultipleFailure", "open_withoutAuthExternalExtension_shouldThrow", "open_withoutAuthLoginExtension_shouldConnectWithoutAuthentication", "open_withoutCramMd5AuthExtension_shouldThrow", "open_withoutXoauth2Extension_shouldThrow", "sendMessage_with8BitEncoding", "sendMessage_with8BitEncodingExtensionNotCaseSensitive", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withSingleRecipient" ]
      },
      "predecessor" : "e7e805ccef97e0d323137ffba6e7689465d66384~1"
    },
    "f785a5f6eba6829d2eccff3b771441dfb1e7e0d5" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.CapabilityResponseTest" : [ "parse_withCapabilityResponseInResponseList", "parse_withListInCapabilityResponse_shouldReturnNull", "parse_withOkResponseWithoutList_shouldReturnNull", "parse_withProperCapabilityResponse", "parse_withProperResponseContainingCapabilityCode", "parse_withSingleCapabilityResponseInResponseList", "parse_withTaggedResponse_shouldReturnNull", "parse_withoutCapabilityResponseInResponseList_shouldReturnNull", "parse_withoutCapabilityResponse_shouldReturnNull", "parse_withoutOkResponse_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.CopyUidResponseTest" : [ "parse_withCopyUidResponse_shouldCreateUidMapping", "parse_withNonNumberCopyUidArguments_shouldReturnNull", "parse_withNonStringCopyUidArgumentOne_shouldReturnNull", "parse_withNonStringCopyUidArgumentThree_shouldReturnNull", "parse_withNonStringCopyUidArgumentTwo_shouldReturnNull", "parse_withResponseTextListTooShort_shouldReturnNull", "parse_withUnbalancedCopyUidArguments_shouldReturnNull", "parse_withoutCopyUidResponse_shouldReturnNull", "parse_withoutOkResponse_shouldReturnNull", "parse_withoutResponseTextList_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlainWithLoginDisabled_shouldThrow", "open_withConnectionError_shouldThrow", "open_withInvalidHostname_shouldThrow", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessageByUid_returnsNewImapMessageWithUidInFolder", "getMessages_withEndArgumentSmallerThanStartArgument_shouldThrow", "getMessages_withInvalidEndArgument_shouldThrow", "getMessages_withInvalidStartArgument_shouldThrow", "getNewPushState_withNewerUid_shouldReturnNewPushState", "getNewPushState_withoutNewerUid_shouldReturnNull", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withRemoteSearchDisabled_shouldThrow", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapResponseParserTest" : [ "readResponseShouldReadWholeListResponseLine", "readResponse_withCallbackThatThrowsRepeatedly_shouldConsumeAllInputAndThrowFirstException", "readResponse_withListResponseContainingNil", "readResponse_withPartlyConsumingCallbackThatThrows_shouldReadAllDataAndThrow", "readStatusResponse_withNoResponseAndAlertText_shouldThrowWithAlertText", "readStatusResponse_withNoResponse_shouldThrow", "testExistsResponse", "testFetchResponse", "testListResponseContainingFolderNameContainingBracketsThrowsException", "testListResponseContainingFolderNameWithBrackets", "testParseLiteral", "testParseLiteralWithConsumingCallbackReturningNull", "testParseLiteralWithEmptyString", "testParseLiteralWithIncompleteConsumingCallbackReturningString", "testParseLiteralWithNonConsumingCallbackReturningNull", "testParseLiteralWithThrowingCallback", "testParseQuoted", "testReadStatusResponseSkippingWrongTag", "testReadStatusResponseUntaggedHandlerGetsUntaggedOnly", "testReadStatusResponseUntaggedHandlerStillCalledOnNegativeReply", "testReadStatusResponseWithErrorResponse", "testReadStatusResponseWithOKResponse" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.SearchResponseTest" : [ "parse_withSearchResponseContainingInvalidNumber_shouldReturnEmptyList", "parse_withSearchResponse_shouldExtractNumbers", "parse_withTaggedSearchResponse_shouldReturnEmptyList", "parse_withTooShortResponse_shouldReturnEmptyList", "parse_withoutSearchResponse_shouldReturnEmptyList" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.SelectOrExamineResponseTest" : [ "getOpenMode_withoutResponseCode_shouldThrow", "parse_withExamineResponse_shouldReturnOpenModeReadOnly", "parse_withInvalidResponseText_shouldReturnHasOpenModeFalse", "parse_withSelectResponse_shouldReturnOpenModeReadWrite", "parse_withUnknownResponseText_shouldReturnHasOpenModeFalse", "parse_withoutOkResponse_shouldReturnNull", "parse_withoutResponseCode_shouldReturnHasOpenModeFalse" ]
      },
      "predecessor" : "f785a5f6eba6829d2eccff3b771441dfb1e7e0d5~1"
    },
    "f78920e9caf0b8a89f654bb01bc7d3c8da5491a1" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEmptyMessageListArgument_shouldDoNothing", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withNullMessageListArgument_shouldDoNothing", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException" ]
      },
      "predecessor" : "f78920e9caf0b8a89f654bb01bc7d3c8da5491a1~1"
    },
    "c9205d2db09386645107a16c8bb459e675bd0d79" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "copyMessages_withClosedFolder_shouldThrow", "copyMessages_withEmptyMessageList_shouldReturnNull", "copyMessages_withoutDestinationFolderOfWrongType_shouldThrow", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEmptyMessageListArgument_shouldDoNothing", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withNullMessageListArgument_shouldDoNothing", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getFlaggedMessageCount_withClosedFolder_shouldThrow", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessagesFromUids_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withClosedFolder_shouldThrow", "getMessages_withDateConstraint", "getMessages_withEndArgumentSmallerThanStartArgument_shouldThrow", "getMessages_withInvalidEndArgument_shouldThrow", "getMessages_withInvalidStartArgument_shouldThrow", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getNewPushState_withoutNewerUid_shouldReturnNull", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUidFromMessageId_withoutMessageIdHeader_shouldReturnNull", "getUnreadMessageCount_withClosedFolder_shouldThrow", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "search_withRemoteSearchDisabled_shouldThrow", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.selectedstate.command.SelectedStateCommandTest" : [ "executeInternal_withAllIds_shouldCreateProperCommand", "executeInternal_withManyNonContiguousIds_shouldSplitCommand", "executeInternal_withOnlyHighestId_shouldCreateProperCommand" ]
      },
      "predecessor" : "c9205d2db09386645107a16c8bb459e675bd0d79~1"
    },
    "e936b53bde26ffd10f83bbf921800387dce64799" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_withV29" ]
      },
      "predecessor" : "524d8bac6355778166f2ad06188f02db5ae2c1bb"
    },
    "43df70757306dbbe65d50766c092f15e2daa141a" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.FolderInfoHolderTest" : [ "getDisplayName_forInboxFolderAlternativeCase_returnsInbox", "getDisplayName_forInboxFolder_returnsInbox", "getDisplayName_forOutboxFolder_returnsOutbox", "getDisplayName_forSpamFolder_returnsNameSpam", "getDisplayName_forUnknownFolder_returnsName" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ]
      },
      "predecessor" : "e936b53bde26ffd10f83bbf921800387dce64799"
    },
    "4d76277a92fb75bd542716106acd41cf996686b4" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "getFolder_calledTwice_shouldReturnFirstInstance", "getFolder_shouldReturnImapFolderInstance", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withIoException_shouldCloseImapConnection", "getPersonalNamespaces_withPathPrefix", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ],
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3StoreTest" : [ "getPersonalNamespace_shouldReturnListConsistingOfInbox" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavStoreTest" : [ "getPersonalNamespaces_shouldProvideListOfAllFoldersSentFromResponses", "getPersonalNamespaces_shouldRequestFolderList", "getPersonalNamespaces_shouldRequestSpecialFolders", "getPersonalNamespaces_shouldSetSpecialFolderNames" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldAddErrorMessageInDebug", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withEmptyDatabase_shouldSetsDatabaseVersion", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ]
      },
      "predecessor" : "43df70757306dbbe65d50766c092f15e2daa141a"
    },
    "a13d30dea6b9f7aa66dafcfe578ef6c3be251325" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.ActivityListenerTest" : [ "getOperation__whenFolderStatusChanged", "getOperation__whenSynchronizeMailboxFailedAfterHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFailed_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFinished", "getOperation__whenSynchronizeMailboxHeadersFinished", "getOperation__whenSynchronizeMailboxHeadersProgress", "getOperation__whenSynchronizeMailboxHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxNewMessage", "getOperation__whenSynchronizeMailboxProgress_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxStarted" ],
        "k9mail§com.fsck.k9.activity.MessageReferenceTest" : [ "alternativeEquals", "checkIdentityStringFromMessageReferenceWithFlag", "checkIdentityStringFromMessageReferenceWithoutFlag", "checkMessageReferenceWithChangedFlag", "checkMessageReferenceWithChangedUid", "constructor_withNullAccount_shouldThrow", "constructor_withNullFolder_shouldThrow", "constructor_withNullUid_shouldThrow", "equalsWithAnObjectShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentAccountUuidShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentFolderNameShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentUidShouldReturnFalse", "equalsWithMessageReferenceContainingSameDataShouldReturnTrue", "equalsWithNullShouldReturnFalse", "equalsWithSameMessageReferenceShouldReturnTrue", "equals_withNullAccount_shouldReturnFalse", "equals_withNullFolder_shouldReturnFalse", "equals_withNullUid_shouldReturnFalse", "parseIdentityStringContainingBadVersionNumber", "parseIdentityStringWithCorruptFlag", "parseIdentityStringWithFlag", "parseIdentityStringWithoutFlag", "parseNullIdentityString" ],
        "k9mail§com.fsck.k9.activity.compose.RecipientPresenterTest" : [ "getCurrentCryptoStatus_withoutCryptoProvider", "initFromReplyToMessage_shouldCallComposePgpInlineDecider", "onBccTokenAdded_notifiesListenerOfRecipientChange", "onBccTokenChanged_notifiesListenerOfRecipientChange", "onBccTokenRemoved_notifiesListenerOfRecipientChange", "onCcTokenAdded_notifiesListenerOfRecipientChange", "onCcTokenChanged_notifiesListenerOfRecipientChange", "onCcTokenRemoved_notifiesListenerOfRecipientChange", "onToTokenAdded_notifiesListenerOfRecipientChange", "onToTokenChanged_notifiesListenerOfRecipientChange", "onToTokenRemoved_notifiesListenerOfRecipientChange" ],
        "k9mail§com.fsck.k9.cache.EmailProviderCacheTest" : [ "getCache_returnsDifferentCacheForEachUUID", "getCache_returnsSameCacheForAUUID", "getValueForMessage_returnsValueSetForMessage", "getValueForThread_returnsValueSetForThread", "getValueForUnknownMessage_returnsNull", "getValueForUnknownMessage_returnsNullWhenRemoved", "getValueForUnknownThread_returnsNull", "getValueForUnknownThread_returnsNullWhenRemoved", "isMessageHidden_returnsFalseForUnhidenMessage", "isMessageHidden_returnsFalseForUnknownMessage", "isMessageHidden_returnsTrueForHiddenMessage" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldAddErrorMessageInDebug", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.helper.IdentityHelperTest" : [ "testDeliveredTo", "testTo_withoutXOriginalTo", "testXEnvelopeTo", "testXEnvelopeTo_withXOriginalTo", "testXOriginalTo" ],
        "k9mail§com.fsck.k9.helper.MessageHelperTest" : [ "testToFriendlyArray", "testToFriendlyShowsEmailPartIfNoPersonalPartExists", "testToFriendlyShowsPersonalPartIfItExists", "testToFriendlyWithContactLookup" ],
        "k9mail§com.fsck.k9.mailstore.LocalStoreTest" : [ "findPartById__withNestedLocalBodyPart", "findPartById__withNestedLocalMessagePart", "findPartById__withRootLocalBodyPart", "findPartById__withRootLocalMessage", "findPartById__withTwoTimesNestedLocalMessagePart" ],
        "k9mail§com.fsck.k9.mailstore.MigrationTest" : [ "migrateHtmlWithRelatedMessage", "migrateMixedWithAttachments", "migratePgpInlineClearsignedMessage", "migratePgpInlineEncryptedMessage", "migratePgpMimeEncryptedMessage", "migratePgpMimeSignedMessage", "migrateTextHtml", "migrateTextPlain" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withBadDatabase_shouldThrowInDebugBuild", "doDbUpgrade_withEmptyDatabase_shouldSetsDatabaseVersion", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion", "getVersion_shouldReturnCurrentDatabaseVersion" ],
        "k9mail§com.fsck.k9.message.extractors.AttachmentInfoExtractorTest" : [ "extractInfo__fromLocalBodyPart__shouldReturnProvidedValues", "extractInfo__withDeferredFileBody", "extractInfo__withGenericPart_shouldThrow" ],
        "k9mail§com.fsck.k9.notification.BaseNotificationsTest" : [ "testIsDeleteActionEnabled_NotificationQuickDelete_ALWAYS", "testIsDeleteActionEnabled_NotificationQuickDelete_FOR_SINGLE_MSG", "testIsDeleteActionEnabled_NotificationQuickDelete_NEVER" ],
        "k9mail§com.fsck.k9.notification.NewMailNotificationsTest" : [ "testRemoveNewMailNotification", "testRemoveNewMailNotificationClearingAllNotifications", "testRemoveNewMailNotificationWithCreateNotification", "testRemoveNewMailNotificationWithUnknownMessageReference", "testRemoveNewMailNotificationWithoutNotificationData" ],
        "k9mail§com.fsck.k9.notification.NotificationContentCreatorTest" : [ "createFromMessage_withEncryptedMessage", "createFromMessage_withErrorPreview", "createFromMessage_withMessageFromSelf", "createFromMessage_withRegularMessage", "createFromMessage_withStarredMessage", "createFromMessage_withoutEmptyMessage", "createFromMessage_withoutPreview", "createFromMessage_withoutSender", "createFromMessage_withoutSubject" ],
        "k9mail§com.fsck.k9.notification.NotificationDataTest" : [ "testAddNotificationContent", "testAddNotificationContentWithReplacingNotification", "testContainsStarredMessages", "testContainsStarredMessagesWithAdditionalMessages", "testGetActiveNotificationIds", "testGetAllMessageReferences", "testGetContentForSummaryNotification", "testGetHolderForLatestNotification", "testIsSingleMessageNotification", "testNewMessagesCount", "testOverflowNotifications", "testRemoveDoesNotLeakNotificationIds", "testRemoveNotificationForMessage", "testRemoveNotificationForMessageWithRecreatingNotification", "testUnreadMessagesCount" ],
        "k9mail§com.fsck.k9.notification.SyncNotificationsTest" : [ "testGetFetchingMailNotificationId", "testShowSendingNotification" ],
        "k9mail§com.fsck.k9.notification.WearNotificationsTest" : [ "testAddSummaryActions", "testAddSummaryActionsWithArchiveAllActionEnabled", "testAddSummaryActionsWithDeleteAllActionEnabled", "testBuildStackedNotification", "testBuildStackedNotificationWithArchiveActionEnabled", "testBuildStackedNotificationWithDeleteActionEnabled", "testBuildStackedNotificationWithMarkAsSpamActionEnabled" ],
        "k9mail§com.fsck.k9.preferences.SettingsImporterTest" : [ "importSettings_disablesAccountsNeedingPasswords" ]
      },
      "predecessor" : "4d76277a92fb75bd542716106acd41cf996686b4"
    },
    "601f676bb7c423c43c3cd209d47afbe5207a1c00" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testTextPlusRfc822Message" ]
      },
      "predecessor" : "601f676bb7c423c43c3cd209d47afbe5207a1c00~1"
    },
    "98db584720bacf4b1b51adc91ca6fa94840cea01" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testTextPlusRfc822Message" ]
      },
      "predecessor" : "601f676bb7c423c43c3cd209d47afbe5207a1c00"
    },
    "dd35e551a9e46df74f7e41a2424410ba87b749d0" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "fetch_withEmptyMessageListArgument_shouldDoNothing", "fetch_withNullMessageListArgument_shouldDoNothing" ]
      },
      "predecessor" : "bd4d316224720126d75f20de70dedfd7f0d9f394"
    },
    "f8d3fc7de5f62bba4cc3a8db4c2d91bc85466aa5" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withClosedFolder_shouldThrow", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "copyMessages_withClosedFolder_shouldThrow", "copyMessages_withEmptyMessageList_shouldReturnNull", "copyMessages_withoutDestinationFolderOfWrongType_shouldThrow", "create_withClosedFolder_shouldOpenConnectionAndIssueCreateCommand", "create_withNegativeImapResponse_shouldReturnFalse", "create_withoutNegativeImapResponse_shouldReturnTrue", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_notImplemented", "delete_shouldMoveMessagesToTrashFolder", "delete_withEmptyMessageList_shouldNotInteractWithImapConnection", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "exists_withClosedFolder_shouldOpenConnectionAndIssueStatusCommand", "exists_withNegativeImapResponse_shouldReturnFalse", "exists_withoutNegativeImapResponse_shouldReturnTrue", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEmptyMessageListArgument_shouldDoNothing", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withNullMessageListArgument_shouldDoNothing", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getFlaggedMessageCount_withClosedFolder_shouldThrow", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessageByUid_returnsNewImapMessageWithUidInFolder", "getMessagesFromUids", "getMessagesFromUids_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withClosedFolder_shouldThrow", "getMessages_withDateConstraint", "getMessages_withEndArgumentSmallerThanStartArgument_shouldThrow", "getMessages_withInvalidEndArgument_shouldThrow", "getMessages_withInvalidStartArgument_shouldThrow", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getNewPushState_withNewerUid_shouldReturnNewPushState", "getNewPushState_withoutNewerUid_shouldReturnNull", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUidFromMessageId_withoutMessageIdHeader_shouldReturnNull", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "getUnreadMessageCount_withClosedFolder_shouldThrow", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "moveMessages_withEmptyMessageList_shouldReturnNull", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "search_withRemoteSearchDisabled_shouldThrow", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapPusherTest" : [ "refresh_shouldCallRefreshOnStartedImapFolderPusher", "refresh_withImapFolderPusherThrowing_shouldNotThrow", "start_calledAfterStart_shouldStopFirstImapFolderPusher", "start_shouldSetLastRefreshToCurrentTime", "start_withSingleFolderName_shouldCreateImapFolderPusherAndCallStartOnIt", "start_withTwoFolderNames_shouldCreateTwoImapFolderPushersAndCallStart", "stop_afterStartWithSingleFolderName_shouldStopImapFolderPusher", "stop_withImapFolderPusherThrowing_shouldNotThrow", "stop_withoutStartBeingCalled_shouldNotCreateAnyImapFolderPushers" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "autoconfigureFolders_withoutSpecialUseCapability_shouldNotIssueImapCommand", "checkSettings_shouldCreateImapConnectionAndCallOpen", "checkSettings_withOpenThrowing_shouldThrowMessagingException", "getConnection_calledAfterReleaseWithAClosedConnection_shouldReturnNewImapConnectionInstance", "getConnection_calledAfterRelease_shouldReturnCachedImapConnection", "getConnection_calledTwiceWithoutRelease_shouldCreateTwoImapConnection", "getConnection_shouldCreateImapConnection", "getConnection_withDeadConnectionInPool_shouldReturnNewImapConnectionInstance", "getFolder_calledTwice_shouldReturnFirstInstance", "getFolder_shouldReturnImapFolderInstance", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withIoException_shouldCloseImapConnection", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ],
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3StoreTest" : [ "getFolder_shouldReturnFolderWithCorrectName", "getFolder_shouldReturnSameFolderEachTime", "getPersonalNamespace_shouldReturnListConsistingOfInbox", "isSeenFlagSupported_shouldReturnFalse", "open_withAuthResponseUsingAuthPlain_shouldRetrieveMessageCountOnAuthenticatedSocket", "open_withFailedAuth_shouldThrow" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavMessageTest" : [ "delete_asks_folder_to_delete_message", "setFlag_asks_folder_to_set_flag", "setNewHeaders_updates_size", "setUrl_tests" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavStoreTest" : [ "checkSettings_shouldRegisterHttpsSchemeWithRegistry", "checkSettings_withErrorResponse_shouldThrow", "checkSettings_withHttpPrefixedServerName_shouldUseInsecureConnection", "checkSettings_withInitialUnauthorizedResponse_shouldPerformBasicAuthentication", "checkSettings_withOkResponse_shouldPerformFormBasedAuthentication", "checkSettings_withSslException_shouldThrowCertificateValidationException", "checkSettings_withUnauthorizedResponses_shouldThrow", "checkSettings_withWebDavSslUri_shouldUseSecureConnection", "checkSettings_withWebDavTlsUri_shouldUseSecureConnection", "checkSettings_withWebDavUri_shouldUseInsecureConnection", "constructor_withImapStoreUri_shouldThrow", "getFolder_calledTwice_shouldReturnFirstInstance", "getFolder_shouldReturnWebDavFolderInstance", "getPersonalNamespaces_shouldProvideListOfAllFoldersSentFromResponses", "getPersonalNamespaces_shouldRequestFolderList", "getPersonalNamespaces_shouldRequestSpecialFolders", "getPersonalNamespaces_shouldSetSpecialFolderNames" ],
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "open_withAuthExternalExtension", "open_withAuthLoginExtension", "open_withAuthPlainExtension", "open_withAutomaticAuthAndNoTransportSecurityAndAuthCramMd5Extension_shouldUseAuthCramMd5", "open_withAutomaticAuthAndNoTransportSecurityAndAuthPlainExtension_shouldThrow", "open_withCramMd5AuthExtension", "open_withEhloFailing_shouldTryHelo", "open_withManyExtensions_shouldParseAll", "open_withSupportWithEnhancedStatusCodesOnAuthFailure_shouldThrowEncodedMessage", "open_withXoauth2Extension", "open_withXoauth2Extension_shouldInvalidateAndRetryOn400Response", "open_withXoauth2Extension_shouldInvalidateAndRetryOnInvalidJsonResponse", "open_withXoauth2Extension_shouldInvalidateAndRetryOnMissingStatusJsonResponse", "open_withXoauth2Extension_shouldThrowOn401Response", "open_withXoauth2Extension_shouldThrowOnFailure_fetchingToken", "open_withXoauth2Extension_shouldThrowOnMultipleFailure", "open_withoutAuthExternalExtension_shouldThrow", "open_withoutAuthLoginExtension_shouldConnectWithoutAuthentication", "open_withoutCramMd5AuthExtension_shouldThrow", "open_withoutXoauth2Extension_shouldThrow", "sendMessage_with8BitEncoding", "sendMessage_with8BitEncodingExtensionNotCaseSensitive", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withSingleRecipient" ],
        "k9mail§com.fsck.k9.activity.ActivityListenerTest" : [ "getOperation__whenFolderStatusChanged", "getOperation__whenSynchronizeMailboxFailedAfterHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFailed_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFinished", "getOperation__whenSynchronizeMailboxHeadersFinished", "getOperation__whenSynchronizeMailboxHeadersProgress", "getOperation__whenSynchronizeMailboxHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxNewMessage", "getOperation__whenSynchronizeMailboxProgress_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxStarted" ],
        "k9mail§com.fsck.k9.activity.MessageReferenceTest" : [ "alternativeEquals", "checkIdentityStringFromMessageReferenceWithFlag", "checkIdentityStringFromMessageReferenceWithoutFlag", "checkMessageReferenceWithChangedFlag", "checkMessageReferenceWithChangedUid", "constructor_withNullAccount_shouldThrow", "constructor_withNullFolder_shouldThrow", "constructor_withNullUid_shouldThrow", "equalsWithAnObjectShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentAccountUuidShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentFolderNameShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentUidShouldReturnFalse", "equalsWithMessageReferenceContainingSameDataShouldReturnTrue", "equalsWithNullShouldReturnFalse", "equalsWithSameMessageReferenceShouldReturnTrue", "equals_withNullAccount_shouldReturnFalse", "equals_withNullFolder_shouldReturnFalse", "equals_withNullUid_shouldReturnFalse", "parseIdentityStringContainingBadVersionNumber", "parseIdentityStringWithCorruptFlag", "parseIdentityStringWithFlag", "parseIdentityStringWithoutFlag", "parseNullIdentityString" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldAddErrorMessageInDebug", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withBadDatabase_shouldThrowInDebugBuild", "doDbUpgrade_withEmptyDatabase_shouldSetsDatabaseVersion", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion", "getVersion_shouldReturnCurrentDatabaseVersion" ],
        "k9mail§com.fsck.k9.notification.NewMailNotificationsTest" : [ "testRemoveNewMailNotification", "testRemoveNewMailNotificationClearingAllNotifications", "testRemoveNewMailNotificationWithCreateNotification", "testRemoveNewMailNotificationWithUnknownMessageReference", "testRemoveNewMailNotificationWithoutNotificationData" ],
        "k9mail§com.fsck.k9.notification.NotificationDataTest" : [ "testAddNotificationContent", "testAddNotificationContentWithReplacingNotification", "testContainsStarredMessages", "testContainsStarredMessagesWithAdditionalMessages", "testGetActiveNotificationIds", "testGetAllMessageReferences", "testGetContentForSummaryNotification", "testGetHolderForLatestNotification", "testIsSingleMessageNotification", "testNewMessagesCount", "testOverflowNotifications", "testRemoveDoesNotLeakNotificationIds", "testRemoveNotificationForMessage", "testRemoveNotificationForMessageWithRecreatingNotification", "testUnreadMessagesCount" ],
        "k9mail§com.fsck.k9.notification.SyncNotificationsTest" : [ "testGetFetchingMailNotificationId", "testShowSendingNotification" ],
        "k9mail§com.fsck.k9.notification.WearNotificationsTest" : [ "testAddSummaryActions", "testAddSummaryActionsWithArchiveAllActionEnabled", "testAddSummaryActionsWithDeleteAllActionEnabled", "testBuildStackedNotification", "testBuildStackedNotificationWithArchiveActionEnabled", "testBuildStackedNotificationWithDeleteActionEnabled", "testBuildStackedNotificationWithMarkAsSpamActionEnabled" ]
      },
      "predecessor" : "dd35e551a9e46df74f7e41a2424410ba87b749d0"
    },
    "377ac7167751c055b744a79874fae95a0dc6ac6b" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "sendMessage_withoutAddressToSendTo_shouldNotOpenConnection" ],
        "k9mail§com.fsck.k9.helper.MailToTest" : [ "testGetBcc_multipleEmailAddress", "testGetBcc_singleEmailAddress", "testGetCc_multipleEmailAddress", "testGetCc_singleEmailAddress", "testGetTo_multipleEmailAddress", "testGetTo_singleEmailAddress" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testTextPlusRfc822Message" ]
      },
      "predecessor" : "377ac7167751c055b744a79874fae95a0dc6ac6b~1"
    },
    "93348c21ce207ae3ffa1aa78912771120ac9de81" : {
      "testcases" : {
        "k9mail§com.fsck.k9.crypto.MessageDecryptVerifierTest" : [ "findEncryptedPartsShouldReturnEmptyListForEmptyMessage", "findEncryptedPartsShouldReturnEmptyListForSimpleMessage", "findEncrypted__withMultipartEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubEncryptedAndEncrypted__shouldReturnBoth", "findEncrypted__withMultipartMixedSubEncryptedAndText__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubSignedAndText__shouldReturnSigned", "findEncrypted__withMultipartMixedSubSigned__shouldReturnSigned", "findEncrypted__withMultipartMixedSubTextAndEncrypted__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubTextAndSigned__shouldReturnSigned", "findPrimaryCryptoPart_withEmptyMultipartAlternativeInsideMultipartMixed_shouldReturnNull", "findPrimaryCryptoPart_withEmptyMultipartAlternative_shouldReturnNull", "findPrimaryCryptoPart_withEmptyMultipartMixed_shouldReturnNull", "findPrimaryCryptoPart_withMultipartAlternativeContainingPgpInline", "findPrimaryCryptoPart_withMultipartMixedContainingMultipartAlternativeContainingPgpInline", "findPrimaryCryptoPart_withMultipartMixedContainingPgpInline", "findPrimaryCryptoPart_withSimplePgpInline", "findSigned__withComplexMultipartSigned__shouldReturnRoot", "findSigned__withSimpleMultipartSigned__shouldReturnRoot" ]
      },
      "predecessor" : "fb8cc7148a13ebc41b080bf051ba3bd9226c3159"
    },
    "68e0a8721f1a5d5e05d95e0464ab09be7dfb7dc1" : {
      "testcases" : {
        "k9mail§com.fsck.k9.crypto.MessageDecryptVerifierTest" : [ "findEncryptedPartsShouldReturnEmptyListForEmptyMessage", "findEncryptedPartsShouldReturnEmptyListForSimpleMessage", "findEncrypted__withBadProtocol__shouldReturnEmpty", "findEncrypted__withBadStructure__shouldReturnEmpty", "findEncrypted__withMissingEncryptedBody__shouldReturnEmpty", "findEncrypted__withMultipartEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubEncryptedAndEncrypted__shouldReturnBoth", "findEncrypted__withMultipartMixedSubEncryptedAndText__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubSignedAndText__shouldReturnSigned", "findEncrypted__withMultipartMixedSubSigned__shouldReturnSigned", "findEncrypted__withMultipartMixedSubTextAndEncrypted__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubTextAndSigned__shouldReturnSigned", "findPrimaryCryptoPart_withEmptyMultipartAlternativeInsideMultipartMixed_shouldReturnNull", "findPrimaryCryptoPart_withEmptyMultipartAlternative_shouldReturnNull", "findPrimaryCryptoPart_withEmptyMultipartMixed_shouldReturnNull", "findPrimaryCryptoPart_withMultipartAlternativeContainingPgpInline", "findPrimaryCryptoPart_withMultipartMixedContainingMultipartAlternativeContainingPgpInline", "findPrimaryCryptoPart_withMultipartMixedContainingPgpInline", "findSigned__withBadProtocol__shouldReturnRoot", "findSigned__withComplexMultipartSigned__shouldReturnRoot", "findSigned__withMissingSignature__shouldReturnEmpty", "findSigned__withSimpleMultipartSigned__shouldReturnRoot" ]
      },
      "predecessor" : "68e0a8721f1a5d5e05d95e0464ab09be7dfb7dc1~1"
    },
    "2902657e5be4ecc458d69e9decddea37e6298ebe" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ]
      },
      "predecessor" : "2902657e5be4ecc458d69e9decddea37e6298ebe~1"
    },
    "96bca146c079e6778cad412b5c13bb5853404a83" : {
      "testcases" : {
        "k9mail§com.fsck.k9.crypto.MessageCryptoStructureDetectorTest" : [ "findEncryptedPartsShouldReturnEmptyListForEmptyMessage", "findEncryptedPartsShouldReturnEmptyListForSimpleMessage", "findEncrypted__withBadProtocol__shouldReturnEmpty", "findEncrypted__withBadStructure__shouldReturnEmpty", "findEncrypted__withEmptyProtocol__shouldReturnEmpty", "findEncrypted__withMissingEncryptedBody__shouldReturnEmpty", "findEncrypted__withMultipartEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubEncryptedAndEncrypted__shouldReturnBoth", "findEncrypted__withMultipartMixedSubEncryptedAndText__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubSignedAndText__shouldReturnSigned", "findEncrypted__withMultipartMixedSubSigned__shouldReturnSigned", "findEncrypted__withMultipartMixedSubTextAndEncrypted__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubTextAndSigned__shouldReturnSigned", "findPrimaryCryptoPart_withEmptyMultipartAlternativeInsideMultipartMixed_shouldReturnNull", "findPrimaryCryptoPart_withEmptyMultipartAlternative_shouldReturnNull", "findPrimaryCryptoPart_withEmptyMultipartMixed_shouldReturnNull", "findPrimaryCryptoPart_withMultipartAlternativeContainingPgpInline", "findPrimaryCryptoPart_withMultipartMixedContainingMultipartAlternativeContainingPgpInline", "findPrimaryCryptoPart_withMultipartMixedContainingPgpInline", "findPrimaryCryptoPart_withSimplePgpInline", "findSigned__withComplexMultipartSigned__shouldReturnRoot", "findSigned__withEmptyProtocol__shouldReturnRoot", "findSigned__withMissingSignature__shouldReturnEmpty", "findSigned__withSimpleMultipartSigned__shouldReturnRoot" ]
      },
      "predecessor" : "96bca146c079e6778cad412b5c13bb5853404a83~1"
    },
    "b3ad904238746616b41c042b38ce67b1e2ff5464" : {
      "testcases" : {
        "k9mail§com.fsck.k9.ui.crypto.MessageCryptoHelperTest" : [ "multipartEncrypted__withNullBody__shouldReturnEncryptedIncomplete", "multipartEncrypted__withUnknownProtocol__shouldReturnEncryptedUnsupported", "multipartSigned__withNullBody__shouldReturnSignedIncomplete", "multipartSigned__withUnknownProtocol__shouldReturnSignedUnsupported", "textPlain" ]
      },
      "predecessor" : "b3ad904238746616b41c042b38ce67b1e2ff5464~1"
    },
    "6de7f9dbed60aaef45454da953d7a9ad16ac774e" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ]
      },
      "predecessor" : "6de7f9dbed60aaef45454da953d7a9ad16ac774e~1"
    },
    "2d90470d77c98e2022f10b13cea4963ece7fd806" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync", "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ]
      },
      "predecessor" : "2d90470d77c98e2022f10b13cea4963ece7fd806~1"
    },
    "2b0dc82ce2a5400ec24b314e8102fd302a9ca4ca" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "2d90470d77c98e2022f10b13cea4963ece7fd806"
    },
    "6b8e452f77d04476cada2c156c6086319698c914" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getNewPushState_withNewerUid_shouldReturnNewPushState", "getNewPushState_withoutNewerUid_shouldReturnNull", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ]
      },
      "predecessor" : "6b8e452f77d04476cada2c156c6086319698c914~1"
    },
    "c4494904cf51823c35c7df15803ff15763e9367e" : {
      "testcases" : {
        "k9mail§com.fsck.k9.crypto.MessageCryptoStructureDetectorTest" : [ "findEncrypted__withBadProtocolAndNoBody__shouldReturnRoot", "findEncrypted__withBadProtocol__shouldReturnEmpty", "findEncrypted__withBadStructure__shouldReturnEmpty", "findEncrypted__withEmptyProtocol__shouldReturnEmpty", "findEncrypted__withMissingEncryptedBody__shouldReturnEmpty", "findEncrypted__withMultipartEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubEncryptedAndEncrypted__shouldReturnBoth", "findEncrypted__withMultipartMixedSubEncryptedAndText__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubSignedAndText__shouldReturnSigned", "findEncrypted__withMultipartMixedSubSigned__shouldReturnSigned", "findEncrypted__withMultipartMixedSubTextAndEncrypted__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubTextAndSigned__shouldReturnSigned", "findPrimaryCryptoPart_withEmptyMultipartAlternativeInsideMultipartMixed_shouldReturnNull", "findPrimaryCryptoPart_withEmptyMultipartAlternative_shouldReturnNull", "findPrimaryCryptoPart_withEmptyMultipartMixed_shouldReturnNull", "findPrimaryCryptoPart_withMultipartAlternativeContainingPgpInline", "findPrimaryCryptoPart_withMultipartMixedContainingMultipartAlternativeContainingPgpInline", "findPrimaryCryptoPart_withMultipartMixedContainingPgpInline", "findSigned__withBadProtocol__shouldReturnNothing", "findSigned__withComplexMultipartSigned__shouldReturnRoot", "findSigned__withEmptyProtocol__shouldReturnRoot", "findSigned__withMissingSignature__shouldReturnEmpty", "findSigned__withNoProtocolAndNoBody__shouldReturnRoot", "findSigned__withSimpleMultipartSigned__shouldReturnRoot" ],
        "k9mail§com.fsck.k9.ui.crypto.MessageCryptoHelperTest" : [ "multipartEncrypted__withNullBody__shouldReturnEncryptedIncomplete", "multipartEncrypted__withUnknownProtocol__shouldReturnEncryptedUnsupported", "multipartSigned__withNullBody__shouldReturnSignedIncomplete", "multipartSigned__withSignOnlyDisabledAndNullBody__shouldReturnNothing", "multipartSigned__withSignOnlyDisabled__shouldReturnNothing", "multipartSigned__withUnknownProtocol__shouldReturnSignedUnsupported" ]
      },
      "predecessor" : "c4494904cf51823c35c7df15803ff15763e9367e~1"
    },
    "0dae7e8f63ce009e973bbea48e2533a0e1965153" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.ui.crypto.MessageCryptoHelperTest" : [ "multipartEncrypted__withNullBody__shouldReturnEncryptedIncomplete", "multipartEncrypted__withUnknownProtocol__shouldReturnEncryptedUnsupported", "multipartSigned__withNullBody__shouldReturnSignedIncomplete", "multipartSigned__withSignOnlyDisabledAndNullBody__shouldReturnNothing", "multipartSigned__withSignOnlyDisabled__shouldReturnNothing", "multipartSigned__withUnknownProtocol__shouldReturnSignedUnsupported", "textPlain" ]
      },
      "predecessor" : "0dae7e8f63ce009e973bbea48e2533a0e1965153~1"
    },
    "57a5d9617348f558606150713e82abf6928308b5" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "extractMessage_multipartSigned_UnknownProtocol", "extractMessage_multipartSigned_UnknownProtocol_withExtraAttachments", "extractMessage_openPgpEncrypted_withoutAnnotations", "extractMessage_withAttachment", "extractMessage_withCryptoAnnotation", "extractMessage_withCryptoAnnotation_andExtraAttachment", "extractMessage_withCryptoAnnotation_andExtraText", "extractMessage_withCryptoAnnotation_andReplacementPart" ]
      },
      "predecessor" : "57a5d9617348f558606150713e82abf6928308b5~1"
    },
    "ac628a265daa6583bbe0c425163db5697a9b527e" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "extractMessage_multipartSigned_UnknownProtocol", "extractMessage_multipartSigned_UnknownProtocol_withExtraAttachments", "extractMessage_openPgpEncrypted_withoutAnnotations", "extractMessage_withAttachment", "extractMessage_withCryptoAnnotation", "extractMessage_withCryptoAnnotation_andExtraAttachment", "extractMessage_withCryptoAnnotation_andExtraText", "extractMessage_withCryptoAnnotation_andReplacementPart" ]
      },
      "predecessor" : "57a5d9617348f558606150713e82abf6928308b5"
    },
    "1c240031bf3abfc9db3739fb24ab826f4cdaa4c8" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "synchronizeMailboxSynchronous_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "synchronizeMailboxSynchronous_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronous_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronous_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronous_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronous_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronous_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "ac628a265daa6583bbe0c425163db5697a9b527e"
    },
    "7107a606ac5e1322c6af86a3e8a59cda25aa01a1" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "synchronizeMailboxSynchronous_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore" ]
      },
      "predecessor" : "7107a606ac5e1322c6af86a3e8a59cda25aa01a1~1"
    },
    "6ececc378a1bf44141fa0fd87eaadaf170a7c570" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.ui.crypto.MessageCryptoHelperTest" : [ "multipartEncrypted__withNullBody__shouldReturnEncryptedIncomplete", "multipartEncrypted__withUnknownProtocol__shouldReturnEncryptedUnsupported", "multipartSigned__withNullBody__shouldReturnSignedIncomplete", "multipartSigned__withSignOnlyDisabledAndNullBody__shouldReturnNothing", "multipartSigned__withSignOnlyDisabled__shouldReturnNothing", "multipartSigned__withUnknownProtocol__shouldReturnSignedUnsupported", "textPlain" ]
      },
      "predecessor" : "7a9ea6c885724165d33c9a371469d4d157f2ca67"
    },
    "5f6b1dffc661b5b41f45f0350403745eb5529696" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.internet.DecoderUtilTest" : [ "decodeEncodedWords_withAsciiCharset_encoded_data_returns_text", "decodeEncodedWords_withGB2312_decodes_correctly", "decodeEncodedWords_withInvalidBase64String_returnsEmptyString", "decodeEncodedWords_withMissingCharset_returnAsText", "decodeEncodedWords_withMissingEncoding_returnAsText", "decodeEncodedWords_withMultipleEncodedSections_decodesBoth", "decodeEncodedWords_withMultipleEncodedSections_decodesSequentialSectionTogether", "decodeEncodedWords_withNoTextCharsetOrEncoding_returnAsText", "decodeEncodedWords_withPartiallyEncodedAfter_returnsBothSections", "decodeEncodedWords_withPartiallyEncoded_returnsBothSections", "decodeEncodedWords_withRFC2047examples_decodesCorrectly", "decodeEncodedWords_withSeparatorsOnly_returnAsText", "decodeEncodedWords_withStartAnd2SeparatorOnly_returnAsText", "decodeEncodedWords_withStartAnd3SeparatorOnly_returnAsText", "decodeEncodedWords_withStartAndSeparatorOnly_returnAsText", "decodeEncodedWords_withStartOnly_encoding_format_returnAsText", "decodeEncodedWords_withTextAndMissingCharset_returnAsText", "decodeEncodedWords_withUnrecognisedCharset_returnsEncodedData", "decodeEncodedWords_withUnrecognisedEncoding_withEncodedData_return_encoded_data", "decodeEncodedWords_with_MissingEncodingAndData_returnAsText", "decodeEncodedWords_with_incompleteEncodingFormat_returnAsText", "decodeEncodedWords_with_unencoded_data_returns_original_text", "decodeEncodedWords_with_unrecognisedEncoding_withEmptyEncodedData_returnAsText" ]
      },
      "predecessor" : "5f6b1dffc661b5b41f45f0350403745eb5529696~1"
    },
    "37d2c3609bacdef12e6c1a832314fca7441d1a95" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.internet.DecoderUtilTest" : [ "decodeEncodedWords_withMultipleEncodedSections_decodesSequentialSectionTogether" ]
      },
      "predecessor" : "37d2c3609bacdef12e6c1a832314fca7441d1a95~1"
    },
    "2de1c02c83bc4701d6d255cbed4e0f76063ef2b0" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.internet.DecoderUtilTest" : [ "decodeEncodedWords_withMultipleEncodedSections_decodesSequentialSectionTogether" ]
      },
      "predecessor" : "2de1c02c83bc4701d6d255cbed4e0f76063ef2b0~1"
    },
    "cdf92c0a1017950128218a2c997aea13a6f653ba" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.internet.DecoderUtilTest" : [ "decodeEncodedWords_withAsciiCharset_encoded_data_returns_text", "decodeEncodedWords_withEncodedWordAndOnlyStartAndSeparatorOfEncodedWord_shouldDecodeAndAddSuffix", "decodeEncodedWords_withEncodedWordAndOnlyStartAndThreeSeparatorsOfEncodedWord_shouldDecodeAndAddSuffix", "decodeEncodedWords_withEncodedWordAndOnlyStartAndTwoSeparatorsOfEncodedWord_shouldDecodeAndAddSuffix", "decodeEncodedWords_withEncodedWordAndOnlyStartOfEncodedWord_shouldDecodeAndAddSuffix", "decodeEncodedWords_withEncodedWordFollowedByEncodedWordWithDifferentCharset_shouldDecodeIndividually", "decodeEncodedWords_withEncodedWordFollowedByEncodedWordWithDifferentEncoding_shouldDecodeIndividually", "decodeEncodedWords_withInvalidBase64String_returnsEmptyString", "decodeEncodedWords_withInvalidEncodedWordWhitespaceInvalidEncodedWord_shouldReturnInputText", "decodeEncodedWords_withInvalidEncodedWord_shouldReturnInputText", "decodeEncodedWords_withMissingCharset_returnAsText", "decodeEncodedWords_withMissingEncoding_returnAsText", "decodeEncodedWords_withMultipleEncodedSectionsButCharsetAndEncodingDifferingInCase_decodesSequentialSectionTogether", "decodeEncodedWords_withMultipleEncodedSections_decodesBoth", "decodeEncodedWords_withMultipleEncodedSections_decodesSequentialSectionTogether", "decodeEncodedWords_withNoTextCharsetOrEncoding_returnAsText", "decodeEncodedWords_withPartiallyEncodedAfter_returnsBothSections", "decodeEncodedWords_withPartiallyEncoded_returnsBothSections", "decodeEncodedWords_withRFC2047examples_decodesCorrectly", "decodeEncodedWords_withSeparatorsOnly_returnAsText", "decodeEncodedWords_withStartAnd2SeparatorOnly_returnAsText", "decodeEncodedWords_withStartAnd3SeparatorOnly_returnAsText", "decodeEncodedWords_withStartAndSeparatorOnly_returnAsText", "decodeEncodedWords_withStartOnly_encoding_format_returnAsText", "decodeEncodedWords_withTextAndMissingCharset_returnAsText", "decodeEncodedWords_withUnrecognisedCharset_returnsEncodedData", "decodeEncodedWords_withUnrecognisedEncoding_withEncodedData_return_encoded_data", "decodeEncodedWords_with_MissingEncodingAndData_returnAsText", "decodeEncodedWords_with_incompleteEncodingFormat_returnAsText", "decodeEncodedWords_with_unencoded_data_returns_original_text", "decodeEncodedWords_with_unrecognisedEncoding_withEmptyEncodedData_returnAsText" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.message.extractors.EncryptionDetectorTest" : [ "isEncrypted_withInlinePgp_shouldReturnTrue", "isEncrypted_withMultipartEncrypted_shouldReturnTrue", "isEncrypted_withMultipartMixedContainingSMimePart_shouldReturnTrue", "isEncrypted_withPlainTextAndPreambleWithInlinePgp_shouldReturnFalse", "isEncrypted_withQuotedInlinePgp_shouldReturnFalse", "isEncrypted_withSMimePart_shouldReturnTrue", "isEncrypted_withTextPlain_shouldReturnFalse" ],
        "k9mail§com.fsck.k9.ui.crypto.MessageCryptoHelperTest" : [ "multipartEncrypted__withNullBody__shouldReturnEncryptedIncomplete", "multipartEncrypted__withUnknownProtocol__shouldReturnEncryptedUnsupported", "multipartSigned__withNullBody__shouldReturnSignedIncomplete", "multipartSigned__withUnknownProtocol__shouldReturnSignedUnsupported", "textPlain" ]
      },
      "predecessor" : "cdf92c0a1017950128218a2c997aea13a6f653ba~1"
    },
    "ddcf1e257e43a9e08bb4bdcd237f93651c3651d5" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.AddressTest" : [ "equals_withoutAddress_doesNotMatchWithAddress", "equals_withoutAddress_matchesSame", "equals_withoutPersonal_doesNotMatchWithAddress", "equals_withoutPersonal_matchesSame", "getHostname_withoutAddress_isNull", "hashCode_withoutAddress", "hashCode_withoutPersonal", "parse_withEncodedPersonal_shouldDecode", "parse_withMissingEmail__shouldSetPersonal", "parse_withMultipleEmails_shouldDecodeBoth", "parse_withQuotedEncodedPersonal_shouldDecode", "parse_withUnusualEmails_shouldSetAddress", "parse_withValidEmailAndPersonal_shouldSetBoth" ],
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "sendMessage_withoutAddressToSendTo_shouldNotOpenConnection" ],
        "k9mail§com.fsck.k9.helper.MailToTest" : [ "testGetBcc_multipleEmailAddress", "testGetBcc_singleEmailAddress", "testGetCc_multipleEmailAddress", "testGetCc_singleEmailAddress", "testGetTo_multipleEmailAddress", "testGetTo_singleEmailAddress" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testTextPlusRfc822Message" ]
      },
      "predecessor" : "9fdcf44162f9f61965e0a548ee35a8f4111cc914"
    },
    "d23ff7f6a17ed3ae126a68dd66632da9135f7edb" : {
      "testcases" : {
        "k9mail§com.fsck.k9.message.extractors.AttachmentInfoExtractorTest" : [ "extractInfoForDb__withContentTypeAndEncodedWordName__shouldReturnDecodedName", "extractInfoForDb__withContentTypeAndName__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionAttach__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionInvalidSizeParam__shouldReturnUnknownSize", "extractInfoForDb__withDispositionSizeParam__shouldReturnThatSize", "extractInfoForDb__withNoBody__shouldReturnContentAvailable", "extractInfoForDb__withNoBody__shouldReturnContentNotAvailable", "extractInfoForDb__withNoHeaders__shouldReturnEmptyValues", "extractInfoForDb__withTextMimeType__shouldReturnTxtExtension", "extractInfo__fromLocalBodyPart__shouldReturnProvidedValues", "extractInfo__withDeferredFileBody" ]
      },
      "predecessor" : "ddcf1e257e43a9e08bb4bdcd237f93651c3651d5"
    },
    "0a6ef2b70fb42879e58e575595cdc3c3c774987f" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.AddressTest" : [ "equals_withoutAddress_doesNotMatchWithAddress", "equals_withoutAddress_matchesSame", "equals_withoutPersonal_doesNotMatchWithAddress", "equals_withoutPersonal_matchesSame", "getHostname_withoutAddress_isNull", "hashCode_withoutAddress", "hashCode_withoutPersonal", "parse_withEncodedPersonal_shouldDecode", "parse_withMissingEmail__shouldSetPersonal", "parse_withMultipleEmails_shouldDecodeBoth", "parse_withQuotedEncodedPersonal_shouldDecode", "parse_withUnusualEmails_shouldSetAddress", "parse_withValidEmailAndPersonal_shouldSetBoth" ],
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "sendMessage_withoutAddressToSendTo_shouldNotOpenConnection" ],
        "k9mail§com.fsck.k9.helper.MailToTest" : [ "testGetBcc_multipleEmailAddress", "testGetBcc_singleEmailAddress", "testGetCc_multipleEmailAddress", "testGetCc_singleEmailAddress", "testGetTo_multipleEmailAddress", "testGetTo_singleEmailAddress" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testMultipartDigestWithMessages", "testTextPlusRfc822Message" ]
      },
      "predecessor" : "0a6ef2b70fb42879e58e575595cdc3c3c774987f~1"
    },
    "f366e504c794d32e996acf4dc6434576e816e430" : {
      "testcases" : {
        "k9mail§com.fsck.k9.message.extractors.AttachmentInfoExtractorTest" : [ "extractInfoForDb__withContentTypeAndEncodedWordName__shouldReturnDecodedName", "extractInfoForDb__withContentTypeAndName__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionAttach__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionInvalidSizeParam__shouldReturnUnknownSize", "extractInfoForDb__withDispositionSizeParam__shouldReturnThatSize", "extractInfoForDb__withNoBody__shouldReturnContentAvailable", "extractInfoForDb__withNoBody__shouldReturnContentNotAvailable", "extractInfoForDb__withNoHeaders__shouldReturnEmptyValues", "extractInfoForDb__withTextMimeType__shouldReturnTxtExtension", "extractInfo__fromLocalBodyPart__shouldReturnProvidedValues", "extractInfo__withDeferredFileBody" ]
      },
      "predecessor" : "f366e504c794d32e996acf4dc6434576e816e430~1"
    },
    "9db6cdc1c25e3412a6cf294226d28937231cd8c2" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "sendMessage_with8BitEncoding", "sendMessage_with8BitEncodingExtensionNotCaseSensitive", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withPipelining", "sendMessage_withSingleRecipient", "sendMessage_withoutPipelining" ],
        "k9mail§com.fsck.k9.cache.EmailProviderCacheTest" : [ "isMessageHidden_returnsFalseForUnhidenMessage", "isMessageHidden_returnsFalseForUnknownMessage", "isMessageHidden_returnsTrueForHiddenMessage" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage" ]
      },
      "predecessor" : "f2f7b7827567a16ae9f3465056ffa47560840479"
    },
    "77acb11dd6e08153e55840b11bd37a6623559faa" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "open_withAutomaticAuthAndNoTransportSecurityAndAuthCramMd5Extension_shouldUseAuthCramMd5", "open_withCramMd5AuthExtension" ],
        "k9mail§com.fsck.k9.helper.MessageHelperTest" : [ "testToFriendlyArray", "testToFriendlyShowsEmailPartIfNoPersonalPartExists", "testToFriendlyShowsPersonalPartIfItExists" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testSimpleHtmlMessage", "testSimplePlainTextMessage" ]
      },
      "predecessor" : "77acb11dd6e08153e55840b11bd37a6623559faa~1"
    },
    "2efc8999f9eae7d992c20abf95037c5677ef934a" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "getMessageByUid_returnsNewImapMessageWithUidInFolder", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint" ]
      },
      "predecessor" : "2efc8999f9eae7d992c20abf95037c5677ef934a~1"
    },
    "aa7e00263fd8ad50d1a3876aade1b65a9a96678f" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withClosedFolder_shouldThrow", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "copyMessages_withClosedFolder_shouldThrow", "copyMessages_withEmptyMessageList_shouldReturnNull", "copyMessages_withoutDestinationFolderOfWrongType_shouldThrow", "create_withClosedFolder_shouldOpenConnectionAndIssueCreateCommand", "create_withNegativeImapResponse_shouldReturnFalse", "create_withoutNegativeImapResponse_shouldReturnTrue", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_notImplemented", "delete_shouldMoveMessagesToTrashFolder", "delete_withEmptyMessageList_shouldNotInteractWithImapConnection", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "exists_withClosedFolder_shouldOpenConnectionAndIssueStatusCommand", "exists_withNegativeImapResponse_shouldReturnFalse", "exists_withoutNegativeImapResponse_shouldReturnTrue", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEmptyMessageListArgument_shouldDoNothing", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withNullMessageListArgument_shouldDoNothing", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getFlaggedMessageCount_withClosedFolder_shouldThrow", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessageByUid_returnsNewImapMessageWithUidInFolder", "getMessagesFromUids", "getMessagesFromUids_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withClosedFolder_shouldThrow", "getMessages_withDateConstraint", "getMessages_withEndArgumentSmallerThanStartArgument_shouldThrow", "getMessages_withInvalidEndArgument_shouldThrow", "getMessages_withInvalidStartArgument_shouldThrow", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getNewPushState_withNewerUid_shouldReturnNewPushState", "getNewPushState_withoutNewerUid_shouldReturnNull", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUidFromMessageId_withoutMessageIdHeader_shouldReturnNull", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "getUnreadMessageCount_withClosedFolder_shouldThrow", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "moveMessages_withEmptyMessageList_shouldReturnNull", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "search_withRemoteSearchDisabled_shouldThrow", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withIoException_shouldCloseImapConnection", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ]
      },
      "predecessor" : "aa7e00263fd8ad50d1a3876aade1b65a9a96678f~1"
    },
    "590b6c6cc0efd6f7116baac115a7da81d3da0e7d" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "copyMessages", "delete_shouldMoveMessagesToTrashFolder", "getHighestUid", "getMessagesFromUids", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "moveMessages_shouldCopyMessages", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.UidCopyResponseTest" : [ "parse_withCopyUidResponse_shouldCreateUidMapping", "parse_withNonNumberCopyUidArguments_shouldReturnNull", "parse_withNonStringCopyUidArgumentOne_shouldReturnNull", "parse_withNonStringCopyUidArgumentThree_shouldReturnNull", "parse_withNonStringCopyUidArgumentTwo_shouldReturnNull", "parse_withResponseTextListTooShort_shouldReturnNull", "parse_withTooShortResponse_shouldReturnNull", "parse_withUnbalancedCopyUidArguments_shouldReturnNull", "parse_withUntaggedResponse_shouldReturnNull", "parse_withoutCopyUidResponse_shouldReturnNull", "parse_withoutOkResponse_shouldReturnNull", "parse_withoutResponseTextList_shouldReturnNull" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.UidSearchResponseTest" : [ "parse_withMultipleSearchResponses_shouldExtractNumbers", "parse_withSingleNoSearchResponse_shouldReturnEmptyList", "parse_withSingleSearchResponseContainingInvalidNumber_shouldReturnEmptyList", "parse_withSingleSearchResponse_shouldExtractNumbers", "parse_withSingleTaggedSearchResponse_shouldReturnEmptyList", "parse_withSingleTooShortResponse_shouldReturnEmptyList" ]
      },
      "predecessor" : "590b6c6cc0efd6f7116baac115a7da81d3da0e7d~1"
    },
    "97b4c06632838bd2af00ae9d0708f3e68b18bd4e" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapCommandSplitterTest" : [ "splitCommand_withContiguousAndNonContiguousIds_shouldGroupIdsAndSplitCommand", "splitCommand_withManyNonContiguousIds_shouldSplitCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withClosedFolder_shouldThrow", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "copyMessages_withClosedFolder_shouldThrow", "copyMessages_withEmptyMessageList_shouldReturnNull", "copyMessages_withoutDestinationFolderOfWrongType_shouldThrow", "create_withClosedFolder_shouldOpenConnectionAndIssueCreateCommand", "create_withNegativeImapResponse_shouldReturnFalse", "create_withoutNegativeImapResponse_shouldReturnTrue", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_notImplemented", "delete_shouldMoveMessagesToTrashFolder", "delete_withEmptyMessageList_shouldNotInteractWithImapConnection", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "exists_withClosedFolder_shouldOpenConnectionAndIssueStatusCommand", "exists_withNegativeImapResponse_shouldReturnFalse", "exists_withoutNegativeImapResponse_shouldReturnTrue", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEmptyMessageListArgument_shouldDoNothing", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withNullMessageListArgument_shouldDoNothing", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "getFlaggedMessageCount", "getFlaggedMessageCount_withClosedFolder_shouldThrow", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessageByUid_returnsNewImapMessageWithUidInFolder", "getMessagesFromUids", "getMessagesFromUids_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withClosedFolder_shouldThrow", "getMessages_withDateConstraint", "getMessages_withEndArgumentSmallerThanStartArgument_shouldThrow", "getMessages_withInvalidEndArgument_shouldThrow", "getMessages_withInvalidStartArgument_shouldThrow", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getNewPushState_withNewerUid_shouldReturnNewPushState", "getNewPushState_withoutNewerUid_shouldReturnNull", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUidFromMessageId_withoutMessageIdHeader_shouldReturnNull", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "getUnreadMessageCount_withClosedFolder_shouldThrow", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "moveMessages_withEmptyMessageList_shouldReturnNull", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "search_withRemoteSearchDisabled_shouldThrow", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.UidCopyResponseTest" : [ "parse_withCopyUidResponse_shouldCreateUidMapping", "parse_withNonNumberCopyUidArguments_shouldReturnNull", "parse_withNonStringCopyUidArgumentOne_shouldReturnNull", "parse_withNonStringCopyUidArgumentThree_shouldReturnNull", "parse_withNonStringCopyUidArgumentTwo_shouldReturnNull", "parse_withResponseTextListTooShort_shouldReturnNull", "parse_withTooShortResponse_shouldReturnNull", "parse_withUnbalancedCopyUidArguments_shouldReturnNull", "parse_withUntaggedResponse_shouldReturnNull", "parse_withoutCopyUidResponse_shouldReturnNull", "parse_withoutOkResponse_shouldReturnNull", "parse_withoutResponseTextList_shouldReturnNull" ]
      },
      "predecessor" : "97b4c06632838bd2af00ae9d0708f3e68b18bd4e~1"
    },
    "3fdb5f532f86c7d7d1bd2f85b88be4ec14fadb2b" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavStoreTest" : [ "getPersonalNamespaces_shouldProvideListOfAllFoldersSentFromResponses", "getPersonalNamespaces_shouldRequestFolderList", "getPersonalNamespaces_shouldRequestSpecialFolders", "getPersonalNamespaces_shouldSetSpecialFolderNames" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "extractMessage_multipartSigned_UnknownProtocol", "extractMessage_multipartSigned_UnknownProtocol_withExtraAttachments", "extractMessage_withAttachment", "extractMessage_withCryptoAnnotation", "extractMessage_withCryptoAnnotation_andExtraAttachment", "extractMessage_withCryptoAnnotation_andExtraText", "extractMessage_withCryptoAnnotation_andReplacementPart", "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ]
      },
      "predecessor" : "3fdb5f532f86c7d7d1bd2f85b88be4ec14fadb2b~1"
    },
    "aa4fb26f8f6f5cb486101b109a611df4edece1cf" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.AddressTest" : [ "equals_withoutAddress_doesNotMatchWithAddress", "equals_withoutAddress_matchesSame", "equals_withoutPersonal_doesNotMatchWithAddress", "equals_withoutPersonal_matchesSame", "getHostname_withoutAddress_isNull", "handlesInvalidBase64Encoding", "hashCode_withoutAddress", "hashCode_withoutPersonal", "parse_withEncodedPersonal_shouldDecode", "parse_withMissingEmail__shouldSetPersonal", "parse_withMultipleEmails_shouldDecodeBoth", "parse_withQuotedEncodedPersonal_shouldDecode", "parse_withUnusualEmails_shouldSetAddress", "parse_withValidEmailAndPersonal_shouldSetBoth" ],
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "sendMessagePipelining_with250and550ReplyforRecipientsAnd250ForMessage_shouldThrow", "sendMessagePipelining_with250and550ReplyforRecipients_shouldThrow", "sendMessagePipelining_withNegativeReply", "sendMessagePipelining_without354ReplyforData_shouldThrow", "sendMessage_with8BitEncoding", "sendMessage_with8BitEncodingExtensionNotCaseSensitive", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withPipelining", "sendMessage_withSingleRecipient", "sendMessage_withoutPipelining" ],
        "k9mail§com.fsck.k9.activity.compose.RecipientLoaderTest" : [ "queryCryptoProvider", "queryCryptoStatus_autocrypt_trusted", "queryCryptoStatus_autocrypt_untrusted", "queryCryptoStatus_unavailable", "queryCryptoStatus_withHigherUidStatus" ],
        "k9mail§com.fsck.k9.activity.misc.ContactPictureLoaderTest" : [ "calcUnknownContactLetter_ignoresMatchEmoji", "calcUnknownContactLetter_ignoresSpace", "calcUnknownContactLetter_ignoresUsePunctuation", "calcUnknownContactLetter_withAsciiName", "calcUnknownContactLetter_withChinese", "calcUnknownContactLetter_withCombinedGlyphs", "calcUnknownContactLetter_withLstroke", "calcUnknownContactLetter_withNoNameUsesAddress", "calcUnknownContactLetter_withSurrogatePair" ],
        "k9mail§com.fsck.k9.helper.MailToTest" : [ "testGetBcc_multipleEmailAddress", "testGetBcc_singleEmailAddress", "testGetCc_multipleEmailAddress", "testGetCc_singleEmailAddress", "testGetTo_multipleEmailAddress", "testGetTo_singleEmailAddress" ],
        "k9mail§com.fsck.k9.helper.MessageHelperTest" : [ "testToFriendlyArray", "testToFriendlyShowsEmailPartIfNoPersonalPartExists", "testToFriendlyShowsPersonalPartIfItExists", "testToFriendlyWithChangeContactColor", "testToFriendlyWithContactLookup", "testToFriendlyWithoutCorrespondentNames" ],
        "k9mail§com.fsck.k9.helper.ReplyToParserTest" : [ "getRecipientsToReplyTo_should_prefer_from_ifOtherIsIdentity", "getRecipientsToReplyTo_should_prefer_listPost_over_from_field", "getRecipientsToReplyTo_should_prefer_replyTo_over_any_other_field" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testTextPlusRfc822Message" ]
      },
      "predecessor" : "aa4fb26f8f6f5cb486101b109a611df4edece1cf~1"
    },
    "31b7cf8daeb45a119c66aa648ced6837851e789f" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withEmptyMessageListArgument_shouldDoNothing", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "moveMessages_shouldDeleteMessagesFromSourceFolder" ]
      },
      "predecessor" : "aa4fb26f8f6f5cb486101b109a611df4edece1cf"
    },
    "79975cacd0dc060ef77af52a23962a2b4c821951" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_withV29" ]
      },
      "predecessor" : "79975cacd0dc060ef77af52a23962a2b4c821951~1"
    },
    "d64af371adeddd94499d7d8dfa91564a5a50c57a" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ]
      },
      "predecessor" : "d64af371adeddd94499d7d8dfa91564a5a50c57a~1"
    },
    "02b6fdfda3194794c8c0a98e0a3e0566da3356c6" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.migrations.MigrationTo51Test" : [ "db51MigrateMessageFormat_canMigrateMultipartMixedMessage", "db51MigrateMessageFormat_canMigrateMultipartMixedMessageWithAttachment", "db51MigrateMessageFormat_withMultipartMixedMessageWithAttachmentWithUnusualContentID_updatesContentReference", "db51MigrateMessageFormat_withMultipartMixedMessageWithAttachment_stores_messagePart", "db51MigrateMessageFormat_withMultipartMixedMessageWithAttachment_updatesContentReference" ]
      },
      "predecessor" : "02b6fdfda3194794c8c0a98e0a3e0566da3356c6~1"
    },
    "fae501783247de7a4296f43636041e8d86ce4e0a" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "exists_withNegativeImapResponse_shouldReturnFalse", "expunge_shouldIssueExpungeCommand" ]
      },
      "predecessor" : "fae501783247de7a4296f43636041e8d86ce4e0a~1"
    },
    "a2ad2dd10b681aad1a395bd17f6c37fd2a2658ff" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.internet.ListHeadersTest" : [ "getListPostAddresses_shouldProvideAllListPostHeaders", "getListPostAddresses_withMailTo_shouldReturnCorrectAddress", "getListPostAddresses_withMailtoWithNote_shouldReturnCorrectAddress", "getListPostAddresses_withMailtoWithSubject_shouldReturnCorrectAddress", "getListPostAddresses_withMessageWithNo_shouldReturnEmptyList", "getListPostAddresses_withoutMailtoUriInBrackets_shouldReturnEmptyList" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "close_afterOpen_shouldCloseConnection", "close_withoutOpen_shouldNotThrow", "executeSingleCommand_withNoResponse_shouldThrowNegativeImapResponseException", "executeSingleCommand_withOkResponse_shouldReturnResult", "isConnected_afterOpenAndClose_shouldReturnFalse", "isConnected_afterOpen_shouldReturnTrue", "isConnected_withoutPreviousOpen_shouldReturnFalse", "isIdleCapable_withIdleCapability", "isIdleCapable_withoutIdleCapability", "open_afterCloseWasCalled_shouldThrow", "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow", "open_authCramMd5WithoutAuthCramMd5Capability_shouldThrow", "open_authExternal", "open_authExternalWithAuthenticationFailure_shouldThrow", "open_authExternalWithoutAuthExternalCapability_shouldThrow", "open_authPlain", "open_authPlainAndLoginFallbackWithAuthenticationFailure_shouldThrow", "open_authPlainFailureAndDisconnect_shouldThrow", "open_authPlainWithAuthenticationFailure_shouldFallbackToLogin", "open_authPlainWithByeResponseAndConnectionClose_shouldThrowAuthenticationFailedException", "open_authPlainWithLoginDisabled_shouldThrow", "open_authPlainWithoutAuthPlainCapability_shouldUseLoginMethod", "open_authXoauthWithSaslIr", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOn400Response", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnInvalidJsonResponse", "open_authXoauthWithSaslIrInvalidatesAndRetriesNewTokenOnMissingStatusJsonResponse", "open_authXoauthWithSaslIrParsesCapabilities", "open_authXoauthWithSaslIrThrowsExeptionOn401Response", "open_authXoauthWithSaslIrWithOldTokenThrowsExceptionIfRetryFails", "open_withCapabilitiesInInitialResponse_shouldNotIssuePreAuthCapabilitiesCommand", "open_withCompressDeflateCapability_shouldEnableCompression", "open_withConnectionError_shouldThrow", "open_withInvalidHostname_shouldThrow", "open_withIoExceptionDuringCompressionCommand_shouldThrow", "open_withIoExceptionDuringListCommand_shouldThrow", "open_withNamespaceCapability_shouldIssueNamespaceCommand", "open_withNegativeResponseToCompressionCommand_shouldContinue", "open_withNegativeResponseToListCommand", "open_withNegativeResponseToStartTlsCommand_shouldThrow", "open_withNoCapabilitiesInInitialResponse_shouldIssuePreAuthCapabilitiesCommand", "open_withNoPostAuthCapabilityResponse_shouldIssueCapabilityCommand", "open_withPostAuthCapabilityResponse_shouldNotIssueCapabilityCommand", "open_withStartTlsButWithoutStartTlsCapability_shouldThrow", "open_withStartTlsCapability_shouldIssueStartTlsCommand", "open_withUntaggedPostAuthCapabilityResponse_shouldNotIssueCapabilityCommand", "sendContinuation" ],
        "k9mail§com.fsck.k9.message.extractors.EncryptionDetectorTest" : [ "isEncrypted_withInlinePgp_shouldReturnTrue", "isEncrypted_withMultipartEncrypted_shouldReturnTrue", "isEncrypted_withMultipartMixedContainingSMimePart_shouldReturnTrue", "isEncrypted_withPlainTextAndPreambleWithInlinePgp_shouldReturnFalse", "isEncrypted_withQuotedInlinePgp_shouldReturnFalse", "isEncrypted_withSMimePart_shouldReturnTrue", "isEncrypted_withTextPlain_shouldReturnFalse" ],
        "k9mail§com.fsck.k9.notification.NotificationContentCreatorTest" : [ "createFromMessage_withEncryptedMessage", "createFromMessage_withErrorPreview", "createFromMessage_withMessageFromSelf", "createFromMessage_withRegularMessage", "createFromMessage_withStarredMessage", "createFromMessage_withoutEmptyMessage", "createFromMessage_withoutPreview", "createFromMessage_withoutSender", "createFromMessage_withoutSubject" ]
      },
      "predecessor" : "a2ad2dd10b681aad1a395bd17f6c37fd2a2658ff~1"
    },
    "0cf4b8aaa5679934cc59b5103b80d417923a340d" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapConnectionTest" : [ "open_authCramMd5", "open_authCramMd5WithAuthenticationFailure_shouldThrow" ],
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "open_withAutomaticAuthAndNoTransportSecurityAndAuthCramMd5Extension_shouldUseAuthCramMd5", "open_withCramMd5AuthExtension" ],
        "k9mail§com.fsck.k9.helper.MessageHelperTest" : [ "testToFriendlyArray", "testToFriendlyShowsEmailPartIfNoPersonalPartExists", "testToFriendlyShowsPersonalPartIfItExists" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "testSimpleHtmlMessage", "testSimplePlainTextMessage" ]
      },
      "predecessor" : "0cf4b8aaa5679934cc59b5103b80d417923a340d~1"
    },
    "b49af84dc803c361244ece7e0333787d2e321573" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "extractMessage_multipartSigned_UnknownProtocol", "extractMessage_multipartSigned_UnknownProtocol_withExtraAttachments", "extractMessage_withAttachment", "extractMessage_withCryptoAnnotation", "extractMessage_withCryptoAnnotation_andExtraAttachment", "extractMessage_withCryptoAnnotation_andExtraText", "extractMessage_withCryptoAnnotation_andReplacementPart", "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.message.html.HtmlConverterTest" : [ "dashedHorizontalRulePrefixedWithTextIgnoredAsHR", "dashesContainingSpacesIgnoredAsHR", "doubleEqualsIgnoredAsHR", "doubleMinusIgnoredAsHR", "doubleUnderscoreIgnoredAsHR", "testPreserveSpacesAtFirst", "testPreserveSpacesAtFirstForSpecialCharacters", "testQuoteDepthColor", "testTextQuoteToHtmlBlockquote", "testTextQuoteToHtmlBlockquoteIndented" ]
      },
      "predecessor" : "0cf4b8aaa5679934cc59b5103b80d417923a340d"
    },
    "5a4a9042f1ee5d29eb0c1eec332ccdb4c7481479" : {
      "testcases" : {
        "k9mail§com.fsck.k9.message.html.HtmlSanitizerTest" : [ "shouldHtmlEncodeXmlDirectives", "shouldKeepHrTags", "shouldKeepInsDelTags", "shouldNormalizeTables", "shouldProduceValidHtmlFromHtmlWithXmlDeclaration", "shouldRemoveMetaRefreshBetweenHeadAndBody", "shouldRemoveMetaRefreshButKeepOtherMetaTags", "shouldRemoveMetaRefreshInBody", "shouldRemoveMetaRefreshInHead", "shouldRemoveMetaRefreshWithMixedCaseAttributeValue", "shouldRemoveMetaRefreshWithSpacesInAttributeValue", "shouldRemoveMetaRefreshWithUpperCaseAttributeValue", "shouldRemoveMetaRefreshWithoutQuotesAroundAttributeValue", "shouldRemoveMultipleMetaRefreshTags" ]
      },
      "predecessor" : "8014943e7d7feb798108d7420a54577caf6c9286"
    },
    "5f44e21aa1c06e5d31be00ef825bd5be02d79003" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.imap.ImapSyncTest" : [ "sync_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "sync_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "sync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "sync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "sync_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "sync_withEmptyRemoteFolder_shouldFinishWithoutError", "sync_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "sync_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "sync_withOneMessageInRemoteFolder_shouldFinishWithoutError", "sync_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "sync_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "sync_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "sync_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "5f44e21aa1c06e5d31be00ef825bd5be02d79003~1"
    },
    "6cecf17645c6d8901294f763fd9fee5c71cd8cc7" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress" ]
      },
      "predecessor" : "6cecf17645c6d8901294f763fd9fee5c71cd8cc7~1"
    },
    "d0c8cc3b57a26bfc9c722075bdf041ab7c4a649c" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientLoaderTest" : [ "queryCryptoProvider", "queryCryptoStatus_autocrypt_trusted", "queryCryptoStatus_autocrypt_untrusted", "queryCryptoStatus_unavailable", "queryCryptoStatus_withHigherUidStatus" ]
      },
      "predecessor" : "6cecf17645c6d8901294f763fd9fee5c71cd8cc7"
    },
    "1da373ad06212ec650b4b313e5b8f239967bf7cb" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport" ]
      },
      "predecessor" : "1da373ad06212ec650b4b313e5b8f239967bf7cb~1"
    },
    "11f6614a3b63371e2ce8b7d41623692990de2930" : {
      "testcases" : {
        "k9mail§com.fsck.k9.message.html.HtmlSanitizerTest" : [ "shouldKeepUris" ]
      },
      "predecessor" : "11f6614a3b63371e2ce8b7d41623692990de2930~1"
    },
    "5cbd0be7361b70f0ae96ced1504b058c6ff985c4" : {
      "testcases" : {
        "k9mail§com.fsck.k9.message.html.HtmlConverterTest" : [ "anyTripletIsHRuledOut", "dashedHorizontalRulePrefixedWithTextIgnoredAsHR", "dashesContainingSpacesIgnoredAsHR", "doubleEqualsIgnoredAsHR", "doubleMinusIgnoredAsHR", "doubleUnderscoreIgnoredAsHR", "issue2259Spec", "mergeConsecutiveBreaksIntoOne", "replaceSpaceSeparatedDashesWithHR", "replacementOfScissorsByHR", "replacementWithHRAtBeginning", "replacementWithHRAtEnd", "testPreserveSpacesAtFirst", "testPreserveSpacesAtFirstForSpecialCharacters", "testQuoteDepthColor", "testTextQuoteToHtmlBlockquote", "testTextQuoteToHtmlBlockquoteIndented" ]
      },
      "predecessor" : "5cbd0be7361b70f0ae96ced1504b058c6ff985c4~1"
    },
    "9b7a8cd8ab0847fd816bf113fd5def72681d1958" : {
      "testcases" : {
        "k9mail§com.fsck.k9.message.html.HtmlConverterTest" : [ "wrapMessageContent_addsPreCSS", "wrapMessageContent_addsViewportMetaElement", "wrapMessageContent_putsMessageContentInBody", "wrapMessageContent_setsDirToAuto", "wrapMessageContent_whenDarkMessageViewTheme_addsDarkThemeCSS" ]
      },
      "predecessor" : "9b7a8cd8ab0847fd816bf113fd5def72681d1958~1"
    },
    "a19773adfaf18029fcc056e4ce062475589f7c8d" : {
      "testcases" : {
        "k9mail§com.fsck.k9.helper.MessageHelperTest" : [ "testToFriendlyArray", "testToFriendlyShowsEmailPartIfNoPersonalPartExists", "testToFriendlyShowsPersonalPartIfItExists", "testToFriendlyWithContactLookup" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "extractMessage_multipartSigned_UnknownProtocol", "extractMessage_multipartSigned_UnknownProtocol_withExtraAttachments", "extractMessage_openPgpEncrypted_withoutAnnotations", "extractMessage_withCryptoAnnotation", "extractMessage_withCryptoAnnotation_andExtraAttachment", "extractMessage_withCryptoAnnotation_andExtraText", "extractMessage_withCryptoAnnotation_andReplacementPart" ],
        "k9mail§com.fsck.k9.message.MessageBuilderTest" : [ "build_detachAndReattach_shouldSucceed" ],
        "k9mail§com.fsck.k9.notification.NewMailNotificationsTest" : [ "testAddNewMailNotification", "testAddNewMailNotificationTwice", "testAddNewMailNotificationWithCancelingExistingNotification", "testAddNewMailNotificationWithPrivacyModeEnabled", "testClearNewMailNotifications", "testRemoveNewMailNotification", "testRemoveNewMailNotificationClearingAllNotifications", "testRemoveNewMailNotificationWithCreateNotification", "testRemoveNewMailNotificationWithUnknownMessageReference" ],
        "k9mail§com.fsck.k9.notification.NotificationContentCreatorTest" : [ "createFromMessage_withEncryptedMessage", "createFromMessage_withErrorPreview", "createFromMessage_withMessageFromSelf", "createFromMessage_withRegularMessage", "createFromMessage_withStarredMessage", "createFromMessage_withoutEmptyMessage", "createFromMessage_withoutPreview", "createFromMessage_withoutSender", "createFromMessage_withoutSubject" ],
        "k9mail§com.fsck.k9.notification.WearNotificationsTest" : [ "testAddSummaryActions", "testAddSummaryActionsWithArchiveAllActionEnabled", "testAddSummaryActionsWithDeleteAllActionEnabled", "testBuildStackedNotification", "testBuildStackedNotificationWithArchiveActionEnabled", "testBuildStackedNotificationWithDeleteActionEnabled", "testBuildStackedNotificationWithMarkAsSpamActionEnabled" ],
        "k9mail§com.fsck.k9.ui.crypto.MessageCryptoHelperTest" : [ "multipartEncrypted__withNullBody__shouldReturnEncryptedIncomplete", "multipartEncrypted__withUnknownProtocol__shouldReturnEncryptedUnsupported", "multipartSigned__withNullBody__shouldReturnSignedIncomplete", "multipartSigned__withSignOnlyDisabledAndNullBody__shouldReturnNothing", "multipartSigned__withSignOnlyDisabled__shouldReturnNothing", "multipartSigned__withUnknownProtocol__shouldReturnSignedUnsupported", "textPlain" ]
      },
      "predecessor" : "a19773adfaf18029fcc056e4ce062475589f7c8d~1"
    },
    "4436c7d90c28fb9ade41847966bf2271137a927a" : {
      "testcases" : {
        "k9mail§com.fsck.k9.message.html.HtmlConverterTest" : [ "anyTripletIsHRuledOut", "dashedHorizontalRulePrefixedWithTextIgnoredAsHR", "dashesContainingSpacesIgnoredAsHR", "doubleEqualsIgnoredAsHR", "doubleMinusIgnoredAsHR", "doubleUnderscoreIgnoredAsHR", "issue2259Spec", "mergeConsecutiveBreaksIntoOne", "replaceSpaceSeparatedDashesWithHR", "replacementOfScissorsByHR", "replacementWithHRAtBeginning", "replacementWithHRAtEnd", "testPreserveSpacesAtFirst", "testPreserveSpacesAtFirstForSpecialCharacters", "testQuoteDepthColor", "testTextQuoteToHtmlBlockquote", "testTextQuoteToHtmlBlockquoteIndented" ]
      },
      "predecessor" : "4436c7d90c28fb9ade41847966bf2271137a927a~1"
    },
    "7a648cb9ab5cf5a7283281d117a2d3e94d412285" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3FolderTest" : [ "close_onNonOpenedFolder_succeeds", "close_onOpenedFolder_closesConnection", "close_onOpenedFolder_sendsQUIT", "close_onOpenedFolder_succeeds", "close_withExceptionQuiting_ignoresException", "create_withHoldsFoldersArgument_shouldDoNothing", "create_withHoldsMessagesArgument_shouldDoNothing", "exists_withInbox_shouldReturnTrue", "exists_withNonInboxFolder_shouldReturnFalse", "fetch_withBodyProfile_setsContentOfMessage", "fetch_withEnvelopeProfile_setsSizeOfMessage", "getFlaggedMessageCount_shouldBeMinusOne", "getMessage_withNoPreviouslyFetchedMessage_returnsNewMessage", "getMessage_withPreviouslyFetchedMessage_returnsMessage", "getMessages_returnsListOfMessagesOnServer", "getMessages_withIOExceptionReadingLine_throwsException", "getMessages_withInvalidSet_throwsException", "getMode_withFolderOpenedInRO_isRW", "getUnreadMessageCount_shouldBeMinusOne", "open_whenAlreadyOpenWithValidConnection_doesNotCreateAnotherConnection", "open_withInboxFolderWithExceptionCreatingConnection_shouldThrow", "open_withInboxFolder_shouldSetMessageCountFromStatResponse", "open_withInboxFolder_whenStatCommandFails_shouldThrow", "open_withoutInboxFolder_shouldNotTryAndCreateConnection", "open_withoutInboxFolder_shouldThrow" ],
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3StoreTest" : [ "checkSetting_whenConnectionThrowsException_shouldThrowMessagingException", "checkSetting_whenUidlSupported_shouldReturn", "checkSetting_whenUidlUnsupported_shouldThrowMessagingException", "open_withAuthResponseUsingAuthPlain_shouldRetrieveMessageCountOnAuthenticatedSocket", "open_withFailedAuth_shouldThrow" ]
      },
      "predecessor" : "7a648cb9ab5cf5a7283281d117a2d3e94d412285~1"
    },
    "e80aa401defbe7b0eab0be7012b0cd8b4971feba" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.transport.smtp.SmtpTransportTest" : [ "SmtpTransport_withInvalidTransportUri_shouldThrow", "SmtpTransport_withValidTransportUri", "open_withAuthExternalExtension", "open_withAuthLoginExtension", "open_withAuthPlainExtension", "open_withAutomaticAuthAndNoTransportSecurityAndAuthCramMd5Extension_shouldUseAuthCramMd5", "open_withAutomaticAuthAndNoTransportSecurityAndAuthPlainExtension_shouldThrow", "open_withCramMd5AuthExtension", "open_withEhloFailing_shouldTryHelo", "open_withManyExtensions_shouldParseAll", "open_withSupportWithEnhancedStatusCodesOnAuthFailure_shouldThrowEncodedMessage", "open_withXoauth2Extension", "open_withXoauth2Extension_shouldInvalidateAndRetryOn400Response", "open_withXoauth2Extension_shouldInvalidateAndRetryOnInvalidJsonResponse", "open_withXoauth2Extension_shouldInvalidateAndRetryOnMissingStatusJsonResponse", "open_withXoauth2Extension_shouldThrowOn401Response", "open_withXoauth2Extension_shouldThrowOnFailure_fetchingToken", "open_withXoauth2Extension_shouldThrowOnMultipleFailure", "open_withoutAuthExternalExtension_shouldThrow", "open_withoutAuthLoginExtension_shouldConnectWithoutAuthentication", "open_withoutCramMd5AuthExtension_shouldThrow", "open_withoutLoginAndPlainAuthExtensions_shouldThrow", "open_withoutXoauth2Extension_shouldThrow", "sendMessagePipelining_with250and550ReplyforRecipientsAnd250ForMessage_shouldThrow", "sendMessagePipelining_with250and550ReplyforRecipients_shouldThrow", "sendMessagePipelining_withNegativeReply", "sendMessagePipelining_without354ReplyforData_shouldThrow", "sendMessage_with8BitEncoding", "sendMessage_with8BitEncodingExtensionNotCaseSensitive", "sendMessage_withMessageTooLarge_shouldThrow", "sendMessage_withNegativeReply_shouldThrow", "sendMessage_withPipelining", "sendMessage_withSingleRecipient", "sendMessage_withoutAddressToSendTo_shouldNotOpenConnection", "sendMessage_withoutPipelining" ],
        "k9mail§com.fsck.k9.helper.MessageHelperTest" : [ "testToFriendlyArray", "testToFriendlyShowsEmailPartIfNoPersonalPartExists", "testToFriendlyShowsPersonalPartIfItExists", "testToFriendlyWithContactLookup" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "extractMessage_multipartSigned_UnknownProtocol", "extractMessage_multipartSigned_UnknownProtocol_withExtraAttachments", "extractMessage_openPgpEncrypted_withoutAnnotations", "extractMessage_withCryptoAnnotation", "extractMessage_withCryptoAnnotation_andExtraAttachment", "extractMessage_withCryptoAnnotation_andExtraText", "extractMessage_withCryptoAnnotation_andReplacementPart" ],
        "k9mail§com.fsck.k9.message.MessageBuilderTest" : [ "build_detachAndReattach_shouldSucceed" ],
        "k9mail§com.fsck.k9.message.html.HtmlConverterTest" : [ "anyTripletIsHRuledOut", "dashedHorizontalRulePrefixedWithTextIgnoredAsHR", "dashesContainingSpacesIgnoredAsHR", "doubleEqualsIgnoredAsHR", "doubleMinusIgnoredAsHR", "doubleUnderscoreIgnoredAsHR", "issue2259Spec", "mergeConsecutiveBreaksIntoOne", "replaceSpaceSeparatedDashesWithHR", "replacementOfScissorsByHR", "replacementWithHRAtBeginning", "replacementWithHRAtEnd", "testPreserveSpacesAtFirst", "testPreserveSpacesAtFirstForSpecialCharacters", "testQuoteDepthColor", "testTextQuoteToHtmlBlockquote", "testTextQuoteToHtmlBlockquoteIndented" ],
        "k9mail§com.fsck.k9.notification.NewMailNotificationsTest" : [ "testAddNewMailNotification", "testAddNewMailNotificationTwice", "testAddNewMailNotificationWithCancelingExistingNotification", "testAddNewMailNotificationWithPrivacyModeEnabled", "testClearNewMailNotifications", "testRemoveNewMailNotification", "testRemoveNewMailNotificationClearingAllNotifications", "testRemoveNewMailNotificationWithCreateNotification", "testRemoveNewMailNotificationWithUnknownMessageReference" ],
        "k9mail§com.fsck.k9.notification.NotificationContentCreatorTest" : [ "createFromMessage_withEncryptedMessage", "createFromMessage_withErrorPreview", "createFromMessage_withMessageFromSelf", "createFromMessage_withRegularMessage", "createFromMessage_withStarredMessage", "createFromMessage_withoutEmptyMessage", "createFromMessage_withoutPreview", "createFromMessage_withoutSender", "createFromMessage_withoutSubject" ],
        "k9mail§com.fsck.k9.notification.WearNotificationsTest" : [ "testAddSummaryActions", "testAddSummaryActionsWithArchiveAllActionEnabled", "testAddSummaryActionsWithDeleteAllActionEnabled", "testBuildStackedNotification", "testBuildStackedNotificationWithArchiveActionEnabled", "testBuildStackedNotificationWithDeleteActionEnabled", "testBuildStackedNotificationWithMarkAsSpamActionEnabled" ],
        "k9mail§com.fsck.k9.ui.crypto.MessageCryptoHelperTest" : [ "multipartEncrypted__withNullBody__shouldReturnEncryptedIncomplete", "multipartEncrypted__withUnknownProtocol__shouldReturnEncryptedUnsupported", "multipartSigned__withNullBody__shouldReturnSignedIncomplete", "multipartSigned__withSignOnlyDisabledAndNullBody__shouldReturnNothing", "multipartSigned__withSignOnlyDisabled__shouldReturnNothing", "multipartSigned__withUnknownProtocol__shouldReturnSignedUnsupported", "textPlain" ]
      },
      "predecessor" : "7a648cb9ab5cf5a7283281d117a2d3e94d412285"
    },
    "64badd8646b906f7a406757090afaccff4d93297" : {
      "testcases" : {
        "k9mail§com.fsck.k9.helper.MessageHelperTest" : [ "testToFriendlyArray", "testToFriendlyShowsEmailPartIfNoPersonalPartExists", "testToFriendlyShowsPersonalPartIfItExists", "testToFriendlyWithChangeContactColor", "testToFriendlyWithContactLookup", "testToFriendlyWithoutCorrespondentNames" ],
        "k9mail§com.fsck.k9.notification.NotificationContentCreatorTest" : [ "createFromMessage_withEncryptedMessage", "createFromMessage_withErrorPreview", "createFromMessage_withMessageFromSelf", "createFromMessage_withRegularMessage", "createFromMessage_withStarredMessage", "createFromMessage_withoutPreview", "createFromMessage_withoutSubject" ]
      },
      "predecessor" : "e80aa401defbe7b0eab0be7012b0cd8b4971feba"
    },
    "5931d46a422763ce747cec6f12fd62639bf9e82e" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.internet.DecoderUtilTest" : [ "decodeEncodedWords_withAsciiCharset_encoded_data_returns_text", "decodeEncodedWords_withEncodedWordAndOnlyStartAndSeparatorOfEncodedWord_shouldDecodeAndAddSuffix", "decodeEncodedWords_withEncodedWordAndOnlyStartAndThreeSeparatorsOfEncodedWord_shouldDecodeAndAddSuffix", "decodeEncodedWords_withEncodedWordAndOnlyStartAndTwoSeparatorsOfEncodedWord_shouldDecodeAndAddSuffix", "decodeEncodedWords_withEncodedWordAndOnlyStartOfEncodedWord_shouldDecodeAndAddSuffix", "decodeEncodedWords_withEncodedWordFollowedByEncodedWordWithDifferentCharset_shouldDecodeIndividually", "decodeEncodedWords_withEncodedWordFollowedByEncodedWordWithDifferentEncoding_shouldDecodeIndividually", "decodeEncodedWords_withEncodedWordNonWhitespaceSeparatorEncodedWord_shouldDecodeBothAndKeepSeparator", "decodeEncodedWords_withEncodedWordSeparatorEncodedWordWithDifferentEncoding_shouldDecodeIndividuallyAndKeepSeparator", "decodeEncodedWords_withEncodedWordWhitespaceInvalidEncodedWord_shouldOnlyDecodeEncodedWord", "decodeEncodedWords_withInvalidBase64String_returnsEmptyString", "decodeEncodedWords_withInvalidEncodedWordWhitespaceEncodedWord_shouldOnlyDecodeEncodedWord", "decodeEncodedWords_withInvalidEncodedWordWhitespaceInvalidEncodedWord_shouldReturnInputText", "decodeEncodedWords_withInvalidEncodedWord_shouldReturnInputText", "decodeEncodedWords_withMissingCharset_returnAsText", "decodeEncodedWords_withMissingEncoding_returnAsText", "decodeEncodedWords_withMultipleEncodedSectionsButCharsetAndEncodingDifferingInCase_decodesSequentialSectionTogether", "decodeEncodedWords_withMultipleEncodedSections_decodesBoth", "decodeEncodedWords_withMultipleEncodedSections_decodesSequentialSectionTogether", "decodeEncodedWords_withNoTextCharsetOrEncoding_returnAsText", "decodeEncodedWords_withPartiallyEncodedAfter_returnsBothSections", "decodeEncodedWords_withPartiallyEncoded_returnsBothSections", "decodeEncodedWords_withRFC2047examples_decodesCorrectly", "decodeEncodedWords_withSeparatorsOnly_returnAsText", "decodeEncodedWords_withStartAnd2SeparatorOnly_returnAsText", "decodeEncodedWords_withStartAnd3SeparatorOnly_returnAsText", "decodeEncodedWords_withStartAndSeparatorOnly_returnAsText", "decodeEncodedWords_withStartOnly_encoding_format_returnAsText", "decodeEncodedWords_withTextAndMissingCharset_returnAsText", "decodeEncodedWords_withUnrecognisedCharset_returnsEncodedData", "decodeEncodedWords_withUnrecognisedEncoding_withEncodedData_return_encoded_data", "decodeEncodedWords_with_MissingEncodingAndData_returnAsText", "decodeEncodedWords_with_incompleteEncodingFormat_returnAsText", "decodeEncodedWords_with_unencoded_data_returns_original_text", "decodeEncodedWords_with_unrecognisedEncoding_withEmptyEncodedData_returnAsText" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "autoconfigureFolders_withoutSpecialUseCapability_shouldNotIssueImapCommand", "checkSettings_shouldCreateImapConnectionAndCallOpen", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withIoException_shouldCloseImapConnection", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ],
        "k9mail§com.fsck.k9.crypto.MessageCryptoStructureDetectorTest" : [ "findEncrypted__withBadProtocolAndNoBody__shouldReturnRoot", "findEncrypted__withBadProtocol__shouldReturnEmpty", "findEncrypted__withBadStructure__shouldReturnEmpty", "findEncrypted__withEmptyProtocol__shouldReturnEmpty", "findEncrypted__withMissingEncryptedBody__shouldReturnEmpty", "findEncrypted__withMultipartEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubEncryptedAndEncrypted__shouldReturnBoth", "findEncrypted__withMultipartMixedSubEncryptedAndText__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubEncrypted__shouldReturnRoot", "findEncrypted__withMultipartMixedSubSignedAndText__shouldReturnSigned", "findEncrypted__withMultipartMixedSubSigned__shouldReturnSigned", "findEncrypted__withMultipartMixedSubTextAndEncrypted__shouldReturnEncrypted", "findEncrypted__withMultipartMixedSubTextAndSigned__shouldReturnSigned", "findPrimaryCryptoPart_withEmptyMultipartAlternativeInsideMultipartMixed_shouldReturnNull", "findPrimaryCryptoPart_withEmptyMultipartAlternative_shouldReturnNull", "findPrimaryCryptoPart_withEmptyMultipartMixed_shouldReturnNull", "findPrimaryCryptoPart_withMultipartAlternativeContainingPgpInline", "findPrimaryCryptoPart_withMultipartMixedContainingMultipartAlternativeContainingPgpInline", "findPrimaryCryptoPart_withMultipartMixedContainingPgpInline", "findPrimaryCryptoPart_withSimplePgpInline", "findSigned__withBadProtocol__shouldReturnNothing", "findSigned__withComplexMultipartSigned__shouldReturnRoot", "findSigned__withEmptyProtocol__shouldReturnRoot", "findSigned__withMissingSignature__shouldReturnEmpty", "findSigned__withNoProtocolAndNoBody__shouldReturnRoot", "findSigned__withSimpleMultipartSigned__shouldReturnRoot" ],
        "k9mail§com.fsck.k9.helper.MessageHelperTest" : [ "testToFriendlyArray", "testToFriendlyShowsPersonalPartIfItExists", "testToFriendlyWithChangeContactColor", "testToFriendlyWithContactLookup", "testToFriendlyWithoutCorrespondentNames" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "extractMessage_multipartSigned_UnknownProtocol", "extractMessage_multipartSigned_UnknownProtocol_withExtraAttachments", "extractMessage_openPgpEncrypted_withoutAnnotations", "extractMessage_withAttachment", "extractMessage_withCryptoAnnotation", "extractMessage_withCryptoAnnotation_andExtraAttachment", "extractMessage_withCryptoAnnotation_andExtraText", "extractMessage_withCryptoAnnotation_andReplacementPart", "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimpleHtmlMessage", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.message.extractors.AttachmentInfoExtractorTest" : [ "extractInfoForDb__withContentTypeAndEncodedWordName__shouldReturnDecodedName", "extractInfoForDb__withContentTypeAndName__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionAttach__shouldReturnNamedAttachment", "extractInfoForDb__withDispositionInlineAndContentIdAndImageMimeType__shouldReturnInlineAttachment", "extractInfoForDb__withDispositionInlineAndContentIdAndMissingMimeType__shouldNotReturnInlineAttachment", "extractInfoForDb__withDispositionInvalidSizeParam__shouldReturnUnknownSize", "extractInfoForDb__withDispositionSizeParam__shouldReturnThatSize", "extractInfoForDb__withNoBody__shouldReturnContentAvailable", "extractInfoForDb__withNoBody__shouldReturnContentNotAvailable", "extractInfoForDb__withNoHeaders__shouldReturnEmptyValues", "extractInfoForDb__withTextMimeType__shouldReturnTxtExtension", "extractInfo__fromLocalBodyPart__shouldReturnProvidedValues", "extractInfo__withDeferredFileBody" ],
        "k9mail§com.fsck.k9.message.extractors.EncryptionDetectorTest" : [ "isEncrypted_withInlinePgp_shouldReturnTrue", "isEncrypted_withMultipartEncrypted_shouldReturnTrue", "isEncrypted_withMultipartMixedContainingSMimePart_shouldReturnTrue", "isEncrypted_withPlainTextAndPreambleWithInlinePgp_shouldReturnFalse", "isEncrypted_withQuotedInlinePgp_shouldReturnFalse", "isEncrypted_withSMimePart_shouldReturnTrue", "isEncrypted_withTextPlain_shouldReturnFalse" ],
        "k9mail§com.fsck.k9.notification.NotificationContentCreatorTest" : [ "createFromMessage_withEncryptedMessage", "createFromMessage_withErrorPreview", "createFromMessage_withMessageFromSelf", "createFromMessage_withRegularMessage", "createFromMessage_withStarredMessage", "createFromMessage_withoutPreview", "createFromMessage_withoutSubject" ],
        "k9mail§com.fsck.k9.ui.crypto.MessageCryptoHelperTest" : [ "multipartEncrypted__withNullBody__shouldReturnEncryptedIncomplete", "multipartEncrypted__withUnknownProtocol__shouldReturnEncryptedUnsupported", "multipartSigned__withNullBody__shouldReturnSignedIncomplete", "multipartSigned__withSignOnlyDisabledAndNullBody__shouldReturnNothing", "multipartSigned__withSignOnlyDisabled__shouldReturnNothing", "multipartSigned__withUnknownProtocol__shouldReturnSignedUnsupported", "textPlain" ]
      },
      "predecessor" : "3e64739503b5d328dfd8e67eaecb52f16e71dbe7"
    },
    "1962defd5a8f5efd9d03bcb1bf42e1786b95f256" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "extractMessage_multipartSigned_UnknownProtocol", "extractMessage_multipartSigned_UnknownProtocol_withExtraAttachments", "extractMessage_withAttachment", "extractMessage_withCryptoAnnotation", "extractMessage_withCryptoAnnotation_andExtraAttachment", "extractMessage_withCryptoAnnotation_andExtraText", "extractMessage_withCryptoAnnotation_andReplacementPart" ]
      },
      "predecessor" : "5931d46a422763ce747cec6f12fd62639bf9e82e"
    },
    "dae9c44182a0551a8d9b12ac981752225a2fabb5" : {
      "testcases" : {
        "k9mail§com.fsck.k9.autocrypt.AutocryptHeaderTest" : [ "toRawHeaderString_returnsExpected" ]
      },
      "predecessor" : "e8fdcbb00da6e0071cea045a3bbceca706772478"
    },
    "ace7557a6c59839bedd8d719dc4ed07d4fc29ee3" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "extractMessage_multipartSigned_UnknownProtocol", "extractMessage_multipartSigned_UnknownProtocol_withExtraAttachments", "extractMessage_withAttachment", "extractMessage_withCryptoAnnotation", "extractMessage_withCryptoAnnotation_andExtraAttachment", "extractMessage_withCryptoAnnotation_andExtraText", "extractMessage_withCryptoAnnotation_andReplacementPart", "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.message.html.BitcoinUriParserTest" : [ "basicBitcoinUri", "bitcoinUriWithAmount", "bitcoinUriWithQueryParameters", "invalidAddress", "invalidScheme", "uriInMiddleOfInput" ],
        "k9mail§com.fsck.k9.message.html.EthereumUriParserTest" : [ "basicEthereumUri", "ethereumUriWithValue", "invalidAddress", "invalidScheme", "uriInMiddleOfInput" ],
        "k9mail§com.fsck.k9.message.html.HtmlConverterTest" : [ "anyTripletIsHRuledOut", "dashedHorizontalRulePrefixedWithTextIgnoredAsHR", "dashesContainingSpacesIgnoredAsHR", "doubleEqualsIgnoredAsHR", "doubleMinusIgnoredAsHR", "doubleUnderscoreIgnoredAsHR", "issue2259Spec", "mergeConsecutiveBreaksIntoOne", "replaceSpaceSeparatedDashesWithHR", "replacementOfScissorsByHR", "replacementWithHRAtBeginning", "replacementWithHRAtEnd", "testPreserveSpacesAtFirst", "testPreserveSpacesAtFirstForSpecialCharacters", "testQuoteDepthColor", "testTextQuoteToHtmlBlockquote", "testTextQuoteToHtmlBlockquoteIndented" ],
        "k9mail§com.fsck.k9.message.html.HttpUriParserTest" : [ "domainWithFullUserInfo", "domainWithTrailingAngleBracket", "domainWithTrailingNewline", "domainWithTrailingSlash", "domainWithTrailingSpace", "domainWithUserInfo", "domainWithoutWww", "emptyAuthorityIgnored", "emptyUriIgnored", "fragment", "invalidDomainIgnored", "ipv4Address", "ipv4AddressWithEmptyPort", "ipv4AddressWithPort", "ipv4AddressWithTrailingSlash", "ipv6Address", "ipv6AddressWithBeginCompression", "ipv6AddressWithCompressionPort", "ipv6AddressWithEndCompression", "ipv6AddressWithPort", "ipv6AddressWithPrependedCompression", "ipv6AddressWithTrailingIp4AndPort", "ipv6AddressWithTrailingSlash", "ipv6InvalidClosingSquareBracketIgnored", "ipv6WithoutClosingSquareBracketIgnored", "query", "queryAndFragment", "simpleDomain", "simpleDomainWithHttps", "simpleRtspUri", "uriInMiddleAfterInput", "uriInMiddleOfInput" ],
        "k9mail§com.fsck.k9.message.html.UriLinkifierTest" : [ "emptyText", "multipleValidUrisInRow", "schemaMatchWithInvalidUriInMiddleOfTextFollowedByValidUri", "simpleUri", "textWithoutUri_shouldBeCopiedToOutputBuffer", "uriEmbeddedInText", "uriNotPrecededByValidSeparatorFollowedByValidUri", "uriNotPrecededByValidSeparator_shouldNotBeLinkified", "uriPrecededByOpeningParenthesis", "uriPrecededBySomeText", "uriPrecededBySpace", "uriSurroundedByHtmlTags", "uriWithTrailingText", "uriWithUppercaseScheme" ]
      },
      "predecessor" : "da2c025570a98f2a7bc8729c26087e46b6c904f1"
    },
    "be1dc3f21c19462e85317d34cb0456aa5cd81149" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "extractMessage_multipartSigned_UnknownProtocol", "extractMessage_multipartSigned_UnknownProtocol_withExtraAttachments", "extractMessage_withAttachment", "extractMessage_withCryptoAnnotation", "extractMessage_withCryptoAnnotation_andExtraAttachment", "extractMessage_withCryptoAnnotation_andExtraText", "extractMessage_withCryptoAnnotation_andReplacementPart", "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.message.html.HtmlConverterTest" : [ "anyTripletIsHRuledOut", "dashedHorizontalRulePrefixedWithTextIgnoredAsHR", "dashesContainingSpacesIgnoredAsHR", "doubleEqualsIgnoredAsHR", "doubleMinusIgnoredAsHR", "doubleUnderscoreIgnoredAsHR", "issue2259Spec", "mergeConsecutiveBreaksIntoOne", "replaceSpaceSeparatedDashesWithHR", "replacementOfScissorsByHR", "replacementWithHRAtBeginning", "replacementWithHRAtEnd", "testPreserveSpacesAtFirst", "testPreserveSpacesAtFirstForSpecialCharacters", "testQuoteDepthColor", "testTextQuoteToHtmlBlockquote", "testTextQuoteToHtmlBlockquoteIndented" ]
      },
      "predecessor" : "ace7557a6c59839bedd8d719dc4ed07d4fc29ee3"
    },
    "7abc17c77a9ab34855f6088c4a71973e62a05d67" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "extractMessage_multipartSigned_UnknownProtocol", "extractMessage_multipartSigned_UnknownProtocol_withExtraAttachments", "extractMessage_withAttachment", "extractMessage_withCryptoAnnotation", "extractMessage_withCryptoAnnotation_andExtraAttachment", "extractMessage_withCryptoAnnotation_andExtraText", "extractMessage_withCryptoAnnotation_andReplacementPart", "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.message.html.HtmlConverterTest" : [ "anyTripletIsHRuledOut", "dashedHorizontalRulePrefixedWithTextIgnoredAsHR", "dashesContainingSpacesIgnoredAsHR", "doubleEqualsIgnoredAsHR", "doubleMinusIgnoredAsHR", "doubleUnderscoreIgnoredAsHR", "issue2259Spec", "mergeConsecutiveBreaksIntoOne", "replaceSpaceSeparatedDashesWithHR", "replacementOfScissorsByHR", "replacementWithHRAtBeginning", "replacementWithHRAtEnd", "testPreserveSpacesAtFirst", "testPreserveSpacesAtFirstForSpecialCharacters", "testQuoteDepthColor", "testTextQuoteToHtmlBlockquote", "testTextQuoteToHtmlBlockquoteIndented", "wrapMessageContent_addsPreCSS", "wrapMessageContent_addsViewportMetaElement", "wrapMessageContent_putsMessageContentInBody", "wrapMessageContent_setsDirToAuto", "wrapMessageContent_whenDarkMessageViewTheme_addsDarkThemeCSS" ]
      },
      "predecessor" : "990765ac6e234dc78bcdce6a705dd5b356336c5b"
    },
    "3009752cac4a0f7ea6341bbef01e41cf4ab27963" : {
      "testcases" : {
        "k9mail§com.fsck.k9.autocrypt.AutocryptHeaderTest" : [ "toRawHeaderString_returnsExpected" ]
      },
      "predecessor" : "3009752cac4a0f7ea6341bbef01e41cf4ab27963~1"
    },
    "3ad98129740bb102d00bdb439b728f1628cdbab4" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "synchronizeMailboxSynchronousLegacy_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronousLegacy_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronousLegacy_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronousLegacy_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronousLegacy_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronousLegacy_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronousLegacy_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronousLegacy_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronousLegacy_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronousLegacy_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronousLegacy_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.controller.imap.ImapSyncTest" : [ "sync_shouldFetchUnsynchronizedMessagesListAndFlags", "sync_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "sync_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "sync_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "sync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "sync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "sync_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "sync_withEmptyRemoteFolder_shouldFinishWithoutError", "sync_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "sync_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "sync_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "sync_withOneMessageInRemoteFolder_shouldFinishWithoutError", "sync_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "sync_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "sync_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "sync_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "3ad98129740bb102d00bdb439b728f1628cdbab4~1"
    },
    "9018b5d99d8cbe1bc1d7cd0cc3b514ede664a74b" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "extractMessage_multipartSigned_UnknownProtocol", "extractMessage_multipartSigned_UnknownProtocol_withExtraAttachments", "extractMessage_withAttachment", "extractMessage_withCryptoAnnotation", "extractMessage_withCryptoAnnotation_andExtraAttachment", "extractMessage_withCryptoAnnotation_andExtraText", "extractMessage_withCryptoAnnotation_andReplacementPart", "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.message.html.HtmlConverterTest" : [ "anyTripletIsHRuledOut", "dashedHorizontalRulePrefixedWithTextIgnoredAsHR", "dashesContainingSpacesIgnoredAsHR", "doubleEqualsIgnoredAsHR", "doubleMinusIgnoredAsHR", "doubleUnderscoreIgnoredAsHR", "issue2259Spec", "mergeConsecutiveBreaksIntoOne", "replaceSpaceSeparatedDashesWithHR", "replacementOfScissorsByHR", "replacementWithHRAtBeginning", "replacementWithHRAtEnd", "testPreserveSpacesAtFirst", "testPreserveSpacesAtFirstForSpecialCharacters", "testQuoteDepthColor", "testTextQuoteToHtmlBlockquote", "testTextQuoteToHtmlBlockquoteIndented", "wrapMessageContent_addsPreCSS", "wrapMessageContent_addsViewportMetaElement", "wrapMessageContent_putsMessageContentInBody", "wrapMessageContent_setsDirToAuto", "wrapMessageContent_whenDarkMessageViewTheme_addsDarkThemeCSS" ]
      },
      "predecessor" : "9018b5d99d8cbe1bc1d7cd0cc3b514ede664a74b~1"
    },
    "1645c38eac94aa80a632a945840c2662b2066ff0" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "synchronizeMailboxSynchronousLegacy_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronousLegacy_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronousLegacy_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronousLegacy_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronousLegacy_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronousLegacy_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronousLegacy_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronousLegacy_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronousLegacy_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronousLegacy_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronousLegacy_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.controller.imap.ImapSyncTest" : [ "sync_shouldFetchUnsynchronizedMessagesListAndFlags", "sync_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "sync_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "sync_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "sync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "sync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "sync_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "sync_withEmptyRemoteFolder_shouldFinishWithoutError", "sync_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "sync_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "sync_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "sync_withOneMessageInRemoteFolder_shouldFinishWithoutError", "sync_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "sync_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "sync_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "sync_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "1645c38eac94aa80a632a945840c2662b2066ff0~1"
    },
    "0cec6945af19ecb206b9e999a95b8adb0a348c80" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "synchronizeMailboxSynchronousLegacy_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronousLegacy_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronousLegacy_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronousLegacy_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronousLegacy_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronousLegacy_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronousLegacy_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronousLegacy_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronousLegacy_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronousLegacy_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronousLegacy_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.controller.imap.ImapSyncTest" : [ "sync_shouldFetchUnsynchronizedMessagesListAndFlags", "sync_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "sync_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "sync_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "sync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "sync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "sync_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "sync_withEmptyRemoteFolder_shouldFinishWithoutError", "sync_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "sync_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "sync_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "sync_withOneMessageInRemoteFolder_shouldFinishWithoutError", "sync_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "sync_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "sync_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "sync_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "extractMessage_multipartSigned_UnknownProtocol", "extractMessage_multipartSigned_UnknownProtocol_withExtraAttachments", "extractMessage_withAttachment", "extractMessage_withCryptoAnnotation", "extractMessage_withCryptoAnnotation_andExtraAttachment", "extractMessage_withCryptoAnnotation_andExtraText", "extractMessage_withCryptoAnnotation_andReplacementPart", "testMultipartDigestWithMessages", "testMultipartPlainTextMessage", "testShouldSanitizeOutputHtml", "testSimplePlainTextMessage", "testTextPlainFormatFlowed", "testTextPlusRfc822Message" ],
        "k9mail§com.fsck.k9.message.html.HtmlConverterTest" : [ "anyTripletIsHRuledOut", "dashedHorizontalRulePrefixedWithTextIgnoredAsHR", "dashesContainingSpacesIgnoredAsHR", "doubleEqualsIgnoredAsHR", "doubleMinusIgnoredAsHR", "doubleUnderscoreIgnoredAsHR", "issue2259Spec", "mergeConsecutiveBreaksIntoOne", "replaceSpaceSeparatedDashesWithHR", "replacementOfScissorsByHR", "replacementWithHRAtBeginning", "replacementWithHRAtEnd", "testPreserveSpacesAtFirst", "testPreserveSpacesAtFirstForSpecialCharacters", "testQuoteDepthColor", "testTextQuoteToHtmlBlockquote", "testTextQuoteToHtmlBlockquoteIndented", "wrapMessageContent_addsPreCSS", "wrapMessageContent_addsViewportMetaElement", "wrapMessageContent_putsMessageContentInBody", "wrapMessageContent_setsDirToAuto", "wrapMessageContent_whenDarkMessageViewTheme_addsDarkThemeCSS" ]
      },
      "predecessor" : "f1fd332ee0fb15a42b784f56d4b043caf6f23940"
    },
    "57adcef3f406438a6f0db22e96b9e8975b920c64" : {
      "testcases" : {
        "k9mail§com.fsck.k9.notification.WearNotificationsTest" : [ "testAddSummaryActions", "testAddSummaryActionsWithArchiveAllActionEnabled", "testAddSummaryActionsWithDeleteAllActionEnabled", "testBuildStackedNotification", "testBuildStackedNotificationWithArchiveActionEnabled", "testBuildStackedNotificationWithDeleteActionEnabled", "testBuildStackedNotificationWithMarkAsSpamActionEnabled" ]
      },
      "predecessor" : "0cec6945af19ecb206b9e999a95b8adb0a348c80"
    },
    "ad6659bf003302a272e840521772d20599e8c52d" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientLoaderTest" : [ "queryContactProvider", "queryContactProvider_ignoresRecipientWithNoEmail", "queryCryptoProvider", "queryCryptoStatus_autocrypt_trusted", "queryCryptoStatus_autocrypt_untrusted", "queryCryptoStatus_unavailable", "queryCryptoStatus_withHigherUidStatus" ]
      },
      "predecessor" : "57adcef3f406438a6f0db22e96b9e8975b920c64"
    },
    "b116afc124b0c22f65c8676e3d05850d34c4e540" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_removeNamespacePrefix", "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "autoconfigureFolders_withoutSpecialUseCapability_shouldNotIssueImapCommand", "checkSettings_shouldCreateImapConnectionAndCallOpen", "checkSettings_withOpenThrowing_shouldThrowMessagingException", "getConnection_calledAfterReleaseWithAClosedConnection_shouldReturnNewImapConnectionInstance", "getConnection_calledAfterRelease_shouldReturnCachedImapConnection", "getConnection_calledTwiceWithoutRelease_shouldCreateTwoImapConnection", "getConnection_shouldCreateImapConnection", "getConnection_withDeadConnectionInPool_shouldReturnNewImapConnectionInstance", "getFolder_calledTwice_shouldReturnFirstInstance", "getFolder_shouldReturnImapFolderInstance", "getPersonalNamespaces_withFolderNotMatchingNamespacePrefix_shouldExcludeFolderWithoutPrefix", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withIoException_shouldCloseImapConnection", "getPersonalNamespaces_withNamespacePrefix_shouldRemoveNamespacePrefix", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ],
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3StoreTest" : [ "checkSetting_whenConnectionThrowsException_shouldThrowMessagingException", "checkSetting_whenUidlSupported_shouldReturn", "checkSetting_whenUidlUnsupported_shouldThrowMessagingException", "createUri_withCRAMMD5_shouldProduceCRAMMD5AuthUri", "createUri_withEXTERNAL_shouldProduceExternalAuthUri", "createUri_withNONE_shouldProducePop3Uri", "createUri_withPLAIN_shouldProducePlainAuthUri", "createUri_withSSLTLS_required_shouldProduceSSLUri", "createUri_withSTARTTLSRequired_shouldProduceTLSUri", "decodeUri_withExternalCertificateShouldProvideAlias_shouldUseNoSecurity", "decodeUri_withNonPop3Uri_shouldThrowException", "decodeUri_withPlainUri_shouldUseNoSecurity", "decodeUri_withTLSUri_shouldUseStartTls", "getFolder_shouldReturnFolderWithCorrectName", "getFolder_shouldReturnSameFolderEachTime", "getPersonalNamespace_shouldReturnListConsistingOfInbox", "isSeenFlagSupported_shouldReturnFalse", "open_withAuthResponseUsingAuthPlain_shouldRetrieveMessageCountOnAuthenticatedSocket", "open_withFailedAuth_shouldThrow", "withInvalidStoreUri_shouldThrowMessagingException" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavStoreTest" : [ "checkSettings_shouldRegisterHttpsSchemeWithRegistry", "checkSettings_withErrorResponse_shouldThrow", "checkSettings_withHttpPrefixedServerName_shouldUseInsecureConnection", "checkSettings_withInitialUnauthorizedResponse_shouldPerformBasicAuthentication", "checkSettings_withOkResponse_shouldPerformFormBasedAuthentication", "checkSettings_withSslException_shouldThrowCertificateValidationException", "checkSettings_withUnauthorizedResponses_shouldThrow", "checkSettings_withWebDavSslUri_shouldUseSecureConnection", "checkSettings_withWebDavTlsUri_shouldUseSecureConnection", "checkSettings_withWebDavUri_shouldUseInsecureConnection", "constructor_withImapStoreUri_shouldThrow", "getFolder_calledTwice_shouldReturnFirstInstance", "getFolder_shouldReturnWebDavFolderInstance", "getPersonalNamespaces_shouldProvideListOfAllFoldersSentFromResponses", "getPersonalNamespaces_shouldRequestFolderList", "getPersonalNamespaces_shouldRequestSpecialFolders", "getPersonalNamespaces_shouldSetSpecialFolderNames" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "synchronizeMailboxSynchronousLegacy_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronousLegacy_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronousLegacy_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronousLegacy_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronousLegacy_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronousLegacy_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronousLegacy_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronousLegacy_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronousLegacy_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronousLegacy_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronousLegacy_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.controller.imap.ImapSyncTest" : [ "sync_shouldFetchUnsynchronizedMessagesListAndFlags", "sync_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "sync_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "sync_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "sync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "sync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "sync_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "sync_withEmptyRemoteFolder_shouldFinishWithoutError", "sync_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "sync_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "sync_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "sync_withOneMessageInRemoteFolder_shouldFinishWithoutError", "sync_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "sync_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "sync_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "sync_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "b116afc124b0c22f65c8676e3d05850d34c4e540~1"
    },
    "03f6661f817c6f3aa42b2bec32482a623ce2d672" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withClosedFolder_shouldThrow", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "copyMessages_withClosedFolder_shouldThrow", "create_withClosedFolder_shouldOpenConnectionAndIssueCreateCommand", "create_withNegativeImapResponse_shouldReturnFalse", "create_withoutNegativeImapResponse_shouldReturnTrue", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "exists_withClosedFolder_shouldOpenConnectionAndIssueStatusCommand", "exists_withNegativeImapResponse_shouldReturnFalse", "exists_withoutNegativeImapResponse_shouldReturnTrue", "expungeUids_withUidPlus_shouldIssueUidExpungeCommand", "expungeUids_withoutUidPlus_shouldIssueExpungeCommand", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "fetch_withStructureFetchProfile_shouldSetContentType", "getFlaggedMessageCount", "getFlaggedMessageCount_withClosedFolder_shouldThrow", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessagesFromUids", "getMessagesFromUids_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withClosedFolder_shouldThrow", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "getUnreadMessageCount_withClosedFolder_shouldThrow", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_removeNamespacePrefix", "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "autoconfigureFolders_withoutSpecialUseCapability_shouldNotIssueImapCommand", "checkSettings_shouldCreateImapConnectionAndCallOpen", "getPersonalNamespaces_withFolderNotMatchingNamespacePrefix_shouldExcludeFolderWithoutPrefix", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withIoException_shouldCloseImapConnection", "getPersonalNamespaces_withNamespacePrefix_shouldRemoveNamespacePrefix", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ]
      },
      "predecessor" : "03f6661f817c6f3aa42b2bec32482a623ce2d672~1"
    },
    "2c96a3cba22c3542933b38fae232fbf1d94d0721" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "getMessageByUid_returnsNewImapMessageWithUidInFolder" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "getFolder_calledTwice_shouldReturnFirstInstance" ]
      },
      "predecessor" : "2c96a3cba22c3542933b38fae232fbf1d94d0721~1"
    },
    "8ffd4abebb452b171b3aa648d9614f3af3580acd" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3FolderTest" : [ "close_onNonOpenedFolder_succeeds", "close_onOpenedFolder_closesConnection", "close_onOpenedFolder_sendsQUIT", "close_onOpenedFolder_succeeds", "close_withExceptionQuiting_ignoresException", "create_withHoldsFoldersArgument_shouldDoNothing", "create_withHoldsMessagesArgument_shouldDoNothing", "exists_withInbox_shouldReturnTrue", "exists_withNonInboxFolder_shouldReturnFalse", "fetch_withBodyProfile_setsContentOfMessage", "fetch_withEnvelopeProfile_setsSizeOfMessage", "getFlaggedMessageCount_shouldBeMinusOne", "getMessage_withNoPreviouslyFetchedMessage_returnsNewMessage", "getMessage_withPreviouslyFetchedMessage_returnsMessage", "getMessages_returnsListOfMessagesOnServer", "getMessages_withIOExceptionReadingLine_throwsException", "getMessages_withInvalidSet_throwsException", "getMode_withFolderOpenedInRO_isRW", "getUnreadMessageCount_shouldBeMinusOne", "open_createsAndOpensConnection", "open_whenAlreadyOpenWithValidConnection_doesNotCreateAnotherConnection", "open_withInboxFolderWithExceptionCreatingConnection_shouldThrow", "open_withInboxFolder_shouldSetMessageCountFromStatResponse", "open_withInboxFolder_whenStatCommandFails_shouldThrow", "open_withoutInboxFolder_shouldNotTryAndCreateConnection", "open_withoutInboxFolder_shouldThrow" ],
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3StoreTest" : [ "checkSetting_whenConnectionThrowsException_shouldThrowMessagingException", "checkSetting_whenUidlSupported_shouldReturn", "checkSetting_whenUidlUnsupported_shouldThrowMessagingException", "createUri_withCRAMMD5_shouldProduceCRAMMD5AuthUri", "createUri_withEXTERNAL_shouldProduceExternalAuthUri", "createUri_withNONE_shouldProducePop3Uri", "createUri_withPLAIN_shouldProducePlainAuthUri", "createUri_withSSLTLS_required_shouldProduceSSLUri", "createUri_withSTARTTLSRequired_shouldProduceTLSUri", "decodeUri_withExternalCertificateShouldProvideAlias_shouldUseNoSecurity", "decodeUri_withNonPop3Uri_shouldThrowException", "decodeUri_withPlainUri_shouldUseNoSecurity", "decodeUri_withTLSUri_shouldUseStartTls", "getFolder_shouldReturnFolderWithCorrectName", "getFolder_shouldReturnSameFolderEachTime", "getPersonalNamespace_shouldReturnListConsistingOfInbox", "isSeenFlagSupported_shouldReturnFalse", "open_withAuthResponseUsingAuthPlain_shouldRetrieveMessageCountOnAuthenticatedSocket", "open_withFailedAuth_shouldThrow", "withInvalidStoreUri_shouldThrowMessagingException" ]
      },
      "predecessor" : "8ffd4abebb452b171b3aa648d9614f3af3580acd~1"
    },
    "95b046bbf6057dcff124be4dfcc0b6281f8e0aa5" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withEmptyMessageList_shouldNotInteractWithImapConnection", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder" ],
        "k9mail§com.fsck.k9.activity.ActivityListenerTest" : [ "getOperation__whenFolderStatusChanged", "getOperation__whenSynchronizeMailboxHeadersFinished", "getOperation__whenSynchronizeMailboxHeadersProgress", "getOperation__whenSynchronizeMailboxHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxNewMessage", "getOperation__whenSynchronizeMailboxProgress_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxStarted" ],
        "k9mail§com.fsck.k9.notification.WearNotificationsTest" : [ "testAddSummaryActions", "testAddSummaryActionsWithArchiveAllActionEnabled", "testBuildStackedNotification", "testBuildStackedNotificationWithArchiveActionEnabled", "testBuildStackedNotificationWithMarkAsSpamActionEnabled" ]
      },
      "predecessor" : "95b046bbf6057dcff124be4dfcc0b6281f8e0aa5~1"
    },
    "ebafb967c2f4465c603d1a018e676a57700db4ea" : {
      "testcases" : {
        "k9mail§com.fsck.k9.notification.WearNotificationsTest" : [ "testAddSummaryActions", "testAddSummaryActionsWithArchiveAllActionEnabled", "testAddSummaryActionsWithDeleteAllActionEnabled", "testBuildStackedNotification", "testBuildStackedNotificationWithArchiveActionEnabled", "testBuildStackedNotificationWithDeleteActionEnabled", "testBuildStackedNotificationWithMarkAsSpamActionEnabled" ]
      },
      "predecessor" : "ebafb967c2f4465c603d1a018e676a57700db4ea~1"
    },
    "e21db913899e14cf4107e769279c772cf0abad38" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ]
      },
      "predecessor" : "ebafb967c2f4465c603d1a018e676a57700db4ea"
    },
    "49257b0fda40430d4f6d95276735b52e00ee9daf" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withClosedFolder_shouldThrow", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "copyMessages_withClosedFolder_shouldThrow", "create_withClosedFolder_shouldOpenConnectionAndIssueCreateCommand", "create_withNegativeImapResponse_shouldReturnFalse", "create_withoutNegativeImapResponse_shouldReturnTrue", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withEmptyMessageList_shouldNotInteractWithImapConnection", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "exists_withClosedFolder_shouldOpenConnectionAndIssueStatusCommand", "exists_withNegativeImapResponse_shouldReturnFalse", "exists_withoutNegativeImapResponse_shouldReturnTrue", "expungeUids_withUidPlus_shouldIssueUidExpungeCommand", "expungeUids_withoutUidPlus_shouldIssueExpungeCommand", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "fetch_withStructureFetchProfile_shouldSetContentType", "getFlaggedMessageCount", "getFlaggedMessageCount_withClosedFolder_shouldThrow", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessageByUid_returnsNewImapMessageWithUidInFolder", "getMessagesFromUids", "getMessagesFromUids_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withClosedFolder_shouldThrow", "getMessages_withDateConstraint", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "getUnreadMessageCount_withClosedFolder_shouldThrow", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_removeNamespacePrefix", "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "autoconfigureFolders_withoutSpecialUseCapability_shouldNotIssueImapCommand", "checkSettings_shouldCreateImapConnectionAndCallOpen", "checkSettings_withOpenThrowing_shouldThrowMessagingException", "getConnection_calledAfterReleaseWithAClosedConnection_shouldReturnNewImapConnectionInstance", "getConnection_calledAfterRelease_shouldReturnCachedImapConnection", "getConnection_calledTwiceWithoutRelease_shouldCreateTwoImapConnection", "getConnection_shouldCreateImapConnection", "getConnection_withDeadConnectionInPool_shouldReturnNewImapConnectionInstance", "getFolder_calledTwice_shouldReturnFirstInstance", "getFolder_shouldReturnImapFolderInstance", "getPersonalNamespaces_withFolderNotMatchingNamespacePrefix_shouldExcludeFolderWithoutPrefix", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withIoException_shouldCloseImapConnection", "getPersonalNamespaces_withNamespacePrefix_shouldRemoveNamespacePrefix", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ],
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3FolderTest" : [ "close_onNonOpenedFolder_succeeds", "close_onOpenedFolder_closesConnection", "close_onOpenedFolder_sendsQUIT", "close_onOpenedFolder_succeeds", "close_withExceptionQuiting_ignoresException", "create_withHoldsFoldersArgument_shouldDoNothing", "create_withHoldsMessagesArgument_shouldDoNothing", "exists_withInbox_shouldReturnTrue", "exists_withNonInboxFolder_shouldReturnFalse", "fetch_withBodyProfile_setsContentOfMessage", "fetch_withEnvelopeProfile_setsSizeOfMessage", "getFlaggedMessageCount_shouldBeMinusOne", "getMessage_withNoPreviouslyFetchedMessage_returnsNewMessage", "getMessage_withPreviouslyFetchedMessage_returnsMessage", "getMessages_returnsListOfMessagesOnServer", "getMessages_withIOExceptionReadingLine_throwsException", "getMessages_withInvalidSet_throwsException", "getMode_withFolderOpenedInRO_isRW", "getUnreadMessageCount_shouldBeMinusOne", "open_createsAndOpensConnection", "open_whenAlreadyOpenWithValidConnection_doesNotCreateAnotherConnection", "open_withInboxFolderWithExceptionCreatingConnection_shouldThrow", "open_withInboxFolder_shouldSetMessageCountFromStatResponse", "open_withInboxFolder_whenStatCommandFails_shouldThrow", "open_withoutInboxFolder_shouldNotTryAndCreateConnection", "open_withoutInboxFolder_shouldThrow" ],
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3StoreTest" : [ "checkSetting_whenConnectionThrowsException_shouldThrowMessagingException", "checkSetting_whenUidlSupported_shouldReturn", "checkSetting_whenUidlUnsupported_shouldThrowMessagingException", "createUri_withCRAMMD5_shouldProduceCRAMMD5AuthUri", "createUri_withEXTERNAL_shouldProduceExternalAuthUri", "createUri_withNONE_shouldProducePop3Uri", "createUri_withPLAIN_shouldProducePlainAuthUri", "createUri_withSSLTLS_required_shouldProduceSSLUri", "createUri_withSTARTTLSRequired_shouldProduceTLSUri", "decodeUri_withExternalCertificateShouldProvideAlias_shouldUseNoSecurity", "decodeUri_withNonPop3Uri_shouldThrowException", "decodeUri_withPlainUri_shouldUseNoSecurity", "decodeUri_withTLSUri_shouldUseStartTls", "getFolder_shouldReturnFolderWithCorrectName", "getFolder_shouldReturnSameFolderEachTime", "getPersonalNamespace_shouldReturnListConsistingOfInbox", "isSeenFlagSupported_shouldReturnFalse", "open_withAuthResponseUsingAuthPlain_shouldRetrieveMessageCountOnAuthenticatedSocket", "open_withFailedAuth_shouldThrow", "withInvalidStoreUri_shouldThrowMessagingException" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavStoreTest" : [ "checkSettings_shouldRegisterHttpsSchemeWithRegistry", "checkSettings_withErrorResponse_shouldThrow", "checkSettings_withHttpPrefixedServerName_shouldUseInsecureConnection", "checkSettings_withInitialUnauthorizedResponse_shouldPerformBasicAuthentication", "checkSettings_withOkResponse_shouldPerformFormBasedAuthentication", "checkSettings_withSslException_shouldThrowCertificateValidationException", "checkSettings_withUnauthorizedResponses_shouldThrow", "checkSettings_withWebDavSslUri_shouldUseSecureConnection", "checkSettings_withWebDavTlsUri_shouldUseSecureConnection", "checkSettings_withWebDavUri_shouldUseInsecureConnection", "constructor_withImapStoreUri_shouldThrow", "getFolder_calledTwice_shouldReturnFirstInstance", "getFolder_shouldReturnWebDavFolderInstance", "getPersonalNamespaces_shouldProvideListOfAllFoldersSentFromResponses", "getPersonalNamespaces_shouldRequestFolderList", "getPersonalNamespaces_shouldRequestSpecialFolders", "getPersonalNamespaces_shouldSetSpecialFolderNames" ],
        "k9mail§com.fsck.k9.activity.ActivityListenerTest" : [ "getOperation__whenFolderStatusChanged", "getOperation__whenSynchronizeMailboxHeadersFinished", "getOperation__whenSynchronizeMailboxHeadersProgress", "getOperation__whenSynchronizeMailboxHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxNewMessage", "getOperation__whenSynchronizeMailboxProgress_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxStarted" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "synchronizeMailboxSynchronousLegacy_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronousLegacy_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronousLegacy_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronousLegacy_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronousLegacy_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronousLegacy_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronousLegacy_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronousLegacy_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronousLegacy_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronousLegacy_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronousLegacy_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.controller.imap.ImapSyncTest" : [ "sync_shouldFetchUnsynchronizedMessagesListAndFlags", "sync_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "sync_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "sync_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "sync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "sync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "sync_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "sync_withEmptyRemoteFolder_shouldFinishWithoutError", "sync_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "sync_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "sync_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "sync_withOneMessageInRemoteFolder_shouldFinishWithoutError", "sync_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "sync_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "sync_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "sync_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.notification.WearNotificationsTest" : [ "testAddSummaryActions", "testAddSummaryActionsWithArchiveAllActionEnabled", "testBuildStackedNotification", "testBuildStackedNotificationWithArchiveActionEnabled", "testBuildStackedNotificationWithMarkAsSpamActionEnabled" ]
      },
      "predecessor" : "5152d04ae5e763ac97c4f8744b370943b1cd9a8f"
    },
    "149603618b96de4eec26c813eb82e69ed8067fc6" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ]
      },
      "predecessor" : "49257b0fda40430d4f6d95276735b52e00ee9daf"
    },
    "5d93d1139e01a74639ff979cf5908170ed6626d1" : {
      "testcases" : {
        "k9mail§com.fsck.k9.autocrypt.AutocryptHeaderParserTest" : [ "getValidAutocryptHeader__withBrokenBase64__shouldReturnNull", "getValidAutocryptHeader__withExplicitType", "getValidAutocryptHeader__withNoHeader__shouldReturnNull", "getValidAutocryptHeader__withSimpleAutocrypt", "getValidAutocryptHeader__withUnknownCriticalHeader__shouldReturnNull", "getValidAutocryptHeader__withUnknownNonCriticalHeader", "getValidAutocryptHeader__withUnknownType__shouldReturnNull", "parseAutocryptHeader_toRawHeaderString" ],
        "k9mail§com.fsck.k9.helper.MessageHelperTest" : [ "testToFriendlyArray", "testToFriendlyShowsEmailPartIfNoPersonalPartExists", "testToFriendlyShowsPersonalPartIfItExists", "testToFriendlyWithContactLookup", "toFriendly_spoofPreventionOverridesPersonal" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withBadDatabase_shouldThrowInDebugBuild", "doDbUpgrade_withEmptyDatabase_shouldSetsDatabaseVersion", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion", "getVersion_shouldReturnCurrentDatabaseVersion" ],
        "k9mail§com.fsck.k9.message.html.HtmlConverterTest" : [ "anyTripletIsHRuledOut", "dashedHorizontalRulePrefixedWithTextIgnoredAsHR", "dashesContainingSpacesIgnoredAsHR", "doubleEqualsIgnoredAsHR", "doubleMinusIgnoredAsHR", "doubleUnderscoreIgnoredAsHR", "issue2259Spec", "mergeConsecutiveBreaksIntoOne", "replaceSpaceSeparatedDashesWithHR", "replacementOfScissorsByHR", "replacementWithHRAtBeginning", "replacementWithHRAtEnd", "testPreserveSpacesAtFirst", "testPreserveSpacesAtFirstForSpecialCharacters", "testQuoteDepthColor", "testTextQuoteToHtmlBlockquote", "testTextQuoteToHtmlBlockquoteIndented", "wrapMessageContent_addsPreCSS", "wrapMessageContent_addsViewportMetaElement", "wrapMessageContent_putsMessageContentInBody", "wrapMessageContent_setsDirToAuto", "wrapMessageContent_whenDarkMessageViewTheme_addsDarkThemeCSS" ],
        "k9mail§com.fsck.k9.notification.BaseNotificationsTest" : [ "testIsDeleteActionEnabled_NotificationQuickDelete_ALWAYS", "testIsDeleteActionEnabled_NotificationQuickDelete_FOR_SINGLE_MSG", "testIsDeleteActionEnabled_NotificationQuickDelete_NEVER" ]
      },
      "predecessor" : "5d93d1139e01a74639ff979cf5908170ed6626d1~1"
    },
    "342cfab421418ec3717e3ca7e2244932f39f55b6" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withClosedFolder_shouldThrow", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "copyMessages_withClosedFolder_shouldThrow", "copyMessages_withEmptyMessageList_shouldReturnNull", "copyMessages_withoutDestinationFolderOfWrongType_shouldThrow", "create_withClosedFolder_shouldOpenConnectionAndIssueCreateCommand", "create_withNegativeImapResponse_shouldReturnFalse", "create_withoutNegativeImapResponse_shouldReturnTrue", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_notImplemented", "delete_shouldMoveMessagesToTrashFolder", "delete_withEmptyMessageList_shouldNotInteractWithImapConnection", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "exists_withClosedFolder_shouldOpenConnectionAndIssueStatusCommand", "exists_withNegativeImapResponse_shouldReturnFalse", "exists_withoutNegativeImapResponse_shouldReturnTrue", "expungeUids_withUidPlus_shouldIssueUidExpungeCommand", "expungeUids_withoutUidPlus_shouldIssueExpungeCommand", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEmptyMessageListArgument_shouldDoNothing", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withNullMessageListArgument_shouldDoNothing", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "fetch_withStructureFetchProfile_shouldSetContentType", "getFlaggedMessageCount", "getFlaggedMessageCount_withClosedFolder_shouldThrow", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessageByUid_returnsNewImapMessageWithUidInFolder", "getMessagesFromUids", "getMessagesFromUids_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withClosedFolder_shouldThrow", "getMessages_withDateConstraint", "getMessages_withEndArgumentSmallerThanStartArgument_shouldThrow", "getMessages_withInvalidEndArgument_shouldThrow", "getMessages_withInvalidStartArgument_shouldThrow", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getNewPushState_withNewerUid_shouldReturnNewPushState", "getNewPushState_withoutNewerUid_shouldReturnNull", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUidFromMessageId_withoutMessageIdHeader_shouldReturnNull", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "getUnreadMessageCount_withClosedFolder_shouldThrow", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "moveMessages_withEmptyMessageList_shouldReturnNull", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "search_withRemoteSearchDisabled_shouldThrow", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_removeNamespacePrefix", "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "autoconfigureFolders_withoutSpecialUseCapability_shouldNotIssueImapCommand", "checkSettings_shouldCreateImapConnectionAndCallOpen", "checkSettings_withOpenThrowing_shouldThrowMessagingException", "getConnection_calledAfterReleaseWithAClosedConnection_shouldReturnNewImapConnectionInstance", "getConnection_calledAfterRelease_shouldReturnCachedImapConnection", "getConnection_calledTwiceWithoutRelease_shouldCreateTwoImapConnection", "getConnection_shouldCreateImapConnection", "getConnection_withDeadConnectionInPool_shouldReturnNewImapConnectionInstance", "getFolder_calledTwice_shouldReturnFirstInstance", "getFolder_shouldReturnImapFolderInstance", "getPersonalNamespaces_withFolderNotMatchingNamespacePrefix_shouldExcludeFolderWithoutPrefix", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withIoException_shouldCloseImapConnection", "getPersonalNamespaces_withNamespacePrefix_shouldRemoveNamespacePrefix", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ],
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3FolderTest" : [ "close_onNonOpenedFolder_succeeds", "close_onOpenedFolder_closesConnection", "close_onOpenedFolder_sendsQUIT", "close_onOpenedFolder_succeeds", "close_withExceptionQuiting_ignoresException", "create_withHoldsFoldersArgument_shouldDoNothing", "create_withHoldsMessagesArgument_shouldDoNothing", "exists_withInbox_shouldReturnTrue", "exists_withNonInboxFolder_shouldReturnFalse", "fetch_withBodyProfile_setsContentOfMessage", "fetch_withEnvelopeProfile_setsSizeOfMessage", "getFlaggedMessageCount_shouldBeMinusOne", "getMessage_withNoPreviouslyFetchedMessage_returnsNewMessage", "getMessage_withPreviouslyFetchedMessage_returnsMessage", "getMessages_returnsListOfMessagesOnServer", "getMessages_withIOExceptionReadingLine_throwsException", "getMessages_withInvalidSet_throwsException", "getMode_withFolderOpenedInRO_isRW", "getUnreadMessageCount_shouldBeMinusOne", "open_createsAndOpensConnection", "open_whenAlreadyOpenWithValidConnection_doesNotCreateAnotherConnection", "open_withInboxFolderWithExceptionCreatingConnection_shouldThrow", "open_withInboxFolder_shouldSetMessageCountFromStatResponse", "open_withInboxFolder_whenStatCommandFails_shouldThrow", "open_withoutInboxFolder_shouldNotTryAndCreateConnection", "open_withoutInboxFolder_shouldThrow" ],
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3StoreTest" : [ "checkSetting_whenConnectionThrowsException_shouldThrowMessagingException", "checkSetting_whenUidlSupported_shouldReturn", "checkSetting_whenUidlUnsupported_shouldThrowMessagingException", "createUri_withCRAMMD5_shouldProduceCRAMMD5AuthUri", "createUri_withEXTERNAL_shouldProduceExternalAuthUri", "createUri_withNONE_shouldProducePop3Uri", "createUri_withPLAIN_shouldProducePlainAuthUri", "createUri_withSSLTLS_required_shouldProduceSSLUri", "createUri_withSTARTTLSRequired_shouldProduceTLSUri", "decodeUri_withExternalCertificateShouldProvideAlias_shouldUseNoSecurity", "decodeUri_withNonPop3Uri_shouldThrowException", "decodeUri_withPlainUri_shouldUseNoSecurity", "decodeUri_withTLSUri_shouldUseStartTls", "getFolder_shouldReturnFolderWithCorrectName", "getFolder_shouldReturnSameFolderEachTime", "getPersonalNamespace_shouldReturnListConsistingOfInbox", "isSeenFlagSupported_shouldReturnFalse", "open_withAuthResponseUsingAuthPlain_shouldRetrieveMessageCountOnAuthenticatedSocket", "open_withFailedAuth_shouldThrow", "withInvalidStoreUri_shouldThrowMessagingException" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavStoreTest" : [ "checkSettings_shouldRegisterHttpsSchemeWithRegistry", "checkSettings_withErrorResponse_shouldThrow", "checkSettings_withHttpPrefixedServerName_shouldUseInsecureConnection", "checkSettings_withInitialUnauthorizedResponse_shouldPerformBasicAuthentication", "checkSettings_withOkResponse_shouldPerformFormBasedAuthentication", "checkSettings_withSslException_shouldThrowCertificateValidationException", "checkSettings_withUnauthorizedResponses_shouldThrow", "checkSettings_withWebDavSslUri_shouldUseSecureConnection", "checkSettings_withWebDavTlsUri_shouldUseSecureConnection", "checkSettings_withWebDavUri_shouldUseInsecureConnection", "constructor_withImapStoreUri_shouldThrow", "getFolder_calledTwice_shouldReturnFirstInstance", "getFolder_shouldReturnWebDavFolderInstance", "getPersonalNamespaces_shouldProvideListOfAllFoldersSentFromResponses", "getPersonalNamespaces_shouldRequestFolderList", "getPersonalNamespaces_shouldRequestSpecialFolders", "getPersonalNamespaces_shouldSetSpecialFolderNames" ],
        "k9mail§com.fsck.k9.activity.ActivityListenerTest" : [ "getOperation__whenFolderStatusChanged", "getOperation__whenSynchronizeMailboxHeadersFinished", "getOperation__whenSynchronizeMailboxHeadersProgress", "getOperation__whenSynchronizeMailboxHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxNewMessage", "getOperation__whenSynchronizeMailboxProgress_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxStarted" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync", "synchronizeMailboxSynchronousLegacy_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronousLegacy_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronousLegacy_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronousLegacy_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronousLegacy_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronousLegacy_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronousLegacy_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronousLegacy_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronousLegacy_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronousLegacy_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronousLegacy_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.controller.imap.ImapSyncTest" : [ "sync_shouldFetchUnsynchronizedMessagesListAndFlags", "sync_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "sync_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "sync_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "sync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "sync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "sync_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "sync_withEmptyRemoteFolder_shouldFinishWithoutError", "sync_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "sync_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "sync_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "sync_withOneMessageInRemoteFolder_shouldFinishWithoutError", "sync_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "sync_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "sync_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "sync_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withBadDatabase_shouldThrowInDebugBuild", "doDbUpgrade_withEmptyDatabase_shouldSetsDatabaseVersion", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion", "getVersion_shouldReturnCurrentDatabaseVersion" ],
        "k9mail§com.fsck.k9.notification.SyncNotificationsTest" : [ "testShowSendingNotification" ],
        "k9mail§com.fsck.k9.notification.WearNotificationsTest" : [ "testAddSummaryActions", "testAddSummaryActionsWithArchiveAllActionEnabled", "testAddSummaryActionsWithDeleteAllActionEnabled", "testBuildStackedNotification", "testBuildStackedNotificationWithArchiveActionEnabled", "testBuildStackedNotificationWithDeleteActionEnabled", "testBuildStackedNotificationWithMarkAsSpamActionEnabled" ]
      },
      "predecessor" : "a8c4f69c903a6fb23c4d65fd5408485f7a49df6f"
    },
    "1bd5c4c289f1a117ad1c5a3b5e11a6cc43849463" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_shouldMoveMessagesToTrashFolder", "delete_withEmptyMessageList_shouldNotInteractWithImapConnection", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getMessageByUid_returnsNewImapMessageWithUidInFolder", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapPusherTest" : [ "refresh_shouldCallRefreshOnStartedImapFolderPusher", "refresh_withImapFolderPusherThrowing_shouldNotThrow", "start_calledAfterStart_shouldStopFirstImapFolderPusher", "start_shouldSetLastRefreshToCurrentTime", "start_withSingleFolderName_shouldCreateImapFolderPusherAndCallStartOnIt", "start_withTwoFolderNames_shouldCreateTwoImapFolderPushersAndCallStart", "stop_afterStartWithSingleFolderName_shouldStopImapFolderPusher", "stop_withImapFolderPusherThrowing_shouldNotThrow", "stop_withoutStartBeingCalled_shouldNotCreateAnyImapFolderPushers" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "getFolder_calledTwice_shouldReturnFirstInstance", "getPersonalNamespaces_withFolderNotMatchingNamespacePrefix_shouldExcludeFolderWithoutPrefix", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withNamespacePrefix_shouldRemoveNamespacePrefix", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ],
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3StoreTest" : [ "getFolder_shouldReturnFolderWithCorrectName", "getFolder_shouldReturnSameFolderEachTime", "getPersonalNamespace_shouldReturnListConsistingOfInbox", "open_withAuthResponseUsingAuthPlain_shouldRetrieveMessageCountOnAuthenticatedSocket", "open_withFailedAuth_shouldThrow" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavMessageTest" : [ "delete_asks_folder_to_delete_message", "setFlag_asks_folder_to_set_flag", "setNewHeaders_updates_size", "setUrl_tests" ],
        "k9mail§com.fsck.k9.activity.ActivityListenerTest" : [ "getOperation__whenFolderStatusChanged", "getOperation__whenSynchronizeMailboxFailedAfterHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFailed_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFinished", "getOperation__whenSynchronizeMailboxHeadersFinished", "getOperation__whenSynchronizeMailboxHeadersProgress", "getOperation__whenSynchronizeMailboxHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxNewMessage", "getOperation__whenSynchronizeMailboxProgress_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxStarted" ],
        "k9mail§com.fsck.k9.activity.MessageReferenceTest" : [ "alternativeEquals", "checkIdentityStringFromMessageReferenceWithFlag", "checkIdentityStringFromMessageReferenceWithoutFlag", "checkMessageReferenceWithChangedFlag", "checkMessageReferenceWithChangedUid", "constructor_withNullAccount_shouldThrow", "constructor_withNullFolder_shouldThrow", "constructor_withNullUid_shouldThrow", "equalsWithAnObjectShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentAccountUuidShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentFolderNameShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentUidShouldReturnFalse", "equalsWithMessageReferenceContainingSameDataShouldReturnTrue", "equalsWithNullShouldReturnFalse", "equalsWithSameMessageReferenceShouldReturnTrue", "equals_withNullAccount_shouldReturnFalse", "equals_withNullFolder_shouldReturnFalse", "equals_withNullUid_shouldReturnFalse", "parseIdentityStringContainingBadVersionNumber", "parseIdentityStringWithCorruptFlag", "parseIdentityStringWithFlag", "parseIdentityStringWithoutFlag", "parseNullIdentityString" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync", "synchronizeMailboxSynchronousLegacy_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronousLegacy_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronousLegacy_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronousLegacy_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronousLegacy_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronousLegacy_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronousLegacy_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronousLegacy_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronousLegacy_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronousLegacy_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronousLegacy_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.controller.PendingCommandSerializerTest" : [ "testSerializeDeserialize__withArguments" ],
        "k9mail§com.fsck.k9.controller.imap.ImapSyncTest" : [ "sync_shouldFetchUnsynchronizedMessagesListAndFlags", "sync_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "sync_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "sync_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "sync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "sync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "sync_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "sync_withEmptyRemoteFolder_shouldFinishWithoutError", "sync_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "sync_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "sync_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "sync_withOneMessageInRemoteFolder_shouldFinishWithoutError", "sync_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "sync_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "sync_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "sync_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "extractMessage_withCryptoAnnotation", "extractMessage_withCryptoAnnotation_andReplacementPart" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ],
        "k9mail§com.fsck.k9.mailstore.migrations.MigrationTo60Test" : [ "migrateAppend", "migrateExpunge", "migrateSetFlag", "migrateSetFlag_oldFormat" ],
        "k9mail§com.fsck.k9.notification.NewMailNotificationsTest" : [ "testRemoveNewMailNotification", "testRemoveNewMailNotificationClearingAllNotifications", "testRemoveNewMailNotificationWithCreateNotification", "testRemoveNewMailNotificationWithUnknownMessageReference", "testRemoveNewMailNotificationWithoutNotificationData" ],
        "k9mail§com.fsck.k9.notification.NotificationContentCreatorTest" : [ "createFromMessage_withEncryptedMessage", "createFromMessage_withErrorPreview", "createFromMessage_withMessageFromSelf", "createFromMessage_withRegularMessage", "createFromMessage_withStarredMessage", "createFromMessage_withoutEmptyMessage", "createFromMessage_withoutPreview", "createFromMessage_withoutSender", "createFromMessage_withoutSubject" ],
        "k9mail§com.fsck.k9.notification.NotificationDataTest" : [ "testAddNotificationContent", "testAddNotificationContentWithReplacingNotification", "testContainsStarredMessages", "testContainsStarredMessagesWithAdditionalMessages", "testGetActiveNotificationIds", "testGetAllMessageReferences", "testGetContentForSummaryNotification", "testGetHolderForLatestNotification", "testIsSingleMessageNotification", "testNewMessagesCount", "testOverflowNotifications", "testRemoveDoesNotLeakNotificationIds", "testRemoveNotificationForMessage", "testRemoveNotificationForMessageWithRecreatingNotification", "testUnreadMessagesCount" ],
        "k9mail§com.fsck.k9.notification.SyncNotificationsTest" : [ "testGetFetchingMailNotificationId", "testShowSendingNotification" ],
        "k9mail§com.fsck.k9.notification.WearNotificationsTest" : [ "testAddSummaryActions", "testAddSummaryActionsWithArchiveAllActionEnabled", "testAddSummaryActionsWithDeleteAllActionEnabled", "testBuildStackedNotification", "testBuildStackedNotificationWithArchiveActionEnabled", "testBuildStackedNotificationWithDeleteActionEnabled", "testBuildStackedNotificationWithMarkAsSpamActionEnabled" ],
        "k9mail§com.fsck.k9.ui.crypto.MessageCryptoHelperTest" : [ "multipartEncrypted__withNullBody__shouldReturnEncryptedIncomplete", "multipartEncrypted__withUnknownProtocol__shouldReturnEncryptedUnsupported", "multipartSigned__withNullBody__shouldReturnSignedIncomplete", "multipartSigned__withSignOnlyDisabledAndNullBody__shouldReturnNothing", "multipartSigned__withSignOnlyDisabled__shouldReturnNothing", "multipartSigned__withUnknownProtocol__shouldReturnSignedUnsupported", "textPlain" ]
      },
      "predecessor" : "1bd5c4c289f1a117ad1c5a3b5e11a6cc43849463~1"
    },
    "1e7cb67a379bd10b28d637c1b07e5b9a94ed95f8" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withClosedFolder_shouldThrow", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "copyMessages_withClosedFolder_shouldThrow", "copyMessages_withEmptyMessageList_shouldReturnNull", "copyMessages_withoutDestinationFolderOfWrongType_shouldThrow", "create_withClosedFolder_shouldOpenConnectionAndIssueCreateCommand", "create_withNegativeImapResponse_shouldReturnFalse", "create_withoutNegativeImapResponse_shouldReturnTrue", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_notImplemented", "delete_shouldMoveMessagesToTrashFolder", "delete_withEmptyMessageList_shouldNotInteractWithImapConnection", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "exists_withClosedFolder_shouldOpenConnectionAndIssueStatusCommand", "exists_withNegativeImapResponse_shouldReturnFalse", "exists_withoutNegativeImapResponse_shouldReturnTrue", "expungeUids_withUidPlus_shouldIssueUidExpungeCommand", "expungeUids_withoutUidPlus_shouldIssueExpungeCommand", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEmptyMessageListArgument_shouldDoNothing", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withNullMessageListArgument_shouldDoNothing", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "fetch_withStructureFetchProfile_shouldSetContentType", "getFlaggedMessageCount", "getFlaggedMessageCount_withClosedFolder_shouldThrow", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessageByUid_returnsNewImapMessageWithUidInFolder", "getMessagesFromUids", "getMessagesFromUids_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withClosedFolder_shouldThrow", "getMessages_withDateConstraint", "getMessages_withEndArgumentSmallerThanStartArgument_shouldThrow", "getMessages_withInvalidEndArgument_shouldThrow", "getMessages_withInvalidStartArgument_shouldThrow", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getNewPushState_withNewerUid_shouldReturnNewPushState", "getNewPushState_withoutNewerUid_shouldReturnNull", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUidFromMessageId_withoutMessageIdHeader_shouldReturnNull", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "getUnreadMessageCount_withClosedFolder_shouldThrow", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "moveMessages_withEmptyMessageList_shouldReturnNull", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "search_withRemoteSearchDisabled_shouldThrow", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapPusherTest" : [ "refresh_shouldCallRefreshOnStartedImapFolderPusher", "refresh_withImapFolderPusherThrowing_shouldNotThrow", "start_calledAfterStart_shouldStopFirstImapFolderPusher", "start_shouldSetLastRefreshToCurrentTime", "start_withSingleFolderName_shouldCreateImapFolderPusherAndCallStartOnIt", "start_withTwoFolderNames_shouldCreateTwoImapFolderPushersAndCallStart", "stop_afterStartWithSingleFolderName_shouldStopImapFolderPusher", "stop_withImapFolderPusherThrowing_shouldNotThrow", "stop_withoutStartBeingCalled_shouldNotCreateAnyImapFolderPushers" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_removeNamespacePrefix", "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "autoconfigureFolders_withoutSpecialUseCapability_shouldNotIssueImapCommand", "checkSettings_shouldCreateImapConnectionAndCallOpen", "checkSettings_withOpenThrowing_shouldThrowMessagingException", "getConnection_calledAfterReleaseWithAClosedConnection_shouldReturnNewImapConnectionInstance", "getConnection_calledAfterRelease_shouldReturnCachedImapConnection", "getConnection_calledTwiceWithoutRelease_shouldCreateTwoImapConnection", "getConnection_shouldCreateImapConnection", "getConnection_withDeadConnectionInPool_shouldReturnNewImapConnectionInstance", "getFolder_calledTwice_shouldReturnFirstInstance", "getFolder_shouldReturnImapFolderInstance", "getPersonalNamespaces_withFolderNotMatchingNamespacePrefix_shouldExcludeFolderWithoutPrefix", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withIoException_shouldCloseImapConnection", "getPersonalNamespaces_withNamespacePrefix_shouldRemoveNamespacePrefix", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ],
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3FolderTest" : [ "close_onNonOpenedFolder_succeeds", "close_onOpenedFolder_closesConnection", "close_onOpenedFolder_sendsQUIT", "close_onOpenedFolder_succeeds", "close_withExceptionQuiting_ignoresException", "create_withHoldsFoldersArgument_shouldDoNothing", "create_withHoldsMessagesArgument_shouldDoNothing", "exists_withInbox_shouldReturnTrue", "exists_withNonInboxFolder_shouldReturnFalse", "fetch_withBodyProfile_setsContentOfMessage", "fetch_withEnvelopeProfile_setsSizeOfMessage", "getFlaggedMessageCount_shouldBeMinusOne", "getMessage_withNoPreviouslyFetchedMessage_returnsNewMessage", "getMessage_withPreviouslyFetchedMessage_returnsMessage", "getMessages_returnsListOfMessagesOnServer", "getMessages_withIOExceptionReadingLine_throwsException", "getMessages_withInvalidSet_throwsException", "getMode_withFolderOpenedInRO_isRW", "getUnreadMessageCount_shouldBeMinusOne", "open_createsAndOpensConnection", "open_whenAlreadyOpenWithValidConnection_doesNotCreateAnotherConnection", "open_withInboxFolderWithExceptionCreatingConnection_shouldThrow", "open_withInboxFolder_shouldSetMessageCountFromStatResponse", "open_withInboxFolder_whenStatCommandFails_shouldThrow", "open_withoutInboxFolder_shouldNotTryAndCreateConnection", "open_withoutInboxFolder_shouldThrow" ],
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3StoreTest" : [ "checkSetting_whenConnectionThrowsException_shouldThrowMessagingException", "checkSetting_whenUidlSupported_shouldReturn", "checkSetting_whenUidlUnsupported_shouldThrowMessagingException", "createUri_withCRAMMD5_shouldProduceCRAMMD5AuthUri", "createUri_withEXTERNAL_shouldProduceExternalAuthUri", "createUri_withNONE_shouldProducePop3Uri", "createUri_withPLAIN_shouldProducePlainAuthUri", "createUri_withSSLTLS_required_shouldProduceSSLUri", "createUri_withSTARTTLSRequired_shouldProduceTLSUri", "decodeUri_withExternalCertificateShouldProvideAlias_shouldUseNoSecurity", "decodeUri_withNonPop3Uri_shouldThrowException", "decodeUri_withPlainUri_shouldUseNoSecurity", "decodeUri_withTLSUri_shouldUseStartTls", "getFolder_shouldReturnFolderWithCorrectName", "getFolder_shouldReturnSameFolderEachTime", "getPersonalNamespace_shouldReturnListConsistingOfInbox", "isSeenFlagSupported_shouldReturnFalse", "open_withAuthResponseUsingAuthPlain_shouldRetrieveMessageCountOnAuthenticatedSocket", "open_withFailedAuth_shouldThrow", "withInvalidStoreUri_shouldThrowMessagingException" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavMessageTest" : [ "delete_asks_folder_to_delete_message", "setFlag_asks_folder_to_set_flag", "setNewHeaders_updates_size", "setUrl_tests" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavStoreTest" : [ "checkSettings_shouldRegisterHttpsSchemeWithRegistry", "checkSettings_withErrorResponse_shouldThrow", "checkSettings_withHttpPrefixedServerName_shouldUseInsecureConnection", "checkSettings_withInitialUnauthorizedResponse_shouldPerformBasicAuthentication", "checkSettings_withOkResponse_shouldPerformFormBasedAuthentication", "checkSettings_withSslException_shouldThrowCertificateValidationException", "checkSettings_withUnauthorizedResponses_shouldThrow", "checkSettings_withWebDavSslUri_shouldUseSecureConnection", "checkSettings_withWebDavTlsUri_shouldUseSecureConnection", "checkSettings_withWebDavUri_shouldUseInsecureConnection", "constructor_withImapStoreUri_shouldThrow", "getFolder_calledTwice_shouldReturnFirstInstance", "getFolder_shouldReturnWebDavFolderInstance", "getPersonalNamespaces_shouldProvideListOfAllFoldersSentFromResponses", "getPersonalNamespaces_shouldRequestFolderList", "getPersonalNamespaces_shouldRequestSpecialFolders", "getPersonalNamespaces_shouldSetSpecialFolderNames" ],
        "k9mail§com.fsck.k9.activity.ActivityListenerTest" : [ "getOperation__whenFolderStatusChanged", "getOperation__whenSynchronizeMailboxFailedAfterHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFailed_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFinished", "getOperation__whenSynchronizeMailboxHeadersFinished", "getOperation__whenSynchronizeMailboxHeadersProgress", "getOperation__whenSynchronizeMailboxHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxNewMessage", "getOperation__whenSynchronizeMailboxProgress_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxStarted" ],
        "k9mail§com.fsck.k9.activity.MessageReferenceTest" : [ "alternativeEquals", "checkIdentityStringFromMessageReferenceWithFlag", "checkIdentityStringFromMessageReferenceWithoutFlag", "checkMessageReferenceWithChangedFlag", "checkMessageReferenceWithChangedUid", "constructor_withNullAccount_shouldThrow", "constructor_withNullFolder_shouldThrow", "constructor_withNullUid_shouldThrow", "equalsWithAnObjectShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentAccountUuidShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentFolderNameShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentUidShouldReturnFalse", "equalsWithMessageReferenceContainingSameDataShouldReturnTrue", "equalsWithNullShouldReturnFalse", "equalsWithSameMessageReferenceShouldReturnTrue", "equals_withNullAccount_shouldReturnFalse", "equals_withNullFolder_shouldReturnFalse", "equals_withNullUid_shouldReturnFalse", "parseIdentityStringContainingBadVersionNumber", "parseIdentityStringWithCorruptFlag", "parseIdentityStringWithFlag", "parseIdentityStringWithoutFlag", "parseNullIdentityString" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync", "synchronizeMailboxSynchronousLegacy_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronousLegacy_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronousLegacy_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronousLegacy_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronousLegacy_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronousLegacy_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronousLegacy_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronousLegacy_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronousLegacy_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronousLegacy_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronousLegacy_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.controller.PendingCommandSerializerTest" : [ "testSerializeDeserialize__withArguments" ],
        "k9mail§com.fsck.k9.controller.imap.ImapSyncTest" : [ "sync_shouldFetchUnsynchronizedMessagesListAndFlags", "sync_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "sync_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "sync_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "sync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "sync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "sync_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "sync_withEmptyRemoteFolder_shouldFinishWithoutError", "sync_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "sync_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "sync_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "sync_withOneMessageInRemoteFolder_shouldFinishWithoutError", "sync_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "sync_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "sync_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "sync_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "extractMessage_withCryptoAnnotation", "extractMessage_withCryptoAnnotation_andReplacementPart" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withBadDatabase_shouldThrowInDebugBuild", "doDbUpgrade_withEmptyDatabase_shouldSetsDatabaseVersion", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion", "getVersion_shouldReturnCurrentDatabaseVersion" ],
        "k9mail§com.fsck.k9.mailstore.migrations.MigrationTo60Test" : [ "migrateAppend", "migrateExpunge", "migrateSetFlag", "migrateSetFlag_oldFormat" ],
        "k9mail§com.fsck.k9.notification.NewMailNotificationsTest" : [ "testRemoveNewMailNotification", "testRemoveNewMailNotificationClearingAllNotifications", "testRemoveNewMailNotificationWithCreateNotification", "testRemoveNewMailNotificationWithUnknownMessageReference", "testRemoveNewMailNotificationWithoutNotificationData" ],
        "k9mail§com.fsck.k9.notification.NotificationContentCreatorTest" : [ "createFromMessage_withEncryptedMessage", "createFromMessage_withErrorPreview", "createFromMessage_withMessageFromSelf", "createFromMessage_withRegularMessage", "createFromMessage_withStarredMessage", "createFromMessage_withoutEmptyMessage", "createFromMessage_withoutPreview", "createFromMessage_withoutSender", "createFromMessage_withoutSubject" ],
        "k9mail§com.fsck.k9.notification.NotificationDataTest" : [ "testAddNotificationContent", "testAddNotificationContentWithReplacingNotification", "testContainsStarredMessages", "testContainsStarredMessagesWithAdditionalMessages", "testGetActiveNotificationIds", "testGetAllMessageReferences", "testGetContentForSummaryNotification", "testGetHolderForLatestNotification", "testIsSingleMessageNotification", "testNewMessagesCount", "testOverflowNotifications", "testRemoveDoesNotLeakNotificationIds", "testRemoveNotificationForMessage", "testRemoveNotificationForMessageWithRecreatingNotification", "testUnreadMessagesCount" ],
        "k9mail§com.fsck.k9.notification.SyncNotificationsTest" : [ "testGetFetchingMailNotificationId", "testShowSendingNotification" ],
        "k9mail§com.fsck.k9.notification.WearNotificationsTest" : [ "testAddSummaryActions", "testAddSummaryActionsWithArchiveAllActionEnabled", "testAddSummaryActionsWithDeleteAllActionEnabled", "testBuildStackedNotification", "testBuildStackedNotificationWithArchiveActionEnabled", "testBuildStackedNotificationWithDeleteActionEnabled", "testBuildStackedNotificationWithMarkAsSpamActionEnabled" ],
        "k9mail§com.fsck.k9.ui.crypto.MessageCryptoHelperTest" : [ "multipartEncrypted__withNullBody__shouldReturnEncryptedIncomplete", "multipartEncrypted__withUnknownProtocol__shouldReturnEncryptedUnsupported", "multipartSigned__withNullBody__shouldReturnSignedIncomplete", "multipartSigned__withSignOnlyDisabledAndNullBody__shouldReturnNothing", "multipartSigned__withSignOnlyDisabled__shouldReturnNothing", "multipartSigned__withUnknownProtocol__shouldReturnSignedUnsupported", "textPlain" ]
      },
      "predecessor" : "1bd5c4c289f1a117ad1c5a3b5e11a6cc43849463"
    },
    "855006b74b32c5bb1b061f7fc58506dc0243230f" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withClosedFolder_shouldThrow", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "copyMessages_withClosedFolder_shouldThrow", "copyMessages_withEmptyMessageList_shouldReturnNull", "copyMessages_withoutDestinationFolderOfWrongType_shouldThrow", "create_withClosedFolder_shouldOpenConnectionAndIssueCreateCommand", "create_withNegativeImapResponse_shouldReturnFalse", "create_withoutNegativeImapResponse_shouldReturnTrue", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_notImplemented", "delete_shouldMoveMessagesToTrashFolder", "delete_withEmptyMessageList_shouldNotInteractWithImapConnection", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "exists_withClosedFolder_shouldOpenConnectionAndIssueStatusCommand", "exists_withNegativeImapResponse_shouldReturnFalse", "exists_withoutNegativeImapResponse_shouldReturnTrue", "expungeUids_withUidPlus_shouldIssueUidExpungeCommand", "expungeUids_withoutUidPlus_shouldIssueExpungeCommand", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEmptyMessageListArgument_shouldDoNothing", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withNullMessageListArgument_shouldDoNothing", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "fetch_withStructureFetchProfile_shouldSetContentType", "getFlaggedMessageCount", "getFlaggedMessageCount_withClosedFolder_shouldThrow", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessageByUid_returnsNewImapMessageWithUidInFolder", "getMessagesFromUids", "getMessagesFromUids_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withClosedFolder_shouldThrow", "getMessages_withDateConstraint", "getMessages_withEndArgumentSmallerThanStartArgument_shouldThrow", "getMessages_withInvalidEndArgument_shouldThrow", "getMessages_withInvalidStartArgument_shouldThrow", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getNewPushState_withNewerUid_shouldReturnNewPushState", "getNewPushState_withoutNewerUid_shouldReturnNull", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUidFromMessageId_withoutMessageIdHeader_shouldReturnNull", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "getUnreadMessageCount_withClosedFolder_shouldThrow", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "moveMessages_withEmptyMessageList_shouldReturnNull", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "search_withRemoteSearchDisabled_shouldThrow", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "getFolder_calledTwice_shouldReturnFirstInstance", "getFolder_shouldReturnImapFolderInstance", "getPersonalNamespaces_withFolderNotMatchingNamespacePrefix_shouldExcludeFolderWithoutPrefix", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withNamespacePrefix_shouldRemoveNamespacePrefix", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ],
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3FolderTest" : [ "close_onNonOpenedFolder_succeeds", "close_onOpenedFolder_closesConnection", "close_onOpenedFolder_sendsQUIT", "close_onOpenedFolder_succeeds", "close_withExceptionQuiting_ignoresException", "create_withHoldsFoldersArgument_shouldDoNothing", "create_withHoldsMessagesArgument_shouldDoNothing", "exists_withInbox_shouldReturnTrue", "exists_withNonInboxFolder_shouldReturnFalse", "fetch_withBodyProfile_setsContentOfMessage", "fetch_withEnvelopeProfile_setsSizeOfMessage", "getFlaggedMessageCount_shouldBeMinusOne", "getMessage_withNoPreviouslyFetchedMessage_returnsNewMessage", "getMessage_withPreviouslyFetchedMessage_returnsMessage", "getMessages_returnsListOfMessagesOnServer", "getMessages_withIOExceptionReadingLine_throwsException", "getMessages_withInvalidSet_throwsException", "getMode_withFolderOpenedInRO_isRW", "getUnreadMessageCount_shouldBeMinusOne", "open_createsAndOpensConnection", "open_whenAlreadyOpenWithValidConnection_doesNotCreateAnotherConnection", "open_withInboxFolderWithExceptionCreatingConnection_shouldThrow", "open_withInboxFolder_shouldSetMessageCountFromStatResponse", "open_withInboxFolder_whenStatCommandFails_shouldThrow", "open_withoutInboxFolder_shouldNotTryAndCreateConnection", "open_withoutInboxFolder_shouldThrow" ],
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3StoreTest" : [ "checkSetting_whenConnectionThrowsException_shouldThrowMessagingException", "checkSetting_whenUidlSupported_shouldReturn", "checkSetting_whenUidlUnsupported_shouldThrowMessagingException", "getFolder_shouldReturnFolderWithCorrectName", "getFolder_shouldReturnSameFolderEachTime", "getPersonalNamespace_shouldReturnListConsistingOfInbox", "open_withAuthResponseUsingAuthPlain_shouldRetrieveMessageCountOnAuthenticatedSocket", "open_withFailedAuth_shouldThrow" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavStoreTest" : [ "getFolder_calledTwice_shouldReturnFirstInstance", "getFolder_shouldReturnWebDavFolderInstance", "getPersonalNamespaces_shouldProvideListOfAllFoldersSentFromResponses", "getPersonalNamespaces_shouldRequestFolderList", "getPersonalNamespaces_shouldRequestSpecialFolders", "getPersonalNamespaces_shouldSetSpecialFolderNames" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ],
        "k9mail§com.fsck.k9.notification.SyncNotificationsTest" : [ "testGetFetchingMailNotificationId", "testShowSendingNotification" ]
      },
      "predecessor" : "1e7cb67a379bd10b28d637c1b07e5b9a94ed95f8"
    },
    "3d37a0f031dedda6d296158775406fa198f34a78" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withEmptyDatabase_shouldSetsDatabaseVersion", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ]
      },
      "predecessor" : "855006b74b32c5bb1b061f7fc58506dc0243230f"
    },
    "99f0cad45352d060daf6b3c0fe3638a43168b097" : {
      "testcases" : {
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion" ]
      },
      "predecessor" : "99f0cad45352d060daf6b3c0fe3638a43168b097~1"
    },
    "1e783e7bf19d9dedde026ad3a5cd2cdc1a3566a2" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList" ]
      },
      "predecessor" : "99f0cad45352d060daf6b3c0fe3638a43168b097"
    },
    "65390daf98ac3a84fb22d6ee41d99fab457de9f8" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.ActivityListenerTest" : [ "getOperation__whenFolderStatusChanged", "getOperation__whenSynchronizeMailboxFailedAfterHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFailed_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFinished", "getOperation__whenSynchronizeMailboxHeadersFinished", "getOperation__whenSynchronizeMailboxHeadersProgress", "getOperation__whenSynchronizeMailboxHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxNewMessage", "getOperation__whenSynchronizeMailboxProgress_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxStarted" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync", "synchronizeMailboxSynchronousLegacy_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronousLegacy_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronousLegacy_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronousLegacy_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronousLegacy_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronousLegacy_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronousLegacy_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronousLegacy_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronousLegacy_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronousLegacy_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronousLegacy_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.controller.imap.ImapSyncTest" : [ "sync_shouldFetchUnsynchronizedMessagesListAndFlags", "sync_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "sync_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "sync_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "sync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "sync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "sync_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "sync_withEmptyRemoteFolder_shouldFinishWithoutError", "sync_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "sync_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "sync_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "sync_withOneMessageInRemoteFolder_shouldFinishWithoutError", "sync_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "sync_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "sync_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "sync_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "1e783e7bf19d9dedde026ad3a5cd2cdc1a3566a2"
    },
    "2df5d679c396ace40dca07e4c297103f057e5801" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientLoaderTest" : [ "queryContactProvider", "queryContactProvider_ignoresRecipientWithNoEmail", "queryContactProvider_sortByTimesContactedForNickname", "queryCryptoProvider", "queryCryptoStatus_autocrypt_trusted", "queryCryptoStatus_autocrypt_untrusted", "queryCryptoStatus_unavailable", "queryCryptoStatus_withHigherUidStatus" ]
      },
      "predecessor" : "2df5d679c396ace40dca07e4c297103f057e5801~1"
    },
    "9273d253fae4ba905c1e71e36cd5092c775a1f59" : {
      "testcases" : {
        "k9mail§com.fsck.k9.activity.compose.RecipientLoaderTest" : [ "getMostContactedFoundMore", "queryContactProvider", "queryContactProvider_ignoresRecipientWithNoEmail", "queryContactProvider_sortByTimesContactedForNickname", "queryCryptoProvider", "queryCryptoStatus_autocrypt_trusted", "queryCryptoStatus_autocrypt_untrusted", "queryCryptoStatus_unavailable", "queryCryptoStatus_withHigherUidStatus" ]
      },
      "predecessor" : "9273d253fae4ba905c1e71e36cd5092c775a1f59~1"
    },
    "dca1476d86117b0222a8c9b6f55d660dd2462261" : {
      "testcases" : {
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapFolderTest" : [ "appendMessages_shouldIssueRespectiveCommand", "areMoreMessagesAvailable_withAdditionalMessages_shouldReturnTrue", "areMoreMessagesAvailable_withClosedFolder_shouldThrow", "areMoreMessagesAvailable_withIndexOfOne_shouldReturnFalseWithoutPerformingSearch", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldIssueSearchCommandsUntilAllMessagesSearched", "areMoreMessagesAvailable_withoutAdditionalMessages_shouldReturnFalse", "close_shouldCloseImapFolder", "copyMessages", "copyMessages_withClosedFolder_shouldThrow", "copyMessages_withEmptyMessageList_shouldReturnNull", "copyMessages_withoutDestinationFolderOfWrongType_shouldThrow", "create_withClosedFolder_shouldOpenConnectionAndIssueCreateCommand", "create_withNegativeImapResponse_shouldReturnFalse", "create_withoutNegativeImapResponse_shouldReturnTrue", "delete_fromTrashFolder_shouldIssueUidStoreFlagsCommand", "delete_notImplemented", "delete_shouldMoveMessagesToTrashFolder", "delete_withEmptyMessageList_shouldNotInteractWithImapConnection", "delete_withoutTrashFolderExisting_shouldCreateTrashFolder", "exists_withClosedFolder_shouldOpenConnectionAndIssueStatusCommand", "exists_withNegativeImapResponse_shouldReturnFalse", "exists_withoutNegativeImapResponse_shouldReturnTrue", "expungeUids_withUidPlus_shouldIssueUidExpungeCommand", "expungeUids_withoutUidPlus_shouldIssueExpungeCommand", "expunge_shouldIssueExpungeCommand", "fetchPart_withNonTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldIssueRespectiveCommand", "fetchPart_withTextSection_shouldProcessImapResponses", "fetch_withBodyFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfileAndNoMaximumDownloadSize_shouldIssueRespectiveCommand", "fetch_withBodySaneFetchProfile_shouldIssueRespectiveCommand", "fetch_withEmptyMessageListArgument_shouldDoNothing", "fetch_withEnvelopeFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldIssueRespectiveCommand", "fetch_withFlagsFetchProfile_shouldSetFlags", "fetch_withNullMessageListArgument_shouldDoNothing", "fetch_withStructureFetchProfile_shouldIssueRespectiveCommand", "fetch_withStructureFetchProfile_shouldSetContentType", "getFlaggedMessageCount", "getFlaggedMessageCount_withClosedFolder_shouldThrow", "getHighestUid", "getHighestUid_imapConnectionThrowsIOException_shouldThrowMessagingException", "getHighestUid_imapConnectionThrowsNegativesResponse_shouldReturnMinusOne", "getMessageByUid_returnsNewImapMessageWithUidInFolder", "getMessagesFromUids", "getMessagesFromUids_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers", "getMessages_sequenceNumbers_withClosedFolder_shouldThrow", "getMessages_sequenceNumbers_withListener_shouldCallListener", "getMessages_withClosedFolder_shouldThrow", "getMessages_withDateConstraint", "getMessages_withEndArgumentSmallerThanStartArgument_shouldThrow", "getMessages_withInvalidEndArgument_shouldThrow", "getMessages_withInvalidStartArgument_shouldThrow", "getMessages_withListener_shouldCallListener", "getMessages_withoutDateConstraint", "getNewPushState_withNewerUid_shouldReturnNewPushState", "getNewPushState_withoutNewerUid_shouldReturnNull", "getUidFromMessageId", "getUidFromMessageId_withMessageIdHeader_shouldIssueUidSearchCommand", "getUidFromMessageId_withoutMessageIdHeader_shouldReturnNull", "getUnreadMessageCount", "getUnreadMessageCount_connectionThrowsIOException_shouldThrowMessagingException", "getUnreadMessageCount_withClosedFolder_shouldThrow", "moveMessages_shouldCopyMessages", "moveMessages_shouldDeleteMessagesFromSourceFolder", "moveMessages_withEmptyMessageList_shouldReturnNull", "open_calledTwice_shouldReuseSameImapConnection", "open_readOnly_shouldMakeGetModeReturnReadOnly", "open_readOnly_shouldOpenFolder", "open_readWrite_shouldMakeGetModeReturnReadWrite", "open_readWrite_shouldOpenFolder", "open_shouldFetchMessageCount", "open_shouldMakeExistReturnTrueWithoutExecutingAdditionalCommands", "open_withConnectionThrowingOnReUse_shouldCreateNewImapConnection", "open_withIoException_shouldThrowMessagingException", "open_withMessagingException_shouldThrowMessagingException", "open_withoutExistsResponse_shouldThrowMessagingException", "search_withFullTextSearchDisabled_shouldIssueRespectiveCommand", "search_withFullTextSearchEnabled_shouldIssueRespectiveCommand", "search_withRemoteSearchDisabled_shouldThrow", "setFlags_shouldIssueUidStoreCommand" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapPusherTest" : [ "refresh_shouldCallRefreshOnStartedImapFolderPusher", "refresh_withImapFolderPusherThrowing_shouldNotThrow", "start_calledAfterStart_shouldStopFirstImapFolderPusher", "start_shouldSetLastRefreshToCurrentTime", "start_withSingleFolderName_shouldCreateImapFolderPusherAndCallStartOnIt", "start_withTwoFolderNames_shouldCreateTwoImapFolderPushersAndCallStart", "stop_afterStartWithSingleFolderName_shouldStopImapFolderPusher", "stop_withImapFolderPusherThrowing_shouldNotThrow", "stop_withoutStartBeingCalled_shouldNotCreateAnyImapFolderPushers" ],
        "k9mail-library§com.fsck.k9.mail.store.imap.ImapStoreTest" : [ "autoconfigureFolders_removeNamespacePrefix", "autoconfigureFolders_withSpecialUseCapability_shouldSetSpecialFolders", "autoconfigureFolders_withoutSpecialUseCapability_shouldNotIssueImapCommand", "checkSettings_shouldCreateImapConnectionAndCallOpen", "checkSettings_withOpenThrowing_shouldThrowMessagingException", "getConnection_calledAfterReleaseWithAClosedConnection_shouldReturnNewImapConnectionInstance", "getConnection_calledAfterRelease_shouldReturnCachedImapConnection", "getConnection_calledTwiceWithoutRelease_shouldCreateTwoImapConnection", "getConnection_shouldCreateImapConnection", "getConnection_withDeadConnectionInPool_shouldReturnNewImapConnectionInstance", "getFolder_calledTwice_shouldReturnFirstInstance", "getFolder_shouldReturnImapFolderInstance", "getPersonalNamespaces_withFolderNotMatchingNamespacePrefix_shouldExcludeFolderWithoutPrefix", "getPersonalNamespaces_withForceListAll", "getPersonalNamespaces_withIoException_shouldCloseImapConnection", "getPersonalNamespaces_withNamespacePrefix_shouldRemoveNamespacePrefix", "getPersonalNamespaces_withSubscribedFoldersOnlyAndWithoutForceListAll_shouldOnlyReturnExistingSubscribedFolders", "getPersonalNamespaces_withoutException_shouldLeaveImapConnectionOpen", "getPersonalNamespaces_withoutForceListAllAndWithoutSubscribedFoldersOnly" ],
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3FolderTest" : [ "close_onNonOpenedFolder_succeeds", "close_onOpenedFolder_closesConnection", "close_onOpenedFolder_sendsQUIT", "close_onOpenedFolder_succeeds", "close_withExceptionQuiting_ignoresException", "create_withHoldsFoldersArgument_shouldDoNothing", "create_withHoldsMessagesArgument_shouldDoNothing", "exists_withInbox_shouldReturnTrue", "exists_withNonInboxFolder_shouldReturnFalse", "fetch_withBodyProfile_setsContentOfMessage", "fetch_withEnvelopeProfile_setsSizeOfMessage", "getFlaggedMessageCount_shouldBeMinusOne", "getMessage_withNoPreviouslyFetchedMessage_returnsNewMessage", "getMessage_withPreviouslyFetchedMessage_returnsMessage", "getMessages_returnsListOfMessagesOnServer", "getMessages_withIOExceptionReadingLine_throwsException", "getMessages_withInvalidSet_throwsException", "getMode_withFolderOpenedInRO_isRW", "getUnreadMessageCount_shouldBeMinusOne", "open_createsAndOpensConnection", "open_whenAlreadyOpenWithValidConnection_doesNotCreateAnotherConnection", "open_withInboxFolderWithExceptionCreatingConnection_shouldThrow", "open_withInboxFolder_shouldSetMessageCountFromStatResponse", "open_withInboxFolder_whenStatCommandFails_shouldThrow", "open_withoutInboxFolder_shouldNotTryAndCreateConnection", "open_withoutInboxFolder_shouldThrow" ],
        "k9mail-library§com.fsck.k9.mail.store.pop3.Pop3StoreTest" : [ "checkSetting_whenConnectionThrowsException_shouldThrowMessagingException", "checkSetting_whenUidlSupported_shouldReturn", "checkSetting_whenUidlUnsupported_shouldThrowMessagingException", "createUri_withCRAMMD5_shouldProduceCRAMMD5AuthUri", "createUri_withEXTERNAL_shouldProduceExternalAuthUri", "createUri_withNONE_shouldProducePop3Uri", "createUri_withPLAIN_shouldProducePlainAuthUri", "createUri_withSSLTLS_required_shouldProduceSSLUri", "createUri_withSTARTTLSRequired_shouldProduceTLSUri", "decodeUri_withExternalCertificateShouldProvideAlias_shouldUseNoSecurity", "decodeUri_withNonPop3Uri_shouldThrowException", "decodeUri_withPlainUri_shouldUseNoSecurity", "decodeUri_withTLSUri_shouldUseStartTls", "getFolder_shouldReturnFolderWithCorrectName", "getFolder_shouldReturnSameFolderEachTime", "getPersonalNamespace_shouldReturnListConsistingOfInbox", "isSeenFlagSupported_shouldReturnFalse", "open_withAuthResponseUsingAuthPlain_shouldRetrieveMessageCountOnAuthenticatedSocket", "open_withFailedAuth_shouldThrow", "withInvalidStoreUri_shouldThrowMessagingException" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavMessageTest" : [ "delete_asks_folder_to_delete_message", "setFlag_asks_folder_to_set_flag", "setNewHeaders_updates_size", "setUrl_tests" ],
        "k9mail-library§com.fsck.k9.mail.store.webdav.WebDavStoreTest" : [ "checkSettings_shouldRegisterHttpsSchemeWithRegistry", "checkSettings_withErrorResponse_shouldThrow", "checkSettings_withHttpPrefixedServerName_shouldUseInsecureConnection", "checkSettings_withInitialUnauthorizedResponse_shouldPerformBasicAuthentication", "checkSettings_withOkResponse_shouldPerformFormBasedAuthentication", "checkSettings_withSslException_shouldThrowCertificateValidationException", "checkSettings_withUnauthorizedResponses_shouldThrow", "checkSettings_withWebDavSslUri_shouldUseSecureConnection", "checkSettings_withWebDavTlsUri_shouldUseSecureConnection", "checkSettings_withWebDavUri_shouldUseInsecureConnection", "constructor_withImapStoreUri_shouldThrow", "getFolder_calledTwice_shouldReturnFirstInstance", "getFolder_shouldReturnWebDavFolderInstance", "getPersonalNamespaces_shouldProvideListOfAllFoldersSentFromResponses", "getPersonalNamespaces_shouldRequestFolderList", "getPersonalNamespaces_shouldRequestSpecialFolders", "getPersonalNamespaces_shouldSetSpecialFolderNames" ],
        "k9mail§com.fsck.k9.activity.ActivityListenerTest" : [ "getOperation__whenFolderStatusChanged", "getOperation__whenSynchronizeMailboxFailedAfterHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFailed_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxFinished", "getOperation__whenSynchronizeMailboxHeadersFinished", "getOperation__whenSynchronizeMailboxHeadersProgress", "getOperation__whenSynchronizeMailboxHeadersStarted_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxNewMessage", "getOperation__whenSynchronizeMailboxProgress_shouldResultInValidStatus", "getOperation__whenSynchronizeMailboxStarted" ],
        "k9mail§com.fsck.k9.activity.MessageReferenceTest" : [ "alternativeEquals", "checkIdentityStringFromMessageReferenceWithFlag", "checkIdentityStringFromMessageReferenceWithoutFlag", "checkMessageReferenceWithChangedFlag", "checkMessageReferenceWithChangedUid", "constructor_withNullAccount_shouldThrow", "constructor_withNullFolder_shouldThrow", "constructor_withNullUid_shouldThrow", "equalsWithAnObjectShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentAccountUuidShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentFolderNameShouldReturnFalse", "equalsWithMessageReferenceContainingDifferentUidShouldReturnFalse", "equalsWithMessageReferenceContainingSameDataShouldReturnTrue", "equalsWithNullShouldReturnFalse", "equalsWithSameMessageReferenceShouldReturnTrue", "equals_withNullAccount_shouldReturnFalse", "equals_withNullFolder_shouldReturnFalse", "equals_withNullUid_shouldReturnFalse", "parseIdentityStringContainingBadVersionNumber", "parseIdentityStringWithCorruptFlag", "parseIdentityStringWithFlag", "parseIdentityStringWithoutFlag", "parseNullIdentityString" ],
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync", "synchronizeMailboxSynchronousLegacy_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronousLegacy_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronousLegacy_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronousLegacy_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronousLegacy_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronousLegacy_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronousLegacy_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronousLegacy_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronousLegacy_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronousLegacy_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronousLegacy_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.controller.PendingCommandSerializerTest" : [ "testSerializeDeserialize__withArguments" ],
        "k9mail§com.fsck.k9.controller.imap.ImapSyncTest" : [ "sync_shouldFetchUnsynchronizedMessagesListAndFlags", "sync_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "sync_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "sync_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "sync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "sync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "sync_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "sync_withEmptyRemoteFolder_shouldFinishWithoutError", "sync_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "sync_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "sync_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "sync_withOneMessageInRemoteFolder_shouldFinishWithoutError", "sync_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "sync_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "sync_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "sync_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.mailstore.MessageViewInfoExtractorTest" : [ "extractMessage_withCryptoAnnotation", "extractMessage_withCryptoAnnotation_andReplacementPart" ],
        "k9mail§com.fsck.k9.mailstore.StoreSchemaDefinitionTest" : [ "doDbUpgrade_fromV29_shouldResultInSameIndexes", "doDbUpgrade_fromV29_shouldResultInSameTables", "doDbUpgrade_fromV29_shouldResultInSameTriggers", "doDbUpgrade_withBadDatabase_shouldThrowInDebugBuild", "doDbUpgrade_withEmptyDatabase_shouldSetsDatabaseVersion", "doDbUpgrade_withV29", "doDbUpgrade_withV29_shouldUpgradeDatabaseToLatestVersion", "getVersion_shouldReturnCurrentDatabaseVersion" ],
        "k9mail§com.fsck.k9.mailstore.migrations.MigrationTo60Test" : [ "migrateAppend", "migrateExpunge", "migrateSetFlag", "migrateSetFlag_oldFormat" ],
        "k9mail§com.fsck.k9.notification.NewMailNotificationsTest" : [ "testRemoveNewMailNotification", "testRemoveNewMailNotificationClearingAllNotifications", "testRemoveNewMailNotificationWithCreateNotification", "testRemoveNewMailNotificationWithUnknownMessageReference", "testRemoveNewMailNotificationWithoutNotificationData" ],
        "k9mail§com.fsck.k9.notification.NotificationContentCreatorTest" : [ "createFromMessage_withEncryptedMessage", "createFromMessage_withErrorPreview", "createFromMessage_withMessageFromSelf", "createFromMessage_withRegularMessage", "createFromMessage_withStarredMessage", "createFromMessage_withoutEmptyMessage", "createFromMessage_withoutPreview", "createFromMessage_withoutSender", "createFromMessage_withoutSubject" ],
        "k9mail§com.fsck.k9.notification.NotificationDataTest" : [ "testAddNotificationContent", "testAddNotificationContentWithReplacingNotification", "testContainsStarredMessages", "testContainsStarredMessagesWithAdditionalMessages", "testGetActiveNotificationIds", "testGetAllMessageReferences", "testGetContentForSummaryNotification", "testGetHolderForLatestNotification", "testIsSingleMessageNotification", "testNewMessagesCount", "testOverflowNotifications", "testRemoveDoesNotLeakNotificationIds", "testRemoveNotificationForMessage", "testRemoveNotificationForMessageWithRecreatingNotification", "testUnreadMessagesCount" ],
        "k9mail§com.fsck.k9.notification.SyncNotificationsTest" : [ "testGetFetchingMailNotificationId", "testShowSendingNotification" ],
        "k9mail§com.fsck.k9.notification.WearNotificationsTest" : [ "testAddSummaryActions", "testAddSummaryActionsWithArchiveAllActionEnabled", "testAddSummaryActionsWithDeleteAllActionEnabled", "testBuildStackedNotification", "testBuildStackedNotificationWithArchiveActionEnabled", "testBuildStackedNotificationWithDeleteActionEnabled", "testBuildStackedNotificationWithMarkAsSpamActionEnabled" ],
        "k9mail§com.fsck.k9.ui.crypto.MessageCryptoHelperTest" : [ "multipartEncrypted__withNullBody__shouldReturnEncryptedIncomplete", "multipartEncrypted__withUnknownProtocol__shouldReturnEncryptedUnsupported", "multipartSigned__withNullBody__shouldReturnSignedIncomplete", "multipartSigned__withSignOnlyDisabledAndNullBody__shouldReturnNothing", "multipartSigned__withSignOnlyDisabled__shouldReturnNothing", "multipartSigned__withUnknownProtocol__shouldReturnSignedUnsupported", "textPlain" ]
      },
      "predecessor" : "9273d253fae4ba905c1e71e36cd5092c775a1f59"
    },
    "33287280769bdea7485a35880a4fb8e0ac62ded9" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync", "synchronizeMailboxSynchronousLegacy_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronousLegacy_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronousLegacy_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronousLegacy_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronousLegacy_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronousLegacy_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronousLegacy_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronousLegacy_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronousLegacy_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronousLegacy_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronousLegacy_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.controller.imap.ImapSyncTest" : [ "sync_shouldFetchUnsynchronizedMessagesListAndFlags", "sync_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "sync_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "sync_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "sync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "sync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "sync_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "sync_withEmptyRemoteFolder_shouldFinishWithoutError", "sync_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "sync_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "sync_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "sync_withOneMessageInRemoteFolder_shouldFinishWithoutError", "sync_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "sync_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "sync_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "sync_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "dca1476d86117b0222a8c9b6f55d660dd2462261"
    },
    "abf3ba1e1e518da2d8343f433af057be5f1dfc1b" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages" ]
      },
      "predecessor" : "abf3ba1e1e518da2d8343f433af057be5f1dfc1b~1"
    },
    "83b6972ea63b79ef53dde744587eefa8f887fda2" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "synchronizeMailboxSynchronousLegacy_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore" ]
      },
      "predecessor" : "83b6972ea63b79ef53dde744587eefa8f887fda2~1"
    },
    "58ea1461856e62bdd253037ba4d678f754a9f487" : {
      "testcases" : {
        "k9mail§com.fsck.k9.controller.MessagingControllerTest" : [ "clearFolderSynchronous_shouldClearAllMessagesInTheFolder", "clearFolderSynchronous_shouldCloseTheFolder", "clearFolderSynchronous_shouldListFolders", "clearFolderSynchronous_shouldOpenFolderForWriting", "clearFolderSynchronous_whenExceptionThrown_shouldStillCloseFolder", "clearFolderSynchronous_whenStorageUnavailable_shouldThrowUnavailableAccountException", "listFoldersSynchronous_shouldNotNotifyFinishedAfterFailure", "listFoldersSynchronous_shouldNotifyFailureOnException", "listFoldersSynchronous_shouldNotifyFinishedAfterSuccess", "listFoldersSynchronous_shouldNotifyTheListenerListingStarted", "listFoldersSynchronous_shouldNotifyTheListenerOfTheListOfFolders", "refreshRemoteSynchronous_shouldCreateFoldersFromRemote", "refreshRemoteSynchronous_shouldDeleteFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotDeleteFoldersOnRemote", "refreshRemoteSynchronous_shouldNotDeleteSpecialFoldersNotOnRemote", "refreshRemoteSynchronous_shouldNotNotifyFinishedAfterFailure", "refreshRemoteSynchronous_shouldNotifyFinishedAfterSuccess", "refreshRemoteSynchronous_shouldProvideFolderList", "searchLocalMessagesSynchronous_shouldCallSearchForMessagesOnLocalStore", "searchLocalMessagesSynchronous_shouldNotifyWhenStoreFinishesRetrievingAMessage", "searchRemoteMessagesSynchronous_shouldAskLocalFolderToDetermineNewMessages", "searchRemoteMessagesSynchronous_shouldFetchNewMessages", "searchRemoteMessagesSynchronous_shouldNotFetchExistingMessages", "searchRemoteMessagesSynchronous_shouldNotTryAndGetOldMessages", "searchRemoteMessagesSynchronous_shouldNotifyOnFailure", "searchRemoteMessagesSynchronous_shouldNotifyOnFinish", "searchRemoteMessagesSynchronous_shouldNotifyStartedListingRemoteMessages", "searchRemoteMessagesSynchronous_shouldQueryRemoteFolder", "searchRemoteMessagesSynchronous_shouldTryAndGetNewMessages", "sendPendingMessagesSynchronous_shouldCallListenerOnCompletion", "sendPendingMessagesSynchronous_shouldCallListenerOnStart", "sendPendingMessagesSynchronous_shouldMarkSentMessageAsSeen", "sendPendingMessagesSynchronous_shouldSendMessageUsingTransport", "sendPendingMessagesSynchronous_shouldSetAndRemoveSendInProgressFlag", "sendPendingMessagesSynchronous_shouldSetProgress", "sendPendingMessagesSynchronous_shouldUpdateProgress", "sendPendingMessagesSynchronous_whenMessageSentSuccesfully_shouldUpdateProgress", "sendPendingMessagesSynchronous_withAuthenticationFailure_shouldNotify", "sendPendingMessagesSynchronous_withCertificateFailure_shouldNotify", "sendPendingMessagesSynchronous_withNonExistentOutbox_shouldNotStartSync", "synchronizeMailboxSynchronousLegacy_withAccountNotSupportingFetchingFlags_shouldFetchUnsychronizedMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "synchronizeMailboxSynchronousLegacy_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "synchronizeMailboxSynchronousLegacy_withAccountSupportingFetchingFlags_shouldFetchUnsychronizedMessagesListAndFlags", "synchronizeMailboxSynchronousLegacy_withEmptyRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronousLegacy_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "synchronizeMailboxSynchronousLegacy_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "synchronizeMailboxSynchronousLegacy_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "synchronizeMailboxSynchronousLegacy_withOneMessageInRemoteFolder_shouldFinishWithoutError", "synchronizeMailboxSynchronousLegacy_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "synchronizeMailboxSynchronousLegacy_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "synchronizeMailboxSynchronousLegacy_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "synchronizeMailboxSynchronousLegacy_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ],
        "k9mail§com.fsck.k9.controller.imap.ImapSyncTest" : [ "sync_shouldFetchUnsynchronizedMessagesListAndFlags", "sync_withAccountPolicySetToExpungeManually_shouldNotExpungeRemoteFolder", "sync_withAccountPolicySetToExpungeOnPoll_shouldExpungeRemoteFolder", "sync_withAccountSetNotToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfMessages", "sync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfDeletedMessages", "sync_withAccountSetToSyncRemoteDeletions_shouldDeleteLocalCopiesOfExistingMessagesBeforeEarliestPollDate", "sync_withAccountSetToSyncRemoteDeletions_shouldNotDeleteLocalCopiesOfExistingMessagesAfterEarliestPollDate", "sync_withEmptyRemoteFolder_shouldFinishWithoutError", "sync_withNegativeMessageCountInRemoteFolder_shouldFinishWithError", "sync_withNoRemoteFolderProvided_shouldCloseRemoteFolderFromStore", "sync_withNoRemoteFolderProvided_shouldOpenRemoteFolderFromStore", "sync_withOneMessageInRemoteFolder_shouldFinishWithoutError", "sync_withRemoteFolderProvided_shouldNotCloseRemoteFolder", "sync_withRemoteFolderProvided_shouldNotOpenRemoteFolder", "sync_withUnsyncedNewSmallMessage_shouldFetchBodyOfSmallMessage", "sync_withUnsyncedNewSmallMessage_shouldFetchStructureAndLimitedBodyOfLargeMessage" ]
      },
      "predecessor" : "4a8b3960749bb188895adddb2c083d2110c9b27f"
    }
  },
  "android" : true
}